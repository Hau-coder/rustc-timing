{"commit":{"sha":"9cd61f025b1b92076e69a9ef2d9233325c7d8bdc","date":"2019-04-14T17:00:16+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":79636.0},{"name":"task-clock","cnt":7244.815163},{"name":"cycles:u","cnt":28377359784.0},{"name":"max-rss","cnt":423920.0},{"name":"instructions:u","cnt":33996349955.0},{"name":"cpu-clock","cnt":7244.808474},{"name":"wall-time","cnt":7.302358394}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":561288.0},{"name":"cpu-clock","cnt":8701.065291},{"name":"faults","cnt":113675.0},{"name":"cycles:u","cnt":34086000746.0},{"name":"wall-time","cnt":8.719773647},{"name":"instructions:u","cnt":41564938372.0},{"name":"task-clock","cnt":8701.062737}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2450.520426},{"name":"cpu-clock","cnt":2450.520025},{"name":"wall-time","cnt":2.386611573},{"name":"max-rss","cnt":547628.0},{"name":"instructions:u","cnt":11774918016.0},{"name":"cycles:u","cnt":9193489784.0},{"name":"faults","cnt":111491.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.723553791},{"name":"max-rss","cnt":568572.0},{"name":"cycles:u","cnt":10550301115.0},{"name":"instructions:u","cnt":13259907687.0},{"name":"faults","cnt":115018.0},{"name":"cpu-clock","cnt":2787.918147},{"name":"task-clock","cnt":2787.918499}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":399366.0},{"name":"cpu-clock","cnt":45980.413577},{"name":"cycles:u","cnt":173999495613.0},{"name":"instructions:u","cnt":180860067159.0},{"name":"max-rss","cnt":1557144.0},{"name":"task-clock","cnt":45980.405536},{"name":"wall-time","cnt":18.777719336}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":199609842295.0},{"name":"max-rss","cnt":1577448.0},{"name":"faults","cnt":440447.0},{"name":"task-clock","cnt":52942.327914},{"name":"wall-time","cnt":21.812652985},{"name":"instructions:u","cnt":206346106159.0},{"name":"cpu-clock","cnt":52942.401152}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":4386.074506},{"name":"task-clock","cnt":4386.292087},{"name":"max-rss","cnt":1108236.0},{"name":"wall-time","cnt":4.272512436},{"name":"faults","cnt":200169.0},{"name":"instructions:u","cnt":19124327086.0},{"name":"cycles:u","cnt":15774283081.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":55672172520.0},{"name":"faults","cnt":324494.0},{"name":"cpu-clock","cnt":14947.780388},{"name":"task-clock","cnt":14947.925743},{"name":"max-rss","cnt":1538856.0},{"name":"instructions:u","cnt":59695231683.0},{"name":"wall-time","cnt":7.663701337}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":630422968394.0},{"name":"max-rss","cnt":1324044.0},{"name":"cycles:u","cnt":803025986282.0},{"name":"task-clock","cnt":212734.304961},{"name":"faults","cnt":423428.0},{"name":"wall-time","cnt":38.084646938},{"name":"cpu-clock","cnt":212734.46902}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":259231.775694},{"name":"task-clock","cnt":259231.376934},{"name":"max-rss","cnt":1346540.0},{"name":"instructions:u","cnt":753335808022.0},{"name":"faults","cnt":447466.0},{"name":"wall-time","cnt":43.299671695},{"name":"cycles:u","cnt":977191798815.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":3.333302358},{"name":"cycles:u","cnt":13138649618.0},{"name":"cpu-clock","cnt":3625.480627},{"name":"faults","cnt":202689.0},{"name":"instructions:u","cnt":14938583880.0},{"name":"task-clock","cnt":3625.666186},{"name":"max-rss","cnt":959764.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":153620.002236},{"name":"max-rss","cnt":1249392.0},{"name":"wall-time","cnt":24.551435296},{"name":"instructions:u","cnt":456655859034.0},{"name":"cycles:u","cnt":578019389237.0},{"name":"task-clock","cnt":153619.808496},{"name":"faults","cnt":375073.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":254828.0},{"name":"task-clock","cnt":3671.856991},{"name":"cpu-clock","cnt":3671.857532},{"name":"cycles:u","cnt":14418031774.0},{"name":"faults","cnt":46293.0},{"name":"instructions:u","cnt":18889679478.0},{"name":"wall-time","cnt":3.707104394}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":24467170117.0},{"name":"faults","cnt":93815.0},{"name":"wall-time","cnt":6.324025103},{"name":"instructions:u","cnt":39535596501.0},{"name":"cpu-clock","cnt":6285.701934},{"name":"max-rss","cnt":438372.0},{"name":"task-clock","cnt":6285.700888}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":821700.0},{"name":"faults","cnt":184576.0},{"name":"instructions:u","cnt":10465430357.0},{"name":"wall-time","cnt":1.84723519},{"name":"cycles:u","cnt":6476501833.0},{"name":"task-clock","cnt":1848.545942},{"name":"cpu-clock","cnt":1848.544735}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2617.936704},{"name":"faults","cnt":185096.0},{"name":"wall-time","cnt":2.614478715},{"name":"cpu-clock","cnt":2617.937181},{"name":"cycles:u","cnt":9547282120.0},{"name":"instructions:u","cnt":14166065598.0},{"name":"max-rss","cnt":830788.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":15515.160454},{"name":"max-rss","cnt":980468.0},{"name":"cycles:u","cnt":59139793893.0},{"name":"faults","cnt":245419.0},{"name":"wall-time","cnt":9.318555617},{"name":"instructions:u","cnt":71652106554.0},{"name":"cpu-clock","cnt":15515.165603}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":78615151442.0},{"name":"faults","cnt":237999.0},{"name":"cpu-clock","cnt":20618.180984},{"name":"task-clock","cnt":20618.113484},{"name":"instructions:u","cnt":96560814894.0},{"name":"max-rss","cnt":962704.0},{"name":"wall-time","cnt":11.944450378}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":221212.0},{"name":"cpu-clock","cnt":2464.100611},{"name":"max-rss","cnt":1001532.0},{"name":"cycles:u","cnt":8522889868.0},{"name":"task-clock","cnt":2464.189712},{"name":"wall-time","cnt":2.420005867},{"name":"instructions:u","cnt":13087687727.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":51173237261.0},{"name":"task-clock","cnt":11230.16994},{"name":"cycles:u","cnt":42089508176.0},{"name":"faults","cnt":345641.0},{"name":"max-rss","cnt":1407476.0},{"name":"cpu-clock","cnt":11230.114035},{"name":"wall-time","cnt":7.473421916}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":54621.291459},{"name":"cpu-clock","cnt":54621.333275},{"name":"cycles:u","cnt":209970413840.0},{"name":"instructions:u","cnt":203048811699.0},{"name":"max-rss","cnt":483180.0},{"name":"wall-time","cnt":25.928755231},{"name":"faults","cnt":146668.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":200962.0},{"name":"cpu-clock","cnt":63118.566498},{"name":"cycles:u","cnt":241549059261.0},{"name":"wall-time","cnt":26.884418448},{"name":"task-clock","cnt":63118.480254},{"name":"instructions:u","cnt":232770381283.0},{"name":"max-rss","cnt":659468.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":205366.0},{"name":"wall-time","cnt":2.329637594},{"name":"cycles:u","cnt":8396584855.0},{"name":"instructions:u","cnt":12921820809.0},{"name":"max-rss","cnt":914940.0},{"name":"task-clock","cnt":2380.92218},{"name":"cpu-clock","cnt":2380.84903}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":131080328181.0},{"name":"faults","cnt":274661.0},{"name":"instructions:u","cnt":126604315567.0},{"name":"cpu-clock","cnt":34574.765088},{"name":"task-clock","cnt":34574.697371},{"name":"max-rss","cnt":1168580.0},{"name":"wall-time","cnt":13.380002308}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":5421022215.0},{"name":"task-clock","cnt":785.678835},{"name":"cpu-clock","cnt":785.687484},{"name":"max-rss","cnt":179896.0},{"name":"wall-time","cnt":0.803859425},{"name":"faults","cnt":26407.0},{"name":"cycles:u","cnt":2999385094.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.011940633},{"name":"max-rss","cnt":191040.0},{"name":"instructions:u","cnt":7105722773.0},{"name":"task-clock","cnt":993.633925},{"name":"cpu-clock","cnt":993.632304},{"name":"faults","cnt":28996.0},{"name":"cycles:u","cnt":3806012850.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.301482878},{"name":"cpu-clock","cnt":264.608274},{"name":"cycles:u","cnt":918879233.0},{"name":"max-rss","cnt":157336.0},{"name":"task-clock","cnt":264.610356},{"name":"instructions:u","cnt":1730801674.0},{"name":"faults","cnt":23601.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":172304.0},{"name":"instructions:u","cnt":1889939722.0},{"name":"faults","cnt":23717.0},{"name":"wall-time","cnt":0.315240728},{"name":"task-clock","cnt":297.236575},{"name":"cpu-clock","cnt":297.235459},{"name":"cycles:u","cnt":1044710404.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":3803222437.0},{"name":"max-rss","cnt":201380.0},{"name":"instructions:u","cnt":7153558172.0},{"name":"task-clock","cnt":1002.716148},{"name":"wall-time","cnt":1.020832663},{"name":"faults","cnt":31156.0},{"name":"cpu-clock","cnt":1002.71488}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1144.187606},{"name":"wall-time","cnt":1.171014952},{"name":"instructions:u","cnt":7222127042.0},{"name":"max-rss","cnt":271600.0},{"name":"task-clock","cnt":1144.183151},{"name":"faults","cnt":55305.0},{"name":"cycles:u","cnt":4192427438.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1375.982864},{"name":"max-rss","cnt":291884.0},{"name":"task-clock","cnt":1375.998836},{"name":"cycles:u","cnt":5059407857.0},{"name":"wall-time","cnt":1.350092252},{"name":"instructions:u","cnt":8990323763.0},{"name":"faults","cnt":60289.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":379.008455},{"name":"max-rss","cnt":174804.0},{"name":"instructions:u","cnt":2232568119.0},{"name":"wall-time","cnt":0.410648543},{"name":"faults","cnt":32934.0},{"name":"cycles:u","cnt":1221040375.0},{"name":"cpu-clock","cnt":378.988063}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":658.53384},{"name":"faults","cnt":54879.0},{"name":"task-clock","cnt":658.559245},{"name":"max-rss","cnt":273740.0},{"name":"cycles:u","cnt":2224290675.0},{"name":"instructions:u","cnt":3757645966.0},{"name":"wall-time","cnt":0.588727128}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1362.561663},{"name":"max-rss","cnt":287736.0},{"name":"instructions:u","cnt":8963344058.0},{"name":"task-clock","cnt":1362.559991},{"name":"cycles:u","cnt":5004911153.0},{"name":"wall-time","cnt":1.315155633},{"name":"faults","cnt":61759.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":924.516214},{"name":"wall-time","cnt":0.948727539},{"name":"instructions:u","cnt":6145516949.0},{"name":"task-clock","cnt":924.537562},{"name":"cycles:u","cnt":3462885274.0},{"name":"faults","cnt":34301.0},{"name":"max-rss","cnt":202580.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1141.281958},{"name":"faults","cnt":37479.0},{"name":"cpu-clock","cnt":1141.278431},{"name":"wall-time","cnt":1.161914051},{"name":"cycles:u","cnt":4300023047.0},{"name":"max-rss","cnt":214880.0},{"name":"instructions:u","cnt":7885301524.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":332.479806},{"name":"faults","cnt":30196.0},{"name":"task-clock","cnt":332.493499},{"name":"max-rss","cnt":174624.0},{"name":"instructions:u","cnt":2042893650.0},{"name":"wall-time","cnt":0.366069857},{"name":"cycles:u","cnt":1096520248.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":435.288512},{"name":"faults","cnt":32074.0},{"name":"instructions:u","cnt":2638089679.0},{"name":"cpu-clock","cnt":435.266883},{"name":"cycles:u","cnt":1488162942.0},{"name":"max-rss","cnt":197152.0},{"name":"wall-time","cnt":0.426215145}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":4404404556.0},{"name":"max-rss","cnt":213328.0},{"name":"wall-time","cnt":1.166305482},{"name":"instructions:u","cnt":7867397303.0},{"name":"faults","cnt":39003.0},{"name":"cpu-clock","cnt":1175.535824},{"name":"task-clock","cnt":1175.52173}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":6034.807352},{"name":"max-rss","cnt":514388.0},{"name":"instructions:u","cnt":30302640876.0},{"name":"cycles:u","cnt":23566302095.0},{"name":"wall-time","cnt":6.083956035},{"name":"task-clock","cnt":6034.81412},{"name":"faults","cnt":106585.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":7.264264577},{"name":"max-rss","cnt":597480.0},{"name":"cycles:u","cnt":28067945965.0},{"name":"instructions:u","cnt":36631390256.0},{"name":"cpu-clock","cnt":7222.431951},{"name":"faults","cnt":127843.0},{"name":"task-clock","cnt":7222.448827}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.492427991},{"name":"cpu-clock","cnt":1523.807011},{"name":"max-rss","cnt":436188.0},{"name":"faults","cnt":86779.0},{"name":"instructions:u","cnt":7240579014.0},{"name":"task-clock","cnt":1523.808017},{"name":"cycles:u","cnt":5613675802.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":15751.494033},{"name":"faults","cnt":171490.0},{"name":"instructions:u","cnt":69442595916.0},{"name":"cycles:u","cnt":60303158879.0},{"name":"max-rss","cnt":768304.0},{"name":"cpu-clock","cnt":15751.496269},{"name":"wall-time","cnt":9.248877557}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":11.398593954},{"name":"max-rss","cnt":840368.0},{"name":"faults","cnt":195719.0},{"name":"instructions:u","cnt":86018539132.0},{"name":"cycles:u","cnt":71816792989.0},{"name":"task-clock","cnt":18834.457287},{"name":"cpu-clock","cnt":18834.535835}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2471.309357},{"name":"instructions:u","cnt":12263645228.0},{"name":"max-rss","cnt":702296.0},{"name":"faults","cnt":141442.0},{"name":"cpu-clock","cnt":2471.11807},{"name":"wall-time","cnt":2.366837241},{"name":"cycles:u","cnt":8799503638.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1167032.0},{"name":"wall-time","cnt":20.023020171},{"name":"task-clock","cnt":69811.887363},{"name":"instructions:u","cnt":226515782840.0},{"name":"cycles:u","cnt":264815802276.0},{"name":"cpu-clock","cnt":69811.961176},{"name":"faults","cnt":277350.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1105228.0},{"name":"instructions:u","cnt":260753545353.0},{"name":"cycles:u","cnt":314187892760.0},{"name":"cpu-clock","cnt":83268.478105},{"name":"task-clock","cnt":83268.234636},{"name":"wall-time","cnt":20.857678219},{"name":"faults","cnt":300853.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8657766390.0},{"name":"max-rss","cnt":726132.0},{"name":"cpu-clock","cnt":2455.782064},{"name":"faults","cnt":143801.0},{"name":"wall-time","cnt":2.347221871},{"name":"instructions:u","cnt":12056642295.0},{"name":"task-clock","cnt":2455.945698}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":65440.0},{"name":"max-rss","cnt":377636.0},{"name":"cycles:u","cnt":25018770507.0},{"name":"task-clock","cnt":6367.239491},{"name":"cpu-clock","cnt":6367.241505},{"name":"instructions:u","cnt":32524159659.0},{"name":"wall-time","cnt":6.407483236}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":29833254948.0},{"name":"wall-time","cnt":7.685395316},{"name":"cpu-clock","cnt":7625.607099},{"name":"max-rss","cnt":538920.0},{"name":"task-clock","cnt":7625.603764},{"name":"faults","cnt":105946.0},{"name":"instructions:u","cnt":38848273693.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1941.53498},{"name":"max-rss","cnt":527740.0},{"name":"task-clock","cnt":1941.537936},{"name":"instructions:u","cnt":9193850761.0},{"name":"cycles:u","cnt":7191168537.0},{"name":"faults","cnt":104531.0},{"name":"wall-time","cnt":1.869002051}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2138.928742},{"name":"cpu-clock","cnt":2138.926935},{"name":"instructions:u","cnt":10162253819.0},{"name":"max-rss","cnt":543284.0},{"name":"wall-time","cnt":2.066313206},{"name":"faults","cnt":106403.0},{"name":"cycles:u","cnt":7988177444.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":27739.348342},{"name":"cycles:u","cnt":105300148828.0},{"name":"instructions:u","cnt":116433517862.0},{"name":"task-clock","cnt":27739.328688},{"name":"faults","cnt":252631.0},{"name":"max-rss","cnt":1131432.0},{"name":"wall-time","cnt":13.1118582}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":32868.542387},{"name":"faults","cnt":274392.0},{"name":"cycles:u","cnt":124273793982.0},{"name":"wall-time","cnt":15.361724207},{"name":"instructions:u","cnt":130749122570.0},{"name":"task-clock","cnt":32868.516629},{"name":"max-rss","cnt":1216132.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3176.810194},{"name":"max-rss","cnt":911596.0},{"name":"task-clock","cnt":3177.037049},{"name":"faults","cnt":162006.0},{"name":"instructions:u","cnt":14212467262.0},{"name":"cycles:u","cnt":11430899899.0},{"name":"wall-time","cnt":3.039981541}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":19443435344.0},{"name":"task-clock","cnt":4407.146492},{"name":"max-rss","cnt":1007480.0},{"name":"cycles:u","cnt":16117488876.0},{"name":"wall-time","cnt":3.762010164},{"name":"faults","cnt":187039.0},{"name":"cpu-clock","cnt":4406.968522}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":237334.0},{"name":"instructions:u","cnt":351270724542.0},{"name":"cycles:u","cnt":434990073855.0},{"name":"wall-time","cnt":23.700617896},{"name":"max-rss","cnt":949540.0},{"name":"cpu-clock","cnt":114977.056029},{"name":"task-clock","cnt":114976.939218}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1030740.0},{"name":"faults","cnt":269716.0},{"name":"task-clock","cnt":130987.905688},{"name":"instructions:u","cnt":395650576375.0},{"name":"cycles:u","cnt":494337834623.0},{"name":"cpu-clock","cnt":130988.184603},{"name":"wall-time","cnt":25.449302474}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":13879073753.0},{"name":"wall-time","cnt":2.916352925},{"name":"cpu-clock","cnt":3138.313658},{"name":"faults","cnt":163826.0},{"name":"cycles:u","cnt":11348904304.0},{"name":"task-clock","cnt":3138.526847},{"name":"max-rss","cnt":815180.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":201438.0},{"name":"cpu-clock","cnt":15494.518063},{"name":"wall-time","cnt":6.187980459},{"name":"cycles:u","cnt":58233948139.0},{"name":"max-rss","cnt":952856.0},{"name":"task-clock","cnt":15494.628896},{"name":"instructions:u","cnt":58889178745.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":7722.671047},{"name":"wall-time","cnt":7.741931225},{"name":"cycles:u","cnt":30591606187.0},{"name":"max-rss","cnt":251280.0},{"name":"faults","cnt":42940.0},{"name":"cpu-clock","cnt":7722.657579},{"name":"instructions:u","cnt":66701324648.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":9775.996799},{"name":"wall-time","cnt":9.812955509},{"name":"max-rss","cnt":501980.0},{"name":"instructions:u","cnt":90825462584.0},{"name":"cycles:u","cnt":38358157221.0},{"name":"cpu-clock","cnt":9775.994274},{"name":"faults","cnt":107631.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":861.787724},{"name":"wall-time","cnt":0.894343732},{"name":"cycles:u","cnt":2585455039.0},{"name":"cpu-clock","cnt":861.786601},{"name":"instructions:u","cnt":5652723561.0},{"name":"max-rss","cnt":550776.0},{"name":"faults","cnt":121439.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":7742.143417},{"name":"cycles:u","cnt":30679259700.0},{"name":"instructions:u","cnt":66670541492.0},{"name":"cpu-clock","cnt":7742.152024},{"name":"wall-time","cnt":7.776103005},{"name":"max-rss","cnt":251404.0},{"name":"faults","cnt":43280.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":99637065838.0},{"name":"wall-time","cnt":10.654189659},{"name":"cycles:u","cnt":41319303336.0},{"name":"cpu-clock","cnt":10620.813944},{"name":"task-clock","cnt":10620.815605},{"name":"faults","cnt":176293.0},{"name":"max-rss","cnt":735496.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":233185.0},{"name":"cpu-clock","cnt":1347.937363},{"name":"wall-time","cnt":1.379975876},{"name":"cycles:u","cnt":3972893501.0},{"name":"instructions:u","cnt":8397580136.0},{"name":"max-rss","cnt":976360.0},{"name":"task-clock","cnt":1347.940002}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":54460442420.0},{"name":"max-rss","cnt":257108.0},{"name":"task-clock","cnt":6482.533982},{"name":"faults","cnt":43393.0},{"name":"cpu-clock","cnt":6482.521233},{"name":"wall-time","cnt":6.520543481},{"name":"cycles:u","cnt":25649843902.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":761648.0},{"name":"faults","cnt":175590.0},{"name":"cycles:u","cnt":35503904950.0},{"name":"cpu-clock","cnt":9165.200728},{"name":"instructions:u","cnt":86028186487.0},{"name":"task-clock","cnt":9165.211805},{"name":"wall-time","cnt":9.197244206}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1341.480821},{"name":"faults","cnt":233128.0},{"name":"cycles:u","cnt":3983941095.0},{"name":"instructions:u","cnt":8396362820.0},{"name":"max-rss","cnt":976488.0},{"name":"wall-time","cnt":1.374474367},{"name":"cpu-clock","cnt":1341.479417}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":1099.123484},{"name":"max-rss","cnt":286504.0},{"name":"wall-time","cnt":1.135577171},{"name":"instructions:u","cnt":6994220877.0},{"name":"cycles:u","cnt":4104075645.0},{"name":"faults","cnt":52450.0},{"name":"cpu-clock","cnt":1099.122506}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1216.797184},{"name":"cpu-clock","cnt":1216.796247},{"name":"max-rss","cnt":299364.0},{"name":"faults","cnt":54776.0},{"name":"cycles:u","cnt":4614728497.0},{"name":"wall-time","cnt":1.252116254},{"name":"instructions:u","cnt":7977140573.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":357.96972},{"name":"max-rss","cnt":190708.0},{"name":"instructions:u","cnt":2507930510.0},{"name":"faults","cnt":32354.0},{"name":"wall-time","cnt":0.391713109},{"name":"task-clock","cnt":357.971066},{"name":"cycles:u","cnt":1275232369.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.2282214},{"name":"max-rss","cnt":288208.0},{"name":"cycles:u","cnt":4549855009.0},{"name":"cpu-clock","cnt":1210.771098},{"name":"task-clock","cnt":1210.771416},{"name":"faults","cnt":51909.0},{"name":"instructions:u","cnt":7995670490.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1197.235243},{"name":"cycles:u","cnt":4542206727.0},{"name":"faults","cnt":53199.0},{"name":"instructions:u","cnt":7980445103.0},{"name":"wall-time","cnt":1.232782358},{"name":"cpu-clock","cnt":1197.233379},{"name":"max-rss","cnt":292624.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1707.373997},{"name":"faults","cnt":81648.0},{"name":"cycles:u","cnt":6301957373.0},{"name":"instructions:u","cnt":10147758382.0},{"name":"task-clock","cnt":1707.395512},{"name":"max-rss","cnt":380536.0},{"name":"wall-time","cnt":1.705909454}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":84629.0},{"name":"instructions:u","cnt":11568388351.0},{"name":"wall-time","cnt":1.816311691},{"name":"task-clock","cnt":1836.006322},{"name":"cycles:u","cnt":6859397057.0},{"name":"max-rss","cnt":393352.0},{"name":"cpu-clock","cnt":1835.995842}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":222916.0},{"name":"faults","cnt":42874.0},{"name":"task-clock","cnt":480.689148},{"name":"cpu-clock","cnt":480.650647},{"name":"wall-time","cnt":0.512322162},{"name":"instructions:u","cnt":3200023805.0},{"name":"cycles:u","cnt":1629874856.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":1834.367296},{"name":"faults","cnt":82765.0},{"name":"cycles:u","cnt":6850744062.0},{"name":"wall-time","cnt":1.789506818},{"name":"max-rss","cnt":387224.0},{"name":"task-clock","cnt":1834.369802},{"name":"instructions:u","cnt":11553240287.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":83649.0},{"name":"task-clock","cnt":1847.848106},{"name":"cpu-clock","cnt":1847.836391},{"name":"cycles:u","cnt":6855146991.0},{"name":"instructions:u","cnt":11537587481.0},{"name":"wall-time","cnt":1.820026078},{"name":"max-rss","cnt":389932.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"faults","cnt":141779.0},{"name":"instructions:u","cnt":17187889620.0},{"name":"wall-time","cnt":3.121584766},{"name":"max-rss","cnt":585712.0},{"name":"cycles:u","cnt":11665917253.0},{"name":"cpu-clock","cnt":3142.19721},{"name":"task-clock","cnt":3142.230963}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":611608.0},{"name":"wall-time","cnt":3.221862633},{"name":"cycles:u","cnt":12300720119.0},{"name":"faults","cnt":147562.0},{"name":"cpu-clock","cnt":3256.562063},{"name":"instructions:u","cnt":18736830457.0},{"name":"task-clock","cnt":3256.569023}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":475.547013},{"name":"cpu-clock","cnt":475.5195},{"name":"cycles:u","cnt":1622235903.0},{"name":"max-rss","cnt":219760.0},{"name":"wall-time","cnt":0.505950784},{"name":"faults","cnt":41668.0},{"name":"instructions:u","cnt":3159586162.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":142178.0},{"name":"cpu-clock","cnt":3286.839214},{"name":"max-rss","cnt":600116.0},{"name":"cycles:u","cnt":12430665764.0},{"name":"wall-time","cnt":3.230943884},{"name":"task-clock","cnt":3286.826212},{"name":"instructions:u","cnt":18581655921.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.241745585},{"name":"instructions:u","cnt":18661019059.0},{"name":"faults","cnt":143863.0},{"name":"task-clock","cnt":3277.273038},{"name":"cycles:u","cnt":12246623759.0},{"name":"max-rss","cnt":604160.0},{"name":"cpu-clock","cnt":3277.285768}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":83.010866},{"name":"max-rss","cnt":107772.0},{"name":"instructions:u","cnt":428722669.0},{"name":"faults","cnt":5752.0},{"name":"cycles:u","cnt":273455296.0},{"name":"task-clock","cnt":83.022364},{"name":"wall-time","cnt":0.100790743}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":7168.0},{"name":"max-rss","cnt":116372.0},{"name":"instructions:u","cnt":487333133.0},{"name":"wall-time","cnt":0.113134302},{"name":"cycles:u","cnt":313978364.0},{"name":"task-clock","cnt":95.149549},{"name":"cpu-clock","cnt":95.147111}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":178776653.0},{"name":"faults","cnt":6105.0},{"name":"task-clock","cnt":44.084366},{"name":"cycles:u","cnt":121471125.0},{"name":"wall-time","cnt":0.061362762},{"name":"max-rss","cnt":89140.0},{"name":"cpu-clock","cnt":44.070542}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":577614599.0},{"name":"cpu-clock","cnt":167.842175},{"name":"max-rss","cnt":127660.0},{"name":"faults","cnt":8594.0},{"name":"instructions:u","cnt":775885397.0},{"name":"task-clock","cnt":167.852321},{"name":"wall-time","cnt":0.156462219}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":184.258068},{"name":"instructions:u","cnt":850019818.0},{"name":"cpu-clock","cnt":184.258856},{"name":"max-rss","cnt":134652.0},{"name":"cycles:u","cnt":634359723.0},{"name":"faults","cnt":10199.0},{"name":"wall-time","cnt":0.169751601}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.079655222},{"name":"task-clock","cnt":64.295326},{"name":"cpu-clock","cnt":64.283018},{"name":"faults","cnt":7497.0},{"name":"instructions:u","cnt":270246176.0},{"name":"cycles:u","cnt":184150846.0},{"name":"max-rss","cnt":109024.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":7732.0},{"name":"instructions:u","cnt":1279331253.0},{"name":"cycles:u","cnt":907470148.0},{"name":"wall-time","cnt":0.205495996},{"name":"max-rss","cnt":125536.0},{"name":"cpu-clock","cnt":248.185158},{"name":"task-clock","cnt":248.178929}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.218746102},{"name":"task-clock","cnt":262.661301},{"name":"cpu-clock","cnt":262.655022},{"name":"faults","cnt":9341.0},{"name":"cycles:u","cnt":954953337.0},{"name":"max-rss","cnt":132876.0},{"name":"instructions:u","cnt":1349515576.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":7337.0},{"name":"task-clock","cnt":62.057026},{"name":"cycles:u","cnt":180656893.0},{"name":"max-rss","cnt":107892.0},{"name":"cpu-clock","cnt":62.052493},{"name":"instructions:u","cnt":267635621.0},{"name":"wall-time","cnt":0.078079341}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":424.682534},{"name":"instructions:u","cnt":1926568295.0},{"name":"faults","cnt":12224.0},{"name":"max-rss","cnt":140748.0},{"name":"cycles:u","cnt":1600986013.0},{"name":"cpu-clock","cnt":424.68168},{"name":"wall-time","cnt":0.442821867}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":548.575511},{"name":"task-clock","cnt":548.577113},{"name":"max-rss","cnt":169176.0},{"name":"cycles:u","cnt":2063676858.0},{"name":"instructions:u","cnt":2463703258.0},{"name":"wall-time","cnt":0.56661352},{"name":"faults","cnt":19005.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":621872420.0},{"name":"cpu-clock","cnt":185.167547},{"name":"wall-time","cnt":0.193540674},{"name":"max-rss","cnt":156692.0},{"name":"task-clock","cnt":185.169841},{"name":"faults","cnt":17537.0},{"name":"instructions:u","cnt":874609481.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":941386702.0},{"name":"cycles:u","cnt":679618150.0},{"name":"wall-time","cnt":0.209742291},{"name":"cpu-clock","cnt":200.610224},{"name":"max-rss","cnt":164632.0},{"name":"task-clock","cnt":200.612914},{"name":"faults","cnt":17870.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":30913.0},{"name":"instructions:u","cnt":7710545205.0},{"name":"cpu-clock","cnt":1801.670716},{"name":"wall-time","cnt":0.91403135},{"name":"cycles:u","cnt":6748734517.0},{"name":"task-clock","cnt":1801.666961},{"name":"max-rss","cnt":224772.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.128679082},{"name":"cpu-clock","cnt":2315.076768},{"name":"max-rss","cnt":247036.0},{"name":"task-clock","cnt":2315.090833},{"name":"cycles:u","cnt":8592632998.0},{"name":"instructions:u","cnt":9445085188.0},{"name":"faults","cnt":36649.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":22695.0},{"name":"instructions:u","cnt":1197945681.0},{"name":"wall-time","cnt":0.267171412},{"name":"task-clock","cnt":277.308356},{"name":"cycles:u","cnt":876743291.0},{"name":"cpu-clock","cnt":277.237031},{"name":"max-rss","cnt":184460.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":303.248954},{"name":"instructions:u","cnt":1304648422.0},{"name":"max-rss","cnt":192612.0},{"name":"cycles:u","cnt":973660167.0},{"name":"wall-time","cnt":0.312700059},{"name":"cpu-clock","cnt":303.180408},{"name":"faults","cnt":23355.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":18174454507.0},{"name":"faults","cnt":33804.0},{"name":"task-clock","cnt":5282.42375},{"name":"cycles:u","cnt":19894450134.0},{"name":"cpu-clock","cnt":5282.431901},{"name":"wall-time","cnt":1.441199695},{"name":"max-rss","cnt":235168.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":39301.0},{"name":"wall-time","cnt":1.632603509},{"name":"cycles:u","cnt":22398418648.0},{"name":"instructions:u","cnt":20212697314.0},{"name":"max-rss","cnt":256492.0},{"name":"task-clock","cnt":5971.54367},{"name":"cpu-clock","cnt":5971.545858}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.262647962},{"name":"cycles:u","cnt":880758927.0},{"name":"faults","cnt":22969.0},{"name":"max-rss","cnt":184372.0},{"name":"cpu-clock","cnt":269.473383},{"name":"instructions:u","cnt":1208668532.0},{"name":"task-clock","cnt":269.516129}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.362648646},{"name":"instructions:u","cnt":1706548046.0},{"name":"max-rss","cnt":198420.0},{"name":"task-clock","cnt":389.237352},{"name":"cpu-clock","cnt":389.184656},{"name":"faults","cnt":24265.0},{"name":"cycles:u","cnt":1331496663.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":11818.0},{"name":"cpu-clock","cnt":762.686699},{"name":"max-rss","cnt":137172.0},{"name":"instructions:u","cnt":4026039474.0},{"name":"task-clock","cnt":762.66961},{"name":"cycles:u","cnt":2951263555.0},{"name":"wall-time","cnt":0.780847717}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.949816431},{"name":"instructions:u","cnt":4725300341.0},{"name":"task-clock","cnt":931.939801},{"name":"cpu-clock","cnt":931.958889},{"name":"faults","cnt":18877.0},{"name":"cycles:u","cnt":3587273033.0},{"name":"max-rss","cnt":166804.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.264356679},{"name":"task-clock","cnt":204.597173},{"name":"cycles:u","cnt":687914288.0},{"name":"cpu-clock","cnt":204.585162},{"name":"faults","cnt":19046.0},{"name":"instructions:u","cnt":964471414.0},{"name":"max-rss","cnt":160448.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":206.966238},{"name":"cycles:u","cnt":698828455.0},{"name":"max-rss","cnt":161108.0},{"name":"wall-time","cnt":0.213692772},{"name":"faults","cnt":19061.0},{"name":"task-clock","cnt":206.967616},{"name":"instructions:u","cnt":974794233.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":5273203361.0},{"name":"faults","cnt":15877.0},{"name":"max-rss","cnt":161688.0},{"name":"wall-time","cnt":0.920946226},{"name":"cycles:u","cnt":4156721322.0},{"name":"task-clock","cnt":1087.882755},{"name":"cpu-clock","cnt":1087.900989}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":24289.0},{"name":"max-rss","cnt":195128.0},{"name":"cpu-clock","cnt":1342.869508},{"name":"cycles:u","cnt":5084605037.0},{"name":"task-clock","cnt":1342.863465},{"name":"wall-time","cnt":1.127660044},{"name":"instructions:u","cnt":6254589136.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":253.125014},{"name":"faults","cnt":21591.0},{"name":"task-clock","cnt":253.141453},{"name":"instructions:u","cnt":1140662306.0},{"name":"wall-time","cnt":0.269282181},{"name":"max-rss","cnt":176600.0},{"name":"cycles:u","cnt":835757421.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":177056.0},{"name":"wall-time","cnt":0.255622363},{"name":"instructions:u","cnt":1152811849.0},{"name":"task-clock","cnt":258.032859},{"name":"cycles:u","cnt":852490810.0},{"name":"cpu-clock","cnt":258.016172},{"name":"faults","cnt":21625.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":170432.0},{"name":"cpu-clock","cnt":1631.664351},{"name":"instructions:u","cnt":6636336883.0},{"name":"cycles:u","cnt":6184226380.0},{"name":"wall-time","cnt":0.985327936},{"name":"task-clock","cnt":1631.688723},{"name":"faults","cnt":18002.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.184500103},{"name":"task-clock","cnt":1920.632014},{"name":"faults","cnt":25468.0},{"name":"max-rss","cnt":200512.0},{"name":"cycles:u","cnt":7250256430.0},{"name":"cpu-clock","cnt":1920.595103},{"name":"instructions:u","cnt":7697196305.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1134435582.0},{"name":"task-clock","cnt":250.932472},{"name":"cpu-clock","cnt":250.926464},{"name":"wall-time","cnt":0.270324756},{"name":"cycles:u","cnt":833276424.0},{"name":"faults","cnt":21687.0},{"name":"max-rss","cnt":177064.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1145853352.0},{"name":"cycles:u","cnt":846620258.0},{"name":"cpu-clock","cnt":253.984463},{"name":"task-clock","cnt":254.004556},{"name":"faults","cnt":21685.0},{"name":"wall-time","cnt":0.253299304},{"name":"max-rss","cnt":177104.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":44.355675},{"name":"wall-time","cnt":0.062669752},{"name":"cycles:u","cnt":127994158.0},{"name":"max-rss","cnt":96696.0},{"name":"instructions:u","cnt":191502104.0},{"name":"faults","cnt":4923.0},{"name":"cpu-clock","cnt":44.354393}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":216331408.0},{"name":"cpu-clock","cnt":52.219456},{"name":"max-rss","cnt":101704.0},{"name":"task-clock","cnt":52.222619},{"name":"faults","cnt":6101.0},{"name":"wall-time","cnt":0.069917815},{"name":"cycles:u","cnt":151382960.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":86684.0},{"name":"cycles:u","cnt":114879238.0},{"name":"faults","cnt":5553.0},{"name":"wall-time","cnt":0.058870474},{"name":"task-clock","cnt":41.40549},{"name":"instructions:u","cnt":169025484.0},{"name":"cpu-clock","cnt":41.402883}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":50.333567},{"name":"instructions:u","cnt":209800920.0},{"name":"faults","cnt":6233.0},{"name":"cycles:u","cnt":143270689.0},{"name":"max-rss","cnt":102784.0},{"name":"wall-time","cnt":0.068080335},{"name":"task-clock","cnt":50.336001}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":355027632.0},{"name":"task-clock","cnt":123.589817},{"name":"max-rss","cnt":116372.0},{"name":"wall-time","cnt":0.132386213},{"name":"faults","cnt":12042.0},{"name":"instructions:u","cnt":522498568.0},{"name":"cpu-clock","cnt":123.594347}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":135.896293},{"name":"cpu-clock","cnt":135.898881},{"name":"max-rss","cnt":122464.0},{"name":"cycles:u","cnt":395475076.0},{"name":"faults","cnt":13496.0},{"name":"wall-time","cnt":0.142882925},{"name":"instructions:u","cnt":570674462.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":113.716402},{"name":"task-clock","cnt":113.729499},{"name":"cycles:u","cnt":313327399.0},{"name":"instructions:u","cnt":473168720.0},{"name":"max-rss","cnt":105952.0},{"name":"wall-time","cnt":0.127698869},{"name":"faults","cnt":12725.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":123992.0},{"name":"wall-time","cnt":0.14121081},{"name":"task-clock","cnt":135.016138},{"name":"cpu-clock","cnt":135.041528},{"name":"instructions:u","cnt":550067702.0},{"name":"faults","cnt":13815.0},{"name":"cycles:u","cnt":388710598.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":129.631943},{"name":"max-rss","cnt":118744.0},{"name":"wall-time","cnt":0.136802528},{"name":"cycles:u","cnt":380159851.0},{"name":"faults","cnt":11940.0},{"name":"cpu-clock","cnt":129.609288},{"name":"instructions:u","cnt":548759743.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":415037222.0},{"name":"cpu-clock","cnt":139.89132},{"name":"task-clock","cnt":139.896591},{"name":"max-rss","cnt":124788.0},{"name":"instructions:u","cnt":596385405.0},{"name":"wall-time","cnt":0.146787405},{"name":"faults","cnt":13370.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":110.246896},{"name":"task-clock","cnt":110.251502},{"name":"wall-time","cnt":0.125306218},{"name":"max-rss","cnt":105624.0},{"name":"cycles:u","cnt":308778461.0},{"name":"instructions:u","cnt":470410633.0},{"name":"faults","cnt":12481.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":397970906.0},{"name":"instructions:u","cnt":577071634.0},{"name":"cpu-clock","cnt":135.999572},{"name":"faults","cnt":13643.0},{"name":"wall-time","cnt":0.141786669},{"name":"task-clock","cnt":135.994516},{"name":"max-rss","cnt":126160.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1646.417724},{"name":"wall-time","cnt":1.703973943},{"name":"instructions:u","cnt":9373070466.0},{"name":"task-clock","cnt":1646.417826},{"name":"faults","cnt":35939.0},{"name":"cycles:u","cnt":6382096313.0},{"name":"max-rss","cnt":227620.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":2019.741435},{"name":"instructions:u","cnt":11863242393.0},{"name":"cycles:u","cnt":7803666824.0},{"name":"faults","cnt":41666.0},{"name":"max-rss","cnt":256456.0},{"name":"task-clock","cnt":2019.752236},{"name":"wall-time","cnt":2.068272801}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4000909336.0},{"name":"task-clock","cnt":627.190124},{"name":"faults","cnt":36757.0},{"name":"wall-time","cnt":0.628389174},{"name":"cycles:u","cnt":2288355411.0},{"name":"cpu-clock","cnt":627.18956},{"name":"max-rss","cnt":233572.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2690538195.0},{"name":"instructions:u","cnt":4523306011.0},{"name":"cpu-clock","cnt":732.889434},{"name":"max-rss","cnt":246964.0},{"name":"faults","cnt":38798.0},{"name":"wall-time","cnt":0.736109937},{"name":"task-clock","cnt":732.888921}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":293716.0},{"name":"cycles:u","cnt":10021194949.0},{"name":"instructions:u","cnt":13491131840.0},{"name":"faults","cnt":49674.0},{"name":"task-clock","cnt":2621.954147},{"name":"cpu-clock","cnt":2621.96379},{"name":"wall-time","cnt":2.081697021}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":342916.0},{"name":"faults","cnt":61790.0},{"name":"cycles:u","cnt":12067765529.0},{"name":"wall-time","cnt":2.566045488},{"name":"instructions:u","cnt":16699259896.0},{"name":"task-clock","cnt":3175.743325},{"name":"cpu-clock","cnt":3175.698001}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.757157879},{"name":"cpu-clock","cnt":772.56719},{"name":"faults","cnt":48285.0},{"name":"cycles:u","cnt":2721535298.0},{"name":"instructions:u","cnt":4544092812.0},{"name":"task-clock","cnt":772.634746},{"name":"max-rss","cnt":292628.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":890.82902},{"name":"instructions:u","cnt":5097885892.0},{"name":"faults","cnt":50547.0},{"name":"max-rss","cnt":306788.0},{"name":"wall-time","cnt":0.871760055},{"name":"task-clock","cnt":890.881459},{"name":"cycles:u","cnt":3189393909.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":381648.0},{"name":"wall-time","cnt":2.804558456},{"name":"cpu-clock","cnt":7249.739468},{"name":"task-clock","cnt":7249.765839},{"name":"cycles:u","cnt":27328626871.0},{"name":"faults","cnt":78638.0},{"name":"instructions:u","cnt":27077041174.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":369944.0},{"name":"faults","cnt":70057.0},{"name":"task-clock","cnt":7416.638818},{"name":"cycles:u","cnt":27971538626.0},{"name":"cpu-clock","cnt":7416.680004},{"name":"instructions:u","cnt":28240252323.0},{"name":"wall-time","cnt":3.056687653}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":801.236857},{"name":"wall-time","cnt":0.767542806},{"name":"cycles:u","cnt":2855012440.0},{"name":"max-rss","cnt":296096.0},{"name":"instructions:u","cnt":4659553979.0},{"name":"task-clock","cnt":801.267503},{"name":"faults","cnt":49309.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":3452170761.0},{"name":"task-clock","cnt":954.074706},{"name":"wall-time","cnt":0.884821489},{"name":"cpu-clock","cnt":954.016438},{"name":"instructions:u","cnt":5333162585.0},{"name":"max-rss","cnt":314600.0},{"name":"faults","cnt":52071.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":1130.193876},{"name":"faults","cnt":21298.0},{"name":"instructions:u","cnt":4795384164.0},{"name":"cpu-clock","cnt":1130.192882},{"name":"wall-time","cnt":1.14809576},{"name":"cycles:u","cnt":4362174713.0},{"name":"max-rss","cnt":178704.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1446.15692},{"name":"max-rss","cnt":237804.0},{"name":"instructions:u","cnt":6122231478.0},{"name":"faults","cnt":36048.0},{"name":"wall-time","cnt":1.483538164},{"name":"task-clock","cnt":1446.129894},{"name":"cycles:u","cnt":5554982202.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":436.175153},{"name":"cycles:u","cnt":1539559396.0},{"name":"task-clock","cnt":436.177523},{"name":"faults","cnt":34157.0},{"name":"max-rss","cnt":225060.0},{"name":"wall-time","cnt":0.44746346},{"name":"instructions:u","cnt":1974421505.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.459580375},{"name":"max-rss","cnt":231328.0},{"name":"cpu-clock","cnt":466.288193},{"name":"faults","cnt":34306.0},{"name":"task-clock","cnt":466.288682},{"name":"instructions:u","cnt":2062948438.0},{"name":"cycles:u","cnt":1642744591.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":4361.447682},{"name":"max-rss","cnt":310384.0},{"name":"cycles:u","cnt":16543060106.0},{"name":"task-clock","cnt":4361.485823},{"name":"faults","cnt":50269.0},{"name":"wall-time","cnt":2.243464317},{"name":"instructions:u","cnt":17316509473.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":364652.0},{"name":"cycles:u","cnt":20142614835.0},{"name":"faults","cnt":63892.0},{"name":"task-clock","cnt":5374.118972},{"name":"instructions:u","cnt":20646920279.0},{"name":"cpu-clock","cnt":5374.217785},{"name":"wall-time","cnt":2.771363784}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":296844.0},{"name":"task-clock","cnt":713.661641},{"name":"instructions:u","cnt":2930141909.0},{"name":"cpu-clock","cnt":713.574652},{"name":"wall-time","cnt":0.6886164},{"name":"faults","cnt":46360.0},{"name":"cycles:u","cnt":2420749148.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":3050021472.0},{"name":"task-clock","cnt":755.200927},{"name":"cycles:u","cnt":2562244033.0},{"name":"faults","cnt":49804.0},{"name":"max-rss","cnt":317756.0},{"name":"cpu-clock","cnt":755.087732},{"name":"wall-time","cnt":0.698279328}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":59555632399.0},{"name":"wall-time","cnt":3.503780362},{"name":"faults","cnt":49092.0},{"name":"task-clock","cnt":15740.232069},{"name":"instructions:u","cnt":47170429412.0},{"name":"cpu-clock","cnt":15740.271189},{"name":"max-rss","cnt":296744.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":69513782791.0},{"name":"instructions:u","cnt":55195428750.0},{"name":"task-clock","cnt":18473.622496},{"name":"max-rss","cnt":343216.0},{"name":"cpu-clock","cnt":18473.666869},{"name":"faults","cnt":62363.0},{"name":"wall-time","cnt":4.100964287}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2524671038.0},{"name":"faults","cnt":49792.0},{"name":"wall-time","cnt":0.693609617},{"name":"instructions:u","cnt":2986017097.0},{"name":"max-rss","cnt":296156.0},{"name":"task-clock","cnt":733.881692},{"name":"cpu-clock","cnt":733.768297}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":6486730682.0},{"name":"cpu-clock","cnt":1775.2811},{"name":"instructions:u","cnt":6999695909.0},{"name":"faults","cnt":56866.0},{"name":"max-rss","cnt":329792.0},{"name":"task-clock","cnt":1775.388981},{"name":"wall-time","cnt":1.21182979}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1630.101509},{"name":"wall-time","cnt":1.664251281},{"name":"cycles:u","cnt":6358531506.0},{"name":"instructions:u","cnt":12119497932.0},{"name":"max-rss","cnt":180112.0},{"name":"task-clock","cnt":1630.101145},{"name":"faults","cnt":28443.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1737.297707},{"name":"wall-time","cnt":1.773150654},{"name":"cycles:u","cnt":6764823281.0},{"name":"faults","cnt":31455.0},{"name":"task-clock","cnt":1737.298326},{"name":"instructions:u","cnt":12857085970.0},{"name":"max-rss","cnt":192796.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":157.950695},{"name":"max-rss","cnt":133480.0},{"name":"task-clock","cnt":157.951652},{"name":"cycles:u","cnt":539832396.0},{"name":"wall-time","cnt":0.187397299},{"name":"faults","cnt":13399.0},{"name":"instructions:u","cnt":839885007.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":198284.0},{"name":"cycles:u","cnt":6703879590.0},{"name":"cpu-clock","cnt":1724.484983},{"name":"task-clock","cnt":1724.486526},{"name":"faults","cnt":33225.0},{"name":"instructions:u","cnt":12713894915.0},{"name":"wall-time","cnt":1.737864396}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":57152.0},{"name":"max-rss","cnt":299892.0},{"name":"cycles:u","cnt":10193324546.0},{"name":"task-clock","cnt":2646.952494},{"name":"wall-time","cnt":2.454243644},{"name":"instructions:u","cnt":16672744424.0},{"name":"cpu-clock","cnt":2646.942597}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":11094131006.0},{"name":"cpu-clock","cnt":2885.12973},{"name":"task-clock","cnt":2885.136763},{"name":"faults","cnt":60419.0},{"name":"max-rss","cnt":310628.0},{"name":"instructions:u","cnt":17854576795.0},{"name":"wall-time","cnt":2.616420406}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":224.138015},{"name":"faults","cnt":18080.0},{"name":"cpu-clock","cnt":224.108977},{"name":"wall-time","cnt":0.246434839},{"name":"max-rss","cnt":158764.0},{"name":"cycles:u","cnt":739436329.0},{"name":"instructions:u","cnt":1161688459.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2832.818809},{"name":"wall-time","cnt":2.528569067},{"name":"instructions:u","cnt":17624515138.0},{"name":"cpu-clock","cnt":2832.835693},{"name":"cycles:u","cnt":10866230638.0},{"name":"max-rss","cnt":319908.0},{"name":"faults","cnt":62571.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":51788133592.0},{"name":"task-clock","cnt":8297.763168},{"name":"cpu-clock","cnt":8297.75639},{"name":"cycles:u","cnt":32629559217.0},{"name":"faults","cnt":71902.0},{"name":"wall-time","cnt":8.042567709},{"name":"max-rss","cnt":330932.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":74778.0},{"name":"task-clock","cnt":8424.531891},{"name":"cpu-clock","cnt":8424.532483},{"name":"cycles:u","cnt":33085738089.0},{"name":"wall-time","cnt":8.129168445},{"name":"instructions:u","cnt":52902739152.0},{"name":"max-rss","cnt":359584.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.246303947},{"name":"cycles:u","cnt":744813952.0},{"name":"task-clock","cnt":220.740553},{"name":"max-rss","cnt":156948.0},{"name":"cpu-clock","cnt":220.735173},{"name":"faults","cnt":17842.0},{"name":"instructions:u","cnt":1135009088.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.927252528},{"name":"max-rss","cnt":343492.0},{"name":"task-clock","cnt":7948.647545},{"name":"faults","cnt":72307.0},{"name":"instructions:u","cnt":50446967769.0},{"name":"cpu-clock","cnt":7948.630108},{"name":"cycles:u","cnt":31128568081.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":72.709617},{"name":"wall-time","cnt":0.091537948},{"name":"faults","cnt":6113.0},{"name":"cycles:u","cnt":231123797.0},{"name":"instructions:u","cnt":345981223.0},{"name":"max-rss","cnt":113072.0},{"name":"cpu-clock","cnt":72.698135}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":418224414.0},{"name":"faults","cnt":7887.0},{"name":"task-clock","cnt":91.24645},{"name":"wall-time","cnt":0.109394127},{"name":"cpu-clock","cnt":91.244483},{"name":"cycles:u","cnt":294104011.0},{"name":"max-rss","cnt":121072.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":7556.0},{"name":"wall-time","cnt":0.075016094},{"name":"cycles:u","cnt":171662621.0},{"name":"max-rss","cnt":106504.0},{"name":"task-clock","cnt":58.397106},{"name":"cpu-clock","cnt":58.404182},{"name":"instructions:u","cnt":257735134.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":8211.0},{"name":"instructions:u","cnt":381962276.0},{"name":"wall-time","cnt":0.100155798},{"name":"task-clock","cnt":83.0614},{"name":"cycles:u","cnt":261207841.0},{"name":"cpu-clock","cnt":83.059502},{"name":"max-rss","cnt":123084.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"cpu-clock","cnt":84.939754},{"name":"instructions:u","cnt":381140425.0},{"name":"cycles:u","cnt":268307447.0},{"name":"task-clock","cnt":84.943768},{"name":"faults","cnt":8195.0},{"name":"wall-time","cnt":0.101519301},{"name":"max-rss","cnt":122840.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"faults","cnt":8213.0},{"name":"task-clock","cnt":75.790502},{"name":"cpu-clock","cnt":75.787394},{"name":"instructions:u","cnt":343986867.0},{"name":"max-rss","cnt":122908.0},{"name":"wall-time","cnt":0.092794816},{"name":"cycles:u","cnt":234105663.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":83.353934},{"name":"max-rss","cnt":122524.0},{"name":"cpu-clock","cnt":83.351885},{"name":"wall-time","cnt":0.100244994},{"name":"instructions:u","cnt":381391646.0},{"name":"faults","cnt":8195.0},{"name":"cycles:u","cnt":261745066.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":82.967913},{"name":"cpu-clock","cnt":82.964769},{"name":"instructions:u","cnt":383120899.0},{"name":"faults","cnt":8195.0},{"name":"wall-time","cnt":0.099965823},{"name":"max-rss","cnt":122724.0},{"name":"cycles:u","cnt":262537424.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"faults","cnt":10128.0},{"name":"max-rss","cnt":137348.0},{"name":"wall-time","cnt":0.149774567},{"name":"cpu-clock","cnt":235.786531},{"name":"cycles:u","cnt":813191994.0},{"name":"task-clock","cnt":235.793099},{"name":"instructions:u","cnt":957308160.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":143588.0},{"name":"task-clock","cnt":265.911276},{"name":"cycles:u","cnt":916728035.0},{"name":"instructions:u","cnt":1084923915.0},{"name":"cpu-clock","cnt":265.911502},{"name":"wall-time","cnt":0.169888599},{"name":"faults","cnt":11686.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.091590281},{"name":"max-rss","cnt":118776.0},{"name":"cpu-clock","cnt":78.828868},{"name":"cycles:u","cnt":225578492.0},{"name":"task-clock","cnt":78.83214},{"name":"instructions:u","cnt":320066080.0},{"name":"faults","cnt":8697.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":146608.0},{"name":"wall-time","cnt":0.160838703},{"name":"faults","cnt":12160.0},{"name":"instructions:u","cnt":1027515879.0},{"name":"cycles:u","cnt":885359617.0},{"name":"cpu-clock","cnt":259.931919},{"name":"task-clock","cnt":259.933487}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"task-clock","cnt":246.498493},{"name":"faults","cnt":12115.0},{"name":"cycles:u","cnt":836941539.0},{"name":"instructions:u","cnt":957289774.0},{"name":"max-rss","cnt":146068.0},{"name":"wall-time","cnt":0.152613023},{"name":"cpu-clock","cnt":246.519831}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"faults","cnt":12132.0},{"name":"cpu-clock","cnt":231.885811},{"name":"cycles:u","cnt":781092596.0},{"name":"max-rss","cnt":145472.0},{"name":"wall-time","cnt":0.1432362},{"name":"task-clock","cnt":231.903524},{"name":"instructions:u","cnt":909204822.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":849540119.0},{"name":"cpu-clock","cnt":250.066471},{"name":"task-clock","cnt":250.065147},{"name":"faults","cnt":12319.0},{"name":"max-rss","cnt":147016.0},{"name":"instructions:u","cnt":960015803.0},{"name":"wall-time","cnt":0.151453976}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":12315.0},{"name":"max-rss","cnt":146684.0},{"name":"wall-time","cnt":0.152432967},{"name":"cpu-clock","cnt":245.16891},{"name":"task-clock","cnt":245.170218},{"name":"instructions:u","cnt":966408286.0},{"name":"cycles:u","cnt":831746191.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"cycles:u","cnt":2341557499.0},{"name":"cpu-clock","cnt":637.534815},{"name":"wall-time","cnt":0.273988499},{"name":"instructions:u","cnt":2298403803.0},{"name":"faults","cnt":11723.0},{"name":"max-rss","cnt":143656.0},{"name":"task-clock","cnt":637.56896}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":681.773341},{"name":"task-clock","cnt":681.770824},{"name":"max-rss","cnt":151596.0},{"name":"wall-time","cnt":0.289641639},{"name":"instructions:u","cnt":2437256344.0},{"name":"faults","cnt":13659.0},{"name":"cycles:u","cnt":2493300839.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":80.223666},{"name":"wall-time","cnt":0.09369079},{"name":"cycles:u","cnt":236337702.0},{"name":"instructions:u","cnt":321434594.0},{"name":"cpu-clock","cnt":80.19761},{"name":"max-rss","cnt":118744.0},{"name":"faults","cnt":8885.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2315418833.0},{"name":"faults","cnt":14165.0},{"name":"task-clock","cnt":635.799612},{"name":"instructions:u","cnt":2363746071.0},{"name":"max-rss","cnt":154340.0},{"name":"wall-time","cnt":0.290932109},{"name":"cpu-clock","cnt":635.787604}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":1426580262.0},{"name":"cpu-clock","cnt":407.471417},{"name":"cycles:u","cnt":1442289942.0},{"name":"wall-time","cnt":0.192164898},{"name":"faults","cnt":13347.0},{"name":"max-rss","cnt":150928.0},{"name":"task-clock","cnt":407.450686}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":150020.0},{"name":"faults","cnt":13199.0},{"name":"instructions:u","cnt":1325694610.0},{"name":"cpu-clock","cnt":369.45695},{"name":"task-clock","cnt":369.46511},{"name":"wall-time","cnt":0.183641504},{"name":"cycles:u","cnt":1296233481.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":372.109408},{"name":"wall-time","cnt":0.189838507},{"name":"max-rss","cnt":150544.0},{"name":"cycles:u","cnt":1310620729.0},{"name":"instructions:u","cnt":1357874713.0},{"name":"cpu-clock","cnt":372.117208},{"name":"faults","cnt":13183.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1368127267.0},{"name":"cycles:u","cnt":1334637042.0},{"name":"max-rss","cnt":149524.0},{"name":"wall-time","cnt":0.187317328},{"name":"faults","cnt":12958.0},{"name":"task-clock","cnt":379.583854},{"name":"cpu-clock","cnt":379.564224}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":498096.0},{"name":"wall-time","cnt":5.385124629},{"name":"cycles:u","cnt":20754344940.0},{"name":"task-clock","cnt":5339.804434},{"name":"faults","cnt":141389.0},{"name":"instructions:u","cnt":40659641784.0},{"name":"cpu-clock","cnt":5339.804874}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":43094306501.0},{"name":"cpu-clock","cnt":5739.158716},{"name":"cycles:u","cnt":22308461933.0},{"name":"wall-time","cnt":5.775326514},{"name":"task-clock","cnt":5739.159207},{"name":"max-rss","cnt":520484.0},{"name":"faults","cnt":146551.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1666702781.0},{"name":"task-clock","cnt":471.479756},{"name":"max-rss","cnt":204364.0},{"name":"cpu-clock","cnt":471.482618},{"name":"wall-time","cnt":0.487764845},{"name":"instructions:u","cnt":2016520841.0},{"name":"faults","cnt":35541.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1244240.0},{"name":"cycles:u","cnt":28725232813.0},{"name":"instructions:u","cnt":51458610569.0},{"name":"task-clock","cnt":7517.137492},{"name":"faults","cnt":337668.0},{"name":"wall-time","cnt":7.512702907},{"name":"cpu-clock","cnt":7517.14755}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1240560.0},{"name":"faults","cnt":336006.0},{"name":"instructions:u","cnt":54713694306.0},{"name":"wall-time","cnt":7.943552564},{"name":"task-clock","cnt":7983.396537},{"name":"cpu-clock","cnt":7983.407119},{"name":"cycles:u","cnt":30612741413.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":42438.0},{"name":"wall-time","cnt":0.586294235},{"name":"task-clock","cnt":570.099286},{"name":"cycles:u","cnt":2032278190.0},{"name":"max-rss","cnt":236724.0},{"name":"instructions:u","cnt":2724137479.0},{"name":"cpu-clock","cnt":570.107246}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":6.822806514},{"name":"task-clock","cnt":6822.874813},{"name":"cycles:u","cnt":26199187185.0},{"name":"faults","cnt":276580.0},{"name":"cpu-clock","cnt":6822.876179},{"name":"instructions:u","cnt":51874579417.0},{"name":"max-rss","cnt":998060.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7278.052676},{"name":"instructions:u","cnt":55067038727.0},{"name":"max-rss","cnt":964444.0},{"name":"wall-time","cnt":7.238756702},{"name":"task-clock","cnt":7278.053336},{"name":"cycles:u","cnt":27953349121.0},{"name":"faults","cnt":267474.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.577535009},{"name":"faults","cnt":43559.0},{"name":"cycles:u","cnt":2014625013.0},{"name":"task-clock","cnt":564.43133},{"name":"max-rss","cnt":239496.0},{"name":"instructions:u","cnt":2665343251.0},{"name":"cpu-clock","cnt":564.440645}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmpzC4Ff7)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x55bf49b253bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x55bf49b25552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x55bf49b2486c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x55bf49ac0470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x55bf497aeafa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x55bf497b6722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x55bf497c8541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x55bf497d7a1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x55bf497cd96e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x55bf49781e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x55bf49b4c0d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x55bf49b56d39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x55bf49b4cc9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x55bf497dbd57 - main\n  14:     0x7fa74b27c82f - __libc_start_main\n  15:     0x55bf49777518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":8683992654.0},{"name":"task-clock","cnt":1843.938256},{"name":"cpu-clock","cnt":1843.928191},{"name":"faults","cnt":26796.0},{"name":"cycles:u","cnt":7192618883.0},{"name":"wall-time","cnt":1.883856601},{"name":"max-rss","cnt":203276.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":10683109525.0},{"name":"cpu-clock","cnt":2282.134397},{"name":"task-clock","cnt":2282.125545},{"name":"cycles:u","cnt":8863199312.0},{"name":"max-rss","cnt":259052.0},{"name":"faults","cnt":40607.0},{"name":"wall-time","cnt":2.317548608}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":37819.0},{"name":"max-rss","cnt":240728.0},{"name":"wall-time","cnt":0.493977979},{"name":"cpu-clock","cnt":488.187101},{"name":"cycles:u","cnt":1711660235.0},{"name":"instructions:u","cnt":2201102806.0},{"name":"task-clock","cnt":488.188747}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.507957574},{"name":"cycles:u","cnt":1846019633.0},{"name":"max-rss","cnt":248620.0},{"name":"cpu-clock","cnt":518.890736},{"name":"faults","cnt":37970.0},{"name":"instructions:u","cnt":2295946742.0},{"name":"task-clock","cnt":518.890755}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":4.057933028},{"name":"cycles:u","cnt":33096061260.0},{"name":"task-clock","cnt":8739.676962},{"name":"cpu-clock","cnt":8739.657052},{"name":"faults","cnt":85013.0},{"name":"instructions:u","cnt":36636106269.0},{"name":"max-rss","cnt":434372.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":41049811344.0},{"name":"cpu-clock","cnt":10550.353933},{"name":"cycles:u","cnt":39802059604.0},{"name":"faults","cnt":99065.0},{"name":"task-clock","cnt":10550.267484},{"name":"max-rss","cnt":503680.0},{"name":"wall-time","cnt":4.773595985}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.89790052},{"name":"max-rss","cnt":386316.0},{"name":"instructions:u","cnt":3970682835.0},{"name":"faults","cnt":64450.0},{"name":"cpu-clock","cnt":930.58697},{"name":"cycles:u","cnt":3208928312.0},{"name":"task-clock","cnt":930.709334}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.950985599},{"name":"cpu-clock","cnt":1015.594757},{"name":"cycles:u","cnt":3525619951.0},{"name":"instructions:u","cnt":4267655860.0},{"name":"faults","cnt":65666.0},{"name":"max-rss","cnt":398180.0},{"name":"task-clock","cnt":1015.669052}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":147623891638.0},{"name":"instructions:u","cnt":120464431081.0},{"name":"task-clock","cnt":39028.941182},{"name":"max-rss","cnt":436412.0},{"name":"cpu-clock","cnt":39029.029673},{"name":"wall-time","cnt":7.94261588},{"name":"faults","cnt":87140.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":43208.174948},{"name":"cpu-clock","cnt":43208.279861},{"name":"max-rss","cnt":494284.0},{"name":"faults","cnt":101522.0},{"name":"instructions:u","cnt":128513939471.0},{"name":"cycles:u","cnt":163060056934.0},{"name":"wall-time","cnt":8.292127284}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":945.326764},{"name":"cpu-clock","cnt":945.229846},{"name":"wall-time","cnt":0.902323805},{"name":"max-rss","cnt":362648.0},{"name":"instructions:u","cnt":4062894636.0},{"name":"cycles:u","cnt":3318657408.0},{"name":"faults","cnt":64801.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1448.208316},{"name":"faults","cnt":66766.0},{"name":"cycles:u","cnt":5273214984.0},{"name":"max-rss","cnt":380000.0},{"name":"instructions:u","cnt":6270150953.0},{"name":"cpu-clock","cnt":1448.123595},{"name":"wall-time","cnt":1.311063679}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":936.423593},{"name":"instructions:u","cnt":4018953855.0},{"name":"faults","cnt":19013.0},{"name":"cpu-clock","cnt":936.439694},{"name":"cycles:u","cnt":3610090880.0},{"name":"wall-time","cnt":0.954602507},{"name":"max-rss","cnt":167432.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":5124164280.0},{"name":"cpu-clock","cnt":1184.450751},{"name":"max-rss","cnt":205560.0},{"name":"wall-time","cnt":1.233226478},{"name":"task-clock","cnt":1184.452252},{"name":"faults","cnt":28291.0},{"name":"cycles:u","cnt":4552442621.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1551311933.0},{"name":"wall-time","cnt":0.338205346},{"name":"task-clock","cnt":341.146955},{"name":"cycles:u","cnt":1180947832.0},{"name":"faults","cnt":29595.0},{"name":"max-rss","cnt":203336.0},{"name":"cpu-clock","cnt":341.146059}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":30391.0},{"name":"cpu-clock","cnt":515.656884},{"name":"max-rss","cnt":214488.0},{"name":"cycles:u","cnt":1866144167.0},{"name":"task-clock","cnt":515.657157},{"name":"wall-time","cnt":0.537766203},{"name":"instructions:u","cnt":2303641898.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"faults","cnt":28118.0},{"name":"cycles:u","cnt":1209545757.0},{"name":"instructions:u","cnt":1602094972.0},{"name":"cpu-clock","cnt":344.39546},{"name":"wall-time","cnt":0.341549933},{"name":"task-clock","cnt":344.397252},{"name":"max-rss","cnt":207736.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"max-rss","cnt":207108.0},{"name":"wall-time","cnt":0.38456445},{"name":"task-clock","cnt":358.541785},{"name":"cpu-clock","cnt":358.551378},{"name":"cycles:u","cnt":1260542322.0},{"name":"faults","cnt":28533.0},{"name":"instructions:u","cnt":1648401981.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"max-rss","cnt":212716.0},{"name":"wall-time","cnt":0.519087193},{"name":"cycles:u","cnt":1883613558.0},{"name":"faults","cnt":29818.0},{"name":"cpu-clock","cnt":519.038782},{"name":"task-clock","cnt":519.040319},{"name":"instructions:u","cnt":2325607456.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"cpu-clock","cnt":517.848289},{"name":"task-clock","cnt":517.847731},{"name":"cycles:u","cnt":1872009598.0},{"name":"wall-time","cnt":0.544145382},{"name":"faults","cnt":29789.0},{"name":"instructions:u","cnt":2322800549.0},{"name":"max-rss","cnt":212280.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cpu-clock","cnt":343.499141},{"name":"task-clock","cnt":343.49921},{"name":"cycles:u","cnt":1205251047.0},{"name":"faults","cnt":28108.0},{"name":"wall-time","cnt":0.341252029},{"name":"instructions:u","cnt":1587574526.0},{"name":"max-rss","cnt":204368.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"cycles:u","cnt":1601901173.0},{"name":"instructions:u","cnt":2028509398.0},{"name":"cpu-clock","cnt":446.449265},{"name":"faults","cnt":29439.0},{"name":"max-rss","cnt":210716.0},{"name":"wall-time","cnt":0.463444553},{"name":"task-clock","cnt":446.450765}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"cycles:u","cnt":1380064834.0},{"name":"max-rss","cnt":208440.0},{"name":"wall-time","cnt":0.38515227},{"name":"faults","cnt":28846.0},{"name":"instructions:u","cnt":1772458753.0},{"name":"cpu-clock","cnt":387.083576},{"name":"task-clock","cnt":387.084786}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"task-clock","cnt":405.754038},{"name":"cpu-clock","cnt":405.752306},{"name":"faults","cnt":28581.0},{"name":"cycles:u","cnt":1438641245.0},{"name":"max-rss","cnt":207460.0},{"name":"instructions:u","cnt":1822613338.0},{"name":"wall-time","cnt":0.425043516}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":27305414489.0},{"name":"instructions:u","cnt":22890049877.0},{"name":"task-clock","cnt":7298.051609},{"name":"faults","cnt":79316.0},{"name":"wall-time","cnt":2.233961833},{"name":"cpu-clock","cnt":7298.071051},{"name":"max-rss","cnt":410876.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7957.381416},{"name":"faults","cnt":78865.0},{"name":"wall-time","cnt":2.678746801},{"name":"task-clock","cnt":7957.367033},{"name":"max-rss","cnt":414168.0},{"name":"cycles:u","cnt":29760277600.0},{"name":"instructions:u","cnt":25781113937.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":551.212341},{"name":"cpu-clock","cnt":551.136883},{"name":"instructions:u","cnt":2317429511.0},{"name":"faults","cnt":40769.0},{"name":"max-rss","cnt":269300.0},{"name":"cycles:u","cnt":1857105463.0},{"name":"wall-time","cnt":0.526346769}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":6921514815.0},{"name":"cpu-clock","cnt":1748.939643},{"name":"max-rss","cnt":333516.0},{"name":"faults","cnt":56143.0},{"name":"task-clock","cnt":1748.970931},{"name":"wall-time","cnt":0.989319168},{"name":"cycles:u","cnt":6369155887.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"faults","cnt":41228.0},{"name":"max-rss","cnt":279008.0},{"name":"instructions:u","cnt":2399951667.0},{"name":"wall-time","cnt":0.544478066},{"name":"cycles:u","cnt":1966332232.0},{"name":"task-clock","cnt":581.474942},{"name":"cpu-clock","cnt":581.400656}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"max-rss","cnt":289876.0},{"name":"cycles:u","cnt":2596065243.0},{"name":"wall-time","cnt":0.640615256},{"name":"task-clock","cnt":747.837371},{"name":"cpu-clock","cnt":747.755136},{"name":"instructions:u","cnt":3133495049.0},{"name":"faults","cnt":44219.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"wall-time","cnt":1.00193176},{"name":"instructions:u","cnt":6958306833.0},{"name":"cycles:u","cnt":6390830874.0},{"name":"task-clock","cnt":1755.28672},{"name":"faults","cnt":56292.0},{"name":"max-rss","cnt":334076.0},{"name":"cpu-clock","cnt":1755.233351}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"faults","cnt":56321.0},{"name":"instructions:u","cnt":6949784988.0},{"name":"wall-time","cnt":0.993243162},{"name":"cpu-clock","cnt":1746.73955},{"name":"cycles:u","cnt":6348682715.0},{"name":"max-rss","cnt":334008.0},{"name":"task-clock","cnt":1746.799537}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cpu-clock","cnt":553.888938},{"name":"instructions:u","cnt":2344752314.0},{"name":"max-rss","cnt":271464.0},{"name":"faults","cnt":40734.0},{"name":"wall-time","cnt":0.526606282},{"name":"task-clock","cnt":553.965827},{"name":"cycles:u","cnt":1858396307.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"wall-time","cnt":1.509736856},{"name":"faults","cnt":82714.0},{"name":"cycles:u","cnt":20535310065.0},{"name":"max-rss","cnt":431288.0},{"name":"instructions:u","cnt":17669619429.0},{"name":"cpu-clock","cnt":5558.739903},{"name":"task-clock","cnt":5558.747085}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"faults","cnt":82503.0},{"name":"max-rss","cnt":431796.0},{"name":"task-clock","cnt":5295.947841},{"name":"wall-time","cnt":1.433272629},{"name":"cpu-clock","cnt":5295.942718},{"name":"cycles:u","cnt":19585892840.0},{"name":"instructions:u","cnt":17019683254.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cycles:u","cnt":3176980880.0},{"name":"faults","cnt":47084.0},{"name":"instructions:u","cnt":3740299325.0},{"name":"wall-time","cnt":0.672825595},{"name":"cpu-clock","cnt":903.828225},{"name":"task-clock","cnt":903.896204},{"name":"max-rss","cnt":301708.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":66290089718.0},{"name":"cycles:u","cnt":83376952525.0},{"name":"cpu-clock","cnt":22061.884533},{"name":"faults","cnt":63403.0},{"name":"task-clock","cnt":22061.845871},{"name":"max-rss","cnt":346968.0},{"name":"wall-time","cnt":4.574722442}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":395596.0},{"name":"task-clock","cnt":24222.065302},{"name":"faults","cnt":76341.0},{"name":"wall-time","cnt":4.934825373},{"name":"cpu-clock","cnt":24222.1159},{"name":"cycles:u","cnt":91336560835.0},{"name":"instructions:u","cnt":71945419849.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":40032.0},{"name":"instructions:u","cnt":2341559118.0},{"name":"cpu-clock","cnt":543.69502},{"name":"wall-time","cnt":0.513197291},{"name":"cycles:u","cnt":1869966688.0},{"name":"task-clock","cnt":543.762971},{"name":"max-rss","cnt":254104.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":52354809270.0},{"name":"instructions:u","cnt":41954491292.0},{"name":"wall-time","cnt":2.993382747},{"name":"faults","cnt":76360.0},{"name":"max-rss","cnt":399212.0},{"name":"task-clock","cnt":13929.00868},{"name":"cpu-clock","cnt":13929.027583}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"max-rss","cnt":267460.0},{"name":"wall-time","cnt":0.532913993},{"name":"cpu-clock","cnt":614.667595},{"name":"instructions:u","cnt":2630246571.0},{"name":"cycles:u","cnt":2133140064.0},{"name":"faults","cnt":41035.0},{"name":"task-clock","cnt":614.731594}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cycles:u","cnt":2169961556.0},{"name":"max-rss","cnt":267160.0},{"name":"cpu-clock","cnt":623.504484},{"name":"faults","cnt":41009.0},{"name":"task-clock","cnt":623.577711},{"name":"wall-time","cnt":0.544007999},{"name":"instructions:u","cnt":2672200352.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"max-rss","cnt":398528.0},{"name":"faults","cnt":76534.0},{"name":"task-clock","cnt":13911.947633},{"name":"cpu-clock","cnt":13911.945204},{"name":"instructions:u","cnt":41980253381.0},{"name":"cycles:u","cnt":52334577768.0},{"name":"wall-time","cnt":2.981780637}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"task-clock","cnt":13877.195548},{"name":"cycles:u","cnt":52219698978.0},{"name":"faults","cnt":76429.0},{"name":"instructions:u","cnt":41966558415.0},{"name":"wall-time","cnt":2.95538107},{"name":"cpu-clock","cnt":13877.230725},{"name":"max-rss","cnt":398364.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cpu-clock","cnt":549.494436},{"name":"instructions:u","cnt":2369185412.0},{"name":"task-clock","cnt":549.56132},{"name":"faults","cnt":40214.0},{"name":"max-rss","cnt":256924.0},{"name":"cycles:u","cnt":1893468820.0},{"name":"wall-time","cnt":0.51848266}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"faults","cnt":78267.0},{"name":"instructions:u","cnt":58261379110.0},{"name":"cycles:u","cnt":71778498123.0},{"name":"wall-time","cnt":3.619634595},{"name":"cpu-clock","cnt":19069.043787},{"name":"max-rss","cnt":408576.0},{"name":"task-clock","cnt":19069.006675}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"faults","cnt":78150.0},{"name":"instructions:u","cnt":57975882494.0},{"name":"wall-time","cnt":3.532008784},{"name":"task-clock","cnt":19081.257895},{"name":"cycles:u","cnt":71804680471.0},{"name":"max-rss","cnt":407396.0},{"name":"cpu-clock","cnt":19081.28384}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"instructions:u","cnt":12914475522.0},{"name":"task-clock","cnt":2587.65883},{"name":"cpu-clock","cnt":2587.60638},{"name":"wall-time","cnt":1.924327703},{"name":"cycles:u","cnt":9816823772.0},{"name":"faults","cnt":55660.0},{"name":"max-rss","cnt":324452.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.258881},{"name":"cpu-clock","cnt":241.125669},{"name":"task-clock","cnt":241.117959},{"name":"max-rss","cnt":123508.0},{"name":"instructions:u","cnt":1223434287.0},{"name":"faults","cnt":8015.0},{"name":"cycles:u","cnt":893062223.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":295.527147},{"name":"instructions:u","cnt":1495567799.0},{"name":"faults","cnt":10999.0},{"name":"cycles:u","cnt":1096386256.0},{"name":"wall-time","cnt":0.313348186},{"name":"max-rss","cnt":135900.0},{"name":"cpu-clock","cnt":295.524844}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":120380.0},{"name":"instructions:u","cnt":398059676.0},{"name":"wall-time","cnt":0.101929303},{"name":"cpu-clock","cnt":88.270585},{"name":"cycles:u","cnt":272234507.0},{"name":"task-clock","cnt":88.272966},{"name":"faults","cnt":10843.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.127112157},{"name":"faults","cnt":11573.0},{"name":"cpu-clock","cnt":113.470527},{"name":"task-clock","cnt":113.47249},{"name":"instructions:u","cnt":513313007.0},{"name":"cycles:u","cnt":368841983.0},{"name":"max-rss","cnt":137768.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7612956525.0},{"name":"task-clock","cnt":1896.119172},{"name":"max-rss","cnt":213764.0},{"name":"faults","cnt":28481.0},{"name":"cycles:u","cnt":7102956590.0},{"name":"cpu-clock","cnt":1896.133894},{"name":"wall-time","cnt":0.896812626}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.015428311},{"name":"task-clock","cnt":2087.550533},{"name":"cycles:u","cnt":7798960362.0},{"name":"instructions:u","cnt":8499393732.0},{"name":"cpu-clock","cnt":2087.564677},{"name":"max-rss","cnt":232568.0},{"name":"faults","cnt":32924.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":854254997.0},{"name":"cycles:u","cnt":654987150.0},{"name":"cpu-clock","cnt":204.04093},{"name":"max-rss","cnt":166336.0},{"name":"wall-time","cnt":0.223697976},{"name":"task-clock","cnt":204.065632},{"name":"faults","cnt":17887.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":19733.0},{"name":"cpu-clock","cnt":252.228467},{"name":"task-clock","cnt":252.264895},{"name":"wall-time","cnt":0.238184439},{"name":"max-rss","cnt":187708.0},{"name":"cycles:u","cnt":828064052.0},{"name":"instructions:u","cnt":1061498269.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":2.655074936},{"name":"cpu-clock","cnt":6964.053071},{"name":"instructions:u","cnt":24899225652.0},{"name":"task-clock","cnt":6964.046249},{"name":"cycles:u","cnt":26569930721.0},{"name":"faults","cnt":29273.0},{"name":"max-rss","cnt":212192.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.794565393},{"name":"cycles:u","cnt":28098906209.0},{"name":"instructions:u","cnt":26063887034.0},{"name":"max-rss","cnt":235820.0},{"name":"faults","cnt":34882.0},{"name":"task-clock","cnt":7384.482878},{"name":"cpu-clock","cnt":7384.49456}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":18990.0},{"name":"max-rss","cnt":163236.0},{"name":"cpu-clock","cnt":205.480585},{"name":"cycles:u","cnt":673762969.0},{"name":"wall-time","cnt":0.220670984},{"name":"instructions:u","cnt":859313031.0},{"name":"task-clock","cnt":205.510322}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":10129055985.0},{"name":"faults","cnt":30501.0},{"name":"cycles:u","cnt":9445369318.0},{"name":"wall-time","cnt":1.390091695},{"name":"cpu-clock","cnt":2493.550073},{"name":"task-clock","cnt":2493.575342},{"name":"max-rss","cnt":220724.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":761.548182},{"name":"wall-time","cnt":0.797101163},{"name":"instructions:u","cnt":3496566614.0},{"name":"max-rss","cnt":166456.0},{"name":"faults","cnt":17506.0},{"name":"cpu-clock","cnt":761.547667},{"name":"cycles:u","cnt":2924589576.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":976.946775},{"name":"instructions:u","cnt":4480881419.0},{"name":"faults","cnt":25905.0},{"name":"max-rss","cnt":201972.0},{"name":"wall-time","cnt":1.017129584},{"name":"cycles:u","cnt":3739840362.0},{"name":"task-clock","cnt":976.949782}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":190032.0},{"name":"faults","cnt":24996.0},{"name":"task-clock","cnt":249.950683},{"name":"cpu-clock","cnt":249.95018},{"name":"instructions:u","cnt":1175329187.0},{"name":"cycles:u","cnt":841390115.0},{"name":"wall-time","cnt":0.252321978}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":203608.0},{"name":"faults","cnt":26148.0},{"name":"cycles:u","cnt":990721588.0},{"name":"wall-time","cnt":0.313224763},{"name":"instructions:u","cnt":1362669449.0},{"name":"cpu-clock","cnt":287.051944},{"name":"task-clock","cnt":287.052331}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":105137.0},{"name":"instructions:u","cnt":21180512772.0},{"name":"task-clock","cnt":5378.949624},{"name":"cpu-clock","cnt":5378.930803},{"name":"wall-time","cnt":3.042192834},{"name":"cycles:u","cnt":19612933470.0},{"name":"max-rss","cnt":332056.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":6402.69049},{"name":"cycles:u","cnt":23176291598.0},{"name":"faults","cnt":117655.0},{"name":"task-clock","cnt":6402.647756},{"name":"max-rss","cnt":371984.0},{"name":"instructions:u","cnt":24727985680.0},{"name":"wall-time","cnt":3.57108917}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.600207368},{"name":"cycles:u","cnt":5064107923.0},{"name":"faults","cnt":92652.0},{"name":"task-clock","cnt":1628.80225},{"name":"cpu-clock","cnt":1628.740906},{"name":"instructions:u","cnt":6462518226.0},{"name":"max-rss","cnt":279488.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.619685625},{"name":"cpu-clock","cnt":1662.838299},{"name":"task-clock","cnt":1662.91358},{"name":"max-rss","cnt":290764.0},{"name":"faults","cnt":93517.0},{"name":"cycles:u","cnt":5302243992.0},{"name":"instructions:u","cnt":6640364832.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":7.888543123},{"name":"task-clock","cnt":41024.46675},{"name":"instructions:u","cnt":122559377252.0},{"name":"faults","cnt":183913.0},{"name":"cycles:u","cnt":154140775964.0},{"name":"cpu-clock","cnt":41024.489871},{"name":"max-rss","cnt":637732.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":45696.586348},{"name":"cycles:u","cnt":171276635371.0},{"name":"cpu-clock","cnt":45696.671833},{"name":"wall-time","cnt":8.333442777},{"name":"faults","cnt":189923.0},{"name":"instructions:u","cnt":133290254229.0},{"name":"max-rss","cnt":647208.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":6800321255.0},{"name":"wall-time","cnt":1.284760423},{"name":"faults","cnt":90566.0},{"name":"task-clock","cnt":1335.450478},{"name":"cycles:u","cnt":4345291487.0},{"name":"cpu-clock","cnt":1335.335685},{"name":"max-rss","cnt":303148.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":7261392854.0},{"name":"wall-time","cnt":1.768544762},{"name":"faults","cnt":98857.0},{"name":"task-clock","cnt":2091.074125},{"name":"max-rss","cnt":355776.0},{"name":"cpu-clock","cnt":2090.989084},{"name":"instructions:u","cnt":10304741168.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":44.620937077},{"name":"task-clock","cnt":44573.41932},{"name":"cpu-clock","cnt":44573.489201},{"name":"cycles:u","cnt":174389767216.0},{"name":"max-rss","cnt":2425744.0},{"name":"instructions:u","cnt":190428303471.0},{"name":"faults","cnt":702528.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":246243006133.0},{"name":"cycles:u","cnt":216616402947.0},{"name":"faults","cnt":1194534.0},{"name":"cpu-clock","cnt":56281.468599},{"name":"max-rss","cnt":4010280.0},{"name":"wall-time","cnt":56.318955652},{"name":"task-clock","cnt":56281.448555}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":20.482675929},{"name":"task-clock","cnt":20517.528087},{"name":"cycles:u","cnt":76700400896.0},{"name":"faults","cnt":1075756.0},{"name":"max-rss","cnt":4306112.0},{"name":"cpu-clock","cnt":20517.527931},{"name":"instructions:u","cnt":89312832129.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":20582.792309},{"name":"cpu-clock","cnt":20582.799387},{"name":"instructions:u","cnt":89530782339.0},{"name":"cycles:u","cnt":77020369494.0},{"name":"wall-time","cnt":19.833608686},{"name":"max-rss","cnt":4157164.0},{"name":"faults","cnt":1045345.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"cycles:u","cnt":77886268198.0},{"name":"task-clock","cnt":21169.188999},{"name":"cpu-clock","cnt":21169.200264},{"name":"wall-time","cnt":20.439812664},{"name":"instructions:u","cnt":92389127732.0},{"name":"faults","cnt":1057241.0},{"name":"max-rss","cnt":4195120.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"max-rss","cnt":4824396.0},{"name":"instructions:u","cnt":188862917990.0},{"name":"faults","cnt":1330951.0},{"name":"cycles:u","cnt":169270665897.0},{"name":"task-clock","cnt":44089.409349},{"name":"wall-time","cnt":43.323647892},{"name":"cpu-clock","cnt":44089.424001}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"instructions:u","cnt":773805180561.0},{"name":"max-rss","cnt":5810428.0},{"name":"cpu-clock","cnt":203166.648387},{"name":"faults","cnt":1969695.0},{"name":"wall-time","cnt":92.568334126},{"name":"cycles:u","cnt":768746557695.0},{"name":"task-clock","cnt":203166.481644}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1460846378253.0},{"name":"instructions:u","cnt":1698454978479.0},{"name":"cpu-clock","cnt":386452.726835},{"name":"faults","cnt":3086836.0},{"name":"wall-time","cnt":184.09072064},{"name":"max-rss","cnt":8476568.0},{"name":"task-clock","cnt":386452.195007}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":37.999815005},{"name":"cycles:u","cnt":105625273186.0},{"name":"cpu-clock","cnt":30409.110708},{"name":"max-rss","cnt":9237416.0},{"name":"task-clock","cnt":30410.564664},{"name":"faults","cnt":1596929.0},{"name":"instructions:u","cnt":120605039312.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":1643943.0},{"name":"instructions:u","cnt":139800249854.0},{"name":"task-clock","cnt":35309.692543},{"name":"max-rss","cnt":9662724.0},{"name":"cycles:u","cnt":124752084018.0},{"name":"wall-time","cnt":39.204875396},{"name":"cpu-clock","cnt":35308.032753}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"instructions:u","cnt":127486500209.0},{"name":"max-rss","cnt":8990264.0},{"name":"wall-time","cnt":38.884178639},{"name":"cycles:u","cnt":111939524270.0},{"name":"task-clock","cnt":31995.159503},{"name":"faults","cnt":1586324.0},{"name":"cpu-clock","cnt":31993.706312}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":1302849282493.0},{"name":"wall-time","cnt":155.799235809},{"name":"task-clock","cnt":345910.855042},{"name":"max-rss","cnt":9391988.0},{"name":"instructions:u","cnt":1499739945978.0},{"name":"cpu-clock","cnt":345911.361796},{"name":"faults","cnt":3168040.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"instructions:u","cnt":2247208074671.0},{"name":"task-clock","cnt":788054.743597},{"name":"wall-time","cnt":184.346788141},{"name":"faults","cnt":2572419.0},{"name":"cpu-clock","cnt":788055.21075},{"name":"cycles:u","cnt":2975849638493.0},{"name":"max-rss","cnt":4366836.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1111923.503296},{"name":"faults","cnt":3364772.0},{"name":"cpu-clock","cnt":1111924.83122},{"name":"instructions:u","cnt":3224644129089.0},{"name":"cycles:u","cnt":4182626927006.0},{"name":"max-rss","cnt":5692172.0},{"name":"wall-time","cnt":213.836964886}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":101932210476.0},{"name":"task-clock","cnt":28129.427946},{"name":"wall-time","cnt":26.150557048},{"name":"instructions:u","cnt":114287872676.0},{"name":"cpu-clock","cnt":28128.500693},{"name":"faults","cnt":1379866.0},{"name":"max-rss","cnt":5569576.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":398916.619001},{"name":"max-rss","cnt":6879156.0},{"name":"instructions:u","cnt":1149705959329.0},{"name":"cycles:u","cnt":1496981313705.0},{"name":"task-clock","cnt":398916.658139},{"name":"wall-time","cnt":84.78735351},{"name":"faults","cnt":2107504.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"instructions:u","cnt":421227973479.0},{"name":"wall-time","cnt":68.346457884},{"name":"task-clock","cnt":109200.826676},{"name":"cycles:u","cnt":414103549626.0},{"name":"faults","cnt":1701175.0},{"name":"cpu-clock","cnt":109200.407312},{"name":"max-rss","cnt":6467972.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"faults","cnt":3538934.0},{"name":"task-clock","cnt":1083376.633548},{"name":"cpu-clock","cnt":1083378.831271},{"name":"cycles:u","cnt":4070230970893.0},{"name":"instructions:u","cnt":3117014418054.0},{"name":"wall-time","cnt":196.600348064},{"name":"max-rss","cnt":6707976.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":249180.0},{"name":"instructions:u","cnt":11436131881.0},{"name":"cpu-clock","cnt":2329.141849},{"name":"wall-time","cnt":2.347445845},{"name":"task-clock","cnt":2329.141504},{"name":"cycles:u","cnt":9082356759.0},{"name":"faults","cnt":35116.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":2899.898431},{"name":"max-rss","cnt":317300.0},{"name":"instructions:u","cnt":14413876187.0},{"name":"faults","cnt":51535.0},{"name":"task-clock","cnt":2899.898553},{"name":"wall-time","cnt":2.918496531},{"name":"cycles:u","cnt":11278009398.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":47777.0},{"name":"max-rss","cnt":295476.0},{"name":"wall-time","cnt":0.714059001},{"name":"instructions:u","cnt":3659378429.0},{"name":"task-clock","cnt":727.481273},{"name":"cycles:u","cnt":2633671686.0},{"name":"cpu-clock","cnt":727.480526}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":903.371835},{"name":"wall-time","cnt":0.890311918},{"name":"faults","cnt":50211.0},{"name":"cycles:u","cnt":3325717740.0},{"name":"instructions:u","cnt":4364225712.0},{"name":"cpu-clock","cnt":903.371738},{"name":"max-rss","cnt":312656.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":334833.0},{"name":"instructions:u","cnt":61430727985.0},{"name":"cpu-clock","cnt":14345.880136},{"name":"cycles:u","cnt":53299677741.0},{"name":"wall-time","cnt":10.511181102},{"name":"max-rss","cnt":956756.0},{"name":"task-clock","cnt":14345.855657}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":68725163860.0},{"name":"max-rss","cnt":718356.0},{"name":"wall-time","cnt":9.536016599},{"name":"cpu-clock","cnt":18608.180546},{"name":"faults","cnt":292668.0},{"name":"task-clock","cnt":18608.113124},{"name":"instructions:u","cnt":71423417208.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":500432.0},{"name":"cpu-clock","cnt":3892.392833},{"name":"faults","cnt":221744.0},{"name":"wall-time","cnt":3.808039526},{"name":"task-clock","cnt":3892.528377},{"name":"cycles:u","cnt":12840056820.0},{"name":"instructions:u","cnt":14534906624.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5255.756626},{"name":"wall-time","cnt":4.366867583},{"name":"instructions:u","cnt":19622185789.0},{"name":"cycles:u","cnt":17958896781.0},{"name":"cpu-clock","cnt":5255.632484},{"name":"max-rss","cnt":586160.0},{"name":"faults","cnt":243531.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":290559957068.0},{"name":"max-rss","cnt":776432.0},{"name":"cycles:u","cnt":356443251710.0},{"name":"wall-time","cnt":19.369089801},{"name":"cpu-clock","cnt":94286.020864},{"name":"task-clock","cnt":94285.956092},{"name":"faults","cnt":238477.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":105875.009487},{"name":"faults","cnt":251216.0},{"name":"task-clock","cnt":105874.806052},{"name":"max-rss","cnt":754376.0},{"name":"cycles:u","cnt":399513006691.0},{"name":"wall-time","cnt":21.010286605},{"name":"instructions:u","cnt":316087413794.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":162823.0},{"name":"instructions:u","cnt":9010512270.0},{"name":"max-rss","cnt":526880.0},{"name":"cycles:u","cnt":8024430826.0},{"name":"cpu-clock","cnt":2370.376694},{"name":"task-clock","cnt":2370.56371},{"name":"wall-time","cnt":2.242290681}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":58743.369569},{"name":"faults","cnt":227478.0},{"name":"instructions:u","cnt":174650336332.0},{"name":"cycles:u","cnt":220807253460.0},{"name":"task-clock","cnt":58743.288977},{"name":"wall-time","cnt":11.722741768},{"name":"max-rss","cnt":762412.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":5013.784225},{"name":"instructions:u","cnt":29715340025.0},{"name":"cycles:u","cnt":19776575595.0},{"name":"cpu-clock","cnt":5013.774532},{"name":"max-rss","cnt":256104.0},{"name":"faults","cnt":41531.0},{"name":"wall-time","cnt":5.061342804}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":5.87554009},{"name":"cycles:u","cnt":22937193483.0},{"name":"cpu-clock","cnt":5838.161111},{"name":"faults","cnt":66131.0},{"name":"task-clock","cnt":5838.160258},{"name":"max-rss","cnt":354972.0},{"name":"instructions:u","cnt":33555859150.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":920.677662},{"name":"instructions:u","cnt":4341263487.0},{"name":"faults","cnt":60972.0},{"name":"wall-time","cnt":0.910270554},{"name":"cpu-clock","cnt":920.677885},{"name":"cycles:u","cnt":3361795869.0},{"name":"max-rss","cnt":323460.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":298916.0},{"name":"cycles:u","cnt":21912693183.0},{"name":"wall-time","cnt":5.469897312},{"name":"faults","cnt":49531.0},{"name":"task-clock","cnt":5576.056835},{"name":"cpu-clock","cnt":5576.061261},{"name":"instructions:u","cnt":32546403041.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.446609301},{"name":"cpu-clock","cnt":6578.677643},{"name":"faults","cnt":76071.0},{"name":"max-rss","cnt":404656.0},{"name":"task-clock","cnt":6578.67317},{"name":"instructions:u","cnt":37440786368.0},{"name":"cycles:u","cnt":25730191935.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.081391668},{"name":"max-rss","cnt":392072.0},{"name":"task-clock","cnt":1104.233844},{"name":"faults","cnt":76190.0},{"name":"cycles:u","cnt":3970297918.0},{"name":"instructions:u","cnt":5269933654.0},{"name":"cpu-clock","cnt":1104.217446}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":23314435370.0},{"name":"wall-time","cnt":5.501344585},{"name":"cpu-clock","cnt":5955.255687},{"name":"faults","cnt":51268.0},{"name":"task-clock","cnt":5955.271775},{"name":"max-rss","cnt":305984.0},{"name":"instructions:u","cnt":33453708350.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":38372235272.0},{"name":"max-rss","cnt":413628.0},{"name":"wall-time","cnt":6.427765358},{"name":"faults","cnt":78262.0},{"name":"cpu-clock","cnt":6933.803421},{"name":"task-clock","cnt":6933.832714},{"name":"cycles:u","cnt":27037937205.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3987495187.0},{"name":"task-clock","cnt":1100.890663},{"name":"faults","cnt":72257.0},{"name":"wall-time","cnt":1.077916071},{"name":"instructions:u","cnt":5262507250.0},{"name":"cpu-clock","cnt":1100.87529},{"name":"max-rss","cnt":377580.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":122882216792.0},{"name":"max-rss","cnt":1374900.0},{"name":"faults","cnt":336375.0},{"name":"cycles:u","cnt":107364830943.0},{"name":"cpu-clock","cnt":27514.933916},{"name":"task-clock","cnt":27514.934875},{"name":"wall-time","cnt":27.554365833}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":547286.0},{"name":"task-clock","cnt":34026.595725},{"name":"cycles:u","cnt":132084968737.0},{"name":"wall-time","cnt":34.075165213},{"name":"instructions:u","cnt":154239067029.0},{"name":"max-rss","cnt":2211792.0},{"name":"cpu-clock","cnt":34026.605467}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":10878.185105},{"name":"cpu-clock","cnt":10878.18922},{"name":"wall-time","cnt":10.487036514},{"name":"faults","cnt":508810.0},{"name":"cycles:u","cnt":40046307079.0},{"name":"max-rss","cnt":2124964.0},{"name":"instructions:u","cnt":49137230055.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":20480.825987},{"name":"max-rss","cnt":2333436.0},{"name":"task-clock","cnt":20480.81598},{"name":"wall-time","cnt":20.081542837},{"name":"faults","cnt":567239.0},{"name":"instructions:u","cnt":93803168282.0},{"name":"cycles:u","cnt":79000051183.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":21768.051856},{"name":"wall-time","cnt":21.381723132},{"name":"max-rss","cnt":2515768.0},{"name":"faults","cnt":613723.0},{"name":"cycles:u","cnt":83874047278.0},{"name":"task-clock","cnt":21768.055934},{"name":"instructions:u","cnt":96670228140.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"cycles:u","cnt":281271348352.0},{"name":"task-clock","cnt":73776.937874},{"name":"instructions:u","cnt":298177033961.0},{"name":"max-rss","cnt":2834644.0},{"name":"cpu-clock","cnt":73776.974024},{"name":"wall-time","cnt":42.0318907},{"name":"faults","cnt":755494.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":65.431691875},{"name":"cycles:u","cnt":443763457399.0},{"name":"cpu-clock","cnt":116861.373661},{"name":"faults","cnt":1066177.0},{"name":"instructions:u","cnt":532523502315.0},{"name":"task-clock","cnt":116860.446433},{"name":"max-rss","cnt":3398136.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":14620.130788},{"name":"wall-time","cnt":15.620518904},{"name":"task-clock","cnt":14620.660044},{"name":"max-rss","cnt":3712032.0},{"name":"cycles:u","cnt":52367422083.0},{"name":"faults","cnt":722898.0},{"name":"instructions:u","cnt":63576565074.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":301475297686.0},{"name":"task-clock","cnt":66249.549526},{"name":"max-rss","cnt":3920652.0},{"name":"wall-time","cnt":39.358254149},{"name":"faults","cnt":1010876.0},{"name":"cpu-clock","cnt":66249.455328},{"name":"cycles:u","cnt":247737162755.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":3948904.0},{"name":"faults","cnt":1114808.0},{"name":"task-clock","cnt":92208.104403},{"name":"cycles:u","cnt":346627961394.0},{"name":"cpu-clock","cnt":92208.429307},{"name":"wall-time","cnt":49.650704044},{"name":"instructions:u","cnt":424309508319.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"cycles:u","cnt":977985915183.0},{"name":"cpu-clock","cnt":258401.803507},{"name":"task-clock","cnt":258401.616878},{"name":"wall-time","cnt":61.732922148},{"name":"instructions:u","cnt":799731989631.0},{"name":"faults","cnt":743958.0},{"name":"max-rss","cnt":2398680.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":83.337293085},{"name":"task-clock","cnt":396230.466775},{"name":"max-rss","cnt":3059448.0},{"name":"faults","cnt":1035935.0},{"name":"instructions:u","cnt":1254748208336.0},{"name":"cpu-clock","cnt":396231.024637},{"name":"cycles:u","cnt":1491885061108.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":13090.505275},{"name":"max-rss","cnt":2691868.0},{"name":"task-clock","cnt":13091.165516},{"name":"instructions:u","cnt":55392326103.0},{"name":"wall-time","cnt":12.132436479},{"name":"faults","cnt":658211.0},{"name":"cycles:u","cnt":47035256563.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":62.359374869},{"name":"cpu-clock","cnt":335857.643194},{"name":"cycles:u","cnt":1261418362350.0},{"name":"faults","cnt":1122303.0},{"name":"task-clock","cnt":335857.107457},{"name":"instructions:u","cnt":1059930272060.0},{"name":"max-rss","cnt":3440196.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":1130403212629.0},{"name":"task-clock","cnt":362897.927641},{"name":"faults","cnt":1145081.0},{"name":"max-rss","cnt":3559876.0},{"name":"cycles:u","cnt":1363489630648.0},{"name":"cpu-clock","cnt":362898.83982},{"name":"wall-time","cnt":66.770008246}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3259734909.0},{"name":"cpu-clock","cnt":708.212069},{"name":"task-clock","cnt":708.213498},{"name":"wall-time","cnt":0.726850752},{"name":"cycles:u","cnt":2711662822.0},{"name":"faults","cnt":14847.0},{"name":"max-rss","cnt":151392.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":22503.0},{"name":"instructions:u","cnt":4113760186.0},{"name":"cycles:u","cnt":3392198860.0},{"name":"task-clock","cnt":886.203215},{"name":"wall-time","cnt":0.904630898},{"name":"max-rss","cnt":183048.0},{"name":"cpu-clock","cnt":886.201952}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":284.074249},{"name":"faults","cnt":22226.0},{"name":"max-rss","cnt":168248.0},{"name":"cycles:u","cnt":994687822.0},{"name":"wall-time","cnt":0.28978815},{"name":"task-clock","cnt":284.074395},{"name":"instructions:u","cnt":1358759268.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1177447868.0},{"name":"wall-time","cnt":0.334026237},{"name":"cpu-clock","cnt":331.316516},{"name":"instructions:u","cnt":1569012390.0},{"name":"task-clock","cnt":331.317808},{"name":"faults","cnt":22902.0},{"name":"max-rss","cnt":185448.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":1.488466637},{"name":"instructions:u","cnt":11929148110.0},{"name":"cycles:u","cnt":10864895023.0},{"name":"task-clock","cnt":2874.532666},{"name":"cpu-clock","cnt":2874.519765},{"name":"max-rss","cnt":244704.0},{"name":"faults","cnt":36446.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":3482.657341},{"name":"cycles:u","cnt":13074850557.0},{"name":"max-rss","cnt":287784.0},{"name":"faults","cnt":46862.0},{"name":"instructions:u","cnt":14480281235.0},{"name":"task-clock","cnt":3482.626851},{"name":"wall-time","cnt":1.751807956}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.422894808},{"name":"instructions:u","cnt":1941084052.0},{"name":"task-clock","cnt":436.434069},{"name":"cycles:u","cnt":1457382149.0},{"name":"max-rss","cnt":224632.0},{"name":"faults","cnt":32006.0},{"name":"cpu-clock","cnt":436.408726}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2214380350.0},{"name":"cpu-clock","cnt":646.415542},{"name":"max-rss","cnt":262880.0},{"name":"wall-time","cnt":0.555051348},{"name":"instructions:u","cnt":2722448909.0},{"name":"faults","cnt":38237.0},{"name":"task-clock","cnt":646.472761}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":55469213114.0},{"name":"task-clock","cnt":14705.925499},{"name":"wall-time","cnt":2.965459317},{"name":"faults","cnt":41950.0},{"name":"cpu-clock","cnt":14705.977904},{"name":"max-rss","cnt":264024.0},{"name":"instructions:u","cnt":45009886800.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":304896.0},{"name":"faults","cnt":52852.0},{"name":"wall-time","cnt":3.228706388},{"name":"task-clock","cnt":16154.705503},{"name":"cpu-clock","cnt":16154.735872},{"name":"cycles:u","cnt":60889620627.0},{"name":"instructions:u","cnt":48534728230.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1476404395.0},{"name":"max-rss","cnt":216440.0},{"name":"instructions:u","cnt":1958738528.0},{"name":"wall-time","cnt":0.416023567},{"name":"task-clock","cnt":432.589322},{"name":"cpu-clock","cnt":432.544109},{"name":"faults","cnt":32198.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":52080.0},{"name":"task-clock","cnt":8325.579807},{"name":"cycles:u","cnt":31212652904.0},{"name":"instructions:u","cnt":24619824387.0},{"name":"max-rss","cnt":304488.0},{"name":"cpu-clock","cnt":8325.577114},{"name":"wall-time","cnt":1.670530789}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":345.082923},{"name":"wall-time","cnt":0.363335542},{"name":"cycles:u","cnt":1285466387.0},{"name":"faults","cnt":11265.0},{"name":"max-rss","cnt":146452.0},{"name":"cpu-clock","cnt":345.090365},{"name":"instructions:u","cnt":1764699802.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":451.881192},{"name":"cycles:u","cnt":1681448083.0},{"name":"cpu-clock","cnt":451.878831},{"name":"max-rss","cnt":174016.0},{"name":"wall-time","cnt":0.473060835},{"name":"faults","cnt":17632.0},{"name":"instructions:u","cnt":2274557547.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":137.670199},{"name":"task-clock","cnt":137.672485},{"name":"instructions:u","cnt":638887047.0},{"name":"faults","cnt":16461.0},{"name":"wall-time","cnt":0.146888502},{"name":"cycles:u","cnt":438291347.0},{"name":"max-rss","cnt":149620.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.322055139},{"name":"cpu-clock","cnt":312.803866},{"name":"faults","cnt":19232.0},{"name":"instructions:u","cnt":1455261609.0},{"name":"cycles:u","cnt":1119029681.0},{"name":"task-clock","cnt":312.805234},{"name":"max-rss","cnt":181252.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.304199916},{"name":"cycles:u","cnt":1046955624.0},{"name":"instructions:u","cnt":1386244114.0},{"name":"faults","cnt":19757.0},{"name":"task-clock","cnt":294.679762},{"name":"cpu-clock","cnt":294.678073},{"name":"max-rss","cnt":183168.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cycles:u","cnt":15489442213.0},{"name":"max-rss","cnt":297448.0},{"name":"cpu-clock","cnt":4266.042789},{"name":"wall-time","cnt":2.463679817},{"name":"faults","cnt":90977.0},{"name":"task-clock","cnt":4266.055829},{"name":"instructions:u","cnt":17578850533.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":104135.0},{"name":"max-rss","cnt":340988.0},{"name":"cpu-clock","cnt":5103.950542},{"name":"instructions:u","cnt":20932387135.0},{"name":"wall-time","cnt":2.854686224},{"name":"task-clock","cnt":5103.874242},{"name":"cycles:u","cnt":18501053743.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":85452.0},{"name":"wall-time","cnt":1.334172956},{"name":"instructions:u","cnt":5208836383.0},{"name":"task-clock","cnt":1343.410046},{"name":"cycles:u","cnt":4238409401.0},{"name":"max-rss","cnt":271220.0},{"name":"cpu-clock","cnt":1343.34052}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":4873.868709},{"name":"cpu-clock","cnt":4873.953848},{"name":"wall-time","cnt":2.577287072},{"name":"instructions:u","cnt":19416790150.0},{"name":"max-rss","cnt":361944.0},{"name":"faults","cnt":108636.0},{"name":"cycles:u","cnt":17570626265.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":362084.0},{"name":"cpu-clock","cnt":4808.495984},{"name":"faults","cnt":108499.0},{"name":"wall-time","cnt":2.53719558},{"name":"instructions:u","cnt":19385124195.0},{"name":"task-clock","cnt":4808.426842},{"name":"cycles:u","cnt":17285861332.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cycles:u","cnt":86287194861.0},{"name":"task-clock","cnt":22907.152444},{"name":"wall-time","cnt":4.148351736},{"name":"instructions:u","cnt":68153556564.0},{"name":"cpu-clock","cnt":22907.190568},{"name":"max-rss","cnt":341112.0},{"name":"faults","cnt":79462.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.630242459},{"name":"max-rss","cnt":365248.0},{"name":"cpu-clock","cnt":27136.52362},{"name":"faults","cnt":87308.0},{"name":"cycles:u","cnt":101899667135.0},{"name":"task-clock","cnt":27136.474657},{"name":"instructions:u","cnt":78377060381.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":723.274672},{"name":"cycles:u","cnt":2287878153.0},{"name":"wall-time","cnt":0.701486423},{"name":"instructions:u","cnt":2747464972.0},{"name":"max-rss","cnt":264336.0},{"name":"faults","cnt":61001.0},{"name":"cpu-clock","cnt":723.159023}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":4.290685388},{"name":"faults","cnt":89237.0},{"name":"max-rss","cnt":377652.0},{"name":"cycles:u","cnt":100795340878.0},{"name":"task-clock","cnt":26877.522414},{"name":"cpu-clock","cnt":26877.56903},{"name":"instructions:u","cnt":76799696965.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":18059.399527},{"name":"faults","cnt":86480.0},{"name":"wall-time","cnt":3.373720286},{"name":"max-rss","cnt":371676.0},{"name":"cpu-clock","cnt":18059.432432},{"name":"instructions:u","cnt":53433541764.0},{"name":"cycles:u","cnt":67698420943.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":412256.0},{"name":"cpu-clock","cnt":3227.484902},{"name":"task-clock","cnt":3227.485639},{"name":"instructions:u","cnt":18232506126.0},{"name":"faults","cnt":85500.0},{"name":"wall-time","cnt":3.282883986},{"name":"cycles:u","cnt":12525594967.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":92287.0},{"name":"wall-time","cnt":3.938477354},{"name":"cycles:u","cnt":15151265884.0},{"name":"cpu-clock","cnt":3902.003067},{"name":"instructions:u","cnt":23537131428.0},{"name":"max-rss","cnt":444172.0},{"name":"task-clock","cnt":3902.003549}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":74630.0},{"name":"wall-time","cnt":1.110948396},{"name":"task-clock","cnt":1075.770213},{"name":"max-rss","cnt":360936.0},{"name":"instructions:u","cnt":6919355831.0},{"name":"cpu-clock","cnt":1075.768452},{"name":"cycles:u","cnt":3894641045.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3995.239323},{"name":"max-rss","cnt":504104.0},{"name":"cycles:u","cnt":15449442233.0},{"name":"instructions:u","cnt":23562923461.0},{"name":"wall-time","cnt":4.030536311},{"name":"faults","cnt":107323.0},{"name":"task-clock","cnt":3995.240387}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"task-clock","cnt":3419.359475},{"name":"cycles:u","cnt":12857606533.0},{"name":"cpu-clock","cnt":3419.302294},{"name":"faults","cnt":96119.0},{"name":"wall-time","cnt":3.443030081},{"name":"instructions:u","cnt":18779188436.0},{"name":"max-rss","cnt":439108.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":469704.0},{"name":"faults","cnt":103754.0},{"name":"task-clock","cnt":4037.086994},{"name":"instructions:u","cnt":24126865339.0},{"name":"cycles:u","cnt":15520475772.0},{"name":"wall-time","cnt":4.029086388},{"name":"cpu-clock","cnt":4037.077232}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":83812.0},{"name":"wall-time","cnt":1.184315835},{"name":"task-clock","cnt":1152.842797},{"name":"cycles:u","cnt":4104074927.0},{"name":"max-rss","cnt":384256.0},{"name":"instructions:u","cnt":7332694523.0},{"name":"cpu-clock","cnt":1152.842659}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":532652.0},{"name":"task-clock","cnt":4062.91857},{"name":"instructions:u","cnt":24087853471.0},{"name":"faults","cnt":119054.0},{"name":"cpu-clock","cnt":4062.940162},{"name":"wall-time","cnt":4.055706761},{"name":"cycles:u","cnt":15542177010.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"max-rss","cnt":449472.0},{"name":"wall-time","cnt":3.404202852},{"name":"cpu-clock","cnt":3380.831227},{"name":"faults","cnt":97748.0},{"name":"cycles:u","cnt":12714237805.0},{"name":"instructions:u","cnt":18681623686.0},{"name":"task-clock","cnt":3380.850128}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4007.693448},{"name":"max-rss","cnt":464192.0},{"name":"instructions:u","cnt":24059186793.0},{"name":"cycles:u","cnt":15436244499.0},{"name":"faults","cnt":100460.0},{"name":"cpu-clock","cnt":4007.694681},{"name":"wall-time","cnt":4.002857504}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":384364.0},{"name":"cycles:u","cnt":4171004029.0},{"name":"faults","cnt":82457.0},{"name":"wall-time","cnt":1.211865887},{"name":"cpu-clock","cnt":1178.104993},{"name":"instructions:u","cnt":7234984568.0},{"name":"task-clock","cnt":1178.111544}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":4042.02218},{"name":"wall-time","cnt":4.034626464},{"name":"instructions:u","cnt":24024363560.0},{"name":"cpu-clock","cnt":4042.015317},{"name":"cycles:u","cnt":15477868999.0},{"name":"faults","cnt":115286.0},{"name":"max-rss","cnt":524976.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":115266.0},{"name":"wall-time","cnt":5.24908816},{"name":"task-clock","cnt":5186.132235},{"name":"cycles:u","cnt":20012150601.0},{"name":"max-rss","cnt":536556.0},{"name":"instructions:u","cnt":34569698634.0},{"name":"cpu-clock","cnt":5186.148374}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":6296.654542},{"name":"instructions:u","cnt":44210952637.0},{"name":"cycles:u","cnt":24495487548.0},{"name":"max-rss","cnt":572472.0},{"name":"wall-time","cnt":6.331880649},{"name":"faults","cnt":124384.0},{"name":"task-clock","cnt":6296.655453}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1760.103018},{"name":"max-rss","cnt":567980.0},{"name":"wall-time","cnt":1.788961786},{"name":"cycles:u","cnt":6412162295.0},{"name":"cpu-clock","cnt":1760.102367},{"name":"faults","cnt":126022.0},{"name":"instructions:u","cnt":12360047153.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":22519253390.0},{"name":"faults","cnt":132416.0},{"name":"max-rss","cnt":627112.0},{"name":"wall-time","cnt":5.446550358},{"name":"cpu-clock","cnt":5837.425476},{"name":"instructions:u","cnt":37731543398.0},{"name":"task-clock","cnt":5837.413066}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":142555.0},{"name":"task-clock","cnt":6838.711044},{"name":"instructions:u","cnt":47588108595.0},{"name":"cycles:u","cnt":26268634321.0},{"name":"cpu-clock","cnt":6838.687664},{"name":"max-rss","cnt":668524.0},{"name":"wall-time","cnt":6.393169321}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.847249784},{"name":"cpu-clock","cnt":1825.877659},{"name":"cycles:u","cnt":6576023584.0},{"name":"faults","cnt":127433.0},{"name":"task-clock","cnt":1825.899099},{"name":"max-rss","cnt":608060.0},{"name":"instructions:u","cnt":12504399393.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":42612884515.0},{"name":"cycles:u","cnt":26940985003.0},{"name":"max-rss","cnt":665092.0},{"name":"faults","cnt":142380.0},{"name":"cpu-clock","cnt":7057.802941},{"name":"task-clock","cnt":7057.770797},{"name":"wall-time","cnt":5.814235716}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":8074.022075},{"name":"instructions:u","cnt":52224401534.0},{"name":"faults","cnt":150477.0},{"name":"max-rss","cnt":696116.0},{"name":"cycles:u","cnt":30953627535.0},{"name":"task-clock","cnt":8074.085942},{"name":"wall-time","cnt":6.473602321}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":608972.0},{"name":"instructions:u","cnt":12572953115.0},{"name":"cpu-clock","cnt":1858.074671},{"name":"cycles:u","cnt":6611322290.0},{"name":"task-clock","cnt":1858.082389},{"name":"faults","cnt":128473.0},{"name":"wall-time","cnt":1.862111311}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":3673.472987},{"name":"wall-time","cnt":3.733181523},{"name":"faults","cnt":24958.0},{"name":"instructions:u","cnt":31028874955.0},{"name":"task-clock","cnt":3673.473972},{"name":"max-rss","cnt":186616.0},{"name":"cycles:u","cnt":14518557114.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":34986584402.0},{"name":"cpu-clock","cnt":3962.87938},{"name":"wall-time","cnt":3.999438446},{"name":"max-rss","cnt":191932.0},{"name":"task-clock","cnt":3962.88107},{"name":"faults","cnt":26198.0},{"name":"cycles:u","cnt":15650457572.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":15697.0},{"name":"cpu-clock","cnt":193.90091},{"name":"instructions:u","cnt":1222145805.0},{"name":"task-clock","cnt":193.902344},{"name":"wall-time","cnt":0.228471867},{"name":"cycles:u","cnt":671968012.0},{"name":"max-rss","cnt":146292.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":193508.0},{"name":"cycles:u","cnt":14407824430.0},{"name":"cpu-clock","cnt":3647.460412},{"name":"task-clock","cnt":3647.461142},{"name":"instructions:u","cnt":32293634492.0},{"name":"wall-time","cnt":3.662048136},{"name":"faults","cnt":26392.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":33447.0},{"name":"wall-time","cnt":3.872021186},{"name":"task-clock","cnt":3866.627408},{"name":"cpu-clock","cnt":3866.630572},{"name":"cycles:u","cnt":15224447394.0},{"name":"instructions:u","cnt":32307207003.0},{"name":"max-rss","cnt":227700.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4181.462566},{"name":"max-rss","cnt":231764.0},{"name":"wall-time","cnt":4.158735498},{"name":"instructions:u","cnt":36652937585.0},{"name":"faults","cnt":34056.0},{"name":"cpu-clock","cnt":4181.434138},{"name":"cycles:u","cnt":16448781877.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":257.01109},{"name":"max-rss","cnt":176920.0},{"name":"faults","cnt":21663.0},{"name":"cycles:u","cnt":878955594.0},{"name":"wall-time","cnt":0.288254052},{"name":"task-clock","cnt":257.022489},{"name":"instructions:u","cnt":1704352000.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3804.11995},{"name":"faults","cnt":34451.0},{"name":"instructions:u","cnt":33550716687.0},{"name":"wall-time","cnt":3.816525066},{"name":"cycles:u","cnt":14955906921.0},{"name":"max-rss","cnt":221380.0},{"name":"task-clock","cnt":3804.142063}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":3998.801445},{"name":"cpu-clock","cnt":3998.788998},{"name":"instructions:u","cnt":33497579100.0},{"name":"cycles:u","cnt":15755269975.0},{"name":"max-rss","cnt":231956.0},{"name":"faults","cnt":34172.0},{"name":"wall-time","cnt":4.022751816}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.322763956},{"name":"task-clock","cnt":4341.221281},{"name":"cpu-clock","cnt":4341.227433},{"name":"instructions:u","cnt":37838421080.0},{"name":"faults","cnt":35364.0},{"name":"cycles:u","cnt":17097804112.0},{"name":"max-rss","cnt":237764.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":258.359225},{"name":"max-rss","cnt":175372.0},{"name":"faults","cnt":21262.0},{"name":"wall-time","cnt":0.289890435},{"name":"instructions:u","cnt":1704270418.0},{"name":"cpu-clock","cnt":258.374571},{"name":"cycles:u","cnt":892148980.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3801.45584},{"name":"max-rss","cnt":220296.0},{"name":"wall-time","cnt":3.815235421},{"name":"task-clock","cnt":3801.45941},{"name":"cycles:u","cnt":14971844620.0},{"name":"faults","cnt":34226.0},{"name":"instructions:u","cnt":33557694143.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":69.92418},{"name":"instructions:u","cnt":345903792.0},{"name":"wall-time","cnt":0.08783874},{"name":"cycles:u","cnt":226631037.0},{"name":"faults","cnt":5382.0},{"name":"task-clock","cnt":69.925595},{"name":"max-rss","cnt":100128.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":106240.0},{"name":"cpu-clock","cnt":80.501182},{"name":"instructions:u","cnt":391015332.0},{"name":"cycles:u","cnt":261870176.0},{"name":"task-clock","cnt":80.503452},{"name":"faults","cnt":6710.0},{"name":"wall-time","cnt":0.098613306}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":121614255.0},{"name":"instructions:u","cnt":177368420.0},{"name":"cpu-clock","cnt":43.412838},{"name":"faults","cnt":5860.0},{"name":"wall-time","cnt":0.060671173},{"name":"task-clock","cnt":43.415923},{"name":"max-rss","cnt":87988.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":153507431.0},{"name":"instructions:u","cnt":227764759.0},{"name":"max-rss","cnt":104844.0},{"name":"task-clock","cnt":53.243741},{"name":"faults","cnt":6619.0},{"name":"wall-time","cnt":0.07088637},{"name":"cpu-clock","cnt":53.250439}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":748751376.0},{"name":"faults","cnt":13200.0},{"name":"max-rss","cnt":121604.0},{"name":"task-clock","cnt":165.478284},{"name":"cycles:u","cnt":511929932.0},{"name":"cpu-clock","cnt":165.488738},{"name":"wall-time","cnt":0.165086571}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":129332.0},{"name":"cpu-clock","cnt":183.644283},{"name":"faults","cnt":14922.0},{"name":"wall-time","cnt":0.180317065},{"name":"instructions:u","cnt":822817851.0},{"name":"cycles:u","cnt":575949960.0},{"name":"task-clock","cnt":183.653467}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.133278657},{"name":"task-clock","cnt":120.120949},{"name":"instructions:u","cnt":514504764.0},{"name":"cpu-clock","cnt":120.082918},{"name":"faults","cnt":13518.0},{"name":"max-rss","cnt":110868.0},{"name":"cycles:u","cnt":336520076.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":129096.0},{"name":"wall-time","cnt":0.150866165},{"name":"faults","cnt":14839.0},{"name":"instructions:u","cnt":640062335.0},{"name":"cpu-clock","cnt":154.092609},{"name":"cycles:u","cnt":457717964.0},{"name":"task-clock","cnt":154.1215}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":751647911.0},{"name":"task-clock","cnt":160.083625},{"name":"cycles:u","cnt":503596208.0},{"name":"faults","cnt":12326.0},{"name":"wall-time","cnt":0.16731796},{"name":"cpu-clock","cnt":160.079497},{"name":"max-rss","cnt":120936.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":129196.0},{"name":"faults","cnt":14336.0},{"name":"cycles:u","cnt":580842671.0},{"name":"task-clock","cnt":183.141906},{"name":"cpu-clock","cnt":183.137563},{"name":"instructions:u","cnt":841394202.0},{"name":"wall-time","cnt":0.182253517}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":116.457057},{"name":"instructions:u","cnt":505932671.0},{"name":"cycles:u","cnt":330312340.0},{"name":"max-rss","cnt":110512.0},{"name":"task-clock","cnt":116.462746},{"name":"wall-time","cnt":0.130783135},{"name":"faults","cnt":13226.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":372215983.0},{"name":"task-clock","cnt":127.832136},{"name":"cpu-clock","cnt":127.826246},{"name":"faults","cnt":13644.0},{"name":"max-rss","cnt":117652.0},{"name":"instructions:u","cnt":541504118.0},{"name":"wall-time","cnt":0.139564584}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":209780.0},{"name":"cpu-clock","cnt":487.176185},{"name":"faults","cnt":34666.0},{"name":"cycles:u","cnt":1784863426.0},{"name":"instructions:u","cnt":2454408325.0},{"name":"task-clock","cnt":487.187139},{"name":"wall-time","cnt":0.504959435}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":720.938717},{"name":"cpu-clock","cnt":720.936225},{"name":"instructions:u","cnt":3417615252.0},{"name":"cycles:u","cnt":2607805113.0},{"name":"max-rss","cnt":312284.0},{"name":"faults","cnt":59640.0},{"name":"wall-time","cnt":0.739132177}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.615959423},{"name":"instructions:u","cnt":2918016956.0},{"name":"cycles:u","cnt":2250877652.0},{"name":"cpu-clock","cnt":640.973209},{"name":"faults","cnt":66308.0},{"name":"max-rss","cnt":326808.0},{"name":"task-clock","cnt":640.963642}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2497824110.0},{"name":"faults","cnt":66456.0},{"name":"task-clock","cnt":708.000775},{"name":"wall-time","cnt":0.68330758},{"name":"max-rss","cnt":339068.0},{"name":"cpu-clock","cnt":708.000574},{"name":"instructions:u","cnt":3126545401.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"cycles:u","cnt":2041599337.0},{"name":"task-clock","cnt":576.225976},{"name":"wall-time","cnt":0.583340366},{"name":"faults","cnt":41644.0},{"name":"max-rss","cnt":232284.0},{"name":"instructions:u","cnt":2785206825.0},{"name":"cpu-clock","cnt":576.217614}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":332340.0},{"name":"instructions:u","cnt":3777933956.0},{"name":"cycles:u","cnt":2872678437.0},{"name":"faults","cnt":66876.0},{"name":"wall-time","cnt":0.834483897},{"name":"cpu-clock","cnt":826.24147},{"name":"task-clock","cnt":826.238057}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":344076.0},{"name":"task-clock","cnt":729.041964},{"name":"instructions:u","cnt":3236042078.0},{"name":"wall-time","cnt":0.699713884},{"name":"faults","cnt":73382.0},{"name":"cpu-clock","cnt":729.011533},{"name":"cycles:u","cnt":2490564081.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":73756.0},{"name":"cycles:u","cnt":2761736659.0},{"name":"wall-time","cnt":0.767577051},{"name":"instructions:u","cnt":3472026506.0},{"name":"max-rss","cnt":360220.0},{"name":"task-clock","cnt":798.976001},{"name":"cpu-clock","cnt":798.972031}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":2815843532.0},{"name":"task-clock","cnt":572.634758},{"name":"cpu-clock","cnt":572.640488},{"name":"max-rss","cnt":234000.0},{"name":"cycles:u","cnt":2039373283.0},{"name":"wall-time","cnt":0.575915854},{"name":"faults","cnt":41746.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":67336.0},{"name":"max-rss","cnt":336488.0},{"name":"instructions:u","cnt":3806089738.0},{"name":"task-clock","cnt":823.705025},{"name":"cpu-clock","cnt":823.691378},{"name":"wall-time","cnt":0.825596047},{"name":"cycles:u","cnt":2911277240.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":3235336255.0},{"name":"cpu-clock","cnt":726.856565},{"name":"task-clock","cnt":726.849849},{"name":"wall-time","cnt":0.701819026},{"name":"faults","cnt":73144.0},{"name":"max-rss","cnt":344092.0},{"name":"cycles:u","cnt":2487506987.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":798.912937},{"name":"faults","cnt":73392.0},{"name":"instructions:u","cnt":3442427376.0},{"name":"wall-time","cnt":0.766575478},{"name":"max-rss","cnt":350640.0},{"name":"task-clock","cnt":798.90741},{"name":"cycles:u","cnt":2772171399.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":3306.490437},{"name":"max-rss","cnt":302652.0},{"name":"task-clock","cnt":3306.491346},{"name":"faults","cnt":49012.0},{"name":"cycles:u","cnt":12933323248.0},{"name":"instructions:u","cnt":14145925495.0},{"name":"wall-time","cnt":3.372254802}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":16465165426.0},{"name":"wall-time","cnt":4.300932375},{"name":"instructions:u","cnt":18562093636.0},{"name":"max-rss","cnt":419456.0},{"name":"task-clock","cnt":4229.216057},{"name":"faults","cnt":77961.0},{"name":"cpu-clock","cnt":4229.22712}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":4055755522.0},{"name":"max-rss","cnt":394184.0},{"name":"faults","cnt":73064.0},{"name":"instructions:u","cnt":4916392979.0},{"name":"cpu-clock","cnt":1118.974578},{"name":"wall-time","cnt":1.102970014},{"name":"task-clock","cnt":1118.974212}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":5843410900.0},{"name":"max-rss","cnt":410284.0},{"name":"cycles:u","cnt":4948847903.0},{"name":"cpu-clock","cnt":1341.100113},{"name":"task-clock","cnt":1341.111977},{"name":"wall-time","cnt":1.34473297},{"name":"faults","cnt":75432.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":991624.0},{"name":"instructions:u","cnt":99083274941.0},{"name":"task-clock","cnt":25309.426514},{"name":"cycles:u","cnt":95532231837.0},{"name":"wall-time","cnt":9.823854243},{"name":"faults","cnt":242080.0},{"name":"cpu-clock","cnt":25309.456518}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":11.69713909},{"name":"faults","cnt":258111.0},{"name":"max-rss","cnt":1044464.0},{"name":"task-clock","cnt":28677.859779},{"name":"cycles:u","cnt":108168622047.0},{"name":"instructions:u","cnt":115466097401.0},{"name":"cpu-clock","cnt":28677.93568}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2192.817109},{"name":"task-clock","cnt":2192.941356},{"name":"max-rss","cnt":771368.0},{"name":"faults","cnt":139750.0},{"name":"cycles:u","cnt":7682392502.0},{"name":"instructions:u","cnt":9259214331.0},{"name":"wall-time","cnt":2.124799486}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2499.453781},{"name":"faults","cnt":140600.0},{"name":"instructions:u","cnt":10469020955.0},{"name":"cycles:u","cnt":8783550267.0},{"name":"wall-time","cnt":2.366861169},{"name":"cpu-clock","cnt":2499.291538},{"name":"max-rss","cnt":785456.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":106430.740498},{"name":"cpu-clock","cnt":106430.820228},{"name":"cycles:u","cnt":400977719280.0},{"name":"faults","cnt":343818.0},{"name":"instructions:u","cnt":316003090696.0},{"name":"wall-time","cnt":20.364739899},{"name":"max-rss","cnt":1384864.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":121280.360407},{"name":"faults","cnt":353805.0},{"name":"task-clock","cnt":121280.084519},{"name":"instructions:u","cnt":355852060432.0},{"name":"cycles:u","cnt":456279409375.0},{"name":"wall-time","cnt":22.288191358},{"name":"max-rss","cnt":1271952.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2226.03777},{"name":"wall-time","cnt":2.104245144},{"name":"cycles:u","cnt":7840632978.0},{"name":"max-rss","cnt":773560.0},{"name":"faults","cnt":139162.0},{"name":"task-clock","cnt":2226.152316},{"name":"instructions:u","cnt":9133833311.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":10265.465473},{"name":"cpu-clock","cnt":10265.43139},{"name":"instructions:u","cnt":40798514254.0},{"name":"faults","cnt":201240.0},{"name":"max-rss","cnt":962400.0},{"name":"cycles:u","cnt":38030873875.0},{"name":"wall-time","cnt":4.174135917}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":2.320538757},{"name":"cycles:u","cnt":8884749861.0},{"name":"max-rss","cnt":178012.0},{"name":"instructions:u","cnt":14270805918.0},{"name":"cpu-clock","cnt":2262.091494},{"name":"task-clock","cnt":2262.091304},{"name":"faults","cnt":24052.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":15636461335.0},{"name":"cpu-clock","cnt":2501.147735},{"name":"wall-time","cnt":2.536360296},{"name":"cycles:u","cnt":9816145617.0},{"name":"max-rss","cnt":187880.0},{"name":"task-clock","cnt":2501.15767},{"name":"faults","cnt":26414.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":218.888271},{"name":"task-clock","cnt":218.888769},{"name":"cycles:u","cnt":750620696.0},{"name":"wall-time","cnt":0.243477884},{"name":"max-rss","cnt":155476.0},{"name":"instructions:u","cnt":1213283214.0},{"name":"faults","cnt":19316.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.382925708},{"name":"task-clock","cnt":2325.945752},{"name":"faults","cnt":26503.0},{"name":"instructions:u","cnt":14736781546.0},{"name":"cycles:u","cnt":9120651880.0},{"name":"max-rss","cnt":205640.0},{"name":"cpu-clock","cnt":2325.932659}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2610.514247},{"name":"instructions:u","cnt":16313479545.0},{"name":"cycles:u","cnt":10233642393.0},{"name":"cpu-clock","cnt":2610.493185},{"name":"wall-time","cnt":2.621188697},{"name":"max-rss","cnt":211732.0},{"name":"faults","cnt":28018.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":841645168.0},{"name":"max-rss","cnt":178164.0},{"name":"faults","cnt":22987.0},{"name":"cpu-clock","cnt":246.520693},{"name":"wall-time","cnt":0.270713052},{"name":"task-clock","cnt":246.523591},{"name":"instructions:u","cnt":1384238079.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":199444.0},{"name":"cpu-clock","cnt":2440.17452},{"name":"cycles:u","cnt":9547471133.0},{"name":"wall-time","cnt":2.446477446},{"name":"task-clock","cnt":2440.201676},{"name":"instructions:u","cnt":15328697387.0},{"name":"faults","cnt":27700.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":10676449012.0},{"name":"wall-time","cnt":2.68094985},{"name":"task-clock","cnt":2729.98517},{"name":"faults","cnt":29586.0},{"name":"max-rss","cnt":218168.0},{"name":"instructions:u","cnt":16919319103.0},{"name":"cpu-clock","cnt":2729.980781}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":23122.0},{"name":"cycles:u","cnt":853870085.0},{"name":"instructions:u","cnt":1399079199.0},{"name":"cpu-clock","cnt":252.686554},{"name":"max-rss","cnt":178600.0},{"name":"task-clock","cnt":252.691345},{"name":"wall-time","cnt":0.278586945}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}