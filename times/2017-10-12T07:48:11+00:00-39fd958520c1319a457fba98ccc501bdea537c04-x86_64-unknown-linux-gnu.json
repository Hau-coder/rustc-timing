{"commit":{"sha":"39fd958520c1319a457fba98ccc501bdea537c04","date":"2017-10-12T07:48:11+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19931682211.0},{"name":"cycles:u","cnt":16514171844.0},{"name":"task-clock","cnt":4267.178412},{"name":"cpu-clock","cnt":4336.897146},{"name":"faults","cnt":32864.0},{"name":"max-rss","cnt":201032.0},{"name":"wall-time","cnt":2.115724451}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1198970240.0},{"name":"cycles:u","cnt":810842397.0},{"name":"task-clock","cnt":128.103256},{"name":"cpu-clock","cnt":237.50155},{"name":"faults","cnt":12574.0},{"name":"max-rss","cnt":132340.0},{"name":"wall-time","cnt":0.236127512}]}]}]},"html5ever-2016-08-25":{"Ok":[{"name":"html5ever-2016-08-25","runs":[{"stats":[{"name":"instructions:u","cnt":18007075471.0},{"name":"cycles:u","cnt":12601611575.0},{"name":"task-clock","cnt":3270.776792},{"name":"cpu-clock","cnt":3270.749059},{"name":"faults","cnt":13963.0},{"name":"max-rss","cnt":297980.0},{"name":"wall-time","cnt":2.33583856}]}]}]},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":26243818692.0},{"name":"cycles:u","cnt":22502590949.0},{"name":"task-clock","cnt":5906.561739},{"name":"cpu-clock","cnt":5906.545474},{"name":"faults","cnt":29599.0},{"name":"max-rss","cnt":291076.0},{"name":"wall-time","cnt":2.813230471}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":23714320796.0},{"name":"cycles:u","cnt":13028354206.0},{"name":"task-clock","cnt":3342.615548},{"name":"cpu-clock","cnt":3342.619451},{"name":"faults","cnt":19763.0},{"name":"max-rss","cnt":268768.0},{"name":"wall-time","cnt":3.129397085}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":14430030005.0},{"name":"cycles:u","cnt":8525099547.0},{"name":"task-clock","cnt":2130.391492},{"name":"cpu-clock","cnt":2244.669754},{"name":"faults","cnt":55358.0},{"name":"max-rss","cnt":267948.0},{"name":"wall-time","cnt":2.199427033}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":13773298364.0},{"name":"cycles:u","cnt":11402420674.0},{"name":"task-clock","cnt":2970.791896},{"name":"cpu-clock","cnt":2970.797632},{"name":"faults","cnt":11616.0},{"name":"max-rss","cnt":197480.0},{"name":"wall-time","cnt":1.525875927}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1809164068.0},{"name":"cycles:u","cnt":1168965811.0},{"name":"task-clock","cnt":284.026601},{"name":"cpu-clock","cnt":331.464231},{"name":"faults","cnt":12684.0},{"name":"max-rss","cnt":134296.0},{"name":"wall-time","cnt":0.317433433}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":8361969831.0},{"name":"cycles:u","cnt":4759391098.0},{"name":"task-clock","cnt":1188.161999},{"name":"cpu-clock","cnt":1253.639335},{"name":"faults","cnt":23347.0},{"name":"max-rss","cnt":203228.0},{"name":"wall-time","cnt":1.250605052}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":2760644453.0},{"name":"cycles:u","cnt":1892271427.0},{"name":"task-clock","cnt":476.63632},{"name":"cpu-clock","cnt":519.105584},{"name":"faults","cnt":22302.0},{"name":"max-rss","cnt":159960.0},{"name":"wall-time","cnt":0.518197626}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":7440166456.0},{"name":"cycles:u","cnt":5636234452.0},{"name":"task-clock","cnt":1366.770517},{"name":"cpu-clock","cnt":1491.102055},{"name":"faults","cnt":15915.0},{"name":"max-rss","cnt":167644.0},{"name":"wall-time","cnt":0.975560284}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":51902948852.0},{"name":"cycles:u","cnt":43458465548.0},{"name":"task-clock","cnt":11382.638273},{"name":"cpu-clock","cnt":11382.642736},{"name":"faults","cnt":52670.0},{"name":"max-rss","cnt":367260.0},{"name":"wall-time","cnt":5.251249274}]}]}]},"regex-0.1.80":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling regex-syntax v0.3.9 (file:///tmp/rustc-benchmark-regex-0.1.80.2aqf3cbdwooS/regex-syntax)\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (39fd95852 2017-10-12) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `regex-syntax`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@020-incr-from-scratch] Error 101\\n\\n\\n stdout=find . -name \\\"*.rs\\\" | xargs touch\\nCARGO_INCREMENTAL=1 /home/alex/code/rustc-perf/cache/39fd958520c1319a457fba98ccc501bdea537c04/cargo/bin/cargo rustc  -- -Ztime-passes\\nmakefile:17: recipe for target \\'all@020-incr-from-scratch\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ce326fec1e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x55ce326fec5e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x55ce325f4596 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x55ce325f4658 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x55ce325da510 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x55ce325e2336 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x55ce325e3336 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x55ce325eada8 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:229\n   8:     0x55ce325ef647 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x55ce3287765c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x55ce32870cdb - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7ff0c50f382f - __libc_start_main\n  12:     0x55ce325b2e68 - _start\n  13:                0x0 - <unknown>) })"},"regex-opt-0.1.80":{"Ok":[{"name":"regex-opt-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":74316455519.0},{"name":"cycles:u","cnt":57680641178.0},{"name":"task-clock","cnt":14519.55283},{"name":"cpu-clock","cnt":14519.558075},{"name":"faults","cnt":17800.0},{"name":"max-rss","cnt":247648.0},{"name":"wall-time","cnt":14.526925218}]}]},{"name":"regex-opt-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":92615977014.0},{"name":"cycles:u","cnt":109309806833.0},{"name":"task-clock","cnt":28883.073119},{"name":"cpu-clock","cnt":28883.102973},{"name":"faults","cnt":25911.0},{"name":"max-rss","cnt":356116.0},{"name":"wall-time","cnt":5.857820902}]}]},{"name":"regex-opt-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":14179970821.0},{"name":"cycles:u","cnt":10876731157.0},{"name":"task-clock","cnt":2808.930182},{"name":"cpu-clock","cnt":2808.910462},{"name":"faults","cnt":4290.0},{"name":"max-rss","cnt":336792.0},{"name":"wall-time","cnt":2.367544327}]}]},{"name":"regex-opt-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":7685523353.0},{"name":"cycles:u","cnt":5743149982.0},{"name":"task-clock","cnt":1495.439479},{"name":"cpu-clock","cnt":1495.38558},{"name":"faults","cnt":4127.0},{"name":"max-rss","cnt":319412.0},{"name":"wall-time","cnt":1.472676608}]}]},{"name":"regex-opt-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":7693266301.0},{"name":"cycles:u","cnt":5722737193.0},{"name":"task-clock","cnt":1508.751548},{"name":"cpu-clock","cnt":1508.73509},{"name":"faults","cnt":4174.0},{"name":"max-rss","cnt":321228.0},{"name":"wall-time","cnt":1.47057579}]}]},{"name":"regex-opt-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":14184766653.0},{"name":"cycles:u","cnt":10897447973.0},{"name":"task-clock","cnt":2817.028697},{"name":"cpu-clock","cnt":2817.00473},{"name":"faults","cnt":4244.0},{"name":"max-rss","cnt":335932.0},{"name":"wall-time","cnt":2.361173485}]}]},{"name":"regex-opt-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":8462173537.0},{"name":"cycles:u","cnt":6395488640.0},{"name":"task-clock","cnt":1666.426419},{"name":"cpu-clock","cnt":1666.388358},{"name":"faults","cnt":4153.0},{"name":"max-rss","cnt":326496.0},{"name":"wall-time","cnt":1.631456734}]}]},{"name":"regex-opt-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":63306880946.0},{"name":"cycles:u","cnt":66454501801.0},{"name":"task-clock","cnt":17537.350309},{"name":"cpu-clock","cnt":17537.357076},{"name":"faults","cnt":19441.0},{"name":"max-rss","cnt":389772.0},{"name":"wall-time","cnt":4.4693193430000008}]}]},{"name":"regex-opt-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":64628592007.0},{"name":"cycles:u","cnt":69350495656.0},{"name":"task-clock","cnt":18325.477971},{"name":"cpu-clock","cnt":18325.493908},{"name":"faults","cnt":18586.0},{"name":"max-rss","cnt":389380.0},{"name":"wall-time","cnt":4.567313962}]}]},{"name":"regex-opt-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":7252514448.0},{"name":"cycles:u","cnt":5374029861.0},{"name":"task-clock","cnt":1403.967826},{"name":"cpu-clock","cnt":1403.922697},{"name":"faults","cnt":4075.0},{"name":"max-rss","cnt":316244.0},{"name":"wall-time","cnt":1.427925371}]}]}]},"regex-opt.0.1.30":{"Ok":[{"name":"regex-opt.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":28757917458.0},{"name":"cycles:u","cnt":21552046261.0},{"name":"task-clock","cnt":5439.617181},{"name":"cpu-clock","cnt":5439.627426},{"name":"faults","cnt":11357.0},{"name":"max-rss","cnt":203920.0},{"name":"wall-time","cnt":5.432763466}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12190681791.0},{"name":"cycles:u","cnt":10085607795.0},{"name":"task-clock","cnt":2652.565853},{"name":"cpu-clock","cnt":2652.546076},{"name":"faults","cnt":9840.0},{"name":"max-rss","cnt":227072.0},{"name":"wall-time","cnt":1.307620367}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9198240048.0},{"name":"cycles:u","cnt":7273504093.0},{"name":"task-clock","cnt":1923.064845},{"name":"cpu-clock","cnt":1923.075237},{"name":"faults","cnt":6008.0},{"name":"max-rss","cnt":225856.0},{"name":"wall-time","cnt":1.016858196}]}]}]},"style-2f3bc0de49":{"Ok":[{"name":"style-2f3bc0de49@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":414417238289.0},{"name":"cycles:u","cnt":342941070272.0},{"name":"task-clock","cnt":89779.314829},{"name":"cpu-clock","cnt":89779.351846},{"name":"faults","cnt":409727.0},{"name":"max-rss","cnt":2199320.0},{"name":"wall-time","cnt":48.225704749}]}]}]},"syntex-0.42.2":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling winapi-build v0.1.1\\n   Compiling winapi v0.2.8\\n   Compiling bitflags v0.5.0\\n   Compiling log v0.3.6\\n   Compiling rustc-serialize v0.3.19\\n   Compiling libc v0.2.15\\n   Compiling unicode-xid v0.0.3\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (39fd95852 2017-10-12) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `unicode-xid`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (39fd95852 2017-10-12) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `log`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (39fd95852 2017-10-12) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `rustc-serialize`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@010-incr] Error 101\\n\\n\\n stdout=find . -name \\'*.rs\\' | xargs touch\\nRUSTFLAGS=\\\"-Z incremental=incr\\\" \\\\\\n    /home/alex/code/rustc-perf/cache/39fd958520c1319a457fba98ccc501bdea537c04/cargo/bin/cargo rustc -p syntex_syntax  -- \\\\\\n    -Ztime-passes -Z incremental-info\\nmakefile:9: recipe for target \\'all@010-incr\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ce326fec1e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x55ce326fec5e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x55ce325f4596 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x55ce325f4658 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x55ce325da510 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x55ce325e2336 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x55ce325e3336 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x55ce325eada8 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:229\n   8:     0x55ce325ef647 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x55ce3287765c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x55ce32870cdb - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7ff0c50f382f - __libc_start_main\n  12:     0x55ce325b2e68 - _start\n  13:                0x0 - <unknown>) })"},"tokio-webpush-simple":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling webpush-server v0.1.0 (file:///tmp/rustc-benchmark-tokio-webpush-simple.8SY6GfYC3xpb)\\nwarning: doc comment not used by rustdoc\\n  --> src/main.rs:43:5\\n   |\\n43 | /     error_chain! {\\n44 | |   foreign_links {\\n45 | |    Ws(tungstenite::Error);\\n46 | |    Io(io::Error);\\n47 | |             Json(serde_json::Error);\\n48 | |   }\\n49 | |     }\\n   | |_____^\\n   |\\n   = note: #[warn(unused_doc_comment)] on by default\\n   = note: this error originates in a macro outside of the current crate\\n\\nwarning: doc comment not used by rustdoc\\n  --> src/main.rs:43:5\\n   |\\n43 | /     error_chain! {\\n44 | |   foreign_links {\\n45 | |    Ws(tungstenite::Error);\\n46 | |    Io(io::Error);\\n47 | |             Json(serde_json::Error);\\n48 | |   }\\n49 | |     }\\n   | |_____^\\n   |\\n   = note: this error originates in a macro outside of the current crate\\n\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (39fd95852 2017-10-12) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `webpush-server`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@010-incr] Error 101\\n\\n\\n stdout=find . -name \\'*.rs\\' | xargs touch\\nCARGO_INCREMENTAL=1 \\\\\\n    /home/alex/code/rustc-perf/cache/39fd958520c1319a457fba98ccc501bdea537c04/cargo/bin/cargo rustc  -- \\\\\\n    -Ztime-passes -Z incremental-info\\n9322739111;;instructions:u;1511253333;100.00;1.59;insn per cycle\\n5874124447;;cycles:u;1511253333;100.00;3.887;GHz\\n1511.235220;;task-clock;1511235220;100.00;1.002;CPUs utilized\\n1511.222531;;cpu-clock;1511235220;100.00;1.002;CPUs utilized\\n4171;;faults;1511235220;100.00;0.003;M/sec\\nmakefile:7: recipe for target \\'all@010-incr\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ce326fec1e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x55ce326fec5e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x55ce325f4596 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x55ce325f4658 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x55ce325da510 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x55ce325e2336 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x55ce325e3336 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x55ce325eada8 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:229\n   8:     0x55ce325ef647 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x55ce3287765c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x55ce32870cdb - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7ff0c50f382f - __libc_start_main\n  12:     0x55ce325b2e68 - _start\n  13:                0x0 - <unknown>) })"},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":24373160038.0},{"name":"cycles:u","cnt":16958668408.0},{"name":"task-clock","cnt":4254.031609},{"name":"cpu-clock","cnt":4334.607637},{"name":"faults","cnt":29067.0},{"name":"max-rss","cnt":391704.0},{"name":"wall-time","cnt":4.282546003}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}