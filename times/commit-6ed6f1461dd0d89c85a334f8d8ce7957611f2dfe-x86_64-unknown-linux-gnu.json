{"commit":{"sha":"6ed6f1461dd0d89c85a334f8d8ce7957611f2dfe","date":"2019-04-17T13:26:29+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":7.195102499},{"name":"task-clock","cnt":7153.894882},{"name":"instructions:u","cnt":33908553785.0},{"name":"max-rss","cnt":425400.0},{"name":"cpu-clock","cnt":7153.88777},{"name":"cycles:u","cnt":28027110110.0},{"name":"faults","cnt":79684.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":8652.070994},{"name":"instructions:u","cnt":41437476022.0},{"name":"cycles:u","cnt":33886287471.0},{"name":"wall-time","cnt":8.670179354},{"name":"cpu-clock","cnt":8652.074319},{"name":"faults","cnt":117916.0},{"name":"max-rss","cnt":576228.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.3714245},{"name":"task-clock","cnt":2443.771133},{"name":"cpu-clock","cnt":2443.770345},{"name":"faults","cnt":109484.0},{"name":"max-rss","cnt":538484.0},{"name":"cycles:u","cnt":9185371693.0},{"name":"instructions:u","cnt":11708181536.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":10474608997.0},{"name":"cpu-clock","cnt":2800.709181},{"name":"task-clock","cnt":2800.708876},{"name":"instructions:u","cnt":13203262938.0},{"name":"max-rss","cnt":552392.0},{"name":"faults","cnt":111155.0},{"name":"wall-time","cnt":2.737283071}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":409227.0},{"name":"cycles:u","cnt":173447325827.0},{"name":"cpu-clock","cnt":45889.670359},{"name":"instructions:u","cnt":180840390831.0},{"name":"wall-time","cnt":18.925320846},{"name":"max-rss","cnt":1610224.0},{"name":"task-clock","cnt":45889.630103}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":52142.973295},{"name":"faults","cnt":419657.0},{"name":"task-clock","cnt":52142.869969},{"name":"max-rss","cnt":1504172.0},{"name":"instructions:u","cnt":206544672844.0},{"name":"wall-time","cnt":21.947877092},{"name":"cycles:u","cnt":196938735940.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":1160296.0},{"name":"task-clock","cnt":4340.4508},{"name":"faults","cnt":214305.0},{"name":"wall-time","cnt":4.238373664},{"name":"cpu-clock","cnt":4340.245941},{"name":"cycles:u","cnt":15658898105.0},{"name":"instructions:u","cnt":19033300625.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":14769.936981},{"name":"instructions:u","cnt":59541702223.0},{"name":"cycles:u","cnt":54922069055.0},{"name":"wall-time","cnt":7.733507997},{"name":"faults","cnt":319012.0},{"name":"max-rss","cnt":1506676.0},{"name":"cpu-clock","cnt":14769.839576}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":38.399098614},{"name":"task-clock","cnt":213921.515551},{"name":"cpu-clock","cnt":213921.678598},{"name":"max-rss","cnt":1339180.0},{"name":"cycles:u","cnt":807479826912.0},{"name":"faults","cnt":436127.0},{"name":"instructions:u","cnt":630647707739.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":42.995732045},{"name":"faults","cnt":445546.0},{"name":"instructions:u","cnt":752650173467.0},{"name":"max-rss","cnt":1329188.0},{"name":"cycles:u","cnt":970580609410.0},{"name":"cpu-clock","cnt":257455.586917},{"name":"task-clock","cnt":257455.052484}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":14850960430.0},{"name":"cpu-clock","cnt":3595.172006},{"name":"faults","cnt":215695.0},{"name":"cycles:u","cnt":12854130319.0},{"name":"max-rss","cnt":1007820.0},{"name":"wall-time","cnt":3.294790088},{"name":"task-clock","cnt":3595.386364}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":152820.671331},{"name":"task-clock","cnt":152820.354201},{"name":"faults","cnt":384260.0},{"name":"instructions:u","cnt":456311204735.0},{"name":"wall-time","cnt":24.48221272},{"name":"max-rss","cnt":1343056.0},{"name":"cycles:u","cnt":575332785413.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":255684.0},{"name":"faults","cnt":46000.0},{"name":"wall-time","cnt":3.696158232},{"name":"task-clock","cnt":3658.289449},{"name":"instructions:u","cnt":18754882073.0},{"name":"cycles:u","cnt":14356878124.0},{"name":"cpu-clock","cnt":3658.279513}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":24343226690.0},{"name":"wall-time","cnt":6.283266174},{"name":"cpu-clock","cnt":6247.717753},{"name":"faults","cnt":96586.0},{"name":"instructions:u","cnt":39440308382.0},{"name":"max-rss","cnt":446532.0},{"name":"task-clock","cnt":6247.708541}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":6277920498.0},{"name":"instructions:u","cnt":10213396530.0},{"name":"cpu-clock","cnt":1805.173781},{"name":"max-rss","cnt":811532.0},{"name":"task-clock","cnt":1805.163646},{"name":"faults","cnt":181931.0},{"name":"wall-time","cnt":1.801196702}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":183910.0},{"name":"task-clock","cnt":2595.279127},{"name":"max-rss","cnt":825924.0},{"name":"instructions:u","cnt":13980880328.0},{"name":"cpu-clock","cnt":2595.290006},{"name":"wall-time","cnt":2.599300332},{"name":"cycles:u","cnt":9448772014.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":982684.0},{"name":"wall-time","cnt":9.252797103},{"name":"faults","cnt":245493.0},{"name":"cycles:u","cnt":58799827228.0},{"name":"instructions:u","cnt":71470627400.0},{"name":"task-clock","cnt":15405.031185},{"name":"cpu-clock","cnt":15405.036861}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":20647.384472},{"name":"cycles:u","cnt":78730896341.0},{"name":"max-rss","cnt":965644.0},{"name":"wall-time","cnt":11.852516815},{"name":"faults","cnt":236118.0},{"name":"instructions:u","cnt":96382556470.0},{"name":"cpu-clock","cnt":20647.425473}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12990343665.0},{"name":"cycles:u","cnt":8586688049.0},{"name":"wall-time","cnt":2.423955218},{"name":"faults","cnt":222429.0},{"name":"task-clock","cnt":2471.329756},{"name":"cpu-clock","cnt":2471.238224},{"name":"max-rss","cnt":1006824.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":42585622482.0},{"name":"instructions:u","cnt":51163703955.0},{"name":"cpu-clock","cnt":11361.328434},{"name":"max-rss","cnt":1422512.0},{"name":"faults","cnt":341619.0},{"name":"task-clock","cnt":11361.365135},{"name":"wall-time","cnt":7.556526765}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":483140.0},{"name":"instructions:u","cnt":202840557743.0},{"name":"faults","cnt":146113.0},{"name":"cpu-clock","cnt":54200.767476},{"name":"wall-time","cnt":25.717036231},{"name":"task-clock","cnt":54200.727357},{"name":"cycles:u","cnt":208383748361.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":657576.0},{"name":"faults","cnt":202133.0},{"name":"cpu-clock","cnt":62725.166332},{"name":"cycles:u","cnt":240051418293.0},{"name":"wall-time","cnt":26.809455205},{"name":"instructions:u","cnt":232510572815.0},{"name":"task-clock","cnt":62725.018031}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12811926963.0},{"name":"wall-time","cnt":2.331198467},{"name":"max-rss","cnt":915064.0},{"name":"task-clock","cnt":2381.685548},{"name":"cpu-clock","cnt":2381.610847},{"name":"cycles:u","cnt":8407379470.0},{"name":"faults","cnt":205306.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1171352.0},{"name":"faults","cnt":275793.0},{"name":"cycles:u","cnt":130397915306.0},{"name":"instructions:u","cnt":126343152381.0},{"name":"task-clock","cnt":34401.592344},{"name":"cpu-clock","cnt":34401.636957},{"name":"wall-time","cnt":13.359366243}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":5395019441.0},{"name":"max-rss","cnt":186204.0},{"name":"faults","cnt":27428.0},{"name":"wall-time","cnt":0.793785072},{"name":"cycles:u","cnt":2951709759.0},{"name":"cpu-clock","cnt":775.116773},{"name":"task-clock","cnt":775.11729}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.004042148},{"name":"instructions:u","cnt":7129378933.0},{"name":"task-clock","cnt":985.986512},{"name":"max-rss","cnt":192460.0},{"name":"faults","cnt":28940.0},{"name":"cpu-clock","cnt":985.994332},{"name":"cycles:u","cnt":3775317282.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":160000.0},{"name":"cycles:u","cnt":923450945.0},{"name":"cpu-clock","cnt":265.809124},{"name":"faults","cnt":23486.0},{"name":"instructions:u","cnt":1731905886.0},{"name":"task-clock","cnt":265.810175},{"name":"wall-time","cnt":0.302450672}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1008850964.0},{"name":"wall-time","cnt":0.306101703},{"name":"max-rss","cnt":175916.0},{"name":"instructions:u","cnt":1883531163.0},{"name":"task-clock","cnt":288.193766},{"name":"cpu-clock","cnt":288.191692},{"name":"faults","cnt":23780.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":31588.0},{"name":"cpu-clock","cnt":999.338191},{"name":"task-clock","cnt":999.339865},{"name":"cycles:u","cnt":3783259548.0},{"name":"instructions:u","cnt":7153655764.0},{"name":"wall-time","cnt":1.016991269},{"name":"max-rss","cnt":204624.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"wall-time","cnt":1.159021371},{"name":"cycles:u","cnt":4149782777.0},{"name":"faults","cnt":56679.0},{"name":"max-rss","cnt":279428.0},{"name":"task-clock","cnt":1136.313791},{"name":"cpu-clock","cnt":1136.313798},{"name":"instructions:u","cnt":7240615003.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":4960353727.0},{"name":"instructions:u","cnt":8967309641.0},{"name":"task-clock","cnt":1342.229639},{"name":"faults","cnt":57374.0},{"name":"max-rss","cnt":283832.0},{"name":"cpu-clock","cnt":1342.221862},{"name":"wall-time","cnt":1.319698358}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.415433276},{"name":"cycles:u","cnt":1227891171.0},{"name":"instructions:u","cnt":2232552497.0},{"name":"faults","cnt":33012.0},{"name":"max-rss","cnt":178272.0},{"name":"task-clock","cnt":382.77593},{"name":"cpu-clock","cnt":382.756128}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":3797851132.0},{"name":"wall-time","cnt":0.585550506},{"name":"task-clock","cnt":653.610114},{"name":"cpu-clock","cnt":653.594537},{"name":"faults","cnt":55093.0},{"name":"cycles:u","cnt":2206946115.0},{"name":"max-rss","cnt":276280.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1352.258186},{"name":"cycles:u","cnt":4940656762.0},{"name":"wall-time","cnt":1.302392114},{"name":"max-rss","cnt":290652.0},{"name":"instructions:u","cnt":8974792806.0},{"name":"faults","cnt":61675.0},{"name":"cpu-clock","cnt":1352.253268}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cycles:u","cnt":3463445065.0},{"name":"instructions:u","cnt":6189093376.0},{"name":"max-rss","cnt":210556.0},{"name":"wall-time","cnt":0.950559224},{"name":"task-clock","cnt":927.660946},{"name":"faults","cnt":35665.0},{"name":"cpu-clock","cnt":927.672155}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":217144.0},{"name":"cpu-clock","cnt":1140.074491},{"name":"instructions:u","cnt":7891288578.0},{"name":"cycles:u","cnt":4290304061.0},{"name":"task-clock","cnt":1140.077207},{"name":"wall-time","cnt":1.141514912},{"name":"faults","cnt":37314.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":335.860757},{"name":"cpu-clock","cnt":335.857315},{"name":"max-rss","cnt":178252.0},{"name":"instructions:u","cnt":2041883770.0},{"name":"cycles:u","cnt":1115440558.0},{"name":"wall-time","cnt":0.366778948},{"name":"faults","cnt":30277.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":437.594487},{"name":"task-clock","cnt":437.598362},{"name":"max-rss","cnt":201128.0},{"name":"instructions:u","cnt":2639646577.0},{"name":"wall-time","cnt":0.429105098},{"name":"cycles:u","cnt":1503172242.0},{"name":"faults","cnt":32546.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":4303420752.0},{"name":"max-rss","cnt":220688.0},{"name":"wall-time","cnt":1.139940096},{"name":"instructions:u","cnt":7879687955.0},{"name":"faults","cnt":40536.0},{"name":"cpu-clock","cnt":1148.187734},{"name":"task-clock","cnt":1148.182001}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":511704.0},{"name":"cycles:u","cnt":23498660348.0},{"name":"instructions:u","cnt":30050591817.0},{"name":"faults","cnt":107193.0},{"name":"wall-time","cnt":6.058724481},{"name":"task-clock","cnt":6019.423654},{"name":"cpu-clock","cnt":6019.440959}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7202.636165},{"name":"cycles:u","cnt":27939759802.0},{"name":"faults","cnt":128650.0},{"name":"instructions:u","cnt":36394432062.0},{"name":"cpu-clock","cnt":7202.638787},{"name":"wall-time","cnt":7.240874866},{"name":"max-rss","cnt":598136.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":86840.0},{"name":"task-clock","cnt":1495.401359},{"name":"instructions:u","cnt":7002911235.0},{"name":"cpu-clock","cnt":1495.39748},{"name":"wall-time","cnt":1.47159851},{"name":"max-rss","cnt":436212.0},{"name":"cycles:u","cnt":5422982556.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":15639.10206},{"name":"instructions:u","cnt":69192291273.0},{"name":"cycles:u","cnt":59733899359.0},{"name":"max-rss","cnt":768964.0},{"name":"faults","cnt":173543.0},{"name":"task-clock","cnt":15639.09283},{"name":"wall-time","cnt":9.191162559}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":18792.427215},{"name":"instructions:u","cnt":85833457127.0},{"name":"wall-time","cnt":11.350482362},{"name":"max-rss","cnt":825940.0},{"name":"faults","cnt":188930.0},{"name":"task-clock","cnt":18792.300798},{"name":"cycles:u","cnt":71581662713.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12014911113.0},{"name":"cpu-clock","cnt":2453.81285},{"name":"task-clock","cnt":2453.925893},{"name":"max-rss","cnt":735364.0},{"name":"faults","cnt":150708.0},{"name":"cycles:u","cnt":8670599101.0},{"name":"wall-time","cnt":2.366792174}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":226585176671.0},{"name":"wall-time","cnt":20.185910184},{"name":"cpu-clock","cnt":70346.716379},{"name":"max-rss","cnt":1175796.0},{"name":"cycles:u","cnt":266785591271.0},{"name":"faults","cnt":281433.0},{"name":"task-clock","cnt":70346.675807}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":21.034766183},{"name":"faults","cnt":291053.0},{"name":"max-rss","cnt":1079008.0},{"name":"cycles:u","cnt":317543120939.0},{"name":"task-clock","cnt":84149.273349},{"name":"cpu-clock","cnt":84149.496545},{"name":"instructions:u","cnt":261732791516.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":145897.0},{"name":"wall-time","cnt":2.308843659},{"name":"instructions:u","cnt":11875253073.0},{"name":"cycles:u","cnt":8566328008.0},{"name":"task-clock","cnt":2431.346682},{"name":"cpu-clock","cnt":2431.202852},{"name":"max-rss","cnt":731864.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":6280.872018},{"name":"instructions:u","cnt":32300787176.0},{"name":"wall-time","cnt":6.313045708},{"name":"task-clock","cnt":6280.852776},{"name":"faults","cnt":65393.0},{"name":"max-rss","cnt":378856.0},{"name":"cycles:u","cnt":24690229654.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":539200.0},{"name":"task-clock","cnt":7615.318164},{"name":"wall-time","cnt":7.664314654},{"name":"cpu-clock","cnt":7615.320552},{"name":"cycles:u","cnt":29790857492.0},{"name":"faults","cnt":105305.0},{"name":"instructions:u","cnt":38676882124.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":528540.0},{"name":"cycles:u","cnt":7040102003.0},{"name":"wall-time","cnt":1.853511439},{"name":"cpu-clock","cnt":1927.655072},{"name":"task-clock","cnt":1927.657938},{"name":"faults","cnt":103940.0},{"name":"instructions:u","cnt":9024205917.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2134.518468},{"name":"instructions:u","cnt":9987569069.0},{"name":"cpu-clock","cnt":2134.516545},{"name":"faults","cnt":104655.0},{"name":"max-rss","cnt":539356.0},{"name":"wall-time","cnt":2.058308305},{"name":"cycles:u","cnt":7943816943.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":116264689626.0},{"name":"cycles:u","cnt":108119442506.0},{"name":"wall-time","cnt":12.843097652},{"name":"faults","cnt":264590.0},{"name":"cpu-clock","cnt":28569.984724},{"name":"task-clock","cnt":28569.974475},{"name":"max-rss","cnt":1179608.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":268424.0},{"name":"task-clock","cnt":31345.221656},{"name":"cycles:u","cnt":118657779450.0},{"name":"max-rss","cnt":1200084.0},{"name":"instructions:u","cnt":130525579810.0},{"name":"wall-time","cnt":14.936343202},{"name":"cpu-clock","cnt":31345.370116}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":916804.0},{"name":"task-clock","cnt":3158.516714},{"name":"faults","cnt":162726.0},{"name":"cpu-clock","cnt":3158.296692},{"name":"instructions:u","cnt":14043307377.0},{"name":"wall-time","cnt":2.99154231},{"name":"cycles:u","cnt":11339871788.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4364.821001},{"name":"task-clock","cnt":4364.992024},{"name":"wall-time","cnt":3.736115143},{"name":"instructions:u","cnt":19288613514.0},{"name":"faults","cnt":181703.0},{"name":"max-rss","cnt":992928.0},{"name":"cycles:u","cnt":15970873454.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":436237501664.0},{"name":"faults","cnt":236282.0},{"name":"task-clock","cnt":115309.180203},{"name":"instructions:u","cnt":350882806570.0},{"name":"wall-time","cnt":23.675754894},{"name":"max-rss","cnt":957396.0},{"name":"cpu-clock","cnt":115309.337059}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":395163019681.0},{"name":"task-clock","cnt":131578.305001},{"name":"max-rss","cnt":1069728.0},{"name":"cycles:u","cnt":496632218578.0},{"name":"wall-time","cnt":25.546060524},{"name":"faults","cnt":269803.0},{"name":"cpu-clock","cnt":131578.546369}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.948815938},{"name":"cpu-clock","cnt":3170.77665},{"name":"max-rss","cnt":809524.0},{"name":"instructions:u","cnt":13709697640.0},{"name":"cycles:u","cnt":11482942138.0},{"name":"task-clock","cnt":3170.994789},{"name":"faults","cnt":162924.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":954936.0},{"name":"cpu-clock","cnt":15556.120696},{"name":"task-clock","cnt":15556.225184},{"name":"cycles:u","cnt":58504141022.0},{"name":"wall-time","cnt":6.138877733},{"name":"instructions:u","cnt":58680511799.0},{"name":"faults","cnt":202193.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":68176658214.0},{"name":"cpu-clock","cnt":7844.994235},{"name":"max-rss","cnt":254784.0},{"name":"cycles:u","cnt":31090451011.0},{"name":"task-clock","cnt":7844.996547},{"name":"wall-time","cnt":7.869370225},{"name":"faults","cnt":42948.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":9914.136158},{"name":"faults","cnt":107755.0},{"name":"wall-time","cnt":9.949738936},{"name":"cpu-clock","cnt":9914.133311},{"name":"instructions:u","cnt":91567653063.0},{"name":"max-rss","cnt":504756.0},{"name":"cycles:u","cnt":38860673333.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":554324.0},{"name":"wall-time","cnt":0.897452999},{"name":"cycles:u","cnt":2598749030.0},{"name":"faults","cnt":121445.0},{"name":"cpu-clock","cnt":864.600696},{"name":"instructions:u","cnt":5652624468.0},{"name":"task-clock","cnt":864.602719}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":31125702871.0},{"name":"cpu-clock","cnt":7854.935068},{"name":"task-clock","cnt":7854.927471},{"name":"instructions:u","cnt":67998445234.0},{"name":"faults","cnt":43270.0},{"name":"wall-time","cnt":7.88764017},{"name":"max-rss","cnt":255196.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":10.838632566},{"name":"cycles:u","cnt":42108187453.0},{"name":"max-rss","cnt":764048.0},{"name":"instructions:u","cnt":100866701103.0},{"name":"cpu-clock","cnt":10805.921337},{"name":"faults","cnt":176526.0},{"name":"task-clock","cnt":10805.89907}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1349.190487},{"name":"max-rss","cnt":980008.0},{"name":"instructions:u","cnt":8397474503.0},{"name":"task-clock","cnt":1349.184392},{"name":"wall-time","cnt":1.38239648},{"name":"cycles:u","cnt":3976202149.0},{"name":"faults","cnt":233200.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":6419.292559},{"name":"cycles:u","cnt":25396846777.0},{"name":"faults","cnt":43401.0},{"name":"max-rss","cnt":254120.0},{"name":"task-clock","cnt":6419.306322},{"name":"wall-time","cnt":6.45588478},{"name":"instructions:u","cnt":55162263658.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":87266233329.0},{"name":"cpu-clock","cnt":9295.843579},{"name":"cycles:u","cnt":35988509723.0},{"name":"max-rss","cnt":738392.0},{"name":"wall-time","cnt":9.326400552},{"name":"faults","cnt":188919.0},{"name":"task-clock","cnt":9295.836574}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":979460.0},{"name":"cycles:u","cnt":3974901717.0},{"name":"task-clock","cnt":1346.693836},{"name":"wall-time","cnt":1.382027836},{"name":"cpu-clock","cnt":1346.692128},{"name":"faults","cnt":233143.0},{"name":"instructions:u","cnt":8396155217.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":4208557989.0},{"name":"faults","cnt":54896.0},{"name":"instructions:u","cnt":7001197942.0},{"name":"task-clock","cnt":1114.618092},{"name":"wall-time","cnt":1.167703083},{"name":"cpu-clock","cnt":1114.617976},{"name":"max-rss","cnt":299732.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.259559907},{"name":"max-rss","cnt":296212.0},{"name":"task-clock","cnt":1223.995947},{"name":"faults","cnt":53817.0},{"name":"instructions:u","cnt":7971511952.0},{"name":"cpu-clock","cnt":1223.984791},{"name":"cycles:u","cnt":4618655671.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":364.984623},{"name":"task-clock","cnt":364.975926},{"name":"max-rss","cnt":199876.0},{"name":"cycles:u","cnt":1298930345.0},{"name":"wall-time","cnt":0.400544378},{"name":"faults","cnt":33594.0},{"name":"instructions:u","cnt":2511928341.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":296456.0},{"name":"instructions:u","cnt":7985897754.0},{"name":"wall-time","cnt":1.225215398},{"name":"faults","cnt":53225.0},{"name":"task-clock","cnt":1207.521328},{"name":"cpu-clock","cnt":1207.520333},{"name":"cycles:u","cnt":4580138967.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":292328.0},{"name":"cycles:u","cnt":4555777510.0},{"name":"faults","cnt":52105.0},{"name":"task-clock","cnt":1212.430755},{"name":"instructions:u","cnt":7991458793.0},{"name":"wall-time","cnt":1.249811912},{"name":"cpu-clock","cnt":1212.429643}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"max-rss","cnt":384408.0},{"name":"cycles:u","cnt":6321714656.0},{"name":"cpu-clock","cnt":1702.983884},{"name":"faults","cnt":81880.0},{"name":"instructions:u","cnt":10137612077.0},{"name":"wall-time","cnt":1.709231498},{"name":"task-clock","cnt":1702.983943}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1851.124825},{"name":"instructions:u","cnt":11540650497.0},{"name":"cpu-clock","cnt":1851.115515},{"name":"wall-time","cnt":1.831111967},{"name":"cycles:u","cnt":6900468995.0},{"name":"faults","cnt":82399.0},{"name":"max-rss","cnt":389420.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":499.974933},{"name":"faults","cnt":42852.0},{"name":"wall-time","cnt":0.530665387},{"name":"instructions:u","cnt":3205303049.0},{"name":"max-rss","cnt":225444.0},{"name":"cycles:u","cnt":1708883872.0},{"name":"cpu-clock","cnt":499.944853}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":11562701024.0},{"name":"task-clock","cnt":1844.732521},{"name":"max-rss","cnt":389292.0},{"name":"cycles:u","cnt":6863367971.0},{"name":"wall-time","cnt":1.800138437},{"name":"cpu-clock","cnt":1844.732811},{"name":"faults","cnt":82531.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1846.239718},{"name":"cpu-clock","cnt":1846.280973},{"name":"cycles:u","cnt":6870241771.0},{"name":"faults","cnt":84501.0},{"name":"instructions:u","cnt":11546132832.0},{"name":"max-rss","cnt":394912.0},{"name":"wall-time","cnt":1.819808757}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":3143.871274},{"name":"cycles:u","cnt":11872402680.0},{"name":"task-clock","cnt":3143.867087},{"name":"instructions:u","cnt":17191944696.0},{"name":"max-rss","cnt":595364.0},{"name":"wall-time","cnt":3.137881075},{"name":"faults","cnt":140643.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3324.107134},{"name":"instructions:u","cnt":18597249678.0},{"name":"faults","cnt":145570.0},{"name":"cycles:u","cnt":12467791628.0},{"name":"max-rss","cnt":608752.0},{"name":"wall-time","cnt":3.289792433},{"name":"cpu-clock","cnt":3324.076264}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.507426283},{"name":"instructions:u","cnt":3156108437.0},{"name":"cpu-clock","cnt":477.622424},{"name":"cycles:u","cnt":1629526536.0},{"name":"max-rss","cnt":225440.0},{"name":"task-clock","cnt":477.621357},{"name":"faults","cnt":41997.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":601684.0},{"name":"task-clock","cnt":3276.317725},{"name":"instructions:u","cnt":18516795345.0},{"name":"wall-time","cnt":3.224469109},{"name":"cpu-clock","cnt":3276.330464},{"name":"faults","cnt":142113.0},{"name":"cycles:u","cnt":12369987905.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":12366617433.0},{"name":"task-clock","cnt":3271.769507},{"name":"max-rss","cnt":599408.0},{"name":"faults","cnt":141865.0},{"name":"wall-time","cnt":3.234170456},{"name":"cpu-clock","cnt":3271.742906},{"name":"instructions:u","cnt":18539301646.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":5824.0},{"name":"cycles:u","cnt":271744435.0},{"name":"task-clock","cnt":81.71741},{"name":"max-rss","cnt":112088.0},{"name":"wall-time","cnt":0.099609143},{"name":"cpu-clock","cnt":81.715816},{"name":"instructions:u","cnt":428865901.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":119424.0},{"name":"cycles:u","cnt":314916444.0},{"name":"task-clock","cnt":95.37506},{"name":"instructions:u","cnt":487431229.0},{"name":"wall-time","cnt":0.113507578},{"name":"faults","cnt":7205.0},{"name":"cpu-clock","cnt":95.373186}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.060323319},{"name":"faults","cnt":6040.0},{"name":"task-clock","cnt":43.359773},{"name":"cycles:u","cnt":120485427.0},{"name":"cpu-clock","cnt":43.356106},{"name":"max-rss","cnt":92252.0},{"name":"instructions:u","cnt":179228183.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":8679.0},{"name":"wall-time","cnt":0.155764498},{"name":"max-rss","cnt":130320.0},{"name":"task-clock","cnt":166.957602},{"name":"cycles:u","cnt":575435258.0},{"name":"cpu-clock","cnt":166.948879},{"name":"instructions:u","cnt":775330522.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":137184.0},{"name":"faults","cnt":10256.0},{"name":"wall-time","cnt":0.171726158},{"name":"cpu-clock","cnt":185.477951},{"name":"cycles:u","cnt":637080939.0},{"name":"instructions:u","cnt":849235656.0},{"name":"task-clock","cnt":185.47415}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.080925561},{"name":"cycles:u","cnt":190144096.0},{"name":"faults","cnt":7529.0},{"name":"max-rss","cnt":112344.0},{"name":"instructions:u","cnt":270355089.0},{"name":"cpu-clock","cnt":65.704351},{"name":"task-clock","cnt":65.718579}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":246.863332},{"name":"instructions:u","cnt":1277574329.0},{"name":"wall-time","cnt":0.203956878},{"name":"faults","cnt":7790.0},{"name":"task-clock","cnt":246.856901},{"name":"max-rss","cnt":128888.0},{"name":"cycles:u","cnt":896813800.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":958339079.0},{"name":"cpu-clock","cnt":263.384244},{"name":"instructions:u","cnt":1350001138.0},{"name":"faults","cnt":9328.0},{"name":"max-rss","cnt":135452.0},{"name":"task-clock","cnt":263.369703},{"name":"wall-time","cnt":0.219070557}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":185117875.0},{"name":"wall-time","cnt":0.078911579},{"name":"cpu-clock","cnt":62.589282},{"name":"faults","cnt":7379.0},{"name":"max-rss","cnt":111264.0},{"name":"instructions:u","cnt":267881292.0},{"name":"task-clock","cnt":62.593182}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":143940.0},{"name":"instructions:u","cnt":1908730419.0},{"name":"cycles:u","cnt":1586965134.0},{"name":"faults","cnt":12237.0},{"name":"cpu-clock","cnt":420.207683},{"name":"wall-time","cnt":0.438222637},{"name":"task-clock","cnt":420.20873}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":543.173632},{"name":"faults","cnt":18745.0},{"name":"max-rss","cnt":171348.0},{"name":"cycles:u","cnt":2041489298.0},{"name":"task-clock","cnt":543.174891},{"name":"wall-time","cnt":0.561262123},{"name":"instructions:u","cnt":2444950052.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":182.123082},{"name":"cpu-clock","cnt":182.120521},{"name":"instructions:u","cnt":858957943.0},{"name":"faults","cnt":18287.0},{"name":"wall-time","cnt":0.191159626},{"name":"max-rss","cnt":162724.0},{"name":"cycles:u","cnt":607146182.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":18258.0},{"name":"max-rss","cnt":169008.0},{"name":"instructions:u","cnt":925456884.0},{"name":"task-clock","cnt":199.375574},{"name":"wall-time","cnt":0.207294106},{"name":"cycles:u","cnt":675919123.0},{"name":"cpu-clock","cnt":199.385103}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":226736.0},{"name":"wall-time","cnt":0.911292457},{"name":"cycles:u","cnt":6937073861.0},{"name":"cpu-clock","cnt":1852.34751},{"name":"instructions:u","cnt":7701059021.0},{"name":"task-clock","cnt":1852.367262},{"name":"faults","cnt":30717.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":8553365001.0},{"name":"max-rss","cnt":249496.0},{"name":"wall-time","cnt":1.132695217},{"name":"task-clock","cnt":2308.394955},{"name":"cpu-clock","cnt":2308.4531},{"name":"instructions:u","cnt":9449162424.0},{"name":"faults","cnt":36827.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":188200.0},{"name":"faults","cnt":22918.0},{"name":"cpu-clock","cnt":275.751152},{"name":"wall-time","cnt":0.267049338},{"name":"task-clock","cnt":275.812437},{"name":"instructions:u","cnt":1182038295.0},{"name":"cycles:u","cnt":872742494.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":196104.0},{"name":"task-clock","cnt":301.11601},{"name":"instructions:u","cnt":1288207469.0},{"name":"cpu-clock","cnt":301.045221},{"name":"faults","cnt":23567.0},{"name":"wall-time","cnt":0.312506078},{"name":"cycles:u","cnt":955910177.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":33897.0},{"name":"task-clock","cnt":5324.033126},{"name":"max-rss","cnt":238220.0},{"name":"cpu-clock","cnt":5324.027174},{"name":"wall-time","cnt":1.451648316},{"name":"cycles:u","cnt":20068720612.0},{"name":"instructions:u","cnt":18180903451.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.635495563},{"name":"cpu-clock","cnt":5937.388304},{"name":"cycles:u","cnt":22276351949.0},{"name":"task-clock","cnt":5937.386337},{"name":"max-rss","cnt":260868.0},{"name":"faults","cnt":39587.0},{"name":"instructions:u","cnt":20231919478.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":23013.0},{"name":"instructions:u","cnt":1193795881.0},{"name":"cycles:u","cnt":877839569.0},{"name":"task-clock","cnt":269.741091},{"name":"cpu-clock","cnt":269.728725},{"name":"max-rss","cnt":187812.0},{"name":"wall-time","cnt":0.262977489}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":381.714708},{"name":"max-rss","cnt":200812.0},{"name":"faults","cnt":24282.0},{"name":"instructions:u","cnt":1691498019.0},{"name":"cpu-clock","cnt":381.693757},{"name":"cycles:u","cnt":1314731285.0},{"name":"wall-time","cnt":0.373056621}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":141048.0},{"name":"wall-time","cnt":0.770947193},{"name":"instructions:u","cnt":3995156477.0},{"name":"cpu-clock","cnt":752.770904},{"name":"task-clock","cnt":752.771942},{"name":"faults","cnt":11851.0},{"name":"cycles:u","cnt":2912673802.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3536415417.0},{"name":"max-rss","cnt":170612.0},{"name":"task-clock","cnt":918.506379},{"name":"wall-time","cnt":0.936424484},{"name":"instructions:u","cnt":4693933296.0},{"name":"cpu-clock","cnt":918.495988},{"name":"faults","cnt":19054.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":937528024.0},{"name":"wall-time","cnt":0.20893064},{"name":"cpu-clock","cnt":202.247064},{"name":"faults","cnt":18654.0},{"name":"cycles:u","cnt":683571303.0},{"name":"max-rss","cnt":162460.0},{"name":"task-clock","cnt":202.247975}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":18654.0},{"name":"wall-time","cnt":0.212641618},{"name":"task-clock","cnt":205.155682},{"name":"cpu-clock","cnt":205.155364},{"name":"instructions:u","cnt":948095513.0},{"name":"cycles:u","cnt":693203703.0},{"name":"max-rss","cnt":162292.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1078.852152},{"name":"wall-time","cnt":0.910511847},{"name":"instructions:u","cnt":5240530671.0},{"name":"faults","cnt":15833.0},{"name":"cpu-clock","cnt":1078.827743},{"name":"max-rss","cnt":164616.0},{"name":"cycles:u","cnt":4119375285.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":6225056209.0},{"name":"wall-time","cnt":1.116474928},{"name":"faults","cnt":23868.0},{"name":"task-clock","cnt":1327.218906},{"name":"cpu-clock","cnt":1327.245836},{"name":"cycles:u","cnt":5024316436.0},{"name":"max-rss","cnt":195912.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":252.266767},{"name":"faults","cnt":21708.0},{"name":"max-rss","cnt":180168.0},{"name":"instructions:u","cnt":1113567030.0},{"name":"wall-time","cnt":0.266644134},{"name":"task-clock","cnt":252.287236},{"name":"cycles:u","cnt":823455213.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.251920622},{"name":"instructions:u","cnt":1125877785.0},{"name":"max-rss","cnt":180548.0},{"name":"cpu-clock","cnt":253.49692},{"name":"cycles:u","cnt":834991707.0},{"name":"faults","cnt":21722.0},{"name":"task-clock","cnt":253.545041}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":6089760763.0},{"name":"wall-time","cnt":0.974945207},{"name":"cpu-clock","cnt":1606.730721},{"name":"task-clock","cnt":1606.753177},{"name":"max-rss","cnt":173340.0},{"name":"instructions:u","cnt":6604445005.0},{"name":"faults","cnt":17877.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.174418166},{"name":"instructions:u","cnt":7657897734.0},{"name":"task-clock","cnt":1902.546253},{"name":"faults","cnt":25238.0},{"name":"cycles:u","cnt":7183437398.0},{"name":"max-rss","cnt":202152.0},{"name":"cpu-clock","cnt":1902.554809}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":245.272764},{"name":"faults","cnt":21689.0},{"name":"max-rss","cnt":179488.0},{"name":"cycles:u","cnt":814418333.0},{"name":"instructions:u","cnt":1107346835.0},{"name":"cpu-clock","cnt":245.265265},{"name":"wall-time","cnt":0.26212392}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.249289046},{"name":"cpu-clock","cnt":250.033537},{"name":"cycles:u","cnt":831064521.0},{"name":"faults","cnt":21717.0},{"name":"max-rss","cnt":180056.0},{"name":"task-clock","cnt":250.049869},{"name":"instructions:u","cnt":1119110017.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":129052900.0},{"name":"instructions:u","cnt":191725056.0},{"name":"wall-time","cnt":0.063480716},{"name":"cpu-clock","cnt":45.018113},{"name":"faults","cnt":4935.0},{"name":"task-clock","cnt":45.019499},{"name":"max-rss","cnt":100236.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":216314410.0},{"name":"cycles:u","cnt":147443752.0},{"name":"max-rss","cnt":105708.0},{"name":"faults","cnt":6142.0},{"name":"wall-time","cnt":0.069116117},{"name":"cpu-clock","cnt":51.145502},{"name":"task-clock","cnt":51.148484}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":42.228073},{"name":"faults","cnt":5572.0},{"name":"task-clock","cnt":42.22115},{"name":"wall-time","cnt":0.0599194},{"name":"max-rss","cnt":90344.0},{"name":"cycles:u","cnt":116706483.0},{"name":"instructions:u","cnt":169126516.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":106120.0},{"name":"cycles:u","cnt":143643248.0},{"name":"task-clock","cnt":50.230408},{"name":"wall-time","cnt":0.067879611},{"name":"faults","cnt":6242.0},{"name":"cpu-clock","cnt":50.22706},{"name":"instructions:u","cnt":209917506.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":123.92483},{"name":"wall-time","cnt":0.132610979},{"name":"instructions:u","cnt":522739892.0},{"name":"cycles:u","cnt":357676969.0},{"name":"cpu-clock","cnt":123.916982},{"name":"max-rss","cnt":119600.0},{"name":"faults","cnt":12045.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":125352.0},{"name":"task-clock","cnt":134.872409},{"name":"instructions:u","cnt":570726874.0},{"name":"faults","cnt":13488.0},{"name":"cycles:u","cnt":393963994.0},{"name":"cpu-clock","cnt":134.876208},{"name":"wall-time","cnt":0.141793565}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":315902559.0},{"name":"instructions:u","cnt":473315035.0},{"name":"wall-time","cnt":0.127671584},{"name":"faults","cnt":12728.0},{"name":"task-clock","cnt":113.94689},{"name":"max-rss","cnt":108564.0},{"name":"cpu-clock","cnt":113.931617}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":13795.0},{"name":"instructions:u","cnt":550477084.0},{"name":"wall-time","cnt":0.139810084},{"name":"cycles:u","cnt":384516234.0},{"name":"cpu-clock","cnt":133.891765},{"name":"task-clock","cnt":133.879266},{"name":"max-rss","cnt":126428.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.135705449},{"name":"cycles:u","cnt":374564405.0},{"name":"max-rss","cnt":121388.0},{"name":"cpu-clock","cnt":127.351172},{"name":"faults","cnt":11948.0},{"name":"instructions:u","cnt":549152743.0},{"name":"task-clock","cnt":127.334498}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":138.346279},{"name":"instructions:u","cnt":596608712.0},{"name":"cpu-clock","cnt":138.351018},{"name":"faults","cnt":13387.0},{"name":"cycles:u","cnt":409039814.0},{"name":"wall-time","cnt":0.145160889},{"name":"max-rss","cnt":127204.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.125950042},{"name":"task-clock","cnt":110.668494},{"name":"max-rss","cnt":108620.0},{"name":"cycles:u","cnt":309859229.0},{"name":"faults","cnt":12496.0},{"name":"instructions:u","cnt":470955812.0},{"name":"cpu-clock","cnt":110.663827}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":135.197062},{"name":"task-clock","cnt":135.210781},{"name":"faults","cnt":13644.0},{"name":"instructions:u","cnt":577349911.0},{"name":"cycles:u","cnt":398122194.0},{"name":"max-rss","cnt":128544.0},{"name":"wall-time","cnt":0.141223712}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":229152.0},{"name":"faults","cnt":35693.0},{"name":"cpu-clock","cnt":1632.581578},{"name":"cycles:u","cnt":6323639554.0},{"name":"task-clock","cnt":1632.591722},{"name":"instructions:u","cnt":9339754964.0},{"name":"wall-time","cnt":1.685258357}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":2000.046685},{"name":"instructions:u","cnt":11828794742.0},{"name":"faults","cnt":42538.0},{"name":"wall-time","cnt":2.059521368},{"name":"cycles:u","cnt":7742704804.0},{"name":"max-rss","cnt":259660.0},{"name":"task-clock","cnt":2000.048205}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":37147.0},{"name":"cycles:u","cnt":2276821544.0},{"name":"cpu-clock","cnt":626.792163},{"name":"max-rss","cnt":237680.0},{"name":"instructions:u","cnt":3972365737.0},{"name":"task-clock","cnt":626.792361},{"name":"wall-time","cnt":0.630336015}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2681772657.0},{"name":"cpu-clock","cnt":726.686433},{"name":"wall-time","cnt":0.730608324},{"name":"instructions:u","cnt":4490297927.0},{"name":"faults","cnt":38361.0},{"name":"max-rss","cnt":248436.0},{"name":"task-clock","cnt":726.685442}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":49749.0},{"name":"max-rss","cnt":296224.0},{"name":"wall-time","cnt":2.094644688},{"name":"cycles:u","cnt":10048711883.0},{"name":"instructions:u","cnt":13391433345.0},{"name":"cpu-clock","cnt":2625.346223},{"name":"task-clock","cnt":2625.377928}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3145.28763},{"name":"faults","cnt":62668.0},{"name":"max-rss","cnt":346256.0},{"name":"cycles:u","cnt":11926777676.0},{"name":"wall-time","cnt":2.525103121},{"name":"instructions:u","cnt":16662855495.0},{"name":"cpu-clock","cnt":3145.32911}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2695622721.0},{"name":"wall-time","cnt":0.749149644},{"name":"instructions:u","cnt":4508288636.0},{"name":"cpu-clock","cnt":764.744369},{"name":"task-clock","cnt":764.809698},{"name":"max-rss","cnt":295560.0},{"name":"faults","cnt":48280.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.864120769},{"name":"cpu-clock","cnt":882.459486},{"name":"task-clock","cnt":882.506879},{"name":"max-rss","cnt":306392.0},{"name":"cycles:u","cnt":3150281392.0},{"name":"instructions:u","cnt":5065415701.0},{"name":"faults","cnt":49670.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":26994640632.0},{"name":"cpu-clock","cnt":7170.738867},{"name":"wall-time","cnt":2.791743573},{"name":"max-rss","cnt":388288.0},{"name":"instructions:u","cnt":27071271687.0},{"name":"task-clock","cnt":7170.746797},{"name":"faults","cnt":78912.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7341.190084},{"name":"faults","cnt":70382.0},{"name":"wall-time","cnt":3.014193634},{"name":"cycles:u","cnt":27714259555.0},{"name":"max-rss","cnt":373916.0},{"name":"instructions:u","cnt":28178830473.0},{"name":"cpu-clock","cnt":7341.199299}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":785.561796},{"name":"instructions:u","cnt":4625813085.0},{"name":"cycles:u","cnt":2793902180.0},{"name":"task-clock","cnt":785.597217},{"name":"faults","cnt":50602.0},{"name":"wall-time","cnt":0.754941879},{"name":"max-rss","cnt":301740.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":52199.0},{"name":"cycles:u","cnt":3358129945.0},{"name":"task-clock","cnt":932.404697},{"name":"cpu-clock","cnt":932.359943},{"name":"max-rss","cnt":315804.0},{"name":"instructions:u","cnt":5306929762.0},{"name":"wall-time","cnt":0.869350521}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1119.770063},{"name":"max-rss","cnt":180100.0},{"name":"cycles:u","cnt":4314624399.0},{"name":"wall-time","cnt":1.140827593},{"name":"instructions:u","cnt":4735651133.0},{"name":"faults","cnt":21330.0},{"name":"task-clock","cnt":1119.780026}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":34434.0},{"name":"instructions:u","cnt":6060256695.0},{"name":"cycles:u","cnt":5484671013.0},{"name":"cpu-clock","cnt":1427.917946},{"name":"task-clock","cnt":1427.919724},{"name":"wall-time","cnt":1.463318122},{"name":"max-rss","cnt":233076.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1523587241.0},{"name":"max-rss","cnt":222120.0},{"name":"cpu-clock","cnt":435.840915},{"name":"wall-time","cnt":0.445174086},{"name":"faults","cnt":33380.0},{"name":"task-clock","cnt":435.832498},{"name":"instructions:u","cnt":1915015717.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":34095.0},{"name":"cpu-clock","cnt":457.967975},{"name":"task-clock","cnt":457.968386},{"name":"max-rss","cnt":231952.0},{"name":"cycles:u","cnt":1622865628.0},{"name":"instructions:u","cnt":2001953194.0},{"name":"wall-time","cnt":0.452626225}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":4346.369119},{"name":"max-rss","cnt":309240.0},{"name":"cycles:u","cnt":16477508008.0},{"name":"task-clock","cnt":4346.381193},{"name":"instructions:u","cnt":17255019352.0},{"name":"wall-time","cnt":2.247554342},{"name":"faults","cnt":50899.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":20023444133.0},{"name":"wall-time","cnt":2.745854391},{"name":"cpu-clock","cnt":5326.266438},{"name":"instructions:u","cnt":20576597128.0},{"name":"faults","cnt":63720.0},{"name":"max-rss","cnt":363636.0},{"name":"task-clock","cnt":5326.224468}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2873314602.0},{"name":"cpu-clock","cnt":707.956503},{"name":"wall-time","cnt":0.6791613},{"name":"cycles:u","cnt":2387223485.0},{"name":"faults","cnt":46418.0},{"name":"task-clock","cnt":708.056216},{"name":"max-rss","cnt":298660.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":743.625178},{"name":"faults","cnt":47327.0},{"name":"instructions:u","cnt":2998112324.0},{"name":"max-rss","cnt":308596.0},{"name":"task-clock","cnt":743.732494},{"name":"wall-time","cnt":0.691656505},{"name":"cycles:u","cnt":2511938223.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":49174.0},{"name":"instructions:u","cnt":47039614769.0},{"name":"task-clock","cnt":15663.717652},{"name":"wall-time","cnt":3.453488883},{"name":"cpu-clock","cnt":15663.778389},{"name":"max-rss","cnt":297144.0},{"name":"cycles:u","cnt":59241120332.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":55083687413.0},{"name":"wall-time","cnt":4.061624835},{"name":"cycles:u","cnt":69214846727.0},{"name":"task-clock","cnt":18396.995674},{"name":"cpu-clock","cnt":18397.045368},{"name":"faults","cnt":63639.0},{"name":"max-rss","cnt":346040.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2938584424.0},{"name":"cycles:u","cnt":2457757825.0},{"name":"cpu-clock","cnt":721.291111},{"name":"faults","cnt":48106.0},{"name":"task-clock","cnt":721.397791},{"name":"max-rss","cnt":289212.0},{"name":"wall-time","cnt":0.685674148}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.212170219},{"name":"task-clock","cnt":1774.960096},{"name":"instructions:u","cnt":6933043035.0},{"name":"cycles:u","cnt":6491462413.0},{"name":"max-rss","cnt":322212.0},{"name":"cpu-clock","cnt":1774.893974},{"name":"faults","cnt":54649.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":12110159814.0},{"name":"faults","cnt":29051.0},{"name":"wall-time","cnt":1.590091682},{"name":"cycles:u","cnt":6060736706.0},{"name":"task-clock","cnt":1555.817091},{"name":"max-rss","cnt":181940.0},{"name":"cpu-clock","cnt":1555.805922}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":12837532088.0},{"name":"max-rss","cnt":192692.0},{"name":"cpu-clock","cnt":1663.846145},{"name":"wall-time","cnt":1.698685813},{"name":"faults","cnt":31281.0},{"name":"task-clock","cnt":1663.848759},{"name":"cycles:u","cnt":6476536189.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":828576753.0},{"name":"max-rss","cnt":133596.0},{"name":"wall-time","cnt":0.188249186},{"name":"task-clock","cnt":158.215034},{"name":"cpu-clock","cnt":158.213801},{"name":"cycles:u","cnt":537542916.0},{"name":"faults","cnt":13367.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":33519.0},{"name":"instructions:u","cnt":12714740441.0},{"name":"max-rss","cnt":201176.0},{"name":"wall-time","cnt":1.652917443},{"name":"cpu-clock","cnt":1639.770753},{"name":"cycles:u","cnt":6373400184.0},{"name":"task-clock","cnt":1639.770756}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":2567.098733},{"name":"instructions:u","cnt":16636443337.0},{"name":"cycles:u","cnt":9887693764.0},{"name":"wall-time","cnt":2.380121917},{"name":"cpu-clock","cnt":2567.104191},{"name":"faults","cnt":56915.0},{"name":"max-rss","cnt":294196.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2781.68045},{"name":"faults","cnt":58230.0},{"name":"instructions:u","cnt":17830589404.0},{"name":"cycles:u","cnt":10671888713.0},{"name":"wall-time","cnt":2.50740558},{"name":"max-rss","cnt":300108.0},{"name":"cpu-clock","cnt":2781.681832}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1149602184.0},{"name":"cpu-clock","cnt":221.355303},{"name":"max-rss","cnt":159332.0},{"name":"faults","cnt":18201.0},{"name":"task-clock","cnt":221.395174},{"name":"wall-time","cnt":0.243433627},{"name":"cycles:u","cnt":730527723.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":10563323418.0},{"name":"task-clock","cnt":2757.819686},{"name":"faults","cnt":58463.0},{"name":"wall-time","cnt":2.462188147},{"name":"instructions:u","cnt":17641702670.0},{"name":"cpu-clock","cnt":2757.82228},{"name":"max-rss","cnt":301944.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":8236.621851},{"name":"wall-time","cnt":8.002278939},{"name":"cycles:u","cnt":32304804819.0},{"name":"max-rss","cnt":328284.0},{"name":"faults","cnt":71325.0},{"name":"task-clock","cnt":8236.667535},{"name":"instructions:u","cnt":51766281721.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":52956217226.0},{"name":"cycles:u","cnt":33022046381.0},{"name":"task-clock","cnt":8398.953294},{"name":"max-rss","cnt":339772.0},{"name":"wall-time","cnt":8.100203146},{"name":"faults","cnt":75246.0},{"name":"cpu-clock","cnt":8398.965734}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":212.795385},{"name":"cpu-clock","cnt":212.775957},{"name":"instructions:u","cnt":1122968915.0},{"name":"cycles:u","cnt":714182516.0},{"name":"wall-time","cnt":0.239240788},{"name":"max-rss","cnt":155892.0},{"name":"faults","cnt":17499.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.924926246},{"name":"cycles:u","cnt":31222703346.0},{"name":"task-clock","cnt":7949.347806},{"name":"max-rss","cnt":350380.0},{"name":"instructions:u","cnt":50658714710.0},{"name":"cpu-clock","cnt":7949.330334},{"name":"faults","cnt":76197.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":72.780915},{"name":"instructions:u","cnt":346431331.0},{"name":"max-rss","cnt":116052.0},{"name":"wall-time","cnt":0.090648258},{"name":"cpu-clock","cnt":72.780133},{"name":"cycles:u","cnt":232130020.0},{"name":"faults","cnt":6135.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":286738370.0},{"name":"instructions:u","cnt":418506408.0},{"name":"max-rss","cnt":123748.0},{"name":"cpu-clock","cnt":88.425332},{"name":"wall-time","cnt":0.106283609},{"name":"task-clock","cnt":88.427083},{"name":"faults","cnt":7865.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":58.733427},{"name":"instructions:u","cnt":257904147.0},{"name":"cycles:u","cnt":171516037.0},{"name":"task-clock","cnt":58.736067},{"name":"faults","cnt":7591.0},{"name":"wall-time","cnt":0.075607752},{"name":"max-rss","cnt":109888.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":8222.0},{"name":"cycles:u","cnt":261287496.0},{"name":"cpu-clock","cnt":82.552556},{"name":"wall-time","cnt":0.099568402},{"name":"instructions:u","cnt":382201369.0},{"name":"max-rss","cnt":126296.0},{"name":"task-clock","cnt":82.554823}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"cycles:u","cnt":263629960.0},{"name":"wall-time","cnt":0.100091409},{"name":"faults","cnt":8208.0},{"name":"max-rss","cnt":126084.0},{"name":"task-clock","cnt":83.19466},{"name":"cpu-clock","cnt":83.192731},{"name":"instructions:u","cnt":381297561.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":235981637.0},{"name":"task-clock","cnt":75.96847},{"name":"wall-time","cnt":0.092887702},{"name":"cpu-clock","cnt":75.964821},{"name":"max-rss","cnt":125832.0},{"name":"instructions:u","cnt":344218975.0},{"name":"faults","cnt":8209.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":84.027587},{"name":"faults","cnt":8212.0},{"name":"instructions:u","cnt":381584674.0},{"name":"wall-time","cnt":0.100943392},{"name":"cycles:u","cnt":264675445.0},{"name":"cpu-clock","cnt":84.034379},{"name":"max-rss","cnt":125828.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":126132.0},{"name":"instructions:u","cnt":383299101.0},{"name":"cycles:u","cnt":266767483.0},{"name":"cpu-clock","cnt":84.147555},{"name":"faults","cnt":8209.0},{"name":"task-clock","cnt":84.150857},{"name":"wall-time","cnt":0.101229811}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"task-clock","cnt":234.44683},{"name":"cpu-clock","cnt":234.453428},{"name":"faults","cnt":10080.0},{"name":"cycles:u","cnt":807272682.0},{"name":"max-rss","cnt":139624.0},{"name":"instructions:u","cnt":958078164.0},{"name":"wall-time","cnt":0.148946125}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":902216226.0},{"name":"cpu-clock","cnt":261.640927},{"name":"task-clock","cnt":261.648651},{"name":"instructions:u","cnt":1085996039.0},{"name":"faults","cnt":11770.0},{"name":"max-rss","cnt":146572.0},{"name":"wall-time","cnt":0.170216548}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":79.869929},{"name":"cycles:u","cnt":229868040.0},{"name":"max-rss","cnt":122316.0},{"name":"faults","cnt":8734.0},{"name":"instructions:u","cnt":320457428.0},{"name":"wall-time","cnt":0.092333145},{"name":"cpu-clock","cnt":79.867058}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1027956507.0},{"name":"cycles:u","cnt":883983980.0},{"name":"wall-time","cnt":0.161031929},{"name":"max-rss","cnt":149296.0},{"name":"cpu-clock","cnt":259.678547},{"name":"task-clock","cnt":259.675543},{"name":"faults","cnt":12233.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"task-clock","cnt":239.922948},{"name":"cycles:u","cnt":813144856.0},{"name":"instructions:u","cnt":957943619.0},{"name":"faults","cnt":12220.0},{"name":"max-rss","cnt":148764.0},{"name":"wall-time","cnt":0.15156746},{"name":"cpu-clock","cnt":239.915789}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":787843605.0},{"name":"wall-time","cnt":0.14106036},{"name":"task-clock","cnt":233.234389},{"name":"max-rss","cnt":148672.0},{"name":"instructions:u","cnt":909681072.0},{"name":"cpu-clock","cnt":233.233993},{"name":"faults","cnt":12275.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":243.340852},{"name":"instructions:u","cnt":959926507.0},{"name":"cycles:u","cnt":824393912.0},{"name":"faults","cnt":12241.0},{"name":"wall-time","cnt":0.151360767},{"name":"task-clock","cnt":243.320678},{"name":"max-rss","cnt":148632.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":820855071.0},{"name":"max-rss","cnt":148612.0},{"name":"instructions:u","cnt":965503947.0},{"name":"cpu-clock","cnt":241.982016},{"name":"task-clock","cnt":241.989914},{"name":"wall-time","cnt":0.152266636},{"name":"faults","cnt":12125.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":146652.0},{"name":"faults","cnt":11736.0},{"name":"cycles:u","cnt":2334748662.0},{"name":"cpu-clock","cnt":636.184797},{"name":"instructions:u","cnt":2299161403.0},{"name":"wall-time","cnt":0.26898737},{"name":"task-clock","cnt":636.220503}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":154612.0},{"name":"instructions:u","cnt":2433261019.0},{"name":"cycles:u","cnt":2486903957.0},{"name":"task-clock","cnt":680.031879},{"name":"wall-time","cnt":0.289140322},{"name":"cpu-clock","cnt":680.023168},{"name":"faults","cnt":13730.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":120804.0},{"name":"wall-time","cnt":0.090795561},{"name":"cpu-clock","cnt":77.541708},{"name":"faults","cnt":8705.0},{"name":"instructions:u","cnt":322073619.0},{"name":"task-clock","cnt":77.554534},{"name":"cycles:u","cnt":228098422.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2400537753.0},{"name":"faults","cnt":13996.0},{"name":"cpu-clock","cnt":655.329877},{"name":"task-clock","cnt":655.318247},{"name":"instructions:u","cnt":2361388188.0},{"name":"max-rss","cnt":156176.0},{"name":"wall-time","cnt":0.302560188}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":1425512092.0},{"name":"max-rss","cnt":152824.0},{"name":"cycles:u","cnt":1413079946.0},{"name":"wall-time","cnt":0.188207894},{"name":"cpu-clock","cnt":400.001544},{"name":"task-clock","cnt":400.000483},{"name":"faults","cnt":13181.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1325250271.0},{"name":"cpu-clock","cnt":368.656731},{"name":"task-clock","cnt":368.657064},{"name":"faults","cnt":12977.0},{"name":"max-rss","cnt":151584.0},{"name":"wall-time","cnt":0.180108373},{"name":"cycles:u","cnt":1292080856.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"faults","cnt":12987.0},{"name":"instructions:u","cnt":1357888969.0},{"name":"wall-time","cnt":0.188405708},{"name":"cpu-clock","cnt":371.155062},{"name":"max-rss","cnt":152188.0},{"name":"cycles:u","cnt":1304078558.0},{"name":"task-clock","cnt":371.144953}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":1334784582.0},{"name":"faults","cnt":12966.0},{"name":"max-rss","cnt":152480.0},{"name":"wall-time","cnt":0.189600121},{"name":"cpu-clock","cnt":378.295496},{"name":"task-clock","cnt":378.293847},{"name":"instructions:u","cnt":1365925943.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":5298.32529},{"name":"cycles:u","cnt":20593447144.0},{"name":"max-rss","cnt":500348.0},{"name":"faults","cnt":140682.0},{"name":"instructions:u","cnt":40665080043.0},{"name":"task-clock","cnt":5298.324408},{"name":"wall-time","cnt":5.316610703}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":5716.875284},{"name":"cycles:u","cnt":22229138081.0},{"name":"wall-time","cnt":5.751572768},{"name":"faults","cnt":147812.0},{"name":"max-rss","cnt":524016.0},{"name":"task-clock","cnt":5716.874007},{"name":"instructions:u","cnt":43143661771.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":468.275968},{"name":"wall-time","cnt":0.485380063},{"name":"task-clock","cnt":468.276241},{"name":"max-rss","cnt":201724.0},{"name":"instructions:u","cnt":2010871506.0},{"name":"faults","cnt":34022.0},{"name":"cycles:u","cnt":1678904512.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":7557.981359},{"name":"instructions:u","cnt":51478475983.0},{"name":"cpu-clock","cnt":7557.961727},{"name":"faults","cnt":336588.0},{"name":"cycles:u","cnt":28895042260.0},{"name":"wall-time","cnt":7.551615458},{"name":"max-rss","cnt":1089112.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":8002.741551},{"name":"max-rss","cnt":1247724.0},{"name":"instructions:u","cnt":54780181504.0},{"name":"task-clock","cnt":8002.721037},{"name":"faults","cnt":337190.0},{"name":"cycles:u","cnt":30569475141.0},{"name":"wall-time","cnt":7.959509817}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2721579548.0},{"name":"faults","cnt":42466.0},{"name":"cpu-clock","cnt":567.831588},{"name":"wall-time","cnt":0.583694883},{"name":"task-clock","cnt":567.843637},{"name":"cycles:u","cnt":1998558775.0},{"name":"max-rss","cnt":240972.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":6.840449496},{"name":"faults","cnt":281062.0},{"name":"instructions:u","cnt":51899832363.0},{"name":"cycles:u","cnt":26052929090.0},{"name":"task-clock","cnt":6791.522475},{"name":"max-rss","cnt":1002000.0},{"name":"cpu-clock","cnt":6791.522344}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7269.776708},{"name":"cpu-clock","cnt":7269.802422},{"name":"cycles:u","cnt":27908736014.0},{"name":"faults","cnt":286592.0},{"name":"instructions:u","cnt":55096920927.0},{"name":"wall-time","cnt":7.23428829},{"name":"max-rss","cnt":1043704.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2659836587.0},{"name":"wall-time","cnt":0.573050437},{"name":"cpu-clock","cnt":560.582371},{"name":"task-clock","cnt":560.583709},{"name":"faults","cnt":43596.0},{"name":"max-rss","cnt":242952.0},{"name":"cycles:u","cnt":1999185367.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmpw9k3iE)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x5623421133bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x562342113552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x56234211286c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x5623420ae470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x562341d9cafa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x562341da4722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x562341db6541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x562341dc5a1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x562341dbb96e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x562341d6fe22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x56234213a0d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x562342144d39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x56234213ac9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x562341dc9d57 - main\n  14:     0x7f7c7a50482f - __libc_start_main\n  15:     0x562341d65518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":203084.0},{"name":"cpu-clock","cnt":1819.203239},{"name":"instructions:u","cnt":8652335542.0},{"name":"faults","cnt":26727.0},{"name":"task-clock","cnt":1819.203866},{"name":"cycles:u","cnt":7091997181.0},{"name":"wall-time","cnt":1.854176391}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":258744.0},{"name":"instructions:u","cnt":10659778752.0},{"name":"task-clock","cnt":2265.94228},{"name":"wall-time","cnt":2.304017037},{"name":"faults","cnt":40498.0},{"name":"cpu-clock","cnt":2265.94027},{"name":"cycles:u","cnt":8798785630.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":238564.0},{"name":"instructions:u","cnt":2178154570.0},{"name":"cpu-clock","cnt":487.403369},{"name":"task-clock","cnt":487.413953},{"name":"cycles:u","cnt":1734126855.0},{"name":"faults","cnt":37126.0},{"name":"wall-time","cnt":0.492348389}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":37600.0},{"name":"instructions:u","cnt":2268920015.0},{"name":"task-clock","cnt":505.499206},{"name":"cycles:u","cnt":1801117207.0},{"name":"wall-time","cnt":0.495758417},{"name":"cpu-clock","cnt":505.5085},{"name":"max-rss","cnt":247044.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":9297.473953},{"name":"cpu-clock","cnt":9297.472814},{"name":"max-rss","cnt":473036.0},{"name":"cycles:u","cnt":35131808486.0},{"name":"wall-time","cnt":4.023051195},{"name":"instructions:u","cnt":36636066399.0},{"name":"faults","cnt":95284.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.690513652},{"name":"cpu-clock","cnt":10504.31239},{"name":"instructions:u","cnt":41028985761.0},{"name":"task-clock","cnt":10504.356705},{"name":"faults","cnt":101112.0},{"name":"max-rss","cnt":507876.0},{"name":"cycles:u","cnt":39625210581.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3351051921.0},{"name":"wall-time","cnt":0.941867652},{"name":"instructions:u","cnt":3942288996.0},{"name":"faults","cnt":63091.0},{"name":"cpu-clock","cnt":970.552649},{"name":"task-clock","cnt":970.65579},{"name":"max-rss","cnt":381580.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":990.167155},{"name":"cpu-clock","cnt":990.046105},{"name":"faults","cnt":64189.0},{"name":"cycles:u","cnt":3427959809.0},{"name":"instructions:u","cnt":4243438453.0},{"name":"wall-time","cnt":0.948057619},{"name":"max-rss","cnt":392108.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":147403736829.0},{"name":"max-rss","cnt":437504.0},{"name":"faults","cnt":87385.0},{"name":"wall-time","cnt":7.830897494},{"name":"cpu-clock","cnt":38977.922429},{"name":"instructions:u","cnt":120366717097.0},{"name":"task-clock","cnt":38977.833672}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":43028.957133},{"name":"task-clock","cnt":43028.832523},{"name":"instructions:u","cnt":128428421627.0},{"name":"max-rss","cnt":502108.0},{"name":"wall-time","cnt":8.252970028},{"name":"faults","cnt":106814.0},{"name":"cycles:u","cnt":162330968926.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":363240.0},{"name":"cpu-clock","cnt":936.76857},{"name":"instructions:u","cnt":4037099319.0},{"name":"task-clock","cnt":936.839518},{"name":"faults","cnt":64797.0},{"name":"cycles:u","cnt":3286832660.0},{"name":"wall-time","cnt":0.895313129}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":379068.0},{"name":"faults","cnt":66689.0},{"name":"instructions:u","cnt":6243350113.0},{"name":"cpu-clock","cnt":1417.155734},{"name":"wall-time","cnt":1.288830828},{"name":"cycles:u","cnt":5168110731.0},{"name":"task-clock","cnt":1417.266021}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":19023.0},{"name":"task-clock","cnt":926.541118},{"name":"wall-time","cnt":0.944438645},{"name":"cycles:u","cnt":3574756910.0},{"name":"max-rss","cnt":170908.0},{"name":"instructions:u","cnt":3959782156.0},{"name":"cpu-clock","cnt":926.540143}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":5070672034.0},{"name":"wall-time","cnt":1.238429931},{"name":"task-clock","cnt":1178.944625},{"name":"faults","cnt":29878.0},{"name":"max-rss","cnt":214552.0},{"name":"cycles:u","cnt":4522921178.0},{"name":"cpu-clock","cnt":1178.942947}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":26294.0},{"name":"instructions:u","cnt":1502281661.0},{"name":"cpu-clock","cnt":325.1344},{"name":"task-clock","cnt":325.136538},{"name":"cycles:u","cnt":1142272145.0},{"name":"max-rss","cnt":193692.0},{"name":"wall-time","cnt":0.323924123}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1867012735.0},{"name":"cpu-clock","cnt":514.491336},{"name":"max-rss","cnt":215972.0},{"name":"instructions:u","cnt":2254355991.0},{"name":"faults","cnt":29974.0},{"name":"wall-time","cnt":0.527578127},{"name":"task-clock","cnt":514.502151}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"faults","cnt":26734.0},{"name":"instructions:u","cnt":1553889094.0},{"name":"task-clock","cnt":343.757608},{"name":"max-rss","cnt":202372.0},{"name":"cycles:u","cnt":1199539660.0},{"name":"cpu-clock","cnt":343.745062},{"name":"wall-time","cnt":0.340812751}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"task-clock","cnt":346.486652},{"name":"wall-time","cnt":0.373056348},{"name":"instructions:u","cnt":1600946893.0},{"name":"max-rss","cnt":204364.0},{"name":"faults","cnt":27066.0},{"name":"cpu-clock","cnt":346.498488},{"name":"cycles:u","cnt":1221461062.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"max-rss","cnt":216124.0},{"name":"faults","cnt":29989.0},{"name":"cpu-clock","cnt":520.265544},{"name":"cycles:u","cnt":1886066457.0},{"name":"instructions:u","cnt":2275758586.0},{"name":"wall-time","cnt":0.518842856},{"name":"task-clock","cnt":520.265991}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"max-rss","cnt":215808.0},{"name":"cpu-clock","cnt":514.27626},{"name":"faults","cnt":29990.0},{"name":"task-clock","cnt":514.266761},{"name":"cycles:u","cnt":1862741973.0},{"name":"instructions:u","cnt":2274843428.0},{"name":"wall-time","cnt":0.537958039}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cpu-clock","cnt":336.111736},{"name":"instructions:u","cnt":1539582637.0},{"name":"task-clock","cnt":336.112613},{"name":"max-rss","cnt":201900.0},{"name":"wall-time","cnt":0.335917324},{"name":"faults","cnt":26731.0},{"name":"cycles:u","cnt":1177536799.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"task-clock","cnt":436.940675},{"name":"cpu-clock","cnt":436.940305},{"name":"instructions:u","cnt":1982843839.0},{"name":"max-rss","cnt":213984.0},{"name":"wall-time","cnt":0.464988045},{"name":"faults","cnt":29528.0},{"name":"cycles:u","cnt":1572407898.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"task-clock","cnt":379.472653},{"name":"cycles:u","cnt":1352795368.0},{"name":"wall-time","cnt":0.377242005},{"name":"faults","cnt":27245.0},{"name":"cpu-clock","cnt":379.486424},{"name":"instructions:u","cnt":1723999772.0},{"name":"max-rss","cnt":204776.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"max-rss","cnt":213112.0},{"name":"wall-time","cnt":0.413528815},{"name":"cycles:u","cnt":1423606120.0},{"name":"faults","cnt":29420.0},{"name":"cpu-clock","cnt":400.253483},{"name":"task-clock","cnt":400.255231},{"name":"instructions:u","cnt":1775265181.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"faults","cnt":78708.0},{"name":"max-rss","cnt":411524.0},{"name":"task-clock","cnt":7320.70741},{"name":"cycles:u","cnt":27374812875.0},{"name":"instructions:u","cnt":22843099848.0},{"name":"cpu-clock","cnt":7320.707897},{"name":"wall-time","cnt":2.194331536}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":415332.0},{"name":"task-clock","cnt":7945.478288},{"name":"instructions:u","cnt":25678822633.0},{"name":"cycles:u","cnt":29706034042.0},{"name":"wall-time","cnt":2.643103885},{"name":"cpu-clock","cnt":7945.498161},{"name":"faults","cnt":78541.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.515838226},{"name":"max-rss","cnt":275836.0},{"name":"faults","cnt":41736.0},{"name":"task-clock","cnt":538.908285},{"name":"instructions:u","cnt":2259010094.0},{"name":"cycles:u","cnt":1804834593.0},{"name":"cpu-clock","cnt":538.860754}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":331776.0},{"name":"wall-time","cnt":0.980519265},{"name":"cycles:u","cnt":6239484854.0},{"name":"faults","cnt":55034.0},{"name":"task-clock","cnt":1711.962981},{"name":"instructions:u","cnt":6866450667.0},{"name":"cpu-clock","cnt":1711.896917}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"instructions:u","cnt":2344405074.0},{"name":"faults","cnt":42372.0},{"name":"cpu-clock","cnt":566.500064},{"name":"max-rss","cnt":285332.0},{"name":"wall-time","cnt":0.532360321},{"name":"cycles:u","cnt":1904523016.0},{"name":"task-clock","cnt":566.576017}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"instructions:u","cnt":3075725655.0},{"name":"wall-time","cnt":0.63245694},{"name":"task-clock","cnt":737.717452},{"name":"cycles:u","cnt":2567326783.0},{"name":"cpu-clock","cnt":737.646977},{"name":"faults","cnt":44953.0},{"name":"max-rss","cnt":294968.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1759.441618},{"name":"task-clock","cnt":1759.506214},{"name":"cycles:u","cnt":6407833574.0},{"name":"wall-time","cnt":0.999232653},{"name":"instructions:u","cnt":6894763105.0},{"name":"faults","cnt":55327.0},{"name":"max-rss","cnt":332488.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"max-rss","cnt":337788.0},{"name":"faults","cnt":56681.0},{"name":"instructions:u","cnt":6895876494.0},{"name":"wall-time","cnt":0.977018402},{"name":"cpu-clock","cnt":1727.21396},{"name":"cycles:u","cnt":6265488633.0},{"name":"task-clock","cnt":1727.282822}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cpu-clock","cnt":546.21433},{"name":"max-rss","cnt":278828.0},{"name":"cycles:u","cnt":1836954264.0},{"name":"wall-time","cnt":0.519163804},{"name":"faults","cnt":41934.0},{"name":"instructions:u","cnt":2286714552.0},{"name":"task-clock","cnt":546.294329}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"task-clock","cnt":5438.848542},{"name":"cpu-clock","cnt":5438.819711},{"name":"wall-time","cnt":1.519818782},{"name":"cycles:u","cnt":20086764003.0},{"name":"faults","cnt":81461.0},{"name":"instructions:u","cnt":17613872093.0},{"name":"max-rss","cnt":429968.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"task-clock","cnt":5351.17654},{"name":"cycles:u","cnt":19766134878.0},{"name":"instructions:u","cnt":16960141041.0},{"name":"cpu-clock","cnt":5351.163327},{"name":"faults","cnt":81784.0},{"name":"wall-time","cnt":1.446305842},{"name":"max-rss","cnt":431032.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cpu-clock","cnt":859.857025},{"name":"max-rss","cnt":306332.0},{"name":"wall-time","cnt":0.660754448},{"name":"faults","cnt":47850.0},{"name":"instructions:u","cnt":3683307064.0},{"name":"cycles:u","cnt":3001905802.0},{"name":"task-clock","cnt":859.924693}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":66213011443.0},{"name":"faults","cnt":63627.0},{"name":"cpu-clock","cnt":22027.193642},{"name":"max-rss","cnt":350564.0},{"name":"task-clock","cnt":22027.142831},{"name":"wall-time","cnt":4.542046932},{"name":"cycles:u","cnt":83280512149.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.937748834},{"name":"cpu-clock","cnt":24171.643519},{"name":"faults","cnt":74922.0},{"name":"instructions:u","cnt":71760464011.0},{"name":"task-clock","cnt":24171.555812},{"name":"max-rss","cnt":389760.0},{"name":"cycles:u","cnt":91176117762.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2284661104.0},{"name":"faults","cnt":41252.0},{"name":"cycles:u","cnt":1829236675.0},{"name":"wall-time","cnt":0.502107297},{"name":"cpu-clock","cnt":532.048468},{"name":"task-clock","cnt":532.100489},{"name":"max-rss","cnt":261368.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":74932.0},{"name":"cpu-clock","cnt":13925.940244},{"name":"instructions:u","cnt":41861165883.0},{"name":"wall-time","cnt":2.96729715},{"name":"task-clock","cnt":13925.905712},{"name":"max-rss","cnt":394876.0},{"name":"cycles:u","cnt":52356563036.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"task-clock","cnt":604.25258},{"name":"wall-time","cnt":0.522842761},{"name":"max-rss","cnt":274516.0},{"name":"cpu-clock","cnt":604.172411},{"name":"instructions:u","cnt":2570895501.0},{"name":"faults","cnt":42261.0},{"name":"cycles:u","cnt":2093167708.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cpu-clock","cnt":619.238297},{"name":"cycles:u","cnt":2132911727.0},{"name":"instructions:u","cnt":2614076043.0},{"name":"faults","cnt":42355.0},{"name":"task-clock","cnt":619.286393},{"name":"wall-time","cnt":0.535386132},{"name":"max-rss","cnt":274788.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"task-clock","cnt":13891.557596},{"name":"cycles:u","cnt":52221573959.0},{"name":"faults","cnt":74827.0},{"name":"wall-time","cnt":2.960586117},{"name":"cpu-clock","cnt":13891.590002},{"name":"instructions:u","cnt":41876789688.0},{"name":"max-rss","cnt":395888.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":41886310364.0},{"name":"faults","cnt":74821.0},{"name":"max-rss","cnt":395840.0},{"name":"task-clock","cnt":13881.330178},{"name":"cycles:u","cnt":52217234851.0},{"name":"cpu-clock","cnt":13881.347651},{"name":"wall-time","cnt":2.969503619}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"task-clock","cnt":540.681347},{"name":"cycles:u","cnt":1856487223.0},{"name":"wall-time","cnt":0.510141507},{"name":"instructions:u","cnt":2310672790.0},{"name":"faults","cnt":41532.0},{"name":"max-rss","cnt":264752.0},{"name":"cpu-clock","cnt":540.613307}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"instructions:u","cnt":58102777728.0},{"name":"cpu-clock","cnt":19019.614646},{"name":"task-clock","cnt":19019.549298},{"name":"wall-time","cnt":3.597374075},{"name":"faults","cnt":77609.0},{"name":"cycles:u","cnt":71577652059.0},{"name":"max-rss","cnt":405284.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"max-rss","cnt":404336.0},{"name":"task-clock","cnt":18915.591182},{"name":"cpu-clock","cnt":18915.647981},{"name":"faults","cnt":77282.0},{"name":"wall-time","cnt":3.486938105},{"name":"instructions:u","cnt":57829288158.0},{"name":"cycles:u","cnt":71172228862.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":56530.0},{"name":"task-clock","cnt":2576.80729},{"name":"max-rss","cnt":322548.0},{"name":"cycles:u","cnt":9792177712.0},{"name":"instructions:u","cnt":12855539070.0},{"name":"wall-time","cnt":1.904225031},{"name":"cpu-clock","cnt":2576.749354}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":1221970501.0},{"name":"faults","cnt":8036.0},{"name":"wall-time","cnt":0.257436797},{"name":"cpu-clock","cnt":239.615644},{"name":"cycles:u","cnt":887241325.0},{"name":"task-clock","cnt":239.62786},{"name":"max-rss","cnt":126836.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":1490591898.0},{"name":"max-rss","cnt":140044.0},{"name":"cycles:u","cnt":1101735689.0},{"name":"faults","cnt":11224.0},{"name":"task-clock","cnt":297.441343},{"name":"cpu-clock","cnt":297.439191},{"name":"wall-time","cnt":0.316173678}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":87.091232},{"name":"faults","cnt":10675.0},{"name":"cycles:u","cnt":269735973.0},{"name":"instructions:u","cnt":399049645.0},{"name":"wall-time","cnt":0.100891864},{"name":"task-clock","cnt":87.093103},{"name":"max-rss","cnt":122752.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":113.481},{"name":"cycles:u","cnt":368244436.0},{"name":"wall-time","cnt":0.12748457},{"name":"task-clock","cnt":113.471716},{"name":"faults","cnt":11357.0},{"name":"instructions:u","cnt":514780019.0},{"name":"max-rss","cnt":140548.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1885.533494},{"name":"max-rss","cnt":215588.0},{"name":"wall-time","cnt":0.871962738},{"name":"cycles:u","cnt":7034041153.0},{"name":"cpu-clock","cnt":1885.539277},{"name":"faults","cnt":28291.0},{"name":"instructions:u","cnt":7618531651.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":7687599633.0},{"name":"instructions:u","cnt":8492391502.0},{"name":"cpu-clock","cnt":2060.771425},{"name":"max-rss","cnt":232136.0},{"name":"faults","cnt":32338.0},{"name":"task-clock","cnt":2060.777613},{"name":"wall-time","cnt":1.020610376}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":655807587.0},{"name":"instructions:u","cnt":850841384.0},{"name":"max-rss","cnt":167164.0},{"name":"cpu-clock","cnt":202.99326},{"name":"faults","cnt":17491.0},{"name":"task-clock","cnt":203.016104},{"name":"wall-time","cnt":0.223313941}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":250.602345},{"name":"instructions:u","cnt":1058302725.0},{"name":"task-clock","cnt":250.630714},{"name":"cycles:u","cnt":822424513.0},{"name":"faults","cnt":19682.0},{"name":"wall-time","cnt":0.236113366},{"name":"max-rss","cnt":188976.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":28601.0},{"name":"instructions:u","cnt":24651079683.0},{"name":"cpu-clock","cnt":6899.741063},{"name":"task-clock","cnt":6899.700559},{"name":"wall-time","cnt":2.625994927},{"name":"max-rss","cnt":214360.0},{"name":"cycles:u","cnt":26318273798.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":238256.0},{"name":"instructions:u","cnt":25811543922.0},{"name":"cycles:u","cnt":27808404920.0},{"name":"cpu-clock","cnt":7309.344692},{"name":"wall-time","cnt":2.745662089},{"name":"faults","cnt":35127.0},{"name":"task-clock","cnt":7309.323446}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":858910954.0},{"name":"max-rss","cnt":164348.0},{"name":"task-clock","cnt":205.998397},{"name":"cpu-clock","cnt":205.957945},{"name":"faults","cnt":18588.0},{"name":"cycles:u","cnt":673338578.0},{"name":"wall-time","cnt":0.222499491}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":30278.0},{"name":"max-rss","cnt":221520.0},{"name":"task-clock","cnt":2464.965481},{"name":"instructions:u","cnt":9915915320.0},{"name":"cycles:u","cnt":9346716796.0},{"name":"wall-time","cnt":1.347437778},{"name":"cpu-clock","cnt":2464.950017}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":17515.0},{"name":"task-clock","cnt":752.28748},{"name":"cycles:u","cnt":2887448884.0},{"name":"instructions:u","cnt":3474496085.0},{"name":"max-rss","cnt":167312.0},{"name":"cpu-clock","cnt":752.287369},{"name":"wall-time","cnt":0.79291967}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":4456949581.0},{"name":"wall-time","cnt":1.015225769},{"name":"cpu-clock","cnt":974.207795},{"name":"task-clock","cnt":974.209236},{"name":"faults","cnt":26966.0},{"name":"cycles:u","cnt":3725058106.0},{"name":"max-rss","cnt":206040.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":23698.0},{"name":"task-clock","cnt":242.843908},{"name":"cycles:u","cnt":820886140.0},{"name":"wall-time","cnt":0.244365017},{"name":"instructions:u","cnt":1159867057.0},{"name":"cpu-clock","cnt":242.842472},{"name":"max-rss","cnt":184880.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1346908578.0},{"name":"wall-time","cnt":0.302034995},{"name":"faults","cnt":25071.0},{"name":"cpu-clock","cnt":283.292685},{"name":"task-clock","cnt":283.294329},{"name":"max-rss","cnt":198976.0},{"name":"cycles:u","cnt":975600737.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":20064339153.0},{"name":"max-rss","cnt":342664.0},{"name":"faults","cnt":107934.0},{"name":"task-clock","cnt":5517.488412},{"name":"wall-time","cnt":3.045907244},{"name":"instructions:u","cnt":21140490055.0},{"name":"cpu-clock","cnt":5517.494965}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":370616.0},{"name":"wall-time","cnt":3.561416739},{"name":"instructions:u","cnt":24702817140.0},{"name":"cpu-clock","cnt":6419.917039},{"name":"faults","cnt":121636.0},{"name":"task-clock","cnt":6419.947071},{"name":"cycles:u","cnt":23186099297.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":283732.0},{"name":"cycles:u","cnt":5150598470.0},{"name":"wall-time","cnt":1.599662263},{"name":"task-clock","cnt":1629.69522},{"name":"instructions:u","cnt":6438698575.0},{"name":"faults","cnt":95414.0},{"name":"cpu-clock","cnt":1629.625714}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":95910.0},{"name":"cycles:u","cnt":5349519345.0},{"name":"task-clock","cnt":1683.151221},{"name":"wall-time","cnt":1.640013641},{"name":"max-rss","cnt":290312.0},{"name":"instructions:u","cnt":6619026740.0},{"name":"cpu-clock","cnt":1683.075321}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":122430939975.0},{"name":"max-rss","cnt":642340.0},{"name":"faults","cnt":184056.0},{"name":"cycles:u","cnt":154686403218.0},{"name":"cpu-clock","cnt":41173.540001},{"name":"task-clock","cnt":41173.499245},{"name":"wall-time","cnt":7.904368978}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":133286168879.0},{"name":"task-clock","cnt":45621.476399},{"name":"wall-time","cnt":8.307996906},{"name":"cycles:u","cnt":171025122390.0},{"name":"faults","cnt":184831.0},{"name":"cpu-clock","cnt":45621.657791},{"name":"max-rss","cnt":635044.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.292227898},{"name":"task-clock","cnt":1344.729433},{"name":"faults","cnt":90119.0},{"name":"instructions:u","cnt":6803542299.0},{"name":"max-rss","cnt":302812.0},{"name":"cycles:u","cnt":4380848045.0},{"name":"cpu-clock","cnt":1344.6309}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":98875.0},{"name":"cycles:u","cnt":7320181582.0},{"name":"task-clock","cnt":2101.386623},{"name":"cpu-clock","cnt":2101.320958},{"name":"max-rss","cnt":356304.0},{"name":"wall-time","cnt":1.765169755},{"name":"instructions:u","cnt":10317342830.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":174266719509.0},{"name":"faults","cnt":718621.0},{"name":"task-clock","cnt":44569.335652},{"name":"instructions:u","cnt":189563802367.0},{"name":"wall-time","cnt":44.613806142},{"name":"max-rss","cnt":2430416.0},{"name":"cpu-clock","cnt":44569.384334}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":217095285454.0},{"name":"max-rss","cnt":3891320.0},{"name":"task-clock","cnt":55820.00708},{"name":"instructions:u","cnt":245756276534.0},{"name":"wall-time","cnt":55.863962523},{"name":"faults","cnt":1130380.0},{"name":"cpu-clock","cnt":55820.045455}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":88550601143.0},{"name":"task-clock","cnt":20299.904628},{"name":"cpu-clock","cnt":20299.909489},{"name":"faults","cnt":1058812.0},{"name":"wall-time","cnt":19.589700039},{"name":"max-rss","cnt":4254208.0},{"name":"cycles:u","cnt":76088105717.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":1056120.0},{"name":"instructions:u","cnt":88665652420.0},{"name":"wall-time","cnt":20.087422609},{"name":"task-clock","cnt":20836.543675},{"name":"max-rss","cnt":4251108.0},{"name":"cpu-clock","cnt":20836.553742},{"name":"cycles:u","cnt":76327391896.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"instructions:u","cnt":91562231225.0},{"name":"max-rss","cnt":4217152.0},{"name":"wall-time","cnt":20.156801225},{"name":"task-clock","cnt":20876.80176},{"name":"faults","cnt":1055130.0},{"name":"cpu-clock","cnt":20876.812117},{"name":"cycles:u","cnt":78398651812.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"task-clock","cnt":43817.436732},{"name":"wall-time","cnt":43.073591997},{"name":"cycles:u","cnt":168472190483.0},{"name":"instructions:u","cnt":187963064880.0},{"name":"faults","cnt":1317594.0},{"name":"cpu-clock","cnt":43817.453714},{"name":"max-rss","cnt":4809216.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"faults","cnt":1911827.0},{"name":"wall-time","cnt":92.240684606},{"name":"max-rss","cnt":5472556.0},{"name":"cpu-clock","cnt":200973.744798},{"name":"cycles:u","cnt":762189152454.0},{"name":"instructions:u","cnt":772563344610.0},{"name":"task-clock","cnt":200973.60342}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":387101.066867},{"name":"cycles:u","cnt":1464204202609.0},{"name":"cpu-clock","cnt":387101.453431},{"name":"max-rss","cnt":8490956.0},{"name":"instructions:u","cnt":1697526526205.0},{"name":"faults","cnt":3033464.0},{"name":"wall-time","cnt":197.750106925}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":30473.01376},{"name":"faults","cnt":1481109.0},{"name":"task-clock","cnt":30474.94233},{"name":"wall-time","cnt":43.904174339},{"name":"instructions:u","cnt":119767274438.0},{"name":"max-rss","cnt":9099948.0},{"name":"cycles:u","cnt":104219579903.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":1581232.0},{"name":"max-rss","cnt":8979412.0},{"name":"cpu-clock","cnt":35246.820461},{"name":"instructions:u","cnt":139157252205.0},{"name":"task-clock","cnt":35248.977509},{"name":"wall-time","cnt":45.951732194},{"name":"cycles:u","cnt":122834300984.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"wall-time","cnt":42.782599912},{"name":"max-rss","cnt":9151988.0},{"name":"cpu-clock","cnt":31701.848683},{"name":"instructions:u","cnt":126571917420.0},{"name":"faults","cnt":1500435.0},{"name":"cycles:u","cnt":110777750208.0},{"name":"task-clock","cnt":31703.383096}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"task-clock","cnt":346709.728082},{"name":"instructions:u","cnt":1497968321875.0},{"name":"wall-time","cnt":165.527499188},{"name":"faults","cnt":3207763.0},{"name":"max-rss","cnt":9515952.0},{"name":"cpu-clock","cnt":346709.965268},{"name":"cycles:u","cnt":1304262099286.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"cpu-clock","cnt":790793.490325},{"name":"faults","cnt":2582121.0},{"name":"task-clock","cnt":790793.0062},{"name":"instructions:u","cnt":2245908334679.0},{"name":"cycles:u","cnt":2985090425730.0},{"name":"max-rss","cnt":4400536.0},{"name":"wall-time","cnt":185.699393029}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":5465012.0},{"name":"instructions:u","cnt":3221508890945.0},{"name":"cycles:u","cnt":4178975803219.0},{"name":"cpu-clock","cnt":1111218.467025},{"name":"faults","cnt":3309448.0},{"name":"wall-time","cnt":214.081338102},{"name":"task-clock","cnt":1111215.303147}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":5785792.0},{"name":"instructions:u","cnt":113386681491.0},{"name":"task-clock","cnt":28326.609996},{"name":"cpu-clock","cnt":28325.773953},{"name":"faults","cnt":1403293.0},{"name":"wall-time","cnt":26.291568583},{"name":"cycles:u","cnt":101842456221.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1491040767169.0},{"name":"wall-time","cnt":85.5174928},{"name":"max-rss","cnt":6916568.0},{"name":"instructions:u","cnt":1148458403587.0},{"name":"cpu-clock","cnt":397304.05716},{"name":"task-clock","cnt":397303.791923},{"name":"faults","cnt":2142984.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"cycles:u","cnt":414073864019.0},{"name":"faults","cnt":1756960.0},{"name":"cpu-clock","cnt":108712.504513},{"name":"max-rss","cnt":6643916.0},{"name":"task-clock","cnt":108712.818161},{"name":"instructions:u","cnt":419582245462.0},{"name":"wall-time","cnt":67.756105158}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1082884.19598},{"name":"max-rss","cnt":6743332.0},{"name":"cycles:u","cnt":4067137100206.0},{"name":"faults","cnt":3559245.0},{"name":"wall-time","cnt":197.484729306},{"name":"instructions:u","cnt":3119492898336.0},{"name":"task-clock","cnt":1082881.772953}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":11379513677.0},{"name":"task-clock","cnt":2314.02589},{"name":"max-rss","cnt":250656.0},{"name":"cpu-clock","cnt":2314.026314},{"name":"faults","cnt":35138.0},{"name":"wall-time","cnt":2.3399309},{"name":"cycles:u","cnt":9016161811.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":11286339741.0},{"name":"max-rss","cnt":325300.0},{"name":"instructions:u","cnt":14354406183.0},{"name":"cpu-clock","cnt":2903.702284},{"name":"wall-time","cnt":2.922031817},{"name":"task-clock","cnt":2903.704686},{"name":"faults","cnt":53925.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2629334111.0},{"name":"faults","cnt":47801.0},{"name":"cpu-clock","cnt":727.002036},{"name":"instructions:u","cnt":3602888097.0},{"name":"wall-time","cnt":0.709982616},{"name":"task-clock","cnt":727.003339},{"name":"max-rss","cnt":295644.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":3318928652.0},{"name":"max-rss","cnt":312804.0},{"name":"task-clock","cnt":910.099734},{"name":"wall-time","cnt":0.89872804},{"name":"cpu-clock","cnt":910.108188},{"name":"faults","cnt":50206.0},{"name":"instructions:u","cnt":4307947184.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":14255.792387},{"name":"instructions:u","cnt":61376370539.0},{"name":"task-clock","cnt":14255.778736},{"name":"wall-time","cnt":10.412912172},{"name":"max-rss","cnt":955772.0},{"name":"faults","cnt":343741.0},{"name":"cycles:u","cnt":53535330174.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":18652.567731},{"name":"instructions:u","cnt":71372846467.0},{"name":"cycles:u","cnt":68965735631.0},{"name":"faults","cnt":280756.0},{"name":"wall-time","cnt":9.546594895},{"name":"max-rss","cnt":708072.0},{"name":"task-clock","cnt":18652.438126}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":3861.775416},{"name":"max-rss","cnt":497324.0},{"name":"wall-time","cnt":3.784897161},{"name":"cycles:u","cnt":12497903746.0},{"name":"instructions:u","cnt":14469002965.0},{"name":"cpu-clock","cnt":3861.612345},{"name":"faults","cnt":211192.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":5193.376674},{"name":"instructions:u","cnt":19563535533.0},{"name":"cycles:u","cnt":17773673518.0},{"name":"task-clock","cnt":5193.495909},{"name":"wall-time","cnt":4.321239909},{"name":"max-rss","cnt":599880.0},{"name":"faults","cnt":237372.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":289699199519.0},{"name":"cycles:u","cnt":355045568526.0},{"name":"wall-time","cnt":19.087473043},{"name":"cpu-clock","cnt":93944.116048},{"name":"task-clock","cnt":93944.059714},{"name":"max-rss","cnt":776044.0},{"name":"faults","cnt":239877.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":21.015290442},{"name":"instructions:u","cnt":315997126293.0},{"name":"cycles:u","cnt":399898559354.0},{"name":"task-clock","cnt":106012.045821},{"name":"faults","cnt":249878.0},{"name":"max-rss","cnt":753356.0},{"name":"cpu-clock","cnt":106012.244333}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8069678822.0},{"name":"cpu-clock","cnt":2360.031899},{"name":"instructions:u","cnt":8955544549.0},{"name":"task-clock","cnt":2360.236391},{"name":"wall-time","cnt":2.23639762},{"name":"faults","cnt":159715.0},{"name":"max-rss","cnt":515848.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":58754.938783},{"name":"faults","cnt":226476.0},{"name":"cycles:u","cnt":220891737607.0},{"name":"wall-time","cnt":11.570057339},{"name":"max-rss","cnt":723712.0},{"name":"task-clock","cnt":58754.856079},{"name":"instructions:u","cnt":174525693588.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":4975.145493},{"name":"instructions:u","cnt":29581759323.0},{"name":"cycles:u","cnt":19615852316.0},{"name":"cpu-clock","cnt":4975.145707},{"name":"faults","cnt":41527.0},{"name":"wall-time","cnt":5.025969574},{"name":"max-rss","cnt":256324.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":351876.0},{"name":"faults","cnt":65301.0},{"name":"wall-time","cnt":5.856504804},{"name":"instructions:u","cnt":33429375248.0},{"name":"task-clock","cnt":5821.008652},{"name":"cycles:u","cnt":22867105376.0},{"name":"cpu-clock","cnt":5821.023482}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":907.876084},{"name":"faults","cnt":63879.0},{"name":"wall-time","cnt":0.89547571},{"name":"max-rss","cnt":334220.0},{"name":"cycles:u","cnt":3298316044.0},{"name":"task-clock","cnt":907.877935},{"name":"instructions:u","cnt":4218193844.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":32422124552.0},{"name":"cpu-clock","cnt":5533.239049},{"name":"faults","cnt":49598.0},{"name":"max-rss","cnt":298916.0},{"name":"task-clock","cnt":5533.231872},{"name":"wall-time","cnt":5.434680087},{"name":"cycles:u","cnt":21748684573.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":410700.0},{"name":"wall-time","cnt":6.438016262},{"name":"task-clock","cnt":6564.011659},{"name":"instructions:u","cnt":37339181064.0},{"name":"cycles:u","cnt":25664314739.0},{"name":"faults","cnt":78287.0},{"name":"cpu-clock","cnt":6564.041404}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":380348.0},{"name":"task-clock","cnt":1085.959552},{"name":"cycles:u","cnt":3899293861.0},{"name":"instructions:u","cnt":5145861893.0},{"name":"cpu-clock","cnt":1085.938784},{"name":"wall-time","cnt":1.062491714},{"name":"faults","cnt":73019.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5903.916104},{"name":"faults","cnt":51471.0},{"name":"cycles:u","cnt":23116635263.0},{"name":"max-rss","cnt":306616.0},{"name":"cpu-clock","cnt":5903.902424},{"name":"wall-time","cnt":5.449453697},{"name":"instructions:u","cnt":33332622906.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":27004672620.0},{"name":"wall-time","cnt":6.426220565},{"name":"instructions:u","cnt":38259430021.0},{"name":"max-rss","cnt":418624.0},{"name":"faults","cnt":80276.0},{"name":"task-clock","cnt":6930.228366},{"name":"cpu-clock","cnt":6930.212389}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1068.869287},{"name":"faults","cnt":72186.0},{"name":"max-rss","cnt":376860.0},{"name":"cpu-clock","cnt":1068.837459},{"name":"wall-time","cnt":1.04822223},{"name":"cycles:u","cnt":3839148879.0},{"name":"instructions:u","cnt":5140220421.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":27075.217922},{"name":"cycles:u","cnt":106493734718.0},{"name":"cpu-clock","cnt":27075.237301},{"name":"wall-time","cnt":27.130467316},{"name":"faults","cnt":332767.0},{"name":"instructions:u","cnt":121522171531.0},{"name":"max-rss","cnt":1366072.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":33815.813093},{"name":"instructions:u","cnt":152713711808.0},{"name":"cycles:u","cnt":132159515940.0},{"name":"wall-time","cnt":33.853351524},{"name":"max-rss","cnt":2204872.0},{"name":"faults","cnt":573289.0},{"name":"cpu-clock","cnt":33815.827341}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":508277.0},{"name":"cpu-clock","cnt":10610.569671},{"name":"instructions:u","cnt":47786994783.0},{"name":"wall-time","cnt":10.223524686},{"name":"cycles:u","cnt":39765880441.0},{"name":"max-rss","cnt":2123468.0},{"name":"task-clock","cnt":10610.565516}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":20457.720926},{"name":"wall-time","cnt":20.075063634},{"name":"instructions:u","cnt":92516877300.0},{"name":"cycles:u","cnt":77833913759.0},{"name":"max-rss","cnt":2355896.0},{"name":"faults","cnt":571996.0},{"name":"task-clock","cnt":20457.712923}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":21698.863509},{"name":"wall-time","cnt":21.303094192},{"name":"instructions:u","cnt":95291767523.0},{"name":"cycles:u","cnt":82702126560.0},{"name":"cpu-clock","cnt":21698.859298},{"name":"faults","cnt":591034.0},{"name":"max-rss","cnt":2447572.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"max-rss","cnt":2778012.0},{"name":"faults","cnt":755118.0},{"name":"instructions:u","cnt":296884013955.0},{"name":"cpu-clock","cnt":72794.518191},{"name":"task-clock","cnt":72794.472322},{"name":"wall-time","cnt":41.583792632},{"name":"cycles:u","cnt":278433766352.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":3457152.0},{"name":"task-clock","cnt":115747.540656},{"name":"instructions:u","cnt":533724189593.0},{"name":"cpu-clock","cnt":115748.059682},{"name":"cycles:u","cnt":439315961331.0},{"name":"faults","cnt":1099383.0},{"name":"wall-time","cnt":66.628330057}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":17.138442209},{"name":"faults","cnt":701886.0},{"name":"instructions:u","cnt":62208819346.0},{"name":"task-clock","cnt":14660.591037},{"name":"cpu-clock","cnt":14659.95538},{"name":"max-rss","cnt":3616888.0},{"name":"cycles:u","cnt":51386244734.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":40.163690409},{"name":"max-rss","cnt":3880580.0},{"name":"cpu-clock","cnt":66394.660285},{"name":"task-clock","cnt":66394.756796},{"name":"faults","cnt":998999.0},{"name":"cycles:u","cnt":248430167140.0},{"name":"instructions:u","cnt":300147723548.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":91918.127187},{"name":"cycles:u","cnt":345471840045.0},{"name":"faults","cnt":1113467.0},{"name":"max-rss","cnt":4010284.0},{"name":"instructions:u","cnt":424909403352.0},{"name":"cpu-clock","cnt":91918.325897},{"name":"wall-time","cnt":50.350501991}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"instructions:u","cnt":797299664364.0},{"name":"cpu-clock","cnt":255968.261673},{"name":"task-clock","cnt":255968.076485},{"name":"wall-time","cnt":61.486270661},{"name":"max-rss","cnt":2297200.0},{"name":"faults","cnt":732636.0},{"name":"cycles:u","cnt":968799656548.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":396509.548023},{"name":"max-rss","cnt":2997120.0},{"name":"faults","cnt":1050293.0},{"name":"instructions:u","cnt":1253147018808.0},{"name":"task-clock","cnt":396508.610148},{"name":"cycles:u","cnt":1492770238731.0},{"name":"wall-time","cnt":83.081611054}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":53977629951.0},{"name":"wall-time","cnt":11.972787333},{"name":"task-clock","cnt":12894.237101},{"name":"max-rss","cnt":2793408.0},{"name":"faults","cnt":669220.0},{"name":"cycles:u","cnt":46155697474.0},{"name":"cpu-clock","cnt":12893.610441}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1058253729655.0},{"name":"cycles:u","cnt":1258757771510.0},{"name":"faults","cnt":1129287.0},{"name":"max-rss","cnt":3472076.0},{"name":"task-clock","cnt":335209.549093},{"name":"cpu-clock","cnt":335210.186373},{"name":"wall-time","cnt":62.031997729}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":1129058140059.0},{"name":"faults","cnt":1150556.0},{"name":"cpu-clock","cnt":361567.731074},{"name":"max-rss","cnt":3446892.0},{"name":"cycles:u","cnt":1357413492925.0},{"name":"wall-time","cnt":66.696728359},{"name":"task-clock","cnt":361566.944254}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":701.042712},{"name":"cycles:u","cnt":2632289670.0},{"name":"cpu-clock","cnt":701.05127},{"name":"wall-time","cnt":0.718941006},{"name":"faults","cnt":14864.0},{"name":"instructions:u","cnt":3226126566.0},{"name":"max-rss","cnt":151852.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":22887.0},{"name":"wall-time","cnt":0.89456721},{"name":"max-rss","cnt":184300.0},{"name":"cycles:u","cnt":3348310657.0},{"name":"instructions:u","cnt":4085438701.0},{"name":"task-clock","cnt":876.784302},{"name":"cpu-clock","cnt":876.792445}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":274.619854},{"name":"cycles:u","cnt":957753809.0},{"name":"faults","cnt":21436.0},{"name":"wall-time","cnt":0.277686749},{"name":"cpu-clock","cnt":274.618597},{"name":"instructions:u","cnt":1325488424.0},{"name":"max-rss","cnt":165556.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1162354710.0},{"name":"faults","cnt":22715.0},{"name":"wall-time","cnt":0.334371615},{"name":"cpu-clock","cnt":330.394731},{"name":"max-rss","cnt":185152.0},{"name":"instructions:u","cnt":1535679514.0},{"name":"task-clock","cnt":330.403141}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":10793534393.0},{"name":"max-rss","cnt":244580.0},{"name":"wall-time","cnt":1.466253734},{"name":"instructions:u","cnt":11898292266.0},{"name":"faults","cnt":36416.0},{"name":"task-clock","cnt":2850.474763},{"name":"cpu-clock","cnt":2850.500228}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":290084.0},{"name":"task-clock","cnt":3457.196704},{"name":"cpu-clock","cnt":3457.26343},{"name":"faults","cnt":47733.0},{"name":"wall-time","cnt":1.747896348},{"name":"cycles:u","cnt":12954699054.0},{"name":"instructions:u","cnt":14450057634.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":227512.0},{"name":"faults","cnt":32787.0},{"name":"cpu-clock","cnt":429.90493},{"name":"instructions:u","cnt":1908105299.0},{"name":"wall-time","cnt":0.416784164},{"name":"cycles:u","cnt":1436092690.0},{"name":"task-clock","cnt":429.958148}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":37049.0},{"name":"wall-time","cnt":0.523170518},{"name":"max-rss","cnt":257872.0},{"name":"instructions:u","cnt":2689289163.0},{"name":"cycles:u","cnt":2144203488.0},{"name":"task-clock","cnt":628.990977},{"name":"cpu-clock","cnt":628.929357}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":44599384677.0},{"name":"task-clock","cnt":14470.009129},{"name":"faults","cnt":41312.0},{"name":"max-rss","cnt":261344.0},{"name":"cycles:u","cnt":54581772398.0},{"name":"wall-time","cnt":2.94035917},{"name":"cpu-clock","cnt":14470.040652}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":60329242630.0},{"name":"faults","cnt":52910.0},{"name":"wall-time","cnt":3.244508714},{"name":"cpu-clock","cnt":16032.951307},{"name":"max-rss","cnt":304380.0},{"name":"task-clock","cnt":16032.892723},{"name":"instructions:u","cnt":48165615596.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.411223539},{"name":"task-clock","cnt":428.69379},{"name":"faults","cnt":32986.0},{"name":"instructions:u","cnt":1925545224.0},{"name":"cpu-clock","cnt":428.655287},{"name":"cycles:u","cnt":1466585476.0},{"name":"max-rss","cnt":219520.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":24406399457.0},{"name":"task-clock","cnt":8269.366408},{"name":"cycles:u","cnt":31009634458.0},{"name":"max-rss","cnt":298792.0},{"name":"cpu-clock","cnt":8269.350957},{"name":"faults","cnt":50623.0},{"name":"wall-time","cnt":1.666612788}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":1277110601.0},{"name":"cpu-clock","cnt":344.407321},{"name":"faults","cnt":11301.0},{"name":"wall-time","cnt":0.362449656},{"name":"instructions:u","cnt":1755591807.0},{"name":"task-clock","cnt":344.409223},{"name":"max-rss","cnt":148768.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":452.879951},{"name":"cycles:u","cnt":1691533617.0},{"name":"max-rss","cnt":173184.0},{"name":"faults","cnt":17390.0},{"name":"instructions:u","cnt":2266157056.0},{"name":"wall-time","cnt":0.471107691},{"name":"task-clock","cnt":452.882002}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":430181177.0},{"name":"instructions:u","cnt":634838245.0},{"name":"cpu-clock","cnt":135.160461},{"name":"faults","cnt":16187.0},{"name":"wall-time","cnt":0.145996935},{"name":"task-clock","cnt":135.162856},{"name":"max-rss","cnt":148432.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1451033137.0},{"name":"faults","cnt":19557.0},{"name":"max-rss","cnt":182524.0},{"name":"cpu-clock","cnt":310.12059},{"name":"task-clock","cnt":310.121707},{"name":"wall-time","cnt":0.319854052},{"name":"cycles:u","cnt":1107387463.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":183764.0},{"name":"wall-time","cnt":0.304213851},{"name":"cpu-clock","cnt":293.801924},{"name":"cycles:u","cnt":1042774765.0},{"name":"instructions:u","cnt":1382790733.0},{"name":"faults","cnt":19768.0},{"name":"task-clock","cnt":293.803646}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cpu-clock","cnt":4268.354663},{"name":"faults","cnt":91721.0},{"name":"wall-time","cnt":2.472626423},{"name":"max-rss","cnt":303576.0},{"name":"task-clock","cnt":4268.341275},{"name":"cycles:u","cnt":15611437794.0},{"name":"instructions:u","cnt":17573121721.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":340248.0},{"name":"task-clock","cnt":5112.92053},{"name":"cycles:u","cnt":18567034228.0},{"name":"cpu-clock","cnt":5113.0232},{"name":"faults","cnt":103673.0},{"name":"instructions:u","cnt":20896937594.0},{"name":"wall-time","cnt":2.839317646}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":271784.0},{"name":"wall-time","cnt":1.331655562},{"name":"task-clock","cnt":1339.062233},{"name":"instructions:u","cnt":5192201556.0},{"name":"cycles:u","cnt":4206125612.0},{"name":"cpu-clock","cnt":1338.984457},{"name":"faults","cnt":85609.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":359376.0},{"name":"cpu-clock","cnt":4921.376869},{"name":"wall-time","cnt":2.587985574},{"name":"task-clock","cnt":4921.301348},{"name":"instructions:u","cnt":19400610989.0},{"name":"faults","cnt":109051.0},{"name":"cycles:u","cnt":17595173184.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":109215.0},{"name":"cycles:u","cnt":17484756449.0},{"name":"task-clock","cnt":4888.443307},{"name":"cpu-clock","cnt":4888.372152},{"name":"max-rss","cnt":363828.0},{"name":"instructions:u","cnt":19409989425.0},{"name":"wall-time","cnt":2.552972413}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"faults","cnt":79302.0},{"name":"cycles:u","cnt":86027114079.0},{"name":"cpu-clock","cnt":22852.942457},{"name":"wall-time","cnt":4.161084834},{"name":"instructions:u","cnt":68098919678.0},{"name":"task-clock","cnt":22852.94151},{"name":"max-rss","cnt":338984.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":359764.0},{"name":"cycles:u","cnt":101891453261.0},{"name":"faults","cnt":84815.0},{"name":"cpu-clock","cnt":27128.940856},{"name":"wall-time","cnt":4.635347068},{"name":"task-clock","cnt":27128.850137},{"name":"instructions:u","cnt":78302222630.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2295178524.0},{"name":"faults","cnt":59477.0},{"name":"wall-time","cnt":0.704851651},{"name":"instructions:u","cnt":2740245065.0},{"name":"max-rss","cnt":258652.0},{"name":"task-clock","cnt":721.104767},{"name":"cpu-clock","cnt":720.986081}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":76732923906.0},{"name":"cycles:u","cnt":100995700855.0},{"name":"max-rss","cnt":380380.0},{"name":"task-clock","cnt":26926.288956},{"name":"cpu-clock","cnt":26926.397008},{"name":"wall-time","cnt":4.286383103},{"name":"faults","cnt":89720.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.352864617},{"name":"cpu-clock","cnt":18069.379131},{"name":"max-rss","cnt":377108.0},{"name":"task-clock","cnt":18069.369247},{"name":"cycles:u","cnt":67707969443.0},{"name":"instructions:u","cnt":53388335891.0},{"name":"faults","cnt":87768.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":3205.74514},{"name":"max-rss","cnt":434708.0},{"name":"instructions:u","cnt":18200279309.0},{"name":"cpu-clock","cnt":3205.745338},{"name":"faults","cnt":90097.0},{"name":"cycles:u","cnt":12424559143.0},{"name":"wall-time","cnt":3.278525723}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":4008.407328},{"name":"task-clock","cnt":4008.393114},{"name":"faults","cnt":98036.0},{"name":"max-rss","cnt":467352.0},{"name":"wall-time","cnt":4.044702664},{"name":"cycles:u","cnt":15557251365.0},{"name":"instructions:u","cnt":23564405963.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":6922062512.0},{"name":"cpu-clock","cnt":1095.689406},{"name":"wall-time","cnt":1.132582526},{"name":"cycles:u","cnt":3994692593.0},{"name":"max-rss","cnt":366912.0},{"name":"task-clock","cnt":1095.700874},{"name":"faults","cnt":75253.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":14935430594.0},{"name":"task-clock","cnt":3867.238735},{"name":"max-rss","cnt":503112.0},{"name":"faults","cnt":106284.0},{"name":"instructions:u","cnt":23610861871.0},{"name":"cpu-clock","cnt":3867.218778},{"name":"wall-time","cnt":3.901901732}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"instructions:u","cnt":18719087780.0},{"name":"cycles:u","cnt":12727092805.0},{"name":"faults","cnt":100689.0},{"name":"cpu-clock","cnt":3387.370395},{"name":"max-rss","cnt":457104.0},{"name":"task-clock","cnt":3387.379315},{"name":"wall-time","cnt":3.403155982}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":24106041177.0},{"name":"wall-time","cnt":4.006173324},{"name":"faults","cnt":110641.0},{"name":"cycles:u","cnt":15384717785.0},{"name":"task-clock","cnt":4012.393164},{"name":"max-rss","cnt":500032.0},{"name":"cpu-clock","cnt":4012.366473}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1149.537155},{"name":"task-clock","cnt":1149.557036},{"name":"max-rss","cnt":387092.0},{"name":"cycles:u","cnt":4074355287.0},{"name":"instructions:u","cnt":7304429104.0},{"name":"faults","cnt":83652.0},{"name":"wall-time","cnt":1.180554705}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":4027.150016},{"name":"cycles:u","cnt":15368488513.0},{"name":"faults","cnt":117151.0},{"name":"cpu-clock","cnt":4027.126612},{"name":"instructions:u","cnt":24072538647.0},{"name":"wall-time","cnt":4.020897248},{"name":"max-rss","cnt":528764.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"task-clock","cnt":3402.954966},{"name":"wall-time","cnt":3.414708822},{"name":"cycles:u","cnt":13054300378.0},{"name":"faults","cnt":93954.0},{"name":"max-rss","cnt":440676.0},{"name":"instructions:u","cnt":18750319841.0},{"name":"cpu-clock","cnt":3402.950284}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":15166505167.0},{"name":"instructions:u","cnt":24051537539.0},{"name":"max-rss","cnt":499924.0},{"name":"cpu-clock","cnt":4021.462107},{"name":"faults","cnt":108775.0},{"name":"task-clock","cnt":4021.488698},{"name":"wall-time","cnt":4.013772625}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.16001127},{"name":"cycles:u","cnt":4019841219.0},{"name":"task-clock","cnt":1129.794997},{"name":"instructions:u","cnt":7248319063.0},{"name":"max-rss","cnt":386020.0},{"name":"cpu-clock","cnt":1129.79988},{"name":"faults","cnt":82115.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":4.085325814},{"name":"max-rss","cnt":522256.0},{"name":"cpu-clock","cnt":4092.635769},{"name":"instructions:u","cnt":23994120930.0},{"name":"task-clock","cnt":4092.642295},{"name":"faults","cnt":114687.0},{"name":"cycles:u","cnt":15673357822.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":34621081792.0},{"name":"faults","cnt":114725.0},{"name":"cpu-clock","cnt":5175.267637},{"name":"task-clock","cnt":5175.267612},{"name":"wall-time","cnt":5.244284795},{"name":"max-rss","cnt":534772.0},{"name":"cycles:u","cnt":19962448053.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.222860654},{"name":"cpu-clock","cnt":6187.381292},{"name":"instructions:u","cnt":44181776795.0},{"name":"max-rss","cnt":576932.0},{"name":"cycles:u","cnt":24044302774.0},{"name":"faults","cnt":124973.0},{"name":"task-clock","cnt":6187.380479}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1726.170029},{"name":"cycles:u","cnt":6253584837.0},{"name":"max-rss","cnt":568896.0},{"name":"instructions:u","cnt":12329150596.0},{"name":"faults","cnt":125382.0},{"name":"cpu-clock","cnt":1726.168948},{"name":"wall-time","cnt":1.756037144}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5832.588197},{"name":"wall-time","cnt":5.466458891},{"name":"faults","cnt":132425.0},{"name":"cpu-clock","cnt":5832.605937},{"name":"max-rss","cnt":612452.0},{"name":"cycles:u","cnt":22486854629.0},{"name":"instructions:u","cnt":37728297646.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":6836.398145},{"name":"wall-time","cnt":6.394684103},{"name":"cpu-clock","cnt":6836.427875},{"name":"cycles:u","cnt":26372012880.0},{"name":"faults","cnt":142216.0},{"name":"instructions:u","cnt":47574614832.0},{"name":"max-rss","cnt":669296.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.808751756},{"name":"cpu-clock","cnt":1787.028231},{"name":"cycles:u","cnt":6415611298.0},{"name":"faults","cnt":127272.0},{"name":"max-rss","cnt":607592.0},{"name":"task-clock","cnt":1787.049169},{"name":"instructions:u","cnt":12463018249.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":5.731477608},{"name":"cpu-clock","cnt":6966.686628},{"name":"faults","cnt":142526.0},{"name":"max-rss","cnt":664592.0},{"name":"task-clock","cnt":6966.708113},{"name":"instructions:u","cnt":42620900254.0},{"name":"cycles:u","cnt":26583709791.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":709268.0},{"name":"instructions:u","cnt":52139182019.0},{"name":"task-clock","cnt":8102.944887},{"name":"faults","cnt":154482.0},{"name":"wall-time","cnt":6.500434629},{"name":"cpu-clock","cnt":8102.952169},{"name":"cycles:u","cnt":31067996719.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1882.995336},{"name":"task-clock","cnt":1883.024517},{"name":"faults","cnt":129238.0},{"name":"cycles:u","cnt":6795242590.0},{"name":"instructions:u","cnt":12613528282.0},{"name":"max-rss","cnt":614508.0},{"name":"wall-time","cnt":1.888754822}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":26042.0},{"name":"cycles:u","cnt":14525001424.0},{"name":"instructions:u","cnt":31023880699.0},{"name":"wall-time","cnt":3.715258054},{"name":"max-rss","cnt":187452.0},{"name":"cpu-clock","cnt":3678.026389},{"name":"task-clock","cnt":3678.025333}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3963.929234},{"name":"instructions:u","cnt":34986941301.0},{"name":"cycles:u","cnt":15662206052.0},{"name":"cpu-clock","cnt":3963.951076},{"name":"wall-time","cnt":3.99994934},{"name":"max-rss","cnt":193080.0},{"name":"faults","cnt":25609.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":15637.0},{"name":"cpu-clock","cnt":194.224569},{"name":"instructions:u","cnt":1217136150.0},{"name":"cycles:u","cnt":670262948.0},{"name":"max-rss","cnt":149320.0},{"name":"task-clock","cnt":194.22688},{"name":"wall-time","cnt":0.227835116}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":3662.056113},{"name":"wall-time","cnt":3.677352871},{"name":"cpu-clock","cnt":3662.05688},{"name":"max-rss","cnt":195984.0},{"name":"faults","cnt":26430.0},{"name":"instructions:u","cnt":32288908025.0},{"name":"cycles:u","cnt":14446259100.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":3884.094272},{"name":"instructions:u","cnt":32323170064.0},{"name":"max-rss","cnt":230096.0},{"name":"wall-time","cnt":3.883693135},{"name":"cpu-clock","cnt":3884.088915},{"name":"faults","cnt":35166.0},{"name":"cycles:u","cnt":15265706707.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":34186.0},{"name":"cycles:u","cnt":16528897723.0},{"name":"max-rss","cnt":234016.0},{"name":"instructions:u","cnt":36658400508.0},{"name":"cpu-clock","cnt":4199.088146},{"name":"wall-time","cnt":4.174751551},{"name":"task-clock","cnt":4199.084885}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":255.766797},{"name":"cpu-clock","cnt":255.775897},{"name":"instructions:u","cnt":1701850879.0},{"name":"max-rss","cnt":177904.0},{"name":"cycles:u","cnt":871677105.0},{"name":"wall-time","cnt":0.284814332},{"name":"faults","cnt":21243.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":33574669956.0},{"name":"cycles:u","cnt":15176851146.0},{"name":"task-clock","cnt":3856.234019},{"name":"cpu-clock","cnt":3856.221485},{"name":"faults","cnt":32625.0},{"name":"wall-time","cnt":3.868847486},{"name":"max-rss","cnt":224084.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":33512124299.0},{"name":"cpu-clock","cnt":3985.033998},{"name":"cycles:u","cnt":15694618617.0},{"name":"task-clock","cnt":3985.036262},{"name":"wall-time","cnt":3.990282618},{"name":"max-rss","cnt":233016.0},{"name":"faults","cnt":33738.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":37834118602.0},{"name":"faults","cnt":35823.0},{"name":"cycles:u","cnt":17000521862.0},{"name":"max-rss","cnt":242444.0},{"name":"cpu-clock","cnt":4316.925642},{"name":"task-clock","cnt":4316.928974},{"name":"wall-time","cnt":4.294423594}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":871508046.0},{"name":"wall-time","cnt":0.284599556},{"name":"task-clock","cnt":253.904152},{"name":"instructions:u","cnt":1699185815.0},{"name":"cpu-clock","cnt":253.910476},{"name":"faults","cnt":21277.0},{"name":"max-rss","cnt":178576.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":3.826725416},{"name":"task-clock","cnt":3812.970263},{"name":"max-rss","cnt":222932.0},{"name":"instructions:u","cnt":33576085331.0},{"name":"cycles:u","cnt":15002767603.0},{"name":"faults","cnt":32285.0},{"name":"cpu-clock","cnt":3812.986107}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":69.79471},{"name":"instructions:u","cnt":345866081.0},{"name":"cycles:u","cnt":227276336.0},{"name":"task-clock","cnt":69.796136},{"name":"max-rss","cnt":103404.0},{"name":"faults","cnt":5399.0},{"name":"wall-time","cnt":0.088289968}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":268457825.0},{"name":"cpu-clock","cnt":82.052286},{"name":"faults","cnt":6737.0},{"name":"instructions:u","cnt":391459120.0},{"name":"wall-time","cnt":0.100158981},{"name":"max-rss","cnt":108528.0},{"name":"task-clock","cnt":82.063791}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":5866.0},{"name":"instructions:u","cnt":177613840.0},{"name":"max-rss","cnt":90952.0},{"name":"wall-time","cnt":0.061002414},{"name":"task-clock","cnt":43.470513},{"name":"cpu-clock","cnt":43.46807},{"name":"cycles:u","cnt":121406504.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":228142692.0},{"name":"faults","cnt":6636.0},{"name":"cpu-clock","cnt":53.098478},{"name":"task-clock","cnt":53.100888},{"name":"cycles:u","cnt":154585111.0},{"name":"wall-time","cnt":0.071200257},{"name":"max-rss","cnt":107932.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"cycles:u","cnt":513339427.0},{"name":"max-rss","cnt":124580.0},{"name":"faults","cnt":13202.0},{"name":"task-clock","cnt":166.474725},{"name":"cpu-clock","cnt":166.456291},{"name":"instructions:u","cnt":748639088.0},{"name":"wall-time","cnt":0.166187146}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":185.731422},{"name":"wall-time","cnt":0.18222783},{"name":"cycles:u","cnt":581704386.0},{"name":"faults","cnt":15031.0},{"name":"cpu-clock","cnt":185.701085},{"name":"instructions:u","cnt":823028267.0},{"name":"max-rss","cnt":132028.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":114188.0},{"name":"cycles:u","cnt":337729558.0},{"name":"faults","cnt":13482.0},{"name":"cpu-clock","cnt":120.299111},{"name":"task-clock","cnt":120.300924},{"name":"wall-time","cnt":0.133852847},{"name":"instructions:u","cnt":514946453.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":640567102.0},{"name":"cycles:u","cnt":460526512.0},{"name":"cpu-clock","cnt":155.341257},{"name":"faults","cnt":14941.0},{"name":"wall-time","cnt":0.151415467},{"name":"task-clock","cnt":155.349111},{"name":"max-rss","cnt":131812.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":12337.0},{"name":"cpu-clock","cnt":160.619779},{"name":"max-rss","cnt":123696.0},{"name":"instructions:u","cnt":752035945.0},{"name":"task-clock","cnt":160.614985},{"name":"wall-time","cnt":0.16794034},{"name":"cycles:u","cnt":503391183.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.181932422},{"name":"task-clock","cnt":182.391167},{"name":"instructions:u","cnt":841460306.0},{"name":"faults","cnt":14329.0},{"name":"cycles:u","cnt":575868004.0},{"name":"cpu-clock","cnt":182.39585},{"name":"max-rss","cnt":132028.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":117.971166},{"name":"cpu-clock","cnt":117.96706},{"name":"max-rss","cnt":112960.0},{"name":"cycles:u","cnt":337338760.0},{"name":"wall-time","cnt":0.133645196},{"name":"faults","cnt":13185.0},{"name":"instructions:u","cnt":506104444.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":128.044828},{"name":"wall-time","cnt":0.139003562},{"name":"faults","cnt":13633.0},{"name":"instructions:u","cnt":541856758.0},{"name":"cpu-clock","cnt":128.029927},{"name":"cycles:u","cnt":370527831.0},{"name":"max-rss","cnt":119824.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":494.249269},{"name":"wall-time","cnt":0.512227107},{"name":"max-rss","cnt":213988.0},{"name":"instructions:u","cnt":2456550435.0},{"name":"faults","cnt":34657.0},{"name":"cycles:u","cnt":1787389086.0},{"name":"task-clock","cnt":494.249189}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":2644696521.0},{"name":"cpu-clock","cnt":730.380815},{"name":"wall-time","cnt":0.74849094},{"name":"task-clock","cnt":730.382135},{"name":"max-rss","cnt":309372.0},{"name":"faults","cnt":58406.0},{"name":"instructions:u","cnt":3420194448.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":64740.0},{"name":"max-rss","cnt":324576.0},{"name":"cycles:u","cnt":2262841018.0},{"name":"wall-time","cnt":0.622541466},{"name":"instructions:u","cnt":2918961976.0},{"name":"task-clock","cnt":644.860087},{"name":"cpu-clock","cnt":644.860476}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":717.709735},{"name":"max-rss","cnt":336632.0},{"name":"faults","cnt":64905.0},{"name":"cycles:u","cnt":2539762256.0},{"name":"wall-time","cnt":0.695576164},{"name":"task-clock","cnt":717.709084},{"name":"instructions:u","cnt":3127968513.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"cpu-clock","cnt":578.20735},{"name":"faults","cnt":40895.0},{"name":"task-clock","cnt":578.213831},{"name":"cycles:u","cnt":2028674243.0},{"name":"wall-time","cnt":0.585817913},{"name":"instructions:u","cnt":2787587863.0},{"name":"max-rss","cnt":232208.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":819.656787},{"name":"cycles:u","cnt":2894449627.0},{"name":"wall-time","cnt":0.82757637},{"name":"instructions:u","cnt":3784796708.0},{"name":"faults","cnt":65738.0},{"name":"max-rss","cnt":329404.0},{"name":"cpu-clock","cnt":819.6606}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":341292.0},{"name":"faults","cnt":71818.0},{"name":"task-clock","cnt":733.208369},{"name":"instructions:u","cnt":3237937148.0},{"name":"cpu-clock","cnt":733.197103},{"name":"wall-time","cnt":0.706696737},{"name":"cycles:u","cnt":2498680540.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":809.180679},{"name":"instructions:u","cnt":3475274779.0},{"name":"max-rss","cnt":357684.0},{"name":"cpu-clock","cnt":809.176212},{"name":"wall-time","cnt":0.775318195},{"name":"cycles:u","cnt":2808105296.0},{"name":"faults","cnt":72262.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"cycles:u","cnt":2071923393.0},{"name":"max-rss","cnt":237240.0},{"name":"instructions:u","cnt":2815685372.0},{"name":"faults","cnt":41614.0},{"name":"cpu-clock","cnt":585.055146},{"name":"wall-time","cnt":0.58755666},{"name":"task-clock","cnt":585.068306}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":824.363392},{"name":"faults","cnt":65610.0},{"name":"wall-time","cnt":0.826437447},{"name":"instructions:u","cnt":3811718551.0},{"name":"task-clock","cnt":824.367341},{"name":"max-rss","cnt":331436.0},{"name":"cycles:u","cnt":2908641833.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":340748.0},{"name":"wall-time","cnt":0.717889831},{"name":"instructions:u","cnt":3234711649.0},{"name":"faults","cnt":71384.0},{"name":"cycles:u","cnt":2551578920.0},{"name":"cpu-clock","cnt":743.480991},{"name":"task-clock","cnt":743.483669}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.76899686},{"name":"instructions:u","cnt":3441590749.0},{"name":"faults","cnt":71998.0},{"name":"cycles:u","cnt":2766789675.0},{"name":"task-clock","cnt":799.557658},{"name":"cpu-clock","cnt":799.554475},{"name":"max-rss","cnt":346916.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":3260.91544},{"name":"faults","cnt":48993.0},{"name":"wall-time","cnt":3.330309814},{"name":"instructions:u","cnt":14052470536.0},{"name":"cycles:u","cnt":12744799151.0},{"name":"task-clock","cnt":3260.91593},{"name":"max-rss","cnt":302700.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":76393.0},{"name":"cpu-clock","cnt":4200.848951},{"name":"instructions:u","cnt":18466540734.0},{"name":"cycles:u","cnt":16349569880.0},{"name":"wall-time","cnt":4.2633729},{"name":"task-clock","cnt":4200.840761},{"name":"max-rss","cnt":412312.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":73536.0},{"name":"cpu-clock","cnt":1113.00035},{"name":"wall-time","cnt":1.104230862},{"name":"task-clock","cnt":1113.000343},{"name":"cycles:u","cnt":3972733214.0},{"name":"instructions:u","cnt":4829278859.0},{"name":"max-rss","cnt":395876.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":1318.769484},{"name":"faults","cnt":75733.0},{"name":"cycles:u","cnt":4878901193.0},{"name":"wall-time","cnt":1.309059834},{"name":"instructions:u","cnt":5750455729.0},{"name":"task-clock","cnt":1318.768908},{"name":"max-rss","cnt":411364.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":98991119462.0},{"name":"task-clock","cnt":25552.002043},{"name":"max-rss","cnt":1052988.0},{"name":"cycles:u","cnt":96221287953.0},{"name":"faults","cnt":249160.0},{"name":"wall-time","cnt":9.657948274},{"name":"cpu-clock","cnt":25552.013007}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":11.712229943},{"name":"faults","cnt":259617.0},{"name":"task-clock","cnt":28839.684946},{"name":"cycles:u","cnt":108741419867.0},{"name":"cpu-clock","cnt":28839.746795},{"name":"max-rss","cnt":1045424.0},{"name":"instructions:u","cnt":115469675463.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":132467.0},{"name":"wall-time","cnt":2.061589491},{"name":"instructions:u","cnt":9169617630.0},{"name":"max-rss","cnt":747596.0},{"name":"cycles:u","cnt":7481090349.0},{"name":"cpu-clock","cnt":2134.834337},{"name":"task-clock","cnt":2134.968934}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":10373687193.0},{"name":"task-clock","cnt":2455.430575},{"name":"cycles:u","cnt":8690836384.0},{"name":"max-rss","cnt":764856.0},{"name":"faults","cnt":135063.0},{"name":"wall-time","cnt":2.335427776},{"name":"cpu-clock","cnt":2455.261344}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":405817712285.0},{"name":"wall-time","cnt":20.267259481},{"name":"cpu-clock","cnt":107711.525005},{"name":"task-clock","cnt":107711.395192},{"name":"faults","cnt":343709.0},{"name":"instructions:u","cnt":315549487539.0},{"name":"max-rss","cnt":1379784.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":121122.938507},{"name":"cycles:u","cnt":455750047479.0},{"name":"max-rss","cnt":1265108.0},{"name":"cpu-clock","cnt":121123.199423},{"name":"instructions:u","cnt":355269204823.0},{"name":"faults","cnt":341110.0},{"name":"wall-time","cnt":22.304995935}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.06674813},{"name":"max-rss","cnt":762976.0},{"name":"task-clock","cnt":2184.055206},{"name":"cycles:u","cnt":7638822926.0},{"name":"cpu-clock","cnt":2183.928792},{"name":"instructions:u","cnt":9034831634.0},{"name":"faults","cnt":136713.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":941808.0},{"name":"instructions:u","cnt":40683955698.0},{"name":"cpu-clock","cnt":10270.062322},{"name":"faults","cnt":198548.0},{"name":"task-clock","cnt":10270.135114},{"name":"wall-time","cnt":4.261164741},{"name":"cycles:u","cnt":37959689519.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":2.293597389},{"name":"faults","cnt":24011.0},{"name":"cpu-clock","cnt":2236.6358},{"name":"max-rss","cnt":180792.0},{"name":"cycles:u","cnt":8781497514.0},{"name":"instructions:u","cnt":14227832480.0},{"name":"task-clock","cnt":2236.636262}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.51498813},{"name":"faults","cnt":26546.0},{"name":"task-clock","cnt":2478.093126},{"name":"cpu-clock","cnt":2478.090961},{"name":"cycles:u","cnt":9726758720.0},{"name":"instructions:u","cnt":15600930809.0},{"name":"max-rss","cnt":191940.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":19039.0},{"name":"instructions:u","cnt":1204063443.0},{"name":"wall-time","cnt":0.246397607},{"name":"cpu-clock","cnt":219.134467},{"name":"cycles:u","cnt":752183394.0},{"name":"task-clock","cnt":219.135709},{"name":"max-rss","cnt":157360.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2308.016403},{"name":"max-rss","cnt":207388.0},{"name":"cycles:u","cnt":9049290587.0},{"name":"instructions:u","cnt":14679013649.0},{"name":"faults","cnt":26283.0},{"name":"cpu-clock","cnt":2308.02414},{"name":"wall-time","cnt":2.352871122}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":28705.0},{"name":"cycles:u","cnt":10176372945.0},{"name":"cpu-clock","cnt":2598.188539},{"name":"max-rss","cnt":216928.0},{"name":"wall-time","cnt":2.609995645},{"name":"task-clock","cnt":2598.180966},{"name":"instructions:u","cnt":16260255266.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1371369276.0},{"name":"max-rss","cnt":179256.0},{"name":"wall-time","cnt":0.272582705},{"name":"faults","cnt":22554.0},{"name":"cpu-clock","cnt":245.254942},{"name":"cycles:u","cnt":832268740.0},{"name":"task-clock","cnt":245.258651}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2421.594064},{"name":"wall-time","cnt":2.42978164},{"name":"cycles:u","cnt":9473650833.0},{"name":"instructions:u","cnt":15305188842.0},{"name":"faults","cnt":27690.0},{"name":"task-clock","cnt":2421.610004},{"name":"max-rss","cnt":213532.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":10565294909.0},{"name":"wall-time","cnt":2.655479908},{"name":"faults","cnt":29667.0},{"name":"cpu-clock","cnt":2703.08243},{"name":"task-clock","cnt":2703.131661},{"name":"instructions:u","cnt":16892017388.0},{"name":"max-rss","cnt":221048.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":251.82052},{"name":"cycles:u","cnt":850802592.0},{"name":"max-rss","cnt":180148.0},{"name":"cpu-clock","cnt":251.816901},{"name":"wall-time","cnt":0.275987279},{"name":"faults","cnt":22685.0},{"name":"instructions:u","cnt":1388102221.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}