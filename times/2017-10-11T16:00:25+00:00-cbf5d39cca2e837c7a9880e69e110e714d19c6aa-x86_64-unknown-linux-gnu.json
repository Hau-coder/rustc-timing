{"commit":{"sha":"cbf5d39cca2e837c7a9880e69e110e714d19c6aa","date":"2017-10-11T16:00:25+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19726777243.0},{"name":"cycles:u","cnt":16215116755.0},{"name":"task-clock","cnt":4056.043193},{"name":"cpu-clock","cnt":4273.295664},{"name":"faults","cnt":33133.0},{"name":"max-rss","cnt":202380.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1197582469.0},{"name":"cycles:u","cnt":803153206.0},{"name":"task-clock","cnt":203.574975},{"name":"cpu-clock","cnt":235.661338},{"name":"faults","cnt":12566.0},{"name":"max-rss","cnt":132420.0}]}]}]},"html5ever-2016-08-25":{"Ok":[{"name":"html5ever-2016-08-25","runs":[{"stats":[{"name":"instructions:u","cnt":17977102927.0},{"name":"cycles:u","cnt":12535874527.0},{"name":"task-clock","cnt":3257.190849},{"name":"cpu-clock","cnt":3257.135911},{"name":"faults","cnt":13852.0},{"name":"max-rss","cnt":298048.0}]}]}]},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":26270004094.0},{"name":"cycles:u","cnt":22286184894.0},{"name":"task-clock","cnt":5890.162897},{"name":"cpu-clock","cnt":5890.154364},{"name":"faults","cnt":28383.0},{"name":"max-rss","cnt":291036.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":23706352268.0},{"name":"cycles:u","cnt":13131035711.0},{"name":"task-clock","cnt":3364.680073},{"name":"cpu-clock","cnt":3364.68506},{"name":"faults","cnt":21366.0},{"name":"max-rss","cnt":269588.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":14432068155.0},{"name":"cycles:u","cnt":8376620758.0},{"name":"task-clock","cnt":2109.022714},{"name":"cpu-clock","cnt":2202.203467},{"name":"faults","cnt":55490.0},{"name":"max-rss","cnt":266580.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":13773693159.0},{"name":"cycles:u","cnt":11327906651.0},{"name":"task-clock","cnt":2961.80939},{"name":"cpu-clock","cnt":2961.761101},{"name":"faults","cnt":11286.0},{"name":"max-rss","cnt":199980.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1811228098.0},{"name":"cycles:u","cnt":1141898598.0},{"name":"task-clock","cnt":279.521803},{"name":"cpu-clock","cnt":326.560873},{"name":"faults","cnt":12746.0},{"name":"max-rss","cnt":138252.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":8361951995.0},{"name":"cycles:u","cnt":4752996899.0},{"name":"task-clock","cnt":1103.634999},{"name":"cpu-clock","cnt":1253.080527},{"name":"faults","cnt":23342.0},{"name":"max-rss","cnt":203380.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":2761371772.0},{"name":"cycles:u","cnt":1804439000.0},{"name":"task-clock","cnt":392.038336},{"name":"cpu-clock","cnt":498.07828},{"name":"faults","cnt":22729.0},{"name":"max-rss","cnt":159228.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":7429162211.0},{"name":"cycles:u","cnt":5609296031.0},{"name":"task-clock","cnt":1371.008218},{"name":"cpu-clock","cnt":1482.673316},{"name":"faults","cnt":15951.0},{"name":"max-rss","cnt":167536.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":51694585441.0},{"name":"cycles:u","cnt":43457789194.0},{"name":"task-clock","cnt":11380.968254},{"name":"cpu-clock","cnt":11380.95561},{"name":"faults","cnt":56602.0},{"name":"max-rss","cnt":374724.0}]}]}]},"regex-0.1.80":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling regex-syntax v0.3.9 (file:///tmp/rustc-benchmark-regex-0.1.80.P2clCi5kVQQL/regex-syntax)\\n   Compiling winapi v0.2.8\\n   Compiling winapi-build v0.1.1\\n   Compiling utf8-ranges v0.1.3\\n   Compiling libc v0.2.32\\n   Compiling kernel32-sys v0.2.2\\n   Compiling thread-id v2.0.0\\n   Compiling memchr v0.1.11\\n   Compiling thread_local v0.2.7\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (cbf5d39cc 2017-10-11) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `memchr`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (cbf5d39cc 2017-10-11) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `regex-syntax`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@020-incr-from-scratch] Error 101\\n\\n\\n stdout=find . -name \\\"*.rs\\\" | xargs touch\\nRUSTFLAGS=\\\"-Z incremental=incr\\\" /home/alex/code/rustc-perf/cache/cbf5d39cca2e837c7a9880e69e110e714d19c6aa/cargo/bin/cargo rustc  -- \\\\\\n  -Ztime-passes -Z incremental-info\\nmakefile:12: recipe for target \\'all@020-incr-from-scratch\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x5564efe85dae - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x5564efe85dee - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x5564efd7b9c6 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x5564efd7ba88 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x5564efd62410 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x5564efd6a236 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x5564efd6b236 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x5564efd72e00 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x5564efd76a77 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x5564efffe7dc - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x5564efff7e5b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f9c17e4882f - __libc_start_main\n  12:     0x5564efd3ad78 - _start\n  13:                0x0 - <unknown>) })"},"regex-opt-0.1.80":{"Ok":[{"name":"regex-opt-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":74458352512.0},{"name":"cycles:u","cnt":57591909779.0},{"name":"task-clock","cnt":14499.680251},{"name":"cpu-clock","cnt":14499.682049},{"name":"faults","cnt":18731.0},{"name":"max-rss","cnt":247668.0},{"name":"wall-time","cnt":14.501670371}]}]},{"name":"regex-opt-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":92315279316.0},{"name":"cycles:u","cnt":109440964367.0},{"name":"task-clock","cnt":28919.50553},{"name":"cpu-clock","cnt":28919.557731},{"name":"faults","cnt":24093.0},{"name":"max-rss","cnt":359040.0},{"name":"wall-time","cnt":5.861566299}]}]},{"name":"regex-opt-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":14156317743.0},{"name":"cycles:u","cnt":10803037821.0},{"name":"task-clock","cnt":2821.483045},{"name":"cpu-clock","cnt":2821.451427},{"name":"faults","cnt":4356.0},{"name":"max-rss","cnt":333264.0},{"name":"wall-time","cnt":2.371549698}]}]},{"name":"regex-opt-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":7658376328.0},{"name":"cycles:u","cnt":5773907251.0},{"name":"task-clock","cnt":1505.335945},{"name":"cpu-clock","cnt":1505.296391},{"name":"faults","cnt":4174.0},{"name":"max-rss","cnt":324456.0},{"name":"wall-time","cnt":1.475199167}]}]},{"name":"regex-opt-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":7669783585.0},{"name":"cycles:u","cnt":5782134191.0},{"name":"task-clock","cnt":1502.858525},{"name":"cpu-clock","cnt":1502.827405},{"name":"faults","cnt":4221.0},{"name":"max-rss","cnt":320668.0},{"name":"wall-time","cnt":1.476639773}]}]},{"name":"regex-opt-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":14172832974.0},{"name":"cycles:u","cnt":10898575651.0},{"name":"task-clock","cnt":2823.0139},{"name":"cpu-clock","cnt":2822.967675},{"name":"faults","cnt":4230.0},{"name":"max-rss","cnt":335124.0},{"name":"wall-time","cnt":2.359183568}]}]},{"name":"regex-opt-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":8432567925.0},{"name":"cycles:u","cnt":6389591356.0},{"name":"task-clock","cnt":1657.099918},{"name":"cpu-clock","cnt":1657.089678},{"name":"faults","cnt":4421.0},{"name":"max-rss","cnt":322864.0},{"name":"wall-time","cnt":1.627864059}]}]},{"name":"regex-opt-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":63313611310.0},{"name":"cycles:u","cnt":66118140919.0},{"name":"task-clock","cnt":17477.522211},{"name":"cpu-clock","cnt":17477.560032},{"name":"faults","cnt":17777.0},{"name":"max-rss","cnt":386356.0},{"name":"wall-time","cnt":4.453801079}]}]},{"name":"regex-opt-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":64421201175.0},{"name":"cycles:u","cnt":68917169895.0},{"name":"task-clock","cnt":18190.987617},{"name":"cpu-clock","cnt":18191.018168},{"name":"faults","cnt":16490.0},{"name":"max-rss","cnt":390168.0},{"name":"wall-time","cnt":4.491030215}]}]},{"name":"regex-opt-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":7234186213.0},{"name":"cycles:u","cnt":5362541076.0},{"name":"task-clock","cnt":1398.022934},{"name":"cpu-clock","cnt":1397.965177},{"name":"faults","cnt":4084.0},{"name":"max-rss","cnt":314032.0},{"name":"wall-time","cnt":1.415955702}]}]}]},"regex-opt.0.1.30":{"Ok":[{"name":"regex-opt.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":28753047894.0},{"name":"cycles:u","cnt":21512003213.0},{"name":"task-clock","cnt":5429.188371},{"name":"cpu-clock","cnt":5429.188885},{"name":"faults","cnt":11486.0},{"name":"max-rss","cnt":204092.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12193568935.0},{"name":"cycles:u","cnt":10286900635.0},{"name":"task-clock","cnt":2704.526669},{"name":"cpu-clock","cnt":2704.501725},{"name":"faults","cnt":10043.0},{"name":"max-rss","cnt":224096.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9201742392.0},{"name":"cycles:u","cnt":7246407701.0},{"name":"task-clock","cnt":1905.889444},{"name":"cpu-clock","cnt":1905.870952},{"name":"faults","cnt":5814.0},{"name":"max-rss","cnt":226968.0}]}]}]},"style-2f3bc0de49":{"Ok":[{"name":"style-2f3bc0de49@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":414577163287.0},{"name":"cycles:u","cnt":340853357864.0},{"name":"task-clock","cnt":89119.612595},{"name":"cpu-clock","cnt":89119.654607},{"name":"faults","cnt":416071.0},{"name":"max-rss","cnt":2212004.0},{"name":"wall-time","cnt":47.999494756}]}]}]},"syntex-0.42.2":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling bitflags v0.5.0\\n   Compiling winapi v0.2.8\\n   Compiling unicode-xid v0.0.3\\n   Compiling winapi-build v0.1.1\\n   Compiling log v0.3.6\\n   Compiling libc v0.2.15\\n   Compiling rustc-serialize v0.3.19\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (cbf5d39cc 2017-10-11) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `unicode-xid`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (cbf5d39cc 2017-10-11) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `log`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (cbf5d39cc 2017-10-11) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `rustc-serialize`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@010-incr] Error 101\\n\\n\\n stdout=find . -name \\'*.rs\\' | xargs touch\\nRUSTFLAGS=\\\"-Z incremental=incr\\\" \\\\\\n    /home/alex/code/rustc-perf/cache/cbf5d39cca2e837c7a9880e69e110e714d19c6aa/cargo/bin/cargo rustc -p syntex_syntax  -- \\\\\\n    -Ztime-passes -Z incremental-info\\nmakefile:9: recipe for target \\'all@010-incr\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x5564efe85dae - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x5564efe85dee - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x5564efd7b9c6 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x5564efd7ba88 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x5564efd62410 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x5564efd6a236 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x5564efd6b236 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x5564efd72e00 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x5564efd76a77 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x5564efffe7dc - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x5564efff7e5b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f9c17e4882f - __libc_start_main\n  12:     0x5564efd3ad78 - _start\n  13:                0x0 - <unknown>) })"},"tokio-webpush-simple":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling webpush-server v0.1.0 (file:///tmp/rustc-benchmark-tokio-webpush-simple.3UT31MlxY2RU)\\nwarning: doc comment not used by rustdoc\\n  --> src/main.rs:43:5\\n   |\\n43 | /     error_chain! {\\n44 | |   foreign_links {\\n45 | |    Ws(tungstenite::Error);\\n46 | |    Io(io::Error);\\n47 | |             Json(serde_json::Error);\\n48 | |   }\\n49 | |     }\\n   | |_____^\\n   |\\n   = note: #[warn(unused_doc_comment)] on by default\\n   = note: this error originates in a macro outside of the current crate\\n\\nwarning: doc comment not used by rustdoc\\n  --> src/main.rs:43:5\\n   |\\n43 | /     error_chain! {\\n44 | |   foreign_links {\\n45 | |    Ws(tungstenite::Error);\\n46 | |    Io(io::Error);\\n47 | |             Json(serde_json::Error);\\n48 | |   }\\n49 | |     }\\n   | |_____^\\n   |\\n   = note: this error originates in a macro outside of the current crate\\n\\nerror: internal compiler error: /checkout/src/librustc/ich/impls_ty.rs:78: TypeIdHasher: unexpected region ReLateBound(DebruijnIndex { depth: 1 }, BrEnv)\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.22.0-nightly (cbf5d39cc 2017-10-11) running on x86_64-unknown-linux-gnu\\n\\nthread \\'rustc\\' panicked at \\'Box<Any>\\', /checkout/src/librustc_errors/lib.rs:492:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:30:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `webpush-server`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@010-incr] Error 101\\n\\n\\n stdout=find . -name \\'*.rs\\' | xargs touch\\nCARGO_INCREMENTAL=1 \\\\\\n    /home/alex/code/rustc-perf/cache/cbf5d39cca2e837c7a9880e69e110e714d19c6aa/cargo/bin/cargo rustc  -- \\\\\\n    -Ztime-passes -Z incremental-info\\n9161503574;;instructions:u;1465077858;100.00;1.60;insn per cycle\\n5724531757;;cycles:u;1465077858;100.00;3.907;GHz\\n1465.021453;;task-clock;1465021453;100.00;1.003;CPUs utilized\\n1465.020430;;cpu-clock;1465021453;100.00;1.003;CPUs utilized\\n4167;;faults;1465021453;100.00;0.003;M/sec\\nmakefile:7: recipe for target \\'all@010-incr\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x5564efe85dae - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x5564efe85dee - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x5564efd7b9c6 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x5564efd7ba88 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x5564efd62410 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x5564efd6a236 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x5564efd6b236 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x5564efd72e00 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x5564efd76a77 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x5564efffe7dc - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x5564efff7e5b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f9c17e4882f - __libc_start_main\n  12:     0x5564efd3ad78 - _start\n  13:                0x0 - <unknown>) })"},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":24407992270.0},{"name":"cycles:u","cnt":16990763422.0},{"name":"task-clock","cnt":4320.727086},{"name":"cpu-clock","cnt":4349.728248},{"name":"faults","cnt":28986.0},{"name":"max-rss","cnt":390184.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}