{"commit":{"sha":"1b19284ad9d85f2848650be6dd466ad0e1e2d82c","date":"2017-03-11T22:48:14+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19357982892.0},{"name":"cycles:u","cnt":15896038589.0},{"name":"task-clock","cnt":3875.128623},{"name":"cpu-clock","cnt":4054.395177},{"name":"faults","cnt":20548.0},{"name":"max-rss","cnt":223796.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1090125101.0},{"name":"cycles:u","cnt":654763059.0},{"name":"task-clock","cnt":88.606355},{"name":"cpu-clock","cnt":193.878827},{"name":"faults","cnt":11512.0},{"name":"max-rss","cnt":94848.0}]}]}]},"html5ever-2016-08-25":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=    Updating registry `https://github.com/rust-lang/crates.io-index`\\n   Compiling libc v0.2.31\\n   Compiling rustc-serialize v0.3.24\\n   Compiling void v1.0.2\\n   Compiling serde v0.8.23\\n   Compiling lazy_static v0.2.8\\n   Compiling siphasher v0.2.2\\n   Compiling log v0.3.8\\n   Compiling matches v0.1.6\\n   Compiling unreachable v0.1.1\\n   Compiling utf-8 v0.6.0\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling debug_unreachable v0.1.1\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling phf_shared v0.7.21\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling phf v0.7.21\\n   Compiling mac v0.1.1\\n   Compiling rand v0.3.16\\n   Compiling futf v0.1.3\\n   Compiling encoding v0.2.33\\n   Compiling phf_generator v0.7.21\\n   Compiling string_cache v0.2.29\\n   Compiling phf_codegen v0.7.21\\n   Compiling tendril v0.2.4\\n   Compiling html5ever v0.5.4 (file:///tmp/rustc-benchmark-html5ever-2016-08-25.WsrGP88C38ba)\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nthread \\'rustc\\' panicked at \\'called `Option::unwrap()` on a `None` value\\', /checkout/src/libcore/option.rs:323\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `string_cache`.\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nerror: build failed\\nmake: *** [all] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/1b19284ad9d85f2848650be6dd466ad0e1e2d82c/cargo/bin/cargo rustc  -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:4: recipe for target \\'all\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x559c4d42ab6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x559c4d42abae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x559c4d320786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x559c4d320848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x559c4d3072d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x559c4d30f0f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x559c4d3100f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x559c4d3176db - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x559c4d31b837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x559c4d5a359c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x559c4d59cc1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f38c5af282f - __libc_start_main\n  12:     0x559c4d2dfd08 - _start\n  13:                0x0 - <unknown>) })"},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":23971872175.0},{"name":"cycles:u","cnt":19772927465.0},{"name":"task-clock","cnt":5029.0964970000009},{"name":"cpu-clock","cnt":5029.098097},{"name":"faults","cnt":25402.0},{"name":"max-rss","cnt":248676.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":24782710014.0},{"name":"cycles:u","cnt":13639809677.0},{"name":"task-clock","cnt":3474.958981},{"name":"cpu-clock","cnt":3474.960017},{"name":"faults","cnt":31696.0},{"name":"max-rss","cnt":249900.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":177768395116.0},{"name":"cycles:u","cnt":241503214663.0},{"name":"task-clock","cnt":64365.009374},{"name":"cpu-clock","cnt":64484.545609},{"name":"faults","cnt":4941589.0},{"name":"max-rss","cnt":1202028.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1433123742.0},{"name":"cycles:u","cnt":859403138.0},{"name":"task-clock","cnt":201.702022},{"name":"cpu-clock","cnt":245.324626},{"name":"faults","cnt":11600.0},{"name":"max-rss","cnt":98552.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":8267404535.0},{"name":"cycles:u","cnt":5344086698.0},{"name":"task-clock","cnt":1350.243721},{"name":"cpu-clock","cnt":1415.276062},{"name":"faults","cnt":34314.0},{"name":"max-rss","cnt":269156.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":22254826124.0},{"name":"cycles:u","cnt":8445377968.0},{"name":"task-clock","cnt":2094.807973},{"name":"cpu-clock","cnt":2157.2622930000004},{"name":"faults","cnt":18216.0},{"name":"max-rss","cnt":133132.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":6272925103.0},{"name":"cycles:u","cnt":4651940650.0},{"name":"task-clock","cnt":1094.818356},{"name":"cpu-clock","cnt":1210.856206},{"name":"faults","cnt":14105.0},{"name":"max-rss","cnt":126188.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52755471091.0},{"name":"cycles:u","cnt":42326678345.0},{"name":"task-clock","cnt":10748.541613},{"name":"cpu-clock","cnt":10748.546406},{"name":"faults","cnt":37829.0},{"name":"max-rss","cnt":396980.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":31470736757.0},{"name":"cycles:u","cnt":24985699390.0},{"name":"task-clock","cnt":6342.333073},{"name":"cpu-clock","cnt":6342.334853},{"name":"faults","cnt":35205.0},{"name":"max-rss","cnt":281544.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":43459898437.0},{"name":"cycles:u","cnt":46157211976.0},{"name":"task-clock","cnt":12220.374028},{"name":"cpu-clock","cnt":12220.28594},{"name":"faults","cnt":48861.0},{"name":"max-rss","cnt":431564.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":43359922687.0},{"name":"cycles:u","cnt":46000766593.0},{"name":"task-clock","cnt":12208.731633},{"name":"cpu-clock","cnt":12208.669627},{"name":"faults","cnt":55261.0},{"name":"max-rss","cnt":428984.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":39918749195.0},{"name":"cycles:u","cnt":41994527753.0},{"name":"task-clock","cnt":11123.659494},{"name":"cpu-clock","cnt":11123.586289},{"name":"faults","cnt":56196.0},{"name":"max-rss","cnt":384636.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":39886415633.0},{"name":"cycles:u","cnt":41566152368.0},{"name":"task-clock","cnt":11019.973125},{"name":"cpu-clock","cnt":11019.893764},{"name":"faults","cnt":54416.0},{"name":"max-rss","cnt":401964.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":43345503488.0},{"name":"cycles:u","cnt":46267309113.0},{"name":"task-clock","cnt":12247.672447},{"name":"cpu-clock","cnt":12247.628439},{"name":"faults","cnt":52534.0},{"name":"max-rss","cnt":425200.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":11147848699.0},{"name":"cycles:u","cnt":7691943986.0},{"name":"task-clock","cnt":2040.545874},{"name":"cpu-clock","cnt":2040.477573},{"name":"faults","cnt":16655.0},{"name":"max-rss","cnt":247552.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":43490869397.0},{"name":"cycles:u","cnt":46341303356.0},{"name":"task-clock","cnt":12284.03429},{"name":"cpu-clock","cnt":12283.958768},{"name":"faults","cnt":52380.0},{"name":"max-rss","cnt":433136.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":43650579125.0},{"name":"cycles:u","cnt":46961686882.0},{"name":"task-clock","cnt":12442.123297},{"name":"cpu-clock","cnt":12442.069159},{"name":"faults","cnt":53985.0},{"name":"max-rss","cnt":433128.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":10620299741.0},{"name":"cycles:u","cnt":7261408046.0},{"name":"task-clock","cnt":1907.047728},{"name":"cpu-clock","cnt":1906.96804},{"name":"faults","cnt":16961.0},{"name":"max-rss","cnt":243720.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12579102477.0},{"name":"cycles:u","cnt":9306701231.0},{"name":"task-clock","cnt":2374.529589},{"name":"cpu-clock","cnt":2374.530511},{"name":"faults","cnt":18246.0},{"name":"max-rss","cnt":184368.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9358494140.0},{"name":"cycles:u","cnt":6948726293.0},{"name":"task-clock","cnt":1777.421436},{"name":"cpu-clock","cnt":1777.431639},{"name":"faults","cnt":12745.0},{"name":"max-rss","cnt":171408.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling byteorder v1.1.0\\n   Compiling log v0.3.8\\n   Compiling serde v1.0.10\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling lazy_static v0.2.8\\n   Compiling libc v0.2.28\\n   Compiling matches v0.1.6\\n   Compiling unicode-xid v0.0.4\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.V4na59bUVpVI/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling num-traits v0.1.40\\n   Compiling pdqsort v0.1.2\\n   Compiling synom v0.11.3\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling itoa v0.3.1\\n   Compiling fnv v1.0.5\\n   Compiling same-file v0.1.3\\n   Compiling unicode-bidi v0.3.4\\n   Compiling rayon-core v1.2.1\\n   Compiling smallvec v0.4.1\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling siphasher v0.2.2\\n   Compiling num_cpus v1.6.2\\n   Compiling void v1.0.2\\n   Compiling num-integer v0.1.35\\n   Compiling bit-vec v0.4.4\\n   Compiling precomputed-hash v0.1.0\\n   Compiling unreachable v0.1.1\\n   Compiling quote v0.3.15\\n   Compiling rand v0.3.15\\n   Compiling futures v0.1.14\\n   Compiling ordered-float v0.4.0\\n   Compiling owning_ref v0.3.3\\n   Compiling walkdir v1.0.7\\n   Compiling syn v0.11.11\\n   Compiling either v1.1.0\\n   Compiling thread-id v3.2.0\\n   Compiling heapsize v0.4.1\\n   Compiling rustc-serialize v0.3.24\\n   Compiling atomic_refcell v0.1.1\\n   Compiling bitflags v0.7.0\\n   Compiling phf_shared v0.7.21\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.V4na59bUVpVI/components/style)\\n   Compiling time v0.1.38\\n   Compiling phf v0.7.21\\n   Compiling odds v0.2.25\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling parking_lot_core v0.2.2\\n   Compiling cfg-if v0.1.2\\n   Compiling selectors v0.19.0 (file:///tmp/rustc-benchmark-style-9b276565.V4na59bUVpVI/components/selectors)\\n   Compiling scopeguard v0.3.2\\n   Compiling coco v0.1.1\\n   Compiling nodrop v0.1.9\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.V4na59bUVpVI/components/servo_arc)\\nerror: use of unstable library feature \\'process_abort\\' (see issue #37838)\\n   --> components/servo_arc/lib.rs:277:13\\n    |\\n277 |             process::abort();\\n    |             ^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(process_abort)] to the crate attributes to enable\\n\\nerror: aborting due to previous error\\n\\nerror: Could not compile `servo_arc`.\\nerror: build failed\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/1b19284ad9d85f2848650be6dd466ad0e1e2d82c/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x559c4d42ab6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x559c4d42abae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x559c4d320786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x559c4d320848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x559c4d3072d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x559c4d30f0f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x559c4d3100f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x559c4d3176db - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x559c4d31b837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x559c4d5a359c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x559c4d59cc1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f38c5af282f - __libc_start_main\n  12:     0x559c4d2dfd08 - _start\n  13:                0x0 - <unknown>) })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":145526907371.0},{"name":"cycles:u","cnt":115553043382.0},{"name":"task-clock","cnt":29309.195184},{"name":"cpu-clock","cnt":29309.183357},{"name":"faults","cnt":102345.0},{"name":"max-rss","cnt":779364.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":221086807128.0},{"name":"cycles:u","cnt":224251800553.0},{"name":"task-clock","cnt":58928.6891},{"name":"cpu-clock","cnt":58928.045722},{"name":"faults","cnt":152233.0},{"name":"max-rss","cnt":1418136.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":74306876744.0},{"name":"cycles:u","cnt":50096881825.0},{"name":"task-clock","cnt":12953.6499},{"name":"cpu-clock","cnt":12953.114761},{"name":"faults","cnt":57339.0},{"name":"max-rss","cnt":849136.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28497720348.0},{"name":"cycles:u","cnt":23587706612.0},{"name":"task-clock","cnt":5483.666337},{"name":"cpu-clock","cnt":6063.404752},{"name":"faults","cnt":43072.0},{"name":"max-rss","cnt":306612.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":42055892240.0},{"name":"cycles:u","cnt":46501832188.0},{"name":"task-clock","cnt":11801.377845},{"name":"cpu-clock","cnt":12335.230447},{"name":"faults","cnt":48274.0},{"name":"max-rss","cnt":479576.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9972895351.0},{"name":"cycles:u","cnt":6776103479.0},{"name":"task-clock","cnt":1162.774795},{"name":"cpu-clock","cnt":1893.987518},{"name":"faults","cnt":49392.0},{"name":"max-rss","cnt":239564.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":42526811316.0},{"name":"cycles:u","cnt":46521232426.0},{"name":"task-clock","cnt":11842.005627},{"name":"cpu-clock","cnt":12337.515358},{"name":"faults","cnt":50943.0},{"name":"max-rss","cnt":477204.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":20031046542.0},{"name":"cycles:u","cnt":15485420771.0},{"name":"task-clock","cnt":3866.406523},{"name":"cpu-clock","cnt":3979.4714},{"name":"faults","cnt":54370.0},{"name":"max-rss","cnt":473236.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}