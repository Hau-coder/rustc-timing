{"commit":{"sha":"a559452b05c20041a27f518d262573c56b876b64","date":"2017-03-17T17:26:52+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19369914702.0},{"name":"cycles:u","cnt":15951478499.0},{"name":"task-clock","cnt":4009.020735},{"name":"cpu-clock","cnt":4070.489497},{"name":"faults","cnt":20610.0},{"name":"max-rss","cnt":223564.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1089634212.0},{"name":"cycles:u","cnt":652551899.0},{"name":"task-clock","cnt":146.422005},{"name":"cpu-clock","cnt":195.309261},{"name":"faults","cnt":11520.0},{"name":"max-rss","cnt":94380.0}]}]}]},"html5ever-2016-08-25":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=    Updating registry `https://github.com/rust-lang/crates.io-index`\\n   Compiling serde v0.8.23\\n   Compiling lazy_static v0.2.8\\n   Compiling libc v0.2.31\\n   Compiling siphasher v0.2.2\\n   Compiling rustc-serialize v0.3.24\\n   Compiling matches v0.1.6\\n   Compiling mac v0.1.1\\n   Compiling log v0.3.8\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling void v1.0.2\\n   Compiling utf-8 v0.6.0\\n   Compiling unreachable v0.1.1\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling debug_unreachable v0.1.1\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling futf v0.1.3\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling phf_shared v0.7.21\\n   Compiling rand v0.3.16\\n   Compiling encoding v0.2.33\\n   Compiling phf v0.7.21\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling string_cache v0.2.29\\n   Compiling tendril v0.2.4\\n   Compiling html5ever v0.5.4 (file:///tmp/rustc-benchmark-html5ever-2016-08-25.ViDnWsl3zYH6)\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nthread \\'rustc\\' panicked at \\'called `Option::unwrap()` on a `None` value\\', /checkout/src/libcore/option.rs:323\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `string_cache`.\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nerror: build failed\\nmake: *** [all] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/a559452b05c20041a27f518d262573c56b876b64/cargo/bin/cargo rustc  -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:4: recipe for target \\'all\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55b83c628b6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x55b83c628bae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x55b83c51e786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x55b83c51e848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x55b83c5052d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x55b83c50d0f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x55b83c50e0f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x55b83c5156db - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x55b83c519837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x55b83c7a159c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x55b83c79ac1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f66b362382f - __libc_start_main\n  12:     0x55b83c4ddd08 - _start\n  13:                0x0 - <unknown>) })"},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24049603975.0},{"name":"cycles:u","cnt":19793563730.0},{"name":"task-clock","cnt":5026.589115},{"name":"cpu-clock","cnt":5026.59048},{"name":"faults","cnt":25856.0},{"name":"max-rss","cnt":249308.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":24833200733.0},{"name":"cycles:u","cnt":13578643437.0},{"name":"task-clock","cnt":3459.536957},{"name":"cpu-clock","cnt":3459.537478},{"name":"faults","cnt":28876.0},{"name":"max-rss","cnt":250220.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":178378478601.0},{"name":"cycles:u","cnt":241580051585.0},{"name":"task-clock","cnt":64435.33657},{"name":"cpu-clock","cnt":64489.763495},{"name":"faults","cnt":4882508.0},{"name":"max-rss","cnt":1170824.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":11059536587.0},{"name":"cycles:u","cnt":8768222244.0},{"name":"task-clock","cnt":2229.882232},{"name":"cpu-clock","cnt":2229.883149},{"name":"faults","cnt":10917.0},{"name":"max-rss","cnt":168292.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1433317151.0},{"name":"cycles:u","cnt":860568027.0},{"name":"task-clock","cnt":139.255631},{"name":"cpu-clock","cnt":246.135544},{"name":"faults","cnt":11617.0},{"name":"max-rss","cnt":97940.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":9244353965.0},{"name":"cycles:u","cnt":6308497897.0},{"name":"task-clock","cnt":1494.994659},{"name":"cpu-clock","cnt":1667.357756},{"name":"faults","cnt":36877.0},{"name":"max-rss","cnt":382420.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":22260453222.0},{"name":"cycles:u","cnt":8361167393.0},{"name":"task-clock","cnt":2135.322162},{"name":"cpu-clock","cnt":2136.705478},{"name":"faults","cnt":18223.0},{"name":"max-rss","cnt":137192.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":6262902390.0},{"name":"cycles:u","cnt":4631270967.0},{"name":"task-clock","cnt":1099.94955},{"name":"cpu-clock","cnt":1200.808443},{"name":"faults","cnt":14166.0},{"name":"max-rss","cnt":124992.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52849083393.0},{"name":"cycles:u","cnt":42209372409.0},{"name":"task-clock","cnt":10701.858526},{"name":"cpu-clock","cnt":10701.872406},{"name":"faults","cnt":37161.0},{"name":"max-rss","cnt":396364.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":31623268014.0},{"name":"cycles:u","cnt":25019294241.0},{"name":"task-clock","cnt":6345.640514},{"name":"cpu-clock","cnt":6345.65889},{"name":"faults","cnt":35626.0},{"name":"max-rss","cnt":281572.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":43555619411.0},{"name":"cycles:u","cnt":46334377408.0},{"name":"task-clock","cnt":12284.531741},{"name":"cpu-clock","cnt":12284.452602},{"name":"faults","cnt":50744.0},{"name":"max-rss","cnt":434280.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":43380952917.0},{"name":"cycles:u","cnt":46067131921.0},{"name":"task-clock","cnt":12213.486303},{"name":"cpu-clock","cnt":12213.433752},{"name":"faults","cnt":52919.0},{"name":"max-rss","cnt":426640.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":39965400639.0},{"name":"cycles:u","cnt":41490478095.0},{"name":"task-clock","cnt":10987.717226},{"name":"cpu-clock","cnt":10987.62397},{"name":"faults","cnt":56458.0},{"name":"max-rss","cnt":400032.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":39925258099.0},{"name":"cycles:u","cnt":41631666309.0},{"name":"task-clock","cnt":11055.835844},{"name":"cpu-clock","cnt":11055.758781},{"name":"faults","cnt":53761.0},{"name":"max-rss","cnt":399296.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":43442133475.0},{"name":"cycles:u","cnt":46286214511.0},{"name":"task-clock","cnt":12283.609828},{"name":"cpu-clock","cnt":12283.535824},{"name":"faults","cnt":53385.0},{"name":"max-rss","cnt":427092.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":11202907846.0},{"name":"cycles:u","cnt":7781623359.0},{"name":"task-clock","cnt":2031.378262},{"name":"cpu-clock","cnt":2031.306176},{"name":"faults","cnt":16264.0},{"name":"max-rss","cnt":247628.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":43569193307.0},{"name":"cycles:u","cnt":46681346701.0},{"name":"task-clock","cnt":12348.67731},{"name":"cpu-clock","cnt":12348.604916},{"name":"faults","cnt":48592.0},{"name":"max-rss","cnt":426208.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":43758125542.0},{"name":"cycles:u","cnt":46500523759.0},{"name":"task-clock","cnt":12325.352354},{"name":"cpu-clock","cnt":12325.30483},{"name":"faults","cnt":52470.0},{"name":"max-rss","cnt":432184.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":10699307256.0},{"name":"cycles:u","cnt":7356449898.0},{"name":"task-clock","cnt":1929.128458},{"name":"cpu-clock","cnt":1929.061651},{"name":"faults","cnt":16723.0},{"name":"max-rss","cnt":241320.0}]}]}]},"regex-opt.0.1.30":{"Ok":[{"name":"regex-opt.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":39153207386.0},{"name":"cycles:u","cnt":26847334339.0},{"name":"task-clock","cnt":6766.322643},{"name":"cpu-clock","cnt":6766.324649},{"name":"faults","cnt":14454.0},{"name":"max-rss","cnt":172160.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12762267476.0},{"name":"cycles:u","cnt":9447303691.0},{"name":"task-clock","cnt":2407.343977},{"name":"cpu-clock","cnt":2407.344033},{"name":"faults","cnt":18948.0},{"name":"max-rss","cnt":183820.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9434120290.0},{"name":"cycles:u","cnt":7012231577.0},{"name":"task-clock","cnt":1790.152608},{"name":"cpu-clock","cnt":1790.153316},{"name":"faults","cnt":13449.0},{"name":"max-rss","cnt":171072.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling serde v1.0.10\\n   Compiling either v1.1.0\\n   Compiling same-file v0.1.3\\n   Compiling rustc-serialize v0.3.24\\n   Compiling smallvec v0.4.1\\n   Compiling precomputed-hash v0.1.0\\n   Compiling cfg-if v0.1.2\\n   Compiling siphasher v0.2.2\\n   Compiling scopeguard v0.3.2\\n   Compiling lazy_static v0.2.8\\n   Compiling bitflags v0.7.0\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling coco v0.1.1\\n   Compiling walkdir v1.0.7\\n   Compiling pdqsort v0.1.2\\n   Compiling matches v0.1.6\\n   Compiling phf_shared v0.7.21\\n   Compiling rayon-core v1.2.1\\n   Compiling heapsize v0.4.1\\n   Compiling atomic_refcell v0.1.1\\n   Compiling log v0.3.8\\n   Compiling unicode-bidi v0.3.4\\n   Compiling odds v0.2.25\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.YRTz2z25DTng/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling bit-vec v0.4.4\\n   Compiling futures v0.1.14\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.YRTz2z25DTng/components/style)\\n   Compiling phf v0.7.21\\n   Compiling nodrop v0.1.9\\n   Compiling libc v0.2.28\\n   Compiling arraydeque v0.2.3\\n   Compiling num-traits v0.1.40\\n   Compiling arrayvec v0.3.23\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling owning_ref v0.3.3\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.YRTz2z25DTng/components/servo_arc)\\nerror: use of unstable library feature \\'process_abort\\' (see issue #37838)\\n   --> components/servo_arc/lib.rs:277:13\\n    |\\n277 |             process::abort();\\n    |             ^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(process_abort)] to the crate attributes to enable\\n\\nerror: aborting due to previous error\\n\\nerror: Could not compile `servo_arc`.\\nerror: build failed\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/a559452b05c20041a27f518d262573c56b876b64/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55b83c628b6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x55b83c628bae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x55b83c51e786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x55b83c51e848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x55b83c5052d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x55b83c50d0f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x55b83c50e0f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x55b83c5156db - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x55b83c519837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x55b83c7a159c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x55b83c79ac1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f66b362382f - __libc_start_main\n  12:     0x55b83c4ddd08 - _start\n  13:                0x0 - <unknown>) })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":145973494238.0},{"name":"cycles:u","cnt":115694607142.0},{"name":"task-clock","cnt":29317.39864},{"name":"cpu-clock","cnt":29317.396191},{"name":"faults","cnt":100956.0},{"name":"max-rss","cnt":779080.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":221970027210.0},{"name":"cycles:u","cnt":224847016088.0},{"name":"task-clock","cnt":59011.436402},{"name":"cpu-clock","cnt":59010.733789},{"name":"faults","cnt":152316.0},{"name":"max-rss","cnt":1417084.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":74906027142.0},{"name":"cycles:u","cnt":50748061637.0},{"name":"task-clock","cnt":13044.956404},{"name":"cpu-clock","cnt":13044.314678},{"name":"faults","cnt":65019.0},{"name":"max-rss","cnt":851932.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28504105945.0},{"name":"cycles:u","cnt":23641738603.0},{"name":"task-clock","cnt":5743.320093},{"name":"cpu-clock","cnt":6073.085184},{"name":"faults","cnt":43629.0},{"name":"max-rss","cnt":306456.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":42060479309.0},{"name":"cycles:u","cnt":46142507878.0},{"name":"task-clock","cnt":12072.469909},{"name":"cpu-clock","cnt":12267.18781},{"name":"faults","cnt":49305.0},{"name":"max-rss","cnt":474188.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9972422967.0},{"name":"cycles:u","cnt":6814741133.0},{"name":"task-clock","cnt":1889.259813},{"name":"cpu-clock","cnt":1902.637295},{"name":"faults","cnt":49206.0},{"name":"max-rss","cnt":242012.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":42503321986.0},{"name":"cycles:u","cnt":46769334194.0},{"name":"task-clock","cnt":12283.959597},{"name":"cpu-clock","cnt":12417.784854},{"name":"faults","cnt":50834.0},{"name":"max-rss","cnt":483780.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":21623321836.0},{"name":"cycles:u","cnt":16723339872.0},{"name":"task-clock","cnt":4248.241676},{"name":"cpu-clock","cnt":4294.380625},{"name":"faults","cnt":57375.0},{"name":"max-rss","cnt":471220.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}