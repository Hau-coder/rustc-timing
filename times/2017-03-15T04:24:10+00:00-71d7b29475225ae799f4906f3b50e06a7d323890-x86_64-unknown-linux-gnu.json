{"commit":{"sha":"71d7b29475225ae799f4906f3b50e06a7d323890","date":"2017-03-15T04:24:10+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19402069485.0},{"name":"cycles:u","cnt":15940277209.0},{"name":"task-clock","cnt":3885.011335},{"name":"cpu-clock","cnt":4066.020679},{"name":"faults","cnt":20768.0},{"name":"max-rss","cnt":223536.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1089683275.0},{"name":"cycles:u","cnt":653799441.0},{"name":"task-clock","cnt":87.689227},{"name":"cpu-clock","cnt":194.025869},{"name":"faults","cnt":11525.0},{"name":"max-rss","cnt":94372.0}]}]}]},"html5ever-2016-08-25":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=    Updating registry `https://github.com/rust-lang/crates.io-index`\\n   Compiling matches v0.1.6\\n   Compiling rustc-serialize v0.3.24\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling void v1.0.2\\n   Compiling lazy_static v0.2.8\\n   Compiling siphasher v0.2.2\\n   Compiling mac v0.1.1\\n   Compiling libc v0.2.31\\n   Compiling unreachable v0.1.1\\n   Compiling utf-8 v0.6.0\\n   Compiling serde v0.8.23\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling phf_shared v0.7.21\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling debug_unreachable v0.1.1\\n   Compiling futf v0.1.3\\n   Compiling phf v0.7.21\\n   Compiling log v0.3.8\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling rand v0.3.16\\n   Compiling encoding v0.2.33\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling string_cache v0.2.29\\n   Compiling tendril v0.2.4\\n   Compiling html5ever v0.5.4 (file:///tmp/rustc-benchmark-html5ever-2016-08-25.cyH9XjTU2M2u)\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nthread \\'rustc\\' panicked at \\'called `Option::unwrap()` on a `None` value\\', /checkout/src/libcore/option.rs:323\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `string_cache`.\\nerror: build failed\\nmake: *** [all] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/71d7b29475225ae799f4906f3b50e06a7d323890/cargo/bin/cargo rustc  -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:4: recipe for target \\'all\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x563c6e1feb6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x563c6e1febae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x563c6e0f4786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x563c6e0f4848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x563c6e0db2d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x563c6e0e30f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x563c6e0e40f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x563c6e0eb6db - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x563c6e0ef837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x563c6e37759c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x563c6e370c1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f55e30bc82f - __libc_start_main\n  12:     0x563c6e0b3d08 - _start\n  13:                0x0 - <unknown>) })"},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24094334527.0},{"name":"cycles:u","cnt":19830612754.0},{"name":"task-clock","cnt":5038.221606},{"name":"cpu-clock","cnt":5038.223622},{"name":"faults","cnt":26724.0},{"name":"max-rss","cnt":249448.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":24834736009.0},{"name":"cycles:u","cnt":13643139916.0},{"name":"task-clock","cnt":3474.111026},{"name":"cpu-clock","cnt":3474.112223},{"name":"faults","cnt":29155.0},{"name":"max-rss","cnt":249648.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":178427113802.0},{"name":"cycles:u","cnt":241006125101.0},{"name":"task-clock","cnt":64289.001942},{"name":"cpu-clock","cnt":64338.387895},{"name":"faults","cnt":4882465.0},{"name":"max-rss","cnt":1169640.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":11050302689.0},{"name":"cycles:u","cnt":8770391378.0},{"name":"task-clock","cnt":2230.030128},{"name":"cpu-clock","cnt":2230.030262},{"name":"faults","cnt":10549.0},{"name":"max-rss","cnt":169696.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1434533493.0},{"name":"cycles:u","cnt":860098922.0},{"name":"task-clock","cnt":139.655222},{"name":"cpu-clock","cnt":246.78208},{"name":"faults","cnt":11610.0},{"name":"max-rss","cnt":98332.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":9249743999.0},{"name":"cycles:u","cnt":6192326883.0},{"name":"task-clock","cnt":1516.994874},{"name":"cpu-clock","cnt":1656.730859},{"name":"faults","cnt":36625.0},{"name":"max-rss","cnt":382268.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":22259524555.0},{"name":"cycles:u","cnt":8403239526.0},{"name":"task-clock","cnt":2059.287334},{"name":"cpu-clock","cnt":2146.98354},{"name":"faults","cnt":18305.0},{"name":"max-rss","cnt":136804.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":6270192592.0},{"name":"cycles:u","cnt":4663396037.0},{"name":"task-clock","cnt":1094.188904},{"name":"cpu-clock","cnt":1207.926317},{"name":"faults","cnt":14169.0},{"name":"max-rss","cnt":125484.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52782189489.0},{"name":"cycles:u","cnt":42282891151.0},{"name":"task-clock","cnt":10709.480942},{"name":"cpu-clock","cnt":10709.484606},{"name":"faults","cnt":36932.0},{"name":"max-rss","cnt":396004.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":31595584919.0},{"name":"cycles:u","cnt":25105573433.0},{"name":"task-clock","cnt":6372.636827},{"name":"cpu-clock","cnt":6372.637066},{"name":"faults","cnt":34796.0},{"name":"max-rss","cnt":281524.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":43565417687.0},{"name":"cycles:u","cnt":46599159875.0},{"name":"task-clock","cnt":12350.368461},{"name":"cpu-clock","cnt":12350.311692},{"name":"faults","cnt":52260.0},{"name":"max-rss","cnt":432052.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":43436923592.0},{"name":"cycles:u","cnt":46069156277.0},{"name":"task-clock","cnt":12205.610278},{"name":"cpu-clock","cnt":12205.485761},{"name":"faults","cnt":56254.0},{"name":"max-rss","cnt":425592.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":39959015741.0},{"name":"cycles:u","cnt":41455847734.0},{"name":"task-clock","cnt":11009.175226},{"name":"cpu-clock","cnt":11009.103143},{"name":"faults","cnt":54169.0},{"name":"max-rss","cnt":405400.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":39999261079.0},{"name":"cycles:u","cnt":42177557498.0},{"name":"task-clock","cnt":11227.307437},{"name":"cpu-clock","cnt":11227.263782},{"name":"faults","cnt":53331.0},{"name":"max-rss","cnt":399944.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":43437217103.0},{"name":"cycles:u","cnt":46609572610.0},{"name":"task-clock","cnt":12333.377498},{"name":"cpu-clock","cnt":12333.319811},{"name":"faults","cnt":53587.0},{"name":"max-rss","cnt":419984.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":11221954737.0},{"name":"cycles:u","cnt":7762503032.0},{"name":"task-clock","cnt":2021.173337},{"name":"cpu-clock","cnt":2021.099878},{"name":"faults","cnt":16294.0},{"name":"max-rss","cnt":243744.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":43562956108.0},{"name":"cycles:u","cnt":46349652465.0},{"name":"task-clock","cnt":12288.735347},{"name":"cpu-clock","cnt":12288.671254},{"name":"faults","cnt":51400.0},{"name":"max-rss","cnt":433012.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":43792054614.0},{"name":"cycles:u","cnt":47020426852.0},{"name":"task-clock","cnt":12450.102178},{"name":"cpu-clock","cnt":12450.04945},{"name":"faults","cnt":57169.0},{"name":"max-rss","cnt":424532.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":10709370034.0},{"name":"cycles:u","cnt":7318209990.0},{"name":"task-clock","cnt":1909.863368},{"name":"cpu-clock","cnt":1909.786987},{"name":"faults","cnt":16592.0},{"name":"max-rss","cnt":241844.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12744449484.0},{"name":"cycles:u","cnt":9403093757.0},{"name":"task-clock","cnt":2396.531087},{"name":"cpu-clock","cnt":2396.533022},{"name":"faults","cnt":18816.0},{"name":"max-rss","cnt":183892.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9390404961.0},{"name":"cycles:u","cnt":6982495318.0},{"name":"task-clock","cnt":1783.253861},{"name":"cpu-clock","cnt":1783.254476},{"name":"faults","cnt":13620.0},{"name":"max-rss","cnt":171208.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling lazy_static v0.2.8\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.Qq3yfEoPppK3/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling num-traits v0.1.40\\n   Compiling unicode-xid v0.0.4\\n   Compiling either v1.1.0\\n   Compiling precomputed-hash v0.1.0\\n   Compiling libc v0.2.28\\n   Compiling bit-vec v0.4.4\\n   Compiling atomic_refcell v0.1.1\\n   Compiling log v0.3.8\\n   Compiling rustc-serialize v0.3.24\\n   Compiling cfg-if v0.1.2\\n   Compiling rayon-core v1.2.1\\n   Compiling quote v0.3.15\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling serde v1.0.10\\n   Compiling same-file v0.1.3\\n   Compiling pdqsort v0.1.2\\n   Compiling synom v0.11.3\\n   Compiling bitflags v0.7.0\\n   Compiling byteorder v1.1.0\\n   Compiling num-integer v0.1.35\\n   Compiling walkdir v1.0.7\\n   Compiling thread-id v3.2.0\\n   Compiling time v0.1.38\\n   Compiling syn v0.11.11\\n   Compiling num_cpus v1.6.2\\n   Compiling void v1.0.2\\n   Compiling unreachable v0.1.1\\n   Compiling matches v0.1.6\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.Qq3yfEoPppK3/components/style)\\n   Compiling ordered-float v0.4.0\\n   Compiling unicode-bidi v0.3.4\\n   Compiling fnv v1.0.5\\n   Compiling smallvec v0.4.1\\n   Compiling itoa v0.3.1\\n   Compiling heapsize v0.4.1\\n   Compiling futures v0.1.14\\n   Compiling odds v0.2.25\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling nodrop v0.1.9\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling arrayvec v0.3.23\\n   Compiling owning_ref v0.3.3\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.Qq3yfEoPppK3/components/servo_arc)\\n   Compiling arraydeque v0.2.3\\nerror: use of unstable library feature \\'process_abort\\' (see issue #37838)\\n   --> components/servo_arc/lib.rs:277:13\\n    |\\n277 |             process::abort();\\n    |             ^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(process_abort)] to the crate attributes to enable\\n\\nerror: aborting due to previous error\\n\\nerror: Could not compile `servo_arc`.\\nerror: build failed\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/71d7b29475225ae799f4906f3b50e06a7d323890/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x563c6e1feb6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x563c6e1febae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x563c6e0f4786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x563c6e0f4848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x563c6e0db2d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x563c6e0e30f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x563c6e0e40f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x563c6e0eb6db - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x563c6e0ef837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x563c6e37759c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x563c6e370c1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f55e30bc82f - __libc_start_main\n  12:     0x563c6e0b3d08 - _start\n  13:                0x0 - <unknown>) })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":145885727779.0},{"name":"cycles:u","cnt":115809773182.0},{"name":"task-clock","cnt":29290.693836},{"name":"cpu-clock","cnt":29290.701435},{"name":"faults","cnt":100252.0},{"name":"max-rss","cnt":777480.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":222000767101.0},{"name":"cycles:u","cnt":225078634106.0},{"name":"task-clock","cnt":59077.585021},{"name":"cpu-clock","cnt":59077.000497},{"name":"faults","cnt":151948.0},{"name":"max-rss","cnt":1418044.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":74763549015.0},{"name":"cycles:u","cnt":50941700103.0},{"name":"task-clock","cnt":13098.874178},{"name":"cpu-clock","cnt":13098.347903},{"name":"faults","cnt":57573.0},{"name":"max-rss","cnt":849648.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28502049185.0},{"name":"cycles:u","cnt":23724369093.0},{"name":"task-clock","cnt":5503.77245},{"name":"cpu-clock","cnt":6102.577401},{"name":"faults","cnt":42843.0},{"name":"max-rss","cnt":306364.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":42128234044.0},{"name":"cycles:u","cnt":45965451455.0},{"name":"task-clock","cnt":11648.285308},{"name":"cpu-clock","cnt":12205.107411},{"name":"faults","cnt":48517.0},{"name":"max-rss","cnt":475632.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9986998005.0},{"name":"cycles:u","cnt":6835510529.0},{"name":"task-clock","cnt":1174.196626},{"name":"cpu-clock","cnt":1889.049753},{"name":"faults","cnt":48386.0},{"name":"max-rss","cnt":241744.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":42471785768.0},{"name":"cycles:u","cnt":46727130465.0},{"name":"task-clock","cnt":12371.059025},{"name":"cpu-clock","cnt":12396.626481},{"name":"faults","cnt":51180.0},{"name":"max-rss","cnt":480296.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":21776071948.0},{"name":"cycles:u","cnt":16581278838.0},{"name":"task-clock","cnt":4257.577289},{"name":"cpu-clock","cnt":4258.939521},{"name":"faults","cnt":59731.0},{"name":"max-rss","cnt":471116.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}