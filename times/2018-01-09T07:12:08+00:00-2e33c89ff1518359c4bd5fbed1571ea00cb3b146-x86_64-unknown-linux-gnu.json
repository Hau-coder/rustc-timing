{"commit":{"sha":"2e33c89ff1518359c4bd5fbed1571ea00cb3b146","date":"2018-01-09T07:12:08+00:00"},"benchmarks":{"coercions":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling issue-32278-big-array-of-strings v0.1.0 (file:///tmp/rustc-benchmark-coercions.9bCHQtyfkGol)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `issue-32278-big-array-of-strings`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"crates.io":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling quote v0.3.15\\n   Compiling route-recognizer v0.1.12\\n   Compiling cfg-if v0.1.2\\n   Compiling libc v0.2.30\\n   Compiling semver v0.1.20\\n   Compiling license-exprs v1.3.0\\n   Compiling bufstream v0.1.3\\n   Compiling pkg-config v0.3.9\\n   Compiling siphasher v0.2.2\\n   Compiling log v0.3.8\\n   Compiling rustc-demangle v0.1.5\\n   Compiling regex-syntax v0.3.9\\n   Compiling gcc v0.3.54\\n   Compiling serde v1.0.14\\n   Compiling civet-sys v0.1.4\\n   Compiling typed-arena v1.3.0\\n   Compiling rustc-serialize v0.3.24\\n   Compiling scopeguard v0.3.2\\n   Compiling unicode-normalization v0.1.5\\n   Compiling unicode_categories v0.1.1\\n   Compiling rayon-core v1.2.1\\n   Compiling winapi-build v0.1.1\\n   Compiling precomputed-hash v0.1.0\\n   Compiling foreign-types v0.2.0\\n   Compiling lazy_static v0.2.8\\n   Compiling void v1.0.2\\n   Compiling bitflags v0.9.1\\n   Compiling string_cache_shared v0.3.0\\n   Compiling matches v0.1.6\\n   Compiling num-traits v0.1.40\\n   Compiling regex-syntax v0.4.1\\n   Compiling mac v0.1.1\\n   Compiling dtoa v0.4.2\\n   Compiling entities v1.0.0\\n   Compiling utf8-ranges v1.0.0\\n   Compiling either v1.1.0\\n   Compiling unicode-xid v0.0.4\\n   Compiling futures v0.1.16\\n   Compiling itoa v0.3.4\\n   Compiling strsim v0.6.0\\n   Compiling safemem v0.2.0\\n   Compiling pq-sys v0.4.4\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling maplit v0.1.4\\n   Compiling hex v0.2.0\\n   Compiling utf8-ranges v0.1.3\\n   Compiling untrusted v0.5.1\\n   Compiling percent-encoding v1.0.0\\n   Compiling antidote v1.0.0\\n   Compiling openssl-probe v0.1.1\\n   Compiling openssl v0.9.17\\n   Compiling winapi v0.2.8\\n   Compiling byteorder v1.1.0\\n   Compiling phf_shared v0.7.21\\n   Compiling rustc_version v0.1.7\\n   Compiling mime v0.2.6\\n   Compiling time v0.1.38\\n   Compiling memchr v0.1.11\\n   Compiling rand v0.3.16\\n   Compiling memchr v1.0.1\\n   Compiling xattr v0.1.11\\n   Compiling num_cpus v1.6.2\\n   Compiling filetime v0.1.10\\n   Compiling socket2 v0.2.2\\n   Compiling kernel32-sys v0.2.2\\n   Compiling unreachable v0.1.1\\n   Compiling unreachable v1.0.0\\n   Compiling utf-8 v0.7.1\\n   Compiling unicode-bidi v0.3.4\\n   Compiling miniz-sys v0.1.9\\n   Compiling curl-sys v0.3.14\\n   Compiling libz-sys v1.0.16\\n   Compiling openssl-sys v0.9.17\\n   Compiling cmake v0.1.25\\n   Compiling backtrace-sys v0.1.12\\n   Compiling rust-crypto v0.2.36\\n   Compiling num-integer v0.1.35\\n   Compiling synom v0.11.3\\n   Compiling coco v0.1.1\\n   Compiling itertools v0.6.2\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling scheduled-thread-pool v0.1.0\\n   Compiling phf v0.7.21\\n   Compiling base64 v0.6.0\\n   Compiling base64 v0.5.2\\n   Compiling email v0.0.17\\n   Compiling conduit-mime-types v0.7.3\\n   Compiling aho-corasick v0.5.3\\n   Compiling aho-corasick v0.6.3\\n   Compiling tar v0.4.13\\n   Compiling debug_unreachable v0.1.1\\n   Compiling thread_local v0.3.4\\n   Compiling uuid v0.4.0\\n   Compiling phf_generator v0.7.21\\n   Compiling idna v0.1.4\\n   Compiling libssh2-sys v0.2.6\\n   Compiling libgit2-sys v0.6.14\\n   Compiling toml v0.4.5\\n   Compiling serde_json v1.0.3\\n   Compiling num-iter v0.1.34\\n   Compiling syn v0.11.11\\n   Compiling r2d2 v0.7.4\\n   Compiling encoding v0.2.33\\n   Compiling futf v0.1.3\\n   Compiling string_cache_codegen v0.4.0\\n   Compiling phf_codegen v0.7.21\\n   Compiling regex v0.2.2\\n   Compiling num v0.1.40\\n   Compiling url v1.5.1\\n   Compiling tendril v0.4.0\\n   Compiling rayon v0.7.1\\n   Compiling thread-id v2.0.0\\n   Compiling string_cache v0.6.2\\n   Compiling flate2 v0.2.20\\n   Compiling markup5ever v0.4.0\\n   Compiling chrono v0.3.0\\n   Compiling chrono v0.4.0\\n   Compiling thread_local v0.2.7\\n   Compiling ring v0.11.0\\n   Compiling derive-error-chain v0.10.1\\n   Compiling html5ever v0.19.0\\n   Compiling serde_derive_internals v0.16.0\\n   Compiling comrak v0.1.9\\n   Compiling env_logger v0.4.3\\n   Compiling backtrace v0.3.3\\n   Compiling regex v0.1.80\\n   Compiling diesel v0.16.0\\n   Compiling error-chain v0.10.0\\nerror[E0583]: file not found for module `montgomery`\\n  --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.11.0/src/arithmetic/arithmetic.rs:15:9\\n   |\\n15 | pub mod montgomery;\\n   |         ^^^^^^^^^^\\n   |\\n   = help: name the file either arithmetic/montgomery.rs or arithmetic/montgomery/mod.rs inside the directory \\\"/home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/ring-0.11.0/src/arithmetic\\\"\\n\\nerror: aborting due to previous error\\n\\nerror: Could not compile `ring`.\\nerror: build failed\\n\\n\\n stdout=Build failed, waiting for other jobs to finish...\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"deep-vector":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling issue-20936-deep-vector v0.1.0 (file:///tmp/rustc-benchmark-deep-vector.6ZowQ47SGID1)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `issue-20936-deep-vector`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"encoding":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling encoding_index_tests v0.1.5 (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD/src/index/tests)\\n   Compiling encoding-types v0.2.0 (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD/src/types)\\n   Compiling encoding-index-korean v1.20141219.6 (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD/src/index/korean)\\n   Compiling encoding-index-japanese v1.20141219.6 (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD/src/index/japanese)\\n   Compiling encoding-index-tradchinese v1.20141219.6 (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD/src/index/tradchinese)\\n   Compiling encoding-index-singlebyte v1.20160120.0 (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD/src/index/singlebyte)\\n   Compiling encoding-index-simpchinese v1.20160120.0 (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD/src/index/simpchinese)\\n   Compiling encoding v0.3.0-dev (file:///tmp/rustc-benchmark-encoding.s6mk9p5bQgUD)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `encoding`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"futures":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=warning: package replacement is not used: https://github.com/rust-lang/crates.io-index#openssl:0.7.14\\n   Compiling log v0.3.6\\n   Compiling futures v0.1.0 (file:///tmp/rustc-benchmark-futures.YwHDg69mFwSa)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `futures`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"helloworld":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling helloworld v0.1.0 (file:///tmp/rustc-benchmark-helloworld.6dVDFjLVqbPl)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `helloworld`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"html5ever":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling serde v0.8.23\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling matches v0.1.6\\n   Compiling log v0.3.8\\n   Compiling void v1.0.2\\n   Compiling mac v0.1.1\\n   Compiling siphasher v0.2.2\\n   Compiling lazy_static v0.2.9\\n   Compiling libc v0.2.33\\n   Compiling rustc-serialize v0.3.24\\n   Compiling unreachable v0.1.1\\n   Compiling utf-8 v0.6.0\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling debug_unreachable v0.1.1\\n   Compiling phf_shared v0.7.21\\n   Compiling futf v0.1.3\\n   Compiling rand v0.3.18\\n   Compiling phf v0.7.21\\n   Compiling encoding v0.2.33\\n   Compiling phf_generator v0.7.21\\n   Compiling tendril v0.2.4\\n   Compiling phf_codegen v0.7.21\\n   Compiling string_cache v0.2.29\\n   Compiling html5ever v0.5.4 (file:///tmp/rustc-benchmark-html5ever.iRHuMojbslxK)\\nwarning: use of deprecated item \\'std::hash::SipHasher\\': use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item \\'std::hash::SipHasher\\': use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n\\nwarning: use of deprecated item \\'std::hash::SipHasher::new\\': use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `html5ever`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"hyper":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling httparse v0.1.6\\n   Compiling lazy_static v0.1.16\\n   Compiling bitflags v0.3.3\\n   Compiling libc v0.1.12\\n   Compiling libc v0.2.16\\n   Compiling matches v0.1.2\\n   Compiling winapi v0.2.8\\n   Compiling typeable v0.1.2\\n   Compiling unicase v0.1.0\\n   Compiling traitobject v0.0.1\\n   Compiling pkg-config v0.3.8\\n   Compiling rustc-serialize v0.3.24\\n   Compiling gcc v0.3.35\\n   Compiling log v0.3.6\\n   Compiling winapi-build v0.1.1\\n   Compiling num_cpus v0.2.13\\n   Compiling rand v0.3.14\\n   Compiling kernel32-sys v0.2.2\\n   Compiling mime v0.0.11\\n   Compiling openssl-sys v0.6.7\\n   Compiling time v0.1.35\\n   Compiling openssl v0.6.7\\n   Compiling uuid v0.1.18\\n   Compiling url v0.2.38\\n   Compiling cookie v0.1.21\\n   Compiling hyper v0.5.0 (file:///tmp/rustc-benchmark-hyper.fEFZiineRbAT)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `hyper`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"inflate":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling inflate v0.1.0 (file:///tmp/rustc-benchmark-inflate.DXt8mPPilrgC)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `inflate`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"parser":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling combine v1.3.0\\n   Compiling day15 v0.1.0 (file:///tmp/rustc-benchmark-parser.s4q88LCUyJAS)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `day15`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"piston-image":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling lazy_static v0.2.9\\n   Compiling scopeguard v0.3.3\\n   Compiling color_quant v1.0.0\\n   Compiling rustc-serialize v0.3.24\\n   Compiling byteorder v0.5.3\\n   Compiling lzw v0.10.0\\n   Compiling bitflags v0.7.0\\n   Compiling libc v0.2.33\\n   Compiling cc v1.0.3\\n   Compiling scoped_threadpool v0.1.8\\n   Compiling num-traits v0.1.40\\n   Compiling inflate v0.1.1\\n   Compiling byteorder v1.1.0\\n   Compiling either v1.3.0\\n   Compiling glob v0.2.11\\n   Compiling rayon-core v1.3.0\\n   Compiling gif v0.9.2\\n   Compiling num_cpus v1.7.0\\n   Compiling rand v0.3.18\\n   Compiling coco v0.1.1\\n   Compiling enum_primitive v0.1.1\\n   Compiling num-integer v0.1.35\\n   Compiling miniz-sys v0.1.10\\n   Compiling num-iter v0.1.34\\n   Compiling flate2 v0.2.20\\n   Compiling rayon v0.8.2\\n   Compiling num-bigint v0.1.40\\n   Compiling png v0.5.2\\n   Compiling jpeg-decoder v0.1.13\\n   Compiling num-rational v0.1.40\\n   Compiling image v0.10.3 (file:///tmp/rustc-benchmark-piston-image.4mFbrAVXRKAJ)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `image`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"regex":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling libc v0.2.33\\n   Compiling winapi-build v0.1.1\\n   Compiling regex-syntax v0.3.9 (file:///tmp/rustc-benchmark-regex.KLo1UoeTaVLl/regex-syntax)\\n   Compiling winapi v0.2.8\\n   Compiling utf8-ranges v0.1.3\\n   Compiling kernel32-sys v0.2.2\\n   Compiling memchr v0.1.11\\n   Compiling aho-corasick v0.5.3\\n   Compiling thread-id v2.0.0\\n   Compiling thread_local v0.2.7\\n   Compiling regex v0.1.80 (file:///tmp/rustc-benchmark-regex.KLo1UoeTaVLl)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `regex`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"regression-31157":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling libc v0.2.33\\n   Compiling winapi-build v0.1.1\\n   Compiling winapi v0.2.8\\n   Compiling utf8-ranges v0.1.3\\n   Compiling regex-syntax v0.3.9\\n   Compiling kernel32-sys v0.2.2\\n   Compiling thread-id v2.0.0\\n   Compiling memchr v0.1.11\\n   Compiling thread_local v0.2.7\\n   Compiling aho-corasick v0.5.3\\n   Compiling regex v0.1.80\\n   Compiling peruse v0.3.0 (https://github.com/DanSimon/peruse.git#dbfc0054)\\n   Compiling parser v0.1.0 (file:///tmp/rustc-benchmark-regression-31157.jMVHtwVnZJfk)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `parser`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"script-servo":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling lazycell v0.5.1\\n   Compiling half v1.0.1\\n   Compiling ref_filter_map v1.0.1\\n   Compiling mp3-metadata v0.3.0\\n   Compiling percent-encoding v1.0.0\\n   Compiling log v0.3.8\\n   Compiling itoa v0.3.4\\n   Compiling byteorder v1.1.0\\n   Compiling traitobject v0.1.0\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling scoped_threadpool v0.1.8\\n   Compiling either v1.3.0\\n   Compiling precomputed-hash v0.1.1\\n   Compiling pkg-config v0.3.9\\n   Compiling procedural-masquerade v0.1.3\\n   Compiling atomic_refcell v0.1.1\\n   Compiling ident_case v1.0.0\\n   Compiling color_quant v1.0.0\\n   Compiling heapsize v0.4.1\\n   Compiling lazy_static v0.2.9\\n   Compiling error-chain v0.10.0\\n   Compiling utf8-ranges v1.0.0\\n   Compiling typeable v0.1.2\\n   Compiling libc v0.2.33\\n   Compiling cfg-if v0.1.2\\n   Compiling num-traits v0.1.40\\n   Compiling scopeguard v0.3.3\\n   Compiling mitochondria v1.1.2\\n   Compiling same-file v0.1.3\\n   Compiling mac v0.1.1\\n   Compiling version_check v0.1.3\\n   Compiling unicode-normalization v0.1.5\\n   Compiling smallvec v0.4.4\\n   Compiling odds v0.2.25\\n   Compiling slab v0.3.0\\n   Compiling fnv v1.0.5\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling safemem v0.2.0\\n   Compiling bitflags v1.0.0\\n   Compiling cc v1.0.3\\n   Compiling language-tags v0.2.2\\n   Compiling bitreader v0.3.1\\n   Compiling xdg v2.1.0\\n   Compiling ref_slice v1.1.1\\n   Compiling signpost v0.1.0 (https://github.com/pcwalton/signpost.git#7ed71250)\\n   Compiling void v1.0.2\\n   Compiling quote v0.3.15\\n   Compiling script_plugins v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/script_plugins)\\n   Compiling nodrop v0.1.12\\n   Compiling smallbitvec v1.0.7\\n   Compiling matches v0.1.6\\n   Compiling dtoa v0.4.2\\n   Compiling xi-unicode v0.1.0\\n   Compiling adler32 v1.0.2\\n   Compiling unicode-xid v0.0.4\\n   Compiling swapper v0.1.0\\n   Compiling khronos_api v1.0.1\\n   Compiling rayon-core v1.2.1\\n   Compiling futures v0.1.17\\n   Compiling open v1.2.1\\n   Compiling siphasher v0.2.2\\n   Compiling mozjs_sys v0.50.0 (https://github.com/servo/mozjs#9290ed09)\\n   Compiling toml v0.2.1\\n   Compiling httparse v1.2.3\\n   Compiling getopts v0.2.15\\n   Compiling regex-syntax v0.4.1\\n   Compiling gcc v0.3.54\\n   Compiling rustc-serialize v0.3.24\\n   Compiling bitflags v0.9.1\\n   Compiling dom_struct v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/dom_struct)\\n   Compiling lzw v0.10.0\\n   Compiling string_cache_shared v0.3.0\\n   Compiling ogg v0.5.1\\n   Compiling mime v0.2.6\\n   Compiling itertools v0.5.10\\n   Compiling encoding_rs v0.7.1\\n   Compiling coco v0.1.1\\n   Compiling walkdir v1.0.7\\n   Compiling servo_allocator v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/allocator)\\n   Compiling hashglobe v0.1.0 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/hashglobe)\\n   Compiling net2 v0.2.31\\n   Compiling iovec v0.1.1\\n   Compiling time v0.1.38\\n   Compiling rand v0.3.17\\n   Compiling memchr v1.0.2\\n   Compiling num_cpus v1.7.0\\n   Compiling num-integer v0.1.35\\n   Compiling enum_primitive v0.1.1\\n   Compiling owning_ref v0.3.3\\n   Compiling servo-fontconfig-sys v4.0.4\\n   Compiling base64 v0.6.0\\n   Compiling unicase v1.4.2\\n   Compiling unreachable v1.0.0\\n   Compiling unreachable v0.1.1\\n   Compiling mp4parse v0.7.1\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/servo_arc)\\n   Compiling arrayvec v0.3.23\\n   Compiling utf-8 v0.7.1\\n   Compiling dtoa-short v0.3.1\\n   Compiling synom v0.11.3\\n   Compiling inflate v0.3.3\\n   Compiling deflate v0.7.17\\n   Compiling xml-rs v0.6.1\\n   Compiling miniz-sys v0.1.10\\n   Compiling cmake v0.1.26\\n   Compiling libz-sys v1.0.18\\n   Compiling gif v0.9.2\\n   Compiling ogg_metadata v0.4.1\\n   Compiling metadeps v1.1.2\\n   Compiling tinyfiledialogs v2.5.9\\n   Compiling fallible v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/fallible)\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/style)\\n   Compiling mio v0.6.11\\n   Compiling aho-corasick v0.6.3\\n   Compiling num-rational v0.1.39\\n   Compiling num-iter v0.1.34\\n   Compiling cookie v0.6.2\\n   Compiling thread_local v0.3.4\\n   Compiling parking_lot_core v0.2.6\\n   Compiling servo_rand v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/rand)\\n   Compiling debug_unreachable v0.1.1\\n   Compiling ordered-float v0.4.0\\n   Compiling lru_cache v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/lru_cache)\\n   Compiling syn v0.11.11\\n   Compiling expat-sys v2.1.5\\n   Compiling angle v0.5.0 (https://github.com/servo/angle?branch=servo#e61c04e7)\\n   Compiling harfbuzz-sys v0.1.15\\n   Compiling servo-freetype-sys v4.0.3\\n   Compiling js v0.1.7 (https://github.com/servo/rust-mozjs#1dc8aab2)\\n   Compiling fontsan v0.4.0 (https://github.com/servo/fontsan#29e879c8)\\n   Compiling audio-video-metadata v0.1.4\\n   Compiling gl_generator v0.5.5\\n   Compiling x11 v2.16.0\\n   Compiling regex v0.2.2\\n   Compiling futf v0.1.3\\n   Compiling parking_lot v0.4.8\\n   Compiling rayon v0.8.2\\n   Compiling phf_shared v0.7.21\\n   Compiling tendril v0.4.0\\n   Compiling gleam v0.4.10\\n   Compiling offscreen_gl_context v0.12.1\\n   Compiling png v0.10.0\\n   Compiling jpeg-decoder v0.1.13\\n   Compiling phf_generator v0.7.21\\n   Compiling phf v0.7.21\\n   Compiling caseless v0.1.3\\n   Compiling freetype v0.3.0\\n   Compiling string_cache_codegen v0.4.0\\n   Compiling phf_codegen v0.7.21\\n   Compiling darling_core v0.2.0\\n   Compiling serde_derive_internals v0.16.0\\n   Compiling domobject_derive v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/domobject_derive)\\n   Compiling synstructure v0.5.2\\n   Compiling html5ever v0.21.0\\n   Compiling cssparser v0.22.0\\n   Compiling image v0.16.0\\n   Compiling servo-fontconfig v0.2.1\\n   Compiling cssparser-macros v0.3.0\\n   Compiling selectors v0.19.0 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/selectors)\\n   Compiling mime_guess v1.8.2\\n   Compiling string_cache v0.6.2\\n   Compiling markup5ever v0.6.2\\n   Compiling servo_atoms v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/atoms)\\n   Compiling jstraceable_derive v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/jstraceable_derive)\\n   Compiling malloc_size_of_derive v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/malloc_size_of_derive)\\n   Compiling deny_public_fields v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/deny_public_fields)\\n   Compiling unicode-script v0.1.1\\n   Compiling darling_macro v0.2.0\\n   Compiling serde_derive v1.0.17\\n   Compiling darling v0.2.0\\n   Compiling style_derive v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/style_derive)\\n   Compiling serde v1.0.17\\n   Compiling serde_bytes v0.10.2\\n   Compiling unicode-bidi v0.3.4\\n   Compiling app_units v0.5.6\\n   Compiling euclid v0.15.4\\n   Compiling bincode v0.9.2\\n   Compiling rust-webvr-api v0.9.2\\n   Compiling nonzero v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/nonzero)\\n   Compiling serde_json v1.0.5\\n   Compiling uuid v0.5.1\\n   Compiling ipc-channel v0.9.0\\n   Compiling idna v0.1.4\\n   Compiling webrender_api v0.53.1 (https://github.com/servo/webrender#07405419)\\n   Compiling script v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/script)\\n   Compiling xml5ever v0.11.1\\n   Compiling url v1.6.0\\n   Compiling url_serde v0.2.0\\n   Compiling hyper v0.10.13\\n   Compiling malloc_size_of v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/malloc_size_of)\\n   Compiling hyper_serde v0.7.0\\n   Compiling msg v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/msg)\\n   Compiling range v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/range)\\n   Compiling servo_url v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/url)\\n   Compiling servo_geometry v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/geometry)\\n   Compiling gfx_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/gfx_traits)\\n   Compiling servo_config v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/config)\\n   Compiling devtools_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/devtools_traits)\\n   Compiling webvr_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/webvr_traits)\\n   Compiling style_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/style_traits)\\n   Compiling profile_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/profile_traits)\\n   Compiling bluetooth_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/bluetooth_traits)\\n   Compiling canvas_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/canvas_traits)\\n   Compiling net_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/net_traits)\\n   Compiling script_traits v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/script_traits)\\n   Compiling gfx v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/gfx)\\n   Compiling metrics v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/metrics)\\n   Compiling script_layout_interface v0.0.1 (file:///tmp/rustc-benchmark-script-servo.UKwJeNwECufK/components/script_layout_interface)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `script`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"style-servo":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling num-traits v0.1.40\\n   Compiling fnv v1.0.5\\n   Compiling pdqsort v0.1.2\\n   Compiling byteorder v1.1.0\\n   Compiling ident_case v1.0.0\\n   Compiling rustc-serialize v0.3.24\\n   Compiling atomic_refcell v0.1.1\\n   Compiling smallvec v0.4.4\\n   Compiling bitflags v0.7.0\\n   Compiling siphasher v0.2.2\\n   Compiling cfg-if v0.1.2\\n   Compiling either v1.1.0\\n   Compiling unicode-xid v0.0.4\\n   Compiling bitflags v0.8.2\\n   Compiling quote v0.3.15\\n   Compiling log v0.3.8\\n   Compiling itoa v0.3.1\\n   Compiling matches v0.1.6\\n   Compiling precomputed-hash v0.1.1\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling odds v0.2.25\\n   Compiling same-file v0.1.3\\n   Compiling rayon-core v1.2.1\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling lazy_static v0.2.8\\n   Compiling void v1.0.2\\n   Compiling futures v0.1.14\\n   Compiling heapsize v0.4.1\\n   Compiling scopeguard v0.3.2\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling dtoa v0.4.2\\n   Compiling smallbitvec v1.0.7\\n   Compiling serde v1.0.10\\n   Compiling libc v0.2.28\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling synom v0.11.3\\n   Compiling itertools v0.5.10\\n   Compiling phf_shared v0.7.21\\n   Compiling unicode-bidi v0.3.4\\n   Compiling walkdir v1.0.7\\n   Compiling num-integer v0.1.35\\n   Compiling owning_ref v0.3.3\\n   Compiling unreachable v0.1.1\\n   Compiling coco v0.1.1\\n   Compiling dtoa-short v0.3.1\\n   Compiling nodrop v0.1.9\\n   Compiling phf v0.7.21\\n   Compiling thread-id v3.2.0\\n   Compiling time v0.1.38\\n   Compiling num_cpus v1.6.2\\n   Compiling rand v0.3.15\\n   Compiling syn v0.11.11\\n   Compiling ordered-float v0.4.0\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/servo_arc)\\n   Compiling arrayvec v0.3.23\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/style)\\n   Compiling hashglobe v0.1.0 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/hashglobe)\\n   Compiling lru_cache v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/lru_cache)\\n   Compiling parking_lot_core v0.2.2\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling fallible v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/fallible)\\n   Compiling selectors v0.19.0 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/selectors)\\n   Compiling parking_lot v0.4.4\\n   Compiling rayon v0.8.2\\n   Compiling euclid v0.15.1\\n   Compiling app_units v0.5.6\\n   Compiling cssparser v0.22.0\\n   Compiling synstructure v0.5.2\\n   Compiling cssparser-macros v0.3.0\\n   Compiling darling_core v0.2.0\\n   Compiling malloc_size_of_derive v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/malloc_size_of_derive)\\n   Compiling darling_macro v0.2.0\\n   Compiling malloc_size_of v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/malloc_size_of)\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> components/selectors/attr.rs:7:5\\n  |\\n7 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: #[warn(unused_imports)] on by default\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n  --> components/selectors/parser.rs:17:5\\n   |\\n17 | use std::ascii::AsciiExt;\\n   |     ^^^^^^^^^^^^^^^^^^^^\\n\\n   Compiling darling v0.2.0\\n   Compiling style_traits v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/style_traits)\\n   Compiling style_derive v0.0.1 (file:///tmp/rustc-benchmark-style-servo.kqoesXfvmdqy/components/style_derive)\\nwarning: unused import: `std::ascii::AsciiExt`\\n  --> components/style_traits/viewport.rs:10:5\\n   |\\n10 | use std::ascii::AsciiExt;\\n   |     ^^^^^^^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(unused_imports)] on by default\\n\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `style`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"syn":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling unicode-xid v0.1.0\\n   Compiling proc-macro2 v0.1.3\\n   Compiling quote v0.3.15 (https://github.com/dtolnay/quote#67a9d9ff)\\n   Compiling synom v0.11.3 (file:///tmp/rustc-benchmark-syn.f3Z8vFvm9qOU/synom)\\n   Compiling syn v0.11.11 (file:///tmp/rustc-benchmark-syn.f3Z8vFvm9qOU)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `syn`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"tokio-webpush-simple":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling safemem v0.2.0\\n   Compiling serde v1.0.9\\n   Compiling log v0.3.8\\n   Compiling futures v0.1.14\\n   Compiling byteorder v1.0.0\\n   Compiling unicode-normalization v0.1.5\\n   Compiling sha1 v0.2.0\\n   Compiling libc v0.2.24\\n   Compiling scoped-tls v0.1.0\\n   Compiling slab v0.3.0\\n   Compiling take v0.1.0\\n   Compiling lazycell v0.4.0\\n   Compiling lazy_static v0.2.8\\n   Compiling num-traits v0.1.39\\n   Compiling rustc-demangle v0.1.4\\n   Compiling foreign-types v0.2.0\\n   Compiling quote v0.3.15\\n   Compiling cfg-if v0.1.1\\n   Compiling percent-encoding v1.0.0\\n   Compiling language-tags v0.2.2\\n   Compiling dtoa v0.4.1\\n   Compiling unicode-xid v0.0.4\\n   Compiling pkg-config v0.3.9\\n   Compiling openssl v0.9.14\\n   Compiling gcc v0.3.51\\n   Compiling semver v0.1.20\\n   Compiling smallvec v0.2.1\\n   Compiling itoa v0.3.1\\n   Compiling httparse v1.2.3\\n   Compiling bitflags v0.9.1\\n   Compiling matches v0.1.6\\n   Compiling base64 v0.6.0\\n   Compiling base64 v0.5.2\\n   Compiling iovec v0.1.0\\n   Compiling rand v0.3.15\\n   Compiling time v0.1.37\\n   Compiling num_cpus v1.6.2\\n   Compiling net2 v0.2.29\\n   Compiling synom v0.11.3\\n   Compiling rustc_version v0.1.7\\n   Compiling unicode-bidi v0.3.3\\n   Compiling utf-8 v0.7.1\\n   Compiling tokio-service v0.1.0\\n   Compiling openssl-sys v0.9.14\\n   Compiling backtrace-sys v0.1.11\\n   Compiling bytes v0.4.4\\n   Compiling syn v0.11.11\\n   Compiling futures-cpupool v0.1.5\\n   Compiling mio v0.6.9\\n   Compiling unicase v2.0.0\\n   Compiling tokio-io v0.1.2\\n   Compiling idna v0.1.2\\n   Compiling mime v0.3.2\\n   Compiling tokio-core v0.1.8\\n   Compiling url v1.5.1\\n   Compiling serde_derive_internals v0.15.1\\n   Compiling uuid v0.5.1\\n   Compiling serde_json v1.0.2\\n   Compiling serde_derive v1.0.9\\n   Compiling tokio-proto v0.1.1\\n   Compiling tokio-dns-unofficial v0.1.1\\n   Compiling native-tls v0.1.4\\n   Compiling backtrace v0.3.2\\n   Compiling tokio-tls v0.1.3\\n   Compiling tungstenite v0.2.4\\n   Compiling error-chain v0.10.0\\n   Compiling hyper v0.11.0\\n   Compiling tokio-tungstenite v0.2.1\\n   Compiling webpush-server v0.1.0 (file:///tmp/rustc-benchmark-tokio-webpush-simple.Iz1faish4WG3)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `webpush-server`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"tuple-stress":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling tuple-stress v0.1.0 (file:///tmp/rustc-benchmark-tuple-stress.4A8z49SuepG2)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `tuple-stress`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"unify-linearly":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling issue-32062-equality-relations-complexity v0.1.0 (file:///tmp/rustc-benchmark-unify-linearly.tmKcQVvjFwxr)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `issue-32062-equality-relations-complexity`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"},"unused-warnings":{"Err":"Error(Msg(\"expected success, got exit code: 101\\n\\nstderr=   Compiling issue-43572-unused-uses v0.1.0 (file:///tmp/rustc-benchmark-unused-warnings.hpTZEUafXIRN)\\nError:\\nYou may not have permission to collect stats.\\n\\nConsider tweaking /proc/sys/kernel/perf_event_paranoid,\\nwhich controls use of the performance events system by\\nunprivileged users (without CAP_SYS_ADMIN).\\n\\nThe current value is 3:\\n\\n  -1: Allow use of (almost) all events by all users\\n>= 0: Disallow raw tracepoint access by users without CAP_IOC_LOCK\\n>= 1: Disallow CPU event access by users without CAP_SYS_ADMIN\\n>= 2: Disallow kernel profiling by users without CAP_SYS_ADMIN\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:32:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `issue-43572-unused-uses`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55ff15df715e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/backtrace/mod.rs:42\n   1:     0x55ff15df719e - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.4/src/capture.rs:63\n   2:     0x55ff15d33f27 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:616\n   3:     0x55ff15d33fc8 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0/src/lib.rs:710\n   4:     0x55ff15c48b64 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<impl_error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:24\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:24\n   5:     0x55ff15c49cb1 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:149\n   6:     0x55ff15c577e4 - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:280\n                         - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:83\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<collector::Benchmark, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<collector::Benchmark, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:74\n   7:     0x55ff15c5ed3d - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:145\n   8:     0x55ff15c64ec1 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:174\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:243\n   9:     0x55ff15c69267 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n  10:     0x55ff15f28b6c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  11:     0x55ff15f2219b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  12:     0x7fe5a30d882f - __libc_start_main\n  13:     0x55ff15c140d8 - _start\n  14:                0x0 - <unknown>) })"}},"triple":"x86_64-unknown-linux-gnu"}