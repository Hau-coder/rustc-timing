{"commit":{"sha":"6f10e2f63de720468e2b4bfcb275e4b90b1f9870","date":"2017-03-14T10:40:09+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19381464709.0},{"name":"cycles:u","cnt":15885942396.0},{"name":"task-clock","cnt":3987.994019},{"name":"cpu-clock","cnt":4052.777362},{"name":"faults","cnt":20808.0},{"name":"max-rss","cnt":223460.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1088385804.0},{"name":"cycles:u","cnt":659240802.0},{"name":"task-clock","cnt":90.229907},{"name":"cpu-clock","cnt":195.072389},{"name":"faults","cnt":11511.0},{"name":"max-rss","cnt":94356.0}]}]}]},"html5ever-2016-08-25":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=    Updating registry `https://github.com/rust-lang/crates.io-index`\\n   Compiling mac v0.1.1\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling serde v0.8.23\\n   Compiling void v1.0.2\\n   Compiling siphasher v0.2.2\\n   Compiling libc v0.2.31\\n   Compiling rustc-serialize v0.3.24\\n   Compiling log v0.3.8\\n   Compiling unreachable v0.1.1\\n   Compiling matches v0.1.6\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling debug_unreachable v0.1.1\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling futf v0.1.3\\n   Compiling phf_shared v0.7.21\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling utf-8 v0.6.0\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling phf v0.7.21\\n   Compiling lazy_static v0.2.8\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling rand v0.3.16\\n   Compiling encoding v0.2.33\\n   Compiling phf_generator v0.7.21\\n   Compiling string_cache v0.2.29\\n   Compiling phf_codegen v0.7.21\\n   Compiling tendril v0.2.4\\n   Compiling html5ever v0.5.4 (file:///tmp/rustc-benchmark-html5ever-2016-08-25.BsJiI8z2L3Jq)\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nthread \\'rustc\\' panicked at \\'called `Option::unwrap()` on a `None` value\\', /checkout/src/libcore/option.rs:323\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `string_cache`.\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nerror: build failed\\nmake: *** [all] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/6f10e2f63de720468e2b4bfcb275e4b90b1f9870/cargo/bin/cargo rustc  -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:4: recipe for target \\'all\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x563c6e1feb6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x563c6e1febae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x563c6e0f4786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x563c6e0f4848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x563c6e0db2d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x563c6e0e30f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x563c6e0e40f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x563c6e0eb962 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x563c6e0ef837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x563c6e37759c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x563c6e370c1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f55e30bc82f - __libc_start_main\n  12:     0x563c6e0b3d08 - _start\n  13:                0x0 - <unknown>) })"},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24059049650.0},{"name":"cycles:u","cnt":19929606328.0},{"name":"task-clock","cnt":5059.647378},{"name":"cpu-clock","cnt":5059.659088},{"name":"faults","cnt":26048.0},{"name":"max-rss","cnt":247784.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":24849407689.0},{"name":"cycles:u","cnt":13622183252.0},{"name":"task-clock","cnt":3470.135903},{"name":"cpu-clock","cnt":3470.137315},{"name":"faults","cnt":31141.0},{"name":"max-rss","cnt":250004.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":178387454426.0},{"name":"cycles:u","cnt":253872608658.0},{"name":"task-clock","cnt":67499.673458},{"name":"cpu-clock","cnt":67546.983586},{"name":"faults","cnt":4869972.0},{"name":"max-rss","cnt":1169800.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1432703779.0},{"name":"cycles:u","cnt":861178799.0},{"name":"task-clock","cnt":198.735481},{"name":"cpu-clock","cnt":246.018297},{"name":"faults","cnt":11592.0},{"name":"max-rss","cnt":98280.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":9233043746.0},{"name":"cycles:u","cnt":6227029658.0},{"name":"task-clock","cnt":1624.677291},{"name":"cpu-clock","cnt":1662.352005},{"name":"faults","cnt":36863.0},{"name":"max-rss","cnt":382144.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":22258401914.0},{"name":"cycles:u","cnt":8384955899.0},{"name":"task-clock","cnt":2132.253855},{"name":"cpu-clock","cnt":2142.761323},{"name":"faults","cnt":18353.0},{"name":"max-rss","cnt":137212.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":6272085136.0},{"name":"cycles:u","cnt":4654550501.0},{"name":"task-clock","cnt":1093.358312},{"name":"cpu-clock","cnt":1209.175135},{"name":"faults","cnt":14181.0},{"name":"max-rss","cnt":125008.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52859109730.0},{"name":"cycles:u","cnt":42574083674.0},{"name":"task-clock","cnt":10783.496501},{"name":"cpu-clock","cnt":10783.499413},{"name":"faults","cnt":36962.0},{"name":"max-rss","cnt":397276.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":31539326639.0},{"name":"cycles:u","cnt":24992407765.0},{"name":"task-clock","cnt":6344.134343},{"name":"cpu-clock","cnt":6344.152483},{"name":"faults","cnt":34803.0},{"name":"max-rss","cnt":280712.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":43570549961.0},{"name":"cycles:u","cnt":46276322096.0},{"name":"task-clock","cnt":12249.393155},{"name":"cpu-clock","cnt":12249.322699},{"name":"faults","cnt":47922.0},{"name":"max-rss","cnt":422804.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":43486456177.0},{"name":"cycles:u","cnt":45916083483.0},{"name":"task-clock","cnt":12190.123338},{"name":"cpu-clock","cnt":12190.058296},{"name":"faults","cnt":53345.0},{"name":"max-rss","cnt":427988.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":39991827617.0},{"name":"cycles:u","cnt":41977708007.0},{"name":"task-clock","cnt":11136.019579},{"name":"cpu-clock","cnt":11135.893058},{"name":"faults","cnt":54374.0},{"name":"max-rss","cnt":403176.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":39939423679.0},{"name":"cycles:u","cnt":41882065054.0},{"name":"task-clock","cnt":11118.960221},{"name":"cpu-clock","cnt":11118.923682},{"name":"faults","cnt":52612.0},{"name":"max-rss","cnt":409616.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":43471007283.0},{"name":"cycles:u","cnt":46244652301.0},{"name":"task-clock","cnt":12248.751077},{"name":"cpu-clock","cnt":12248.674992},{"name":"faults","cnt":54032.0},{"name":"max-rss","cnt":419860.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":11218735410.0},{"name":"cycles:u","cnt":7812830277.0},{"name":"task-clock","cnt":2034.498933},{"name":"cpu-clock","cnt":2034.440214},{"name":"faults","cnt":15453.0},{"name":"max-rss","cnt":246536.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":43572461318.0},{"name":"cycles:u","cnt":46224775367.0},{"name":"task-clock","cnt":12245.232186},{"name":"cpu-clock","cnt":12245.133906},{"name":"faults","cnt":52141.0},{"name":"max-rss","cnt":420856.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":43759247380.0},{"name":"cycles:u","cnt":46681850528.0},{"name":"task-clock","cnt":12351.593616},{"name":"cpu-clock","cnt":12351.523056},{"name":"faults","cnt":52233.0},{"name":"max-rss","cnt":432492.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":10714683972.0},{"name":"cycles:u","cnt":7283716380.0},{"name":"task-clock","cnt":1899.478475},{"name":"cpu-clock","cnt":1899.39642},{"name":"faults","cnt":15784.0},{"name":"max-rss","cnt":241504.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12763227152.0},{"name":"cycles:u","cnt":9445837683.0},{"name":"task-clock","cnt":2407.428802},{"name":"cpu-clock","cnt":2407.4294},{"name":"faults","cnt":19149.0},{"name":"max-rss","cnt":184180.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9405972763.0},{"name":"cycles:u","cnt":7023307107.0},{"name":"task-clock","cnt":1794.074502},{"name":"cpu-clock","cnt":1794.075071},{"name":"faults","cnt":13360.0},{"name":"max-rss","cnt":170892.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling rayon-core v1.2.1\\n   Compiling odds v0.2.25\\n   Compiling quote v0.3.15\\n   Compiling cfg-if v0.1.2\\n   Compiling bit-vec v0.4.4\\n   Compiling heapsize v0.4.1\\n   Compiling scopeguard v0.3.2\\n   Compiling same-file v0.1.3\\n   Compiling void v1.0.2\\n   Compiling pdqsort v0.1.2\\n   Compiling unreachable v0.1.1\\n   Compiling walkdir v1.0.7\\n   Compiling log v0.3.8\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.AX9vJWN8eDhu/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling byteorder v1.1.0\\n   Compiling serde v1.0.10\\n   Compiling fnv v1.0.5\\n   Compiling nodrop v0.1.9\\n   Compiling unicode-xid v0.0.4\\n   Compiling atomic_refcell v0.1.1\\n   Compiling num-traits v0.1.40\\n   Compiling arraydeque v0.2.3\\n   Compiling arrayvec v0.3.23\\n   Compiling either v1.1.0\\n   Compiling lazy_static v0.2.8\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.AX9vJWN8eDhu/components/style)\\n   Compiling coco v0.1.1\\n   Compiling synom v0.11.3\\n   Compiling rustc-serialize v0.3.24\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling siphasher v0.2.2\\n   Compiling bitflags v0.7.0\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.AX9vJWN8eDhu/components/servo_arc)\\n   Compiling syn v0.11.11\\nerror: use of unstable library feature \\'process_abort\\' (see issue #37838)\\n   --> components/servo_arc/lib.rs:277:13\\n    |\\n277 |             process::abort();\\n    |             ^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(process_abort)] to the crate attributes to enable\\n\\nerror: aborting due to previous error\\n\\nerror: Could not compile `servo_arc`.\\nerror: build failed\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/6f10e2f63de720468e2b4bfcb275e4b90b1f9870/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x563c6e1feb6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x563c6e1febae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x563c6e0f4786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x563c6e0f4848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x563c6e0db2d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x563c6e0e30f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x563c6e0e40f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x563c6e0eb962 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x563c6e0ef837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x563c6e37759c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x563c6e370c1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f55e30bc82f - __libc_start_main\n  12:     0x563c6e0b3d08 - _start\n  13:                0x0 - <unknown>) })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":146073374025.0},{"name":"cycles:u","cnt":116284429034.0},{"name":"task-clock","cnt":29466.683554},{"name":"cpu-clock","cnt":29466.692808},{"name":"faults","cnt":98753.0},{"name":"max-rss","cnt":776952.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":220638266596.0},{"name":"cycles:u","cnt":223516803289.0},{"name":"task-clock","cnt":58698.610211},{"name":"cpu-clock","cnt":58697.899736},{"name":"faults","cnt":156699.0},{"name":"max-rss","cnt":1417548.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":74698906471.0},{"name":"cycles:u","cnt":51145517710.0},{"name":"task-clock","cnt":13152.032311},{"name":"cpu-clock","cnt":13151.41224},{"name":"faults","cnt":55956.0},{"name":"max-rss","cnt":849320.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28506385226.0},{"name":"cycles:u","cnt":23646794083.0},{"name":"task-clock","cnt":5904.951169},{"name":"cpu-clock","cnt":6100.059956},{"name":"faults","cnt":43202.0},{"name":"max-rss","cnt":307004.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":42143439256.0},{"name":"cycles:u","cnt":46323218483.0},{"name":"task-clock","cnt":12246.834714},{"name":"cpu-clock","cnt":12296.536287},{"name":"faults","cnt":47016.0},{"name":"max-rss","cnt":488664.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9982955272.0},{"name":"cycles:u","cnt":6803882613.0},{"name":"task-clock","cnt":1311.835133},{"name":"cpu-clock","cnt":1896.805478},{"name":"faults","cnt":48422.0},{"name":"max-rss","cnt":241104.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":42522842147.0},{"name":"cycles:u","cnt":46541288105.0},{"name":"task-clock","cnt":12365.265977},{"name":"cpu-clock","cnt":12369.808406},{"name":"faults","cnt":51289.0},{"name":"max-rss","cnt":493968.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":21698976750.0},{"name":"cycles:u","cnt":16389054521.0},{"name":"task-clock","cnt":4239.166838},{"name":"cpu-clock","cnt":4285.350411},{"name":"faults","cnt":57895.0},{"name":"max-rss","cnt":471412.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}