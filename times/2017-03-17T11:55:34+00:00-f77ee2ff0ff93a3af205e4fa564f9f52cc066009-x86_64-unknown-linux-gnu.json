{"commit":{"sha":"f77ee2ff0ff93a3af205e4fa564f9f52cc066009","date":"2017-03-17T11:55:34+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19351931480.0},{"name":"cycles:u","cnt":15873769596.0},{"name":"task-clock","cnt":4046.883898},{"name":"cpu-clock","cnt":4048.463514},{"name":"faults","cnt":20537.0},{"name":"max-rss","cnt":224260.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1088186927.0},{"name":"cycles:u","cnt":653184132.0},{"name":"task-clock","cnt":147.83083},{"name":"cpu-clock","cnt":193.980468},{"name":"faults","cnt":11533.0},{"name":"max-rss","cnt":94816.0}]}]}]},"html5ever-2016-08-25":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=    Updating registry `https://github.com/rust-lang/crates.io-index`\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling matches v0.1.6\\n   Compiling siphasher v0.2.2\\n   Compiling void v1.0.2\\n   Compiling lazy_static v0.2.8\\n   Compiling libc v0.2.31\\n   Compiling serde v0.8.23\\n   Compiling rustc-serialize v0.3.24\\n   Compiling unreachable v0.1.1\\n   Compiling utf-8 v0.6.0\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling debug_unreachable v0.1.1\\n   Compiling phf_shared v0.7.21\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling mac v0.1.1\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling futf v0.1.3\\n   Compiling phf v0.7.21\\n   Compiling log v0.3.8\\n   Compiling rand v0.3.16\\n   Compiling encoding v0.2.33\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling string_cache v0.2.29\\n   Compiling tendril v0.2.4\\n   Compiling html5ever v0.5.4 (file:///tmp/rustc-benchmark-html5ever-2016-08-25.pdnIFKw3TfPu)\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nthread \\'rustc\\' panicked at \\'called `Option::unwrap()` on a `None` value\\', /checkout/src/libcore/option.rs:323\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `string_cache`.\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nerror: build failed\\nmake: *** [all] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/f77ee2ff0ff93a3af205e4fa564f9f52cc066009/cargo/bin/cargo rustc  -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:4: recipe for target \\'all\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55b83c628b6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x55b83c628bae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x55b83c51e786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x55b83c51e848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x55b83c5052d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x55b83c50d0f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x55b83c50e0f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x55b83c5159dd - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x55b83c519837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x55b83c7a159c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x55b83c79ac1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f66b362382f - __libc_start_main\n  12:     0x55b83c4ddd08 - _start\n  13:                0x0 - <unknown>) })"},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24088354161.0},{"name":"cycles:u","cnt":19915180197.0},{"name":"task-clock","cnt":5057.914048},{"name":"cpu-clock","cnt":5057.932964},{"name":"faults","cnt":25790.0},{"name":"max-rss","cnt":250368.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":24857446270.0},{"name":"cycles:u","cnt":13692062831.0},{"name":"task-clock","cnt":3487.582483},{"name":"cpu-clock","cnt":3487.583129},{"name":"faults","cnt":30339.0},{"name":"max-rss","cnt":249924.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":178398575962.0},{"name":"cycles:u","cnt":243098147914.0},{"name":"task-clock","cnt":65012.817149},{"name":"cpu-clock","cnt":65123.00263},{"name":"faults","cnt":4882404.0},{"name":"max-rss","cnt":1170420.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":11043465588.0},{"name":"cycles:u","cnt":8779820332.0},{"name":"task-clock","cnt":2232.058367},{"name":"cpu-clock","cnt":2232.059318},{"name":"faults","cnt":10643.0},{"name":"max-rss","cnt":169100.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1433388321.0},{"name":"cycles:u","cnt":870800225.0},{"name":"task-clock","cnt":201.640564},{"name":"cpu-clock","cnt":249.270841},{"name":"faults","cnt":11614.0},{"name":"max-rss","cnt":98376.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":9245451845.0},{"name":"cycles:u","cnt":6206664923.0},{"name":"task-clock","cnt":1492.132879},{"name":"cpu-clock","cnt":1653.298428},{"name":"faults","cnt":36610.0},{"name":"max-rss","cnt":382620.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":22261160043.0},{"name":"cycles:u","cnt":8397240676.0},{"name":"task-clock","cnt":2122.401808},{"name":"cpu-clock","cnt":2146.399186},{"name":"faults","cnt":18243.0},{"name":"max-rss","cnt":137460.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":6268827999.0},{"name":"cycles:u","cnt":4627542823.0},{"name":"task-clock","cnt":1162.765176},{"name":"cpu-clock","cnt":1205.936017},{"name":"faults","cnt":14183.0},{"name":"max-rss","cnt":124820.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52822054000.0},{"name":"cycles:u","cnt":42341953954.0},{"name":"task-clock","cnt":10718.489895},{"name":"cpu-clock","cnt":10718.48359},{"name":"faults","cnt":36736.0},{"name":"max-rss","cnt":396504.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":31646557110.0},{"name":"cycles:u","cnt":24958148893.0},{"name":"task-clock","cnt":6332.352395},{"name":"cpu-clock","cnt":6332.354462},{"name":"faults","cnt":34459.0},{"name":"max-rss","cnt":281408.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":43522092908.0},{"name":"cycles:u","cnt":46368026970.0},{"name":"task-clock","cnt":12300.058561},{"name":"cpu-clock","cnt":12299.982982},{"name":"faults","cnt":47638.0},{"name":"max-rss","cnt":415756.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":43463818807.0},{"name":"cycles:u","cnt":46275716882.0},{"name":"task-clock","cnt":12252.605924},{"name":"cpu-clock","cnt":12252.522492},{"name":"faults","cnt":54898.0},{"name":"max-rss","cnt":424152.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":39932058833.0},{"name":"cycles:u","cnt":42188442399.0},{"name":"task-clock","cnt":11176.811849},{"name":"cpu-clock","cnt":11176.755697},{"name":"faults","cnt":51054.0},{"name":"max-rss","cnt":392440.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":39948732492.0},{"name":"cycles:u","cnt":42039144421.0},{"name":"task-clock","cnt":11141.634702},{"name":"cpu-clock","cnt":11141.566117},{"name":"faults","cnt":54715.0},{"name":"max-rss","cnt":396244.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":43453816100.0},{"name":"cycles:u","cnt":45740113268.0},{"name":"task-clock","cnt":12131.73026},{"name":"cpu-clock","cnt":12131.6512},{"name":"faults","cnt":51507.0},{"name":"max-rss","cnt":417692.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":11206534762.0},{"name":"cycles:u","cnt":7829058566.0},{"name":"task-clock","cnt":2048.357598},{"name":"cpu-clock","cnt":2048.27441},{"name":"faults","cnt":14863.0},{"name":"max-rss","cnt":244404.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":43613861313.0},{"name":"cycles:u","cnt":46695361471.0},{"name":"task-clock","cnt":12364.614299},{"name":"cpu-clock","cnt":12364.542517},{"name":"faults","cnt":52142.0},{"name":"max-rss","cnt":423464.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":43752978622.0},{"name":"cycles:u","cnt":47020227304.0},{"name":"task-clock","cnt":12464.465535},{"name":"cpu-clock","cnt":12464.385312},{"name":"faults","cnt":51669.0},{"name":"max-rss","cnt":430124.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":10697015746.0},{"name":"cycles:u","cnt":7293643490.0},{"name":"task-clock","cnt":1899.20361},{"name":"cpu-clock","cnt":1899.103105},{"name":"faults","cnt":16586.0},{"name":"max-rss","cnt":241672.0}]}]}]},"regex-opt.0.1.30":{"Ok":[{"name":"regex-opt.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":39181864441.0},{"name":"cycles:u","cnt":26811226762.0},{"name":"task-clock","cnt":6753.117156},{"name":"cpu-clock","cnt":6753.118532},{"name":"faults","cnt":14419.0},{"name":"max-rss","cnt":172076.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12788982302.0},{"name":"cycles:u","cnt":9431317969.0},{"name":"task-clock","cnt":2403.253233},{"name":"cpu-clock","cnt":2403.243001},{"name":"faults","cnt":19354.0},{"name":"max-rss","cnt":184424.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9402855040.0},{"name":"cycles:u","cnt":6994432028.0},{"name":"task-clock","cnt":1787.679636},{"name":"cpu-clock","cnt":1787.680246},{"name":"faults","cnt":13576.0},{"name":"max-rss","cnt":171272.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling unicode-xid v0.0.4\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling odds v0.2.25\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.bUDXUsFz4mSj/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling smallvec v0.4.1\\n   Compiling same-file v0.1.3\\n   Compiling atomic_refcell v0.1.1\\n   Compiling matches v0.1.6\\n   Compiling num-traits v0.1.40\\n   Compiling unicode-bidi v0.3.4\\n   Compiling synom v0.11.3\\n   Compiling scopeguard v0.3.2\\n   Compiling walkdir v1.0.7\\n   Compiling bitflags v0.7.0\\n   Compiling rustc-serialize v0.3.24\\n   Compiling byteorder v1.1.0\\n   Compiling libc v0.2.28\\n   Compiling futures v0.1.14\\n   Compiling quote v0.3.15\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling siphasher v0.2.2\\n   Compiling heapsize v0.4.1\\n   Compiling owning_ref v0.3.3\\n   Compiling phf_shared v0.7.21\\n   Compiling either v1.1.0\\n   Compiling syn v0.11.11\\n   Compiling time v0.1.38\\n   Compiling num_cpus v1.6.2\\n   Compiling coco v0.1.1\\n   Compiling thread-id v3.2.0\\n   Compiling cfg-if v0.1.2\\n   Compiling precomputed-hash v0.1.0\\n   Compiling void v1.0.2\\n   Compiling rand v0.3.15\\n   Compiling log v0.3.8\\n   Compiling lazy_static v0.2.8\\n   Compiling phf v0.7.21\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.bUDXUsFz4mSj/components/style)\\n   Compiling nodrop v0.1.9\\n   Compiling serde v1.0.10\\n   Compiling bit-vec v0.4.4\\n   Compiling arraydeque v0.2.3\\n   Compiling arrayvec v0.3.23\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.bUDXUsFz4mSj/components/servo_arc)\\n   Compiling unreachable v0.1.1\\nerror: use of unstable library feature \\'process_abort\\' (see issue #37838)\\n   --> components/servo_arc/lib.rs:277:13\\n    |\\n277 |             process::abort();\\n    |             ^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(process_abort)] to the crate attributes to enable\\n\\n   Compiling unicode-segmentation v1.2.0\\nerror: aborting due to previous error\\n\\nerror: Could not compile `servo_arc`.\\nerror: build failed\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/f77ee2ff0ff93a3af205e4fa564f9f52cc066009/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x55b83c628b6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x55b83c628bae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x55b83c51e786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x55b83c51e848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x55b83c5052d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x55b83c50d0f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x55b83c50e0f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x55b83c5159dd - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x55b83c519837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x55b83c7a159c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x55b83c79ac1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f66b362382f - __libc_start_main\n  12:     0x55b83c4ddd08 - _start\n  13:                0x0 - <unknown>) })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":146044978878.0},{"name":"cycles:u","cnt":115601762221.0},{"name":"task-clock","cnt":29238.626698},{"name":"cpu-clock","cnt":29238.6442},{"name":"faults","cnt":99106.0},{"name":"max-rss","cnt":779768.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":221880915488.0},{"name":"cycles:u","cnt":224559652331.0},{"name":"task-clock","cnt":59069.134049},{"name":"cpu-clock","cnt":59068.532782},{"name":"faults","cnt":157318.0},{"name":"max-rss","cnt":1417484.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":74839175807.0},{"name":"cycles:u","cnt":51113701647.0},{"name":"task-clock","cnt":13103.154758},{"name":"cpu-clock","cnt":13102.530869},{"name":"faults","cnt":59903.0},{"name":"max-rss","cnt":849572.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28466802715.0},{"name":"cycles:u","cnt":23652155613.0},{"name":"task-clock","cnt":5524.593842},{"name":"cpu-clock","cnt":6077.416389},{"name":"faults","cnt":43719.0},{"name":"max-rss","cnt":306728.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":42049607635.0},{"name":"cycles:u","cnt":46350529321.0},{"name":"task-clock","cnt":12105.334087},{"name":"cpu-clock","cnt":12317.314045},{"name":"faults","cnt":48010.0},{"name":"max-rss","cnt":482012.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9974230597.0},{"name":"cycles:u","cnt":6841011270.0},{"name":"task-clock","cnt":1144.612402},{"name":"cpu-clock","cnt":1887.991919},{"name":"faults","cnt":49190.0},{"name":"max-rss","cnt":240096.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":42599335591.0},{"name":"cycles:u","cnt":46594101777.0},{"name":"task-clock","cnt":11728.898602},{"name":"cpu-clock","cnt":12389.853543},{"name":"faults","cnt":50913.0},{"name":"max-rss","cnt":493896.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":21585815689.0},{"name":"cycles:u","cnt":16354623458.0},{"name":"task-clock","cnt":4134.340341},{"name":"cpu-clock","cnt":4246.685758},{"name":"faults","cnt":59670.0},{"name":"max-rss","cnt":470868.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}