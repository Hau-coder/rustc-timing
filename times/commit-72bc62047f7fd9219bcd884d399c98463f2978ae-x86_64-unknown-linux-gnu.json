{"commit":{"sha":"72bc62047f7fd9219bcd884d399c98463f2978ae","date":"2019-04-20T15:06:15+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":28002500913.0},{"name":"instructions:u","cnt":33905711555.0},{"name":"max-rss","cnt":424572.0},{"name":"cpu-clock","cnt":7149.387798},{"name":"wall-time","cnt":7.194731757},{"name":"faults","cnt":80148.0},{"name":"task-clock","cnt":7149.38678}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":571908.0},{"name":"cycles:u","cnt":33711524060.0},{"name":"faults","cnt":125692.0},{"name":"instructions:u","cnt":41455654241.0},{"name":"cpu-clock","cnt":8616.633337},{"name":"task-clock","cnt":8616.632783},{"name":"wall-time","cnt":8.63488632}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":11727863406.0},{"name":"task-clock","cnt":2431.027702},{"name":"cpu-clock","cnt":2431.036489},{"name":"cycles:u","cnt":9133562261.0},{"name":"faults","cnt":109465.0},{"name":"wall-time","cnt":2.367105285},{"name":"max-rss","cnt":537812.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2806.361402},{"name":"max-rss","cnt":552448.0},{"name":"cycles:u","cnt":10493869981.0},{"name":"faults","cnt":111220.0},{"name":"instructions:u","cnt":13209240716.0},{"name":"task-clock","cnt":2806.376399},{"name":"wall-time","cnt":2.733217675}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":172077578393.0},{"name":"max-rss","cnt":1515212.0},{"name":"faults","cnt":391156.0},{"name":"cpu-clock","cnt":45481.835592},{"name":"wall-time","cnt":18.86084561},{"name":"task-clock","cnt":45481.791758},{"name":"instructions:u","cnt":181043152062.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":21.784222599},{"name":"instructions:u","cnt":206579234530.0},{"name":"task-clock","cnt":54360.050896},{"name":"cycles:u","cnt":205118067946.0},{"name":"faults","cnt":440539.0},{"name":"cpu-clock","cnt":54360.218101},{"name":"max-rss","cnt":1580916.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":1157364.0},{"name":"cycles:u","cnt":15855201597.0},{"name":"wall-time","cnt":4.317234883},{"name":"task-clock","cnt":4418.210503},{"name":"instructions:u","cnt":19049450524.0},{"name":"faults","cnt":213582.0},{"name":"cpu-clock","cnt":4418.029295}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":14805.573728},{"name":"task-clock","cnt":14805.69104},{"name":"faults","cnt":321102.0},{"name":"cycles:u","cnt":54982141262.0},{"name":"wall-time","cnt":7.787803554},{"name":"max-rss","cnt":1504360.0},{"name":"instructions:u","cnt":59659013259.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":213992.762664},{"name":"faults","cnt":428658.0},{"name":"wall-time","cnt":38.349557598},{"name":"instructions:u","cnt":630888765913.0},{"name":"max-rss","cnt":1346152.0},{"name":"cycles:u","cnt":808043179601.0},{"name":"cpu-clock","cnt":213992.910235}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":258303.150852},{"name":"max-rss","cnt":1319300.0},{"name":"wall-time","cnt":43.04079756},{"name":"cpu-clock","cnt":258303.728505},{"name":"faults","cnt":444952.0},{"name":"instructions:u","cnt":753527067862.0},{"name":"cycles:u","cnt":973673004397.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3607.471059},{"name":"faults","cnt":215899.0},{"name":"cycles:u","cnt":13025364277.0},{"name":"instructions:u","cnt":14885780176.0},{"name":"wall-time","cnt":3.309963971},{"name":"task-clock","cnt":3607.681893},{"name":"max-rss","cnt":1000420.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":386251.0},{"name":"instructions:u","cnt":456769651628.0},{"name":"max-rss","cnt":1339276.0},{"name":"cycles:u","cnt":576266115456.0},{"name":"cpu-clock","cnt":153095.130375},{"name":"task-clock","cnt":153094.938637},{"name":"wall-time","cnt":24.63676046}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":3.712288089},{"name":"instructions:u","cnt":18756795604.0},{"name":"faults","cnt":47880.0},{"name":"cycles:u","cnt":14332827352.0},{"name":"max-rss","cnt":257732.0},{"name":"task-clock","cnt":3664.973125},{"name":"cpu-clock","cnt":3664.973861}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":6200.398764},{"name":"cycles:u","cnt":24170794796.0},{"name":"instructions:u","cnt":39442011199.0},{"name":"wall-time","cnt":6.236441455},{"name":"faults","cnt":96296.0},{"name":"cpu-clock","cnt":6200.408597},{"name":"max-rss","cnt":446976.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.773655659},{"name":"max-rss","cnt":811136.0},{"name":"task-clock","cnt":1776.614571},{"name":"faults","cnt":182044.0},{"name":"cycles:u","cnt":6155520599.0},{"name":"instructions:u","cnt":10131367431.0},{"name":"cpu-clock","cnt":1776.625123}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":825172.0},{"name":"cycles:u","cnt":9416723609.0},{"name":"wall-time","cnt":2.582208975},{"name":"task-clock","cnt":2586.494447},{"name":"cpu-clock","cnt":2586.494418},{"name":"instructions:u","cnt":13980024396.0},{"name":"faults","cnt":183958.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":71505715486.0},{"name":"task-clock","cnt":15487.740678},{"name":"cpu-clock","cnt":15487.744591},{"name":"wall-time","cnt":9.273137516},{"name":"cycles:u","cnt":59003205536.0},{"name":"max-rss","cnt":984324.0},{"name":"faults","cnt":247136.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":96351273592.0},{"name":"faults","cnt":236739.0},{"name":"cycles:u","cnt":79671196794.0},{"name":"task-clock","cnt":20914.242493},{"name":"cpu-clock","cnt":20914.261597},{"name":"max-rss","cnt":964192.0},{"name":"wall-time","cnt":11.963858161}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.349462711},{"name":"instructions:u","cnt":12802159169.0},{"name":"cycles:u","cnt":8371611605.0},{"name":"task-clock","cnt":2394.057117},{"name":"faults","cnt":205629.0},{"name":"max-rss","cnt":943212.0},{"name":"cpu-clock","cnt":2393.982806}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.557392637},{"name":"faults","cnt":340862.0},{"name":"cpu-clock","cnt":11343.726361},{"name":"cycles:u","cnt":42583023925.0},{"name":"instructions:u","cnt":51166983593.0},{"name":"task-clock","cnt":11343.769517},{"name":"max-rss","cnt":1419928.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":54636.06541},{"name":"cycles:u","cnt":210111533453.0},{"name":"faults","cnt":147077.0},{"name":"instructions:u","cnt":202875937068.0},{"name":"wall-time","cnt":25.97808369},{"name":"max-rss","cnt":481440.0},{"name":"task-clock","cnt":54636.013204}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":198615.0},{"name":"max-rss","cnt":655724.0},{"name":"cycles:u","cnt":241014112630.0},{"name":"cpu-clock","cnt":62964.548879},{"name":"task-clock","cnt":62964.447849},{"name":"instructions:u","cnt":232552140676.0},{"name":"wall-time","cnt":26.796795493}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12690863079.0},{"name":"task-clock","cnt":2356.804494},{"name":"faults","cnt":205339.0},{"name":"max-rss","cnt":914348.0},{"name":"cpu-clock","cnt":2356.724158},{"name":"cycles:u","cnt":8266855928.0},{"name":"wall-time","cnt":2.299494551}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1171752.0},{"name":"instructions:u","cnt":126281829207.0},{"name":"wall-time","cnt":13.394025423},{"name":"cycles:u","cnt":130724905182.0},{"name":"task-clock","cnt":34484.451789},{"name":"faults","cnt":274651.0},{"name":"cpu-clock","cnt":34484.472918}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":2924598064.0},{"name":"max-rss","cnt":186780.0},{"name":"task-clock","cnt":767.836486},{"name":"faults","cnt":27503.0},{"name":"wall-time","cnt":0.792769986},{"name":"instructions:u","cnt":5436726057.0},{"name":"cpu-clock","cnt":767.825634}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3756265687.0},{"name":"instructions:u","cnt":7101004645.0},{"name":"max-rss","cnt":191616.0},{"name":"cpu-clock","cnt":983.618927},{"name":"faults","cnt":28835.0},{"name":"wall-time","cnt":1.002157885},{"name":"task-clock","cnt":983.619304}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":23686.0},{"name":"instructions:u","cnt":1731474274.0},{"name":"wall-time","cnt":0.299325564},{"name":"cycles:u","cnt":915185126.0},{"name":"cpu-clock","cnt":263.792374},{"name":"task-clock","cnt":263.793639},{"name":"max-rss","cnt":160076.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":292.583462},{"name":"wall-time","cnt":0.310691331},{"name":"cycles:u","cnt":1025660970.0},{"name":"instructions:u","cnt":1880487087.0},{"name":"cpu-clock","cnt":292.582385},{"name":"max-rss","cnt":175660.0},{"name":"faults","cnt":23765.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":992.587131},{"name":"max-rss","cnt":203652.0},{"name":"task-clock","cnt":992.589532},{"name":"cycles:u","cnt":3762430404.0},{"name":"instructions:u","cnt":7136364722.0},{"name":"faults","cnt":31171.0},{"name":"wall-time","cnt":1.010308027}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cycles:u","cnt":4141528998.0},{"name":"max-rss","cnt":279004.0},{"name":"task-clock","cnt":1132.483663},{"name":"faults","cnt":56521.0},{"name":"wall-time","cnt":1.156719648},{"name":"cpu-clock","cnt":1132.488786},{"name":"instructions:u","cnt":7232135303.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":283092.0},{"name":"task-clock","cnt":1355.894178},{"name":"faults","cnt":57398.0},{"name":"cycles:u","cnt":4985263400.0},{"name":"instructions:u","cnt":8982259600.0},{"name":"wall-time","cnt":1.330870582},{"name":"cpu-clock","cnt":1355.899284}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":380.244855},{"name":"max-rss","cnt":177144.0},{"name":"cycles:u","cnt":1225613191.0},{"name":"faults","cnt":33027.0},{"name":"wall-time","cnt":0.414058196},{"name":"cpu-clock","cnt":380.221367},{"name":"instructions:u","cnt":2235929119.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":55315.0},{"name":"wall-time","cnt":0.582527277},{"name":"cpu-clock","cnt":651.865259},{"name":"task-clock","cnt":651.862846},{"name":"instructions:u","cnt":3700724532.0},{"name":"cycles:u","cnt":2203209348.0},{"name":"max-rss","cnt":276792.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":1.296799483},{"name":"cycles:u","cnt":4926674477.0},{"name":"instructions:u","cnt":8967563908.0},{"name":"faults","cnt":61759.0},{"name":"max-rss","cnt":290516.0},{"name":"task-clock","cnt":1345.960066},{"name":"cpu-clock","cnt":1345.975799}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"faults","cnt":34402.0},{"name":"instructions:u","cnt":6146812242.0},{"name":"cycles:u","cnt":3408644697.0},{"name":"cpu-clock","cnt":911.635202},{"name":"task-clock","cnt":911.637412},{"name":"wall-time","cnt":0.936413312},{"name":"max-rss","cnt":205200.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1134.572108},{"name":"wall-time","cnt":1.134136506},{"name":"faults","cnt":36326.0},{"name":"cpu-clock","cnt":1134.558235},{"name":"instructions:u","cnt":7893327130.0},{"name":"max-rss","cnt":214016.0},{"name":"cycles:u","cnt":4251986262.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":30285.0},{"name":"max-rss","cnt":177084.0},{"name":"cpu-clock","cnt":332.331359},{"name":"cycles:u","cnt":1097831673.0},{"name":"task-clock","cnt":332.336841},{"name":"instructions:u","cnt":2044928682.0},{"name":"wall-time","cnt":0.365422762}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":444.067216},{"name":"wall-time","cnt":0.435885484},{"name":"faults","cnt":32347.0},{"name":"task-clock","cnt":444.061416},{"name":"max-rss","cnt":199564.0},{"name":"instructions:u","cnt":2639297894.0},{"name":"cycles:u","cnt":1524330735.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":220440.0},{"name":"task-clock","cnt":1132.096625},{"name":"cpu-clock","cnt":1132.073867},{"name":"instructions:u","cnt":7862292871.0},{"name":"wall-time","cnt":1.122640687},{"name":"cycles:u","cnt":4237490163.0},{"name":"faults","cnt":40383.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":23473211751.0},{"name":"task-clock","cnt":6009.425806},{"name":"max-rss","cnt":514692.0},{"name":"faults","cnt":106595.0},{"name":"wall-time","cnt":6.046848129},{"name":"instructions:u","cnt":30231124391.0},{"name":"cpu-clock","cnt":6009.428438}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":36555918010.0},{"name":"cycles:u","cnt":27904757355.0},{"name":"wall-time","cnt":7.194648529},{"name":"faults","cnt":130073.0},{"name":"max-rss","cnt":609292.0},{"name":"task-clock","cnt":7158.43706},{"name":"cpu-clock","cnt":7158.453565}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":5500345442.0},{"name":"faults","cnt":86692.0},{"name":"instructions:u","cnt":7008375561.0},{"name":"task-clock","cnt":1508.721464},{"name":"cpu-clock","cnt":1508.719967},{"name":"wall-time","cnt":1.481691042},{"name":"max-rss","cnt":435252.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":9.210448677},{"name":"instructions:u","cnt":69369620215.0},{"name":"max-rss","cnt":747572.0},{"name":"faults","cnt":173710.0},{"name":"cycles:u","cnt":59811656923.0},{"name":"task-clock","cnt":15659.184543},{"name":"cpu-clock","cnt":15659.187822}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":825360.0},{"name":"instructions:u","cnt":86053777986.0},{"name":"cycles:u","cnt":72065612978.0},{"name":"wall-time","cnt":11.326839127},{"name":"cpu-clock","cnt":18905.346809},{"name":"task-clock","cnt":18905.236788},{"name":"faults","cnt":192737.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12068635897.0},{"name":"cycles:u","cnt":8636581532.0},{"name":"faults","cnt":151396.0},{"name":"task-clock","cnt":2462.925333},{"name":"cpu-clock","cnt":2462.783323},{"name":"max-rss","cnt":737680.0},{"name":"wall-time","cnt":2.359148305}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":275334.0},{"name":"max-rss","cnt":1155996.0},{"name":"wall-time","cnt":20.205525222},{"name":"task-clock","cnt":70513.446823},{"name":"cycles:u","cnt":267370128317.0},{"name":"cpu-clock","cnt":70513.486525},{"name":"instructions:u","cnt":226820565308.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":294771.0},{"name":"wall-time","cnt":20.88498193},{"name":"cpu-clock","cnt":84122.785779},{"name":"instructions:u","cnt":261954714291.0},{"name":"cycles:u","cnt":317494866457.0},{"name":"max-rss","cnt":1063232.0},{"name":"task-clock","cnt":84122.624264}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":144905.0},{"name":"instructions:u","cnt":11953369268.0},{"name":"max-rss","cnt":727792.0},{"name":"task-clock","cnt":2453.398865},{"name":"cycles:u","cnt":8663792319.0},{"name":"cpu-clock","cnt":2453.239862},{"name":"wall-time","cnt":2.320746885}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":6326.575084},{"name":"cpu-clock","cnt":6326.57663},{"name":"wall-time","cnt":6.372223586},{"name":"faults","cnt":65878.0},{"name":"cycles:u","cnt":24845294567.0},{"name":"instructions:u","cnt":32322100666.0},{"name":"max-rss","cnt":381592.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":105312.0},{"name":"wall-time","cnt":7.683504956},{"name":"instructions:u","cnt":38747654181.0},{"name":"cycles:u","cnt":29797270358.0},{"name":"cpu-clock","cnt":7645.755158},{"name":"max-rss","cnt":536960.0},{"name":"task-clock","cnt":7645.752886}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":9031656933.0},{"name":"faults","cnt":103963.0},{"name":"max-rss","cnt":527048.0},{"name":"wall-time","cnt":1.847197842},{"name":"task-clock","cnt":1921.5426},{"name":"cpu-clock","cnt":1921.54014},{"name":"cycles:u","cnt":7117541581.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2156.054608},{"name":"task-clock","cnt":2156.056806},{"name":"instructions:u","cnt":9997027800.0},{"name":"max-rss","cnt":537992.0},{"name":"cycles:u","cnt":8056077675.0},{"name":"faults","cnt":104683.0},{"name":"wall-time","cnt":2.071367545}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":261705.0},{"name":"wall-time","cnt":13.027365799},{"name":"max-rss","cnt":1170876.0},{"name":"cycles:u","cnt":106567690980.0},{"name":"cpu-clock","cnt":28085.699679},{"name":"instructions:u","cnt":116235188662.0},{"name":"task-clock","cnt":28085.68731}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":15.35981894},{"name":"task-clock","cnt":32344.053367},{"name":"max-rss","cnt":1218624.0},{"name":"cpu-clock","cnt":32344.13576},{"name":"faults","cnt":269836.0},{"name":"cycles:u","cnt":122401518431.0},{"name":"instructions:u","cnt":130553064815.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3167.26325},{"name":"max-rss","cnt":914052.0},{"name":"wall-time","cnt":3.019393231},{"name":"task-clock","cnt":3167.48749},{"name":"cycles:u","cnt":11374248031.0},{"name":"faults","cnt":162469.0},{"name":"instructions:u","cnt":14065481471.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":181809.0},{"name":"instructions:u","cnt":19307949539.0},{"name":"cycles:u","cnt":15993344560.0},{"name":"wall-time","cnt":3.732771471},{"name":"task-clock","cnt":4374.412111},{"name":"cpu-clock","cnt":4374.159062},{"name":"max-rss","cnt":989968.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":434986094042.0},{"name":"task-clock","cnt":114988.341696},{"name":"cpu-clock","cnt":114988.408603},{"name":"instructions:u","cnt":351064393588.0},{"name":"max-rss","cnt":964768.0},{"name":"faults","cnt":235860.0},{"name":"wall-time","cnt":23.43646173}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":132101.962071},{"name":"wall-time","cnt":25.653000265},{"name":"cycles:u","cnt":498594161319.0},{"name":"faults","cnt":273061.0},{"name":"max-rss","cnt":1059664.0},{"name":"task-clock","cnt":132101.866248},{"name":"instructions:u","cnt":395492659266.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":13727228722.0},{"name":"cpu-clock","cnt":3150.805335},{"name":"wall-time","cnt":2.910690633},{"name":"cycles:u","cnt":11318699832.0},{"name":"max-rss","cnt":816788.0},{"name":"faults","cnt":164408.0},{"name":"task-clock","cnt":3151.019945}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":15459.075403},{"name":"instructions:u","cnt":58743318126.0},{"name":"wall-time","cnt":6.102131743},{"name":"faults","cnt":202168.0},{"name":"max-rss","cnt":948000.0},{"name":"cpu-clock","cnt":15458.985031},{"name":"cycles:u","cnt":58163412852.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":7.913179359},{"name":"instructions:u","cnt":67083543502.0},{"name":"cpu-clock","cnt":7832.562551},{"name":"cycles:u","cnt":31054296296.0},{"name":"faults","cnt":42983.0},{"name":"max-rss","cnt":252096.0},{"name":"task-clock","cnt":7832.573137}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":9918.696141},{"name":"faults","cnt":107201.0},{"name":"max-rss","cnt":483124.0},{"name":"wall-time","cnt":9.954016965},{"name":"task-clock","cnt":9918.697826},{"name":"instructions:u","cnt":90763526710.0},{"name":"cycles:u","cnt":38880711341.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":553572.0},{"name":"cpu-clock","cnt":863.902968},{"name":"faults","cnt":121457.0},{"name":"cycles:u","cnt":2601226917.0},{"name":"instructions:u","cnt":5653475406.0},{"name":"task-clock","cnt":863.892538},{"name":"wall-time","cnt":0.898168678}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":31073572580.0},{"name":"instructions:u","cnt":67406045642.0},{"name":"faults","cnt":43321.0},{"name":"cpu-clock","cnt":7839.149259},{"name":"max-rss","cnt":258180.0},{"name":"task-clock","cnt":7839.152926},{"name":"wall-time","cnt":7.873956355}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":99664711052.0},{"name":"faults","cnt":188446.0},{"name":"max-rss","cnt":743428.0},{"name":"cpu-clock","cnt":10699.439783},{"name":"task-clock","cnt":10699.440277},{"name":"wall-time","cnt":10.731178634},{"name":"cycles:u","cnt":41573550776.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3975081963.0},{"name":"faults","cnt":233210.0},{"name":"wall-time","cnt":1.377270037},{"name":"task-clock","cnt":1343.895778},{"name":"instructions:u","cnt":8397970440.0},{"name":"max-rss","cnt":979464.0},{"name":"cpu-clock","cnt":1343.883181}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":54575238345.0},{"name":"cycles:u","cnt":25724242512.0},{"name":"faults","cnt":43415.0},{"name":"task-clock","cnt":6499.441699},{"name":"cpu-clock","cnt":6499.459166},{"name":"wall-time","cnt":6.534727507},{"name":"max-rss","cnt":260120.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":9319.232339},{"name":"cycles:u","cnt":36155198902.0},{"name":"max-rss","cnt":740088.0},{"name":"faults","cnt":175740.0},{"name":"instructions:u","cnt":86665021845.0},{"name":"wall-time","cnt":9.350710122},{"name":"task-clock","cnt":9319.213925}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":979396.0},{"name":"cpu-clock","cnt":1346.420038},{"name":"wall-time","cnt":1.380780154},{"name":"cycles:u","cnt":3965767387.0},{"name":"faults","cnt":233159.0},{"name":"task-clock","cnt":1346.421799},{"name":"instructions:u","cnt":8396620144.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1087.184316},{"name":"max-rss","cnt":289276.0},{"name":"instructions:u","cnt":6994719124.0},{"name":"cycles:u","cnt":4108171415.0},{"name":"wall-time","cnt":1.123091131},{"name":"faults","cnt":52461.0},{"name":"task-clock","cnt":1087.194913}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":7970862979.0},{"name":"cycles:u","cnt":4491505312.0},{"name":"cpu-clock","cnt":1183.926236},{"name":"task-clock","cnt":1183.927564},{"name":"wall-time","cnt":1.219227592},{"name":"max-rss","cnt":289348.0},{"name":"faults","cnt":52728.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.390457764},{"name":"instructions:u","cnt":2509012647.0},{"name":"faults","cnt":33592.0},{"name":"cpu-clock","cnt":354.798333},{"name":"task-clock","cnt":354.799522},{"name":"cycles:u","cnt":1253110796.0},{"name":"max-rss","cnt":199280.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":8009958236.0},{"name":"faults","cnt":51306.0},{"name":"task-clock","cnt":1197.877318},{"name":"wall-time","cnt":1.215109317},{"name":"max-rss","cnt":288104.0},{"name":"cycles:u","cnt":4503212897.0},{"name":"cpu-clock","cnt":1197.876641}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":288236.0},{"name":"wall-time","cnt":1.242034322},{"name":"faults","cnt":51334.0},{"name":"task-clock","cnt":1204.628668},{"name":"cycles:u","cnt":4521559910.0},{"name":"cpu-clock","cnt":1204.62876},{"name":"instructions:u","cnt":7983244469.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"faults","cnt":81066.0},{"name":"task-clock","cnt":1676.408381},{"name":"wall-time","cnt":1.675066846},{"name":"instructions:u","cnt":10136656963.0},{"name":"max-rss","cnt":379812.0},{"name":"cpu-clock","cnt":1676.399876},{"name":"cycles:u","cnt":6185807506.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":6821571514.0},{"name":"cpu-clock","cnt":1828.414523},{"name":"faults","cnt":85353.0},{"name":"wall-time","cnt":1.810807046},{"name":"task-clock","cnt":1828.414786},{"name":"instructions:u","cnt":11601976239.0},{"name":"max-rss","cnt":394920.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":474.98948},{"name":"wall-time","cnt":0.506168134},{"name":"instructions:u","cnt":3209527335.0},{"name":"cycles:u","cnt":1612575536.0},{"name":"faults","cnt":42903.0},{"name":"task-clock","cnt":475.006202},{"name":"max-rss","cnt":224688.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":88016.0},{"name":"task-clock","cnt":1833.967155},{"name":"instructions:u","cnt":11570552106.0},{"name":"cycles:u","cnt":6820430694.0},{"name":"max-rss","cnt":402684.0},{"name":"cpu-clock","cnt":1833.95981},{"name":"wall-time","cnt":1.790914448}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":386212.0},{"name":"task-clock","cnt":1836.925744},{"name":"instructions:u","cnt":11572758214.0},{"name":"cpu-clock","cnt":1836.950528},{"name":"cycles:u","cnt":6791412048.0},{"name":"faults","cnt":82435.0},{"name":"wall-time","cnt":1.809677912}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"max-rss","cnt":594224.0},{"name":"wall-time","cnt":3.122456702},{"name":"cpu-clock","cnt":3140.16567},{"name":"cycles:u","cnt":11675355348.0},{"name":"faults","cnt":141437.0},{"name":"task-clock","cnt":3140.191817},{"name":"instructions:u","cnt":17184006019.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":3272.925069},{"name":"cycles:u","cnt":12356536461.0},{"name":"max-rss","cnt":595220.0},{"name":"instructions:u","cnt":18710627947.0},{"name":"wall-time","cnt":3.238930586},{"name":"faults","cnt":140342.0},{"name":"task-clock","cnt":3272.920104}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":222752.0},{"name":"instructions:u","cnt":3166598100.0},{"name":"cycles:u","cnt":1594531585.0},{"name":"task-clock","cnt":466.888306},{"name":"faults","cnt":42282.0},{"name":"wall-time","cnt":0.499121489},{"name":"cpu-clock","cnt":466.88163}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":18529244133.0},{"name":"task-clock","cnt":3211.955045},{"name":"wall-time","cnt":3.159082607},{"name":"max-rss","cnt":600796.0},{"name":"cycles:u","cnt":12109938605.0},{"name":"cpu-clock","cnt":3211.936308},{"name":"faults","cnt":142816.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":18577451272.0},{"name":"cpu-clock","cnt":3214.970915},{"name":"cycles:u","cnt":12125448562.0},{"name":"wall-time","cnt":3.176009336},{"name":"task-clock","cnt":3215.026051},{"name":"faults","cnt":141735.0},{"name":"max-rss","cnt":599216.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":273291835.0},{"name":"wall-time","cnt":0.100673455},{"name":"task-clock","cnt":82.686209},{"name":"cpu-clock","cnt":82.685408},{"name":"instructions:u","cnt":429401752.0},{"name":"faults","cnt":5775.0},{"name":"max-rss","cnt":110076.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":96.232909},{"name":"wall-time","cnt":0.114458599},{"name":"max-rss","cnt":117060.0},{"name":"instructions:u","cnt":488329508.0},{"name":"cycles:u","cnt":320788353.0},{"name":"faults","cnt":7307.0},{"name":"task-clock","cnt":96.235268}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.060342608},{"name":"task-clock","cnt":43.155919},{"name":"cpu-clock","cnt":43.153876},{"name":"faults","cnt":6035.0},{"name":"max-rss","cnt":91396.0},{"name":"cycles:u","cnt":120213587.0},{"name":"instructions:u","cnt":179389867.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":573780560.0},{"name":"instructions:u","cnt":776506631.0},{"name":"cpu-clock","cnt":167.079674},{"name":"max-rss","cnt":129736.0},{"name":"wall-time","cnt":0.155879576},{"name":"task-clock","cnt":167.102327},{"name":"faults","cnt":8633.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":633297209.0},{"name":"wall-time","cnt":0.170890584},{"name":"task-clock","cnt":183.801271},{"name":"cpu-clock","cnt":183.811312},{"name":"faults","cnt":10265.0},{"name":"max-rss","cnt":136272.0},{"name":"instructions:u","cnt":850344198.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":192035144.0},{"name":"faults","cnt":7483.0},{"name":"cpu-clock","cnt":66.199251},{"name":"wall-time","cnt":0.081171674},{"name":"task-clock","cnt":66.213437},{"name":"instructions:u","cnt":270615968.0},{"name":"max-rss","cnt":111300.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":899827869.0},{"name":"cpu-clock","cnt":247.847723},{"name":"wall-time","cnt":0.205963359},{"name":"max-rss","cnt":128120.0},{"name":"faults","cnt":7724.0},{"name":"task-clock","cnt":247.841256},{"name":"instructions:u","cnt":1278795164.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":135336.0},{"name":"instructions:u","cnt":1352614199.0},{"name":"cycles:u","cnt":955225605.0},{"name":"task-clock","cnt":262.074988},{"name":"cpu-clock","cnt":262.069998},{"name":"wall-time","cnt":0.218263594},{"name":"faults","cnt":9383.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":61.397531},{"name":"task-clock","cnt":61.40215},{"name":"instructions:u","cnt":268059914.0},{"name":"cycles:u","cnt":181004715.0},{"name":"faults","cnt":7336.0},{"name":"max-rss","cnt":110612.0},{"name":"wall-time","cnt":0.077860137}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":421.694694},{"name":"max-rss","cnt":143168.0},{"name":"cpu-clock","cnt":421.694656},{"name":"instructions:u","cnt":1910270709.0},{"name":"faults","cnt":12222.0},{"name":"cycles:u","cnt":1591884562.0},{"name":"wall-time","cnt":0.43953571}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":547.156678},{"name":"faults","cnt":18957.0},{"name":"cycles:u","cnt":2058345819.0},{"name":"wall-time","cnt":0.565010653},{"name":"task-clock","cnt":547.15883},{"name":"max-rss","cnt":171336.0},{"name":"instructions:u","cnt":2446785925.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.190489413},{"name":"cpu-clock","cnt":181.528559},{"name":"faults","cnt":18289.0},{"name":"instructions:u","cnt":859510787.0},{"name":"max-rss","cnt":162020.0},{"name":"cycles:u","cnt":604861652.0},{"name":"task-clock","cnt":181.519608}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":18237.0},{"name":"cpu-clock","cnt":200.569178},{"name":"wall-time","cnt":0.20821149},{"name":"max-rss","cnt":168048.0},{"name":"instructions:u","cnt":926752467.0},{"name":"task-clock","cnt":200.569895},{"name":"cycles:u","cnt":680083455.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1862.815894},{"name":"wall-time","cnt":0.898887128},{"name":"cycles:u","cnt":6951813605.0},{"name":"max-rss","cnt":232684.0},{"name":"faults","cnt":32235.0},{"name":"task-clock","cnt":1862.806606},{"name":"instructions:u","cnt":7695476013.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":8540207669.0},{"name":"faults","cnt":37233.0},{"name":"wall-time","cnt":1.122574165},{"name":"max-rss","cnt":250636.0},{"name":"task-clock","cnt":2305.915748},{"name":"cpu-clock","cnt":2305.914254},{"name":"instructions:u","cnt":9442762455.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.265545504},{"name":"cycles:u","cnt":872080367.0},{"name":"instructions:u","cnt":1182991596.0},{"name":"faults","cnt":22977.0},{"name":"max-rss","cnt":188108.0},{"name":"task-clock","cnt":276.283652},{"name":"cpu-clock","cnt":276.214893}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1289323517.0},{"name":"cpu-clock","cnt":301.341786},{"name":"max-rss","cnt":194824.0},{"name":"cycles:u","cnt":960303961.0},{"name":"wall-time","cnt":0.286392326},{"name":"task-clock","cnt":301.38691},{"name":"faults","cnt":23575.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":237352.0},{"name":"cycles:u","cnt":20011564805.0},{"name":"task-clock","cnt":5312.462727},{"name":"cpu-clock","cnt":5312.430371},{"name":"wall-time","cnt":1.441031651},{"name":"instructions:u","cnt":18138034497.0},{"name":"faults","cnt":33756.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":261124.0},{"name":"instructions:u","cnt":20229690462.0},{"name":"cpu-clock","cnt":5942.895129},{"name":"task-clock","cnt":5942.89122},{"name":"cycles:u","cnt":22289545193.0},{"name":"wall-time","cnt":1.627028603},{"name":"faults","cnt":39771.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1193551650.0},{"name":"cycles:u","cnt":881379498.0},{"name":"max-rss","cnt":187448.0},{"name":"cpu-clock","cnt":270.010716},{"name":"task-clock","cnt":270.071809},{"name":"wall-time","cnt":0.261905952},{"name":"faults","cnt":23010.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1308654781.0},{"name":"instructions:u","cnt":1693342664.0},{"name":"task-clock","cnt":382.059709},{"name":"wall-time","cnt":0.36672781},{"name":"cpu-clock","cnt":382.025954},{"name":"faults","cnt":24325.0},{"name":"max-rss","cnt":200308.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":2922420662.0},{"name":"instructions:u","cnt":3995705780.0},{"name":"max-rss","cnt":140160.0},{"name":"wall-time","cnt":0.773010939},{"name":"faults","cnt":11836.0},{"name":"cpu-clock","cnt":755.256038},{"name":"task-clock","cnt":755.256625}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":4695930159.0},{"name":"task-clock","cnt":920.092868},{"name":"cycles:u","cnt":3541201488.0},{"name":"wall-time","cnt":0.93806035},{"name":"cpu-clock","cnt":920.101539},{"name":"max-rss","cnt":170096.0},{"name":"faults","cnt":19185.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":201.946983},{"name":"max-rss","cnt":161364.0},{"name":"instructions:u","cnt":937974458.0},{"name":"task-clock","cnt":201.94682},{"name":"cycles:u","cnt":681325138.0},{"name":"wall-time","cnt":0.208144325},{"name":"faults","cnt":18653.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":204.765588},{"name":"instructions:u","cnt":948726721.0},{"name":"faults","cnt":18674.0},{"name":"cpu-clock","cnt":204.764593},{"name":"max-rss","cnt":162088.0},{"name":"cycles:u","cnt":691055278.0},{"name":"wall-time","cnt":0.211866938}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.913884878},{"name":"task-clock","cnt":1086.145456},{"name":"cpu-clock","cnt":1086.152978},{"name":"faults","cnt":16115.0},{"name":"cycles:u","cnt":4145338636.0},{"name":"instructions:u","cnt":5245206489.0},{"name":"max-rss","cnt":165028.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":6227080676.0},{"name":"wall-time","cnt":1.109583071},{"name":"cycles:u","cnt":5012411050.0},{"name":"cpu-clock","cnt":1323.631365},{"name":"max-rss","cnt":195104.0},{"name":"task-clock","cnt":1323.620586},{"name":"faults","cnt":23924.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":824204028.0},{"name":"instructions:u","cnt":1114906795.0},{"name":"task-clock","cnt":250.997707},{"name":"cpu-clock","cnt":250.973973},{"name":"wall-time","cnt":0.267638313},{"name":"max-rss","cnt":178948.0},{"name":"faults","cnt":21590.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1127578968.0},{"name":"faults","cnt":21772.0},{"name":"wall-time","cnt":0.251666616},{"name":"cycles:u","cnt":833424290.0},{"name":"task-clock","cnt":253.44894},{"name":"cpu-clock","cnt":253.397736},{"name":"max-rss","cnt":180288.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1614.013202},{"name":"cycles:u","cnt":6121815129.0},{"name":"wall-time","cnt":0.974737191},{"name":"faults","cnt":17925.0},{"name":"task-clock","cnt":1614.023416},{"name":"max-rss","cnt":172956.0},{"name":"instructions:u","cnt":6608654095.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":7666059978.0},{"name":"faults","cnt":25327.0},{"name":"cpu-clock","cnt":1902.938877},{"name":"task-clock","cnt":1902.946627},{"name":"max-rss","cnt":201860.0},{"name":"cycles:u","cnt":7180214943.0},{"name":"wall-time","cnt":1.169950871}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":821756336.0},{"name":"cpu-clock","cnt":247.743359},{"name":"faults","cnt":21670.0},{"name":"max-rss","cnt":179120.0},{"name":"instructions:u","cnt":1108559963.0},{"name":"task-clock","cnt":247.723994},{"name":"wall-time","cnt":0.265050368}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":179484.0},{"name":"cpu-clock","cnt":246.758078},{"name":"instructions:u","cnt":1121266534.0},{"name":"faults","cnt":21704.0},{"name":"cycles:u","cnt":823826793.0},{"name":"task-clock","cnt":246.784186},{"name":"wall-time","cnt":0.247435466}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":127969328.0},{"name":"max-rss","cnt":99860.0},{"name":"instructions:u","cnt":192022399.0},{"name":"task-clock","cnt":44.257048},{"name":"wall-time","cnt":0.062504168},{"name":"cpu-clock","cnt":44.255806},{"name":"faults","cnt":4924.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":52.36101},{"name":"instructions:u","cnt":216796461.0},{"name":"max-rss","cnt":104708.0},{"name":"faults","cnt":6137.0},{"name":"wall-time","cnt":0.070523615},{"name":"cycles:u","cnt":150892042.0},{"name":"cpu-clock","cnt":52.357893}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":41.64766},{"name":"cpu-clock","cnt":41.644061},{"name":"wall-time","cnt":0.059279837},{"name":"faults","cnt":5571.0},{"name":"cycles:u","cnt":114946985.0},{"name":"max-rss","cnt":89336.0},{"name":"instructions:u","cnt":169342367.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":144189080.0},{"name":"max-rss","cnt":105660.0},{"name":"faults","cnt":6241.0},{"name":"cpu-clock","cnt":50.593622},{"name":"wall-time","cnt":0.068444074},{"name":"instructions:u","cnt":210329468.0},{"name":"task-clock","cnt":50.596074}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.133511225},{"name":"instructions:u","cnt":523273645.0},{"name":"cycles:u","cnt":358229580.0},{"name":"cpu-clock","cnt":124.339577},{"name":"faults","cnt":12039.0},{"name":"max-rss","cnt":118892.0},{"name":"task-clock","cnt":124.325028}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":397529784.0},{"name":"task-clock","cnt":136.008203},{"name":"cpu-clock","cnt":136.011415},{"name":"faults","cnt":13476.0},{"name":"instructions:u","cnt":571528722.0},{"name":"max-rss","cnt":124068.0},{"name":"wall-time","cnt":0.14317048}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":312971968.0},{"name":"wall-time","cnt":0.127180668},{"name":"task-clock","cnt":113.315094},{"name":"instructions:u","cnt":473713016.0},{"name":"cpu-clock","cnt":113.302631},{"name":"max-rss","cnt":108504.0},{"name":"faults","cnt":12721.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":125872.0},{"name":"cpu-clock","cnt":135.587134},{"name":"instructions:u","cnt":551128280.0},{"name":"faults","cnt":13769.0},{"name":"cycles:u","cnt":391005084.0},{"name":"wall-time","cnt":0.141787891},{"name":"task-clock","cnt":135.582876}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":127.936016},{"name":"wall-time","cnt":0.136670847},{"name":"instructions:u","cnt":549771824.0},{"name":"cycles:u","cnt":376462445.0},{"name":"task-clock","cnt":127.949846},{"name":"max-rss","cnt":120920.0},{"name":"faults","cnt":11947.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":13389.0},{"name":"max-rss","cnt":126572.0},{"name":"cpu-clock","cnt":141.212662},{"name":"task-clock","cnt":141.218309},{"name":"instructions:u","cnt":597837128.0},{"name":"wall-time","cnt":0.14764552},{"name":"cycles:u","cnt":417604983.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.12577061},{"name":"instructions:u","cnt":471462671.0},{"name":"cpu-clock","cnt":110.479118},{"name":"max-rss","cnt":107768.0},{"name":"task-clock","cnt":110.473386},{"name":"cycles:u","cnt":309131900.0},{"name":"faults","cnt":12504.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":399012087.0},{"name":"faults","cnt":13654.0},{"name":"instructions:u","cnt":577852586.0},{"name":"task-clock","cnt":135.903207},{"name":"cpu-clock","cnt":135.897603},{"name":"wall-time","cnt":0.141305597},{"name":"max-rss","cnt":128096.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":9329495897.0},{"name":"max-rss","cnt":230816.0},{"name":"cpu-clock","cnt":1630.374509},{"name":"task-clock","cnt":1630.374669},{"name":"wall-time","cnt":1.686844619},{"name":"cycles:u","cnt":6314286739.0},{"name":"faults","cnt":35940.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1984.720483},{"name":"wall-time","cnt":2.0393246},{"name":"instructions:u","cnt":11845794901.0},{"name":"cycles:u","cnt":7687222015.0},{"name":"max-rss","cnt":255872.0},{"name":"faults","cnt":41656.0},{"name":"task-clock","cnt":1984.721133}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":237200.0},{"name":"faults","cnt":37146.0},{"name":"instructions:u","cnt":3971982928.0},{"name":"cycles:u","cnt":2275681028.0},{"name":"cpu-clock","cnt":626.145395},{"name":"wall-time","cnt":0.629755704},{"name":"task-clock","cnt":626.137251}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2705572921.0},{"name":"max-rss","cnt":247656.0},{"name":"faults","cnt":38371.0},{"name":"instructions:u","cnt":4492371636.0},{"name":"task-clock","cnt":734.796524},{"name":"cpu-clock","cnt":734.807461},{"name":"wall-time","cnt":0.737514342}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":9998212967.0},{"name":"wall-time","cnt":2.080261337},{"name":"instructions:u","cnt":13405837829.0},{"name":"cpu-clock","cnt":2610.137974},{"name":"task-clock","cnt":2610.149945},{"name":"max-rss","cnt":297060.0},{"name":"faults","cnt":50248.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.541602485},{"name":"cycles:u","cnt":11998147245.0},{"name":"instructions:u","cnt":16675297616.0},{"name":"cpu-clock","cnt":3160.578425},{"name":"max-rss","cnt":342096.0},{"name":"task-clock","cnt":3160.543596},{"name":"faults","cnt":61669.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4510416534.0},{"name":"wall-time","cnt":0.751474807},{"name":"faults","cnt":48288.0},{"name":"max-rss","cnt":295196.0},{"name":"task-clock","cnt":767.397903},{"name":"cycles:u","cnt":2708316673.0},{"name":"cpu-clock","cnt":767.353173}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":884.26091},{"name":"faults","cnt":50688.0},{"name":"instructions:u","cnt":5073790446.0},{"name":"max-rss","cnt":309172.0},{"name":"cycles:u","cnt":3157913981.0},{"name":"wall-time","cnt":0.865450576},{"name":"task-clock","cnt":884.320699}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":27363890822.0},{"name":"max-rss","cnt":384456.0},{"name":"faults","cnt":78394.0},{"name":"instructions:u","cnt":27095391421.0},{"name":"task-clock","cnt":7267.038718},{"name":"cpu-clock","cnt":7267.033202},{"name":"wall-time","cnt":2.802118677}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":372680.0},{"name":"cycles:u","cnt":27899569382.0},{"name":"task-clock","cnt":7391.20827},{"name":"instructions:u","cnt":28207780498.0},{"name":"cpu-clock","cnt":7391.217178},{"name":"wall-time","cnt":3.028292436},{"name":"faults","cnt":69966.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":796.956073},{"name":"faults","cnt":50585.0},{"name":"cpu-clock","cnt":796.921148},{"name":"wall-time","cnt":0.766712473},{"name":"instructions:u","cnt":4635578276.0},{"name":"max-rss","cnt":302536.0},{"name":"cycles:u","cnt":2820453551.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":3379201489.0},{"name":"max-rss","cnt":317056.0},{"name":"faults","cnt":52228.0},{"name":"cpu-clock","cnt":937.437497},{"name":"task-clock","cnt":937.483192},{"name":"instructions:u","cnt":5314297424.0},{"name":"wall-time","cnt":0.873039328}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":1124.604243},{"name":"wall-time","cnt":1.143280876},{"name":"faults","cnt":21326.0},{"name":"instructions:u","cnt":4735915018.0},{"name":"max-rss","cnt":179032.0},{"name":"cpu-clock","cnt":1124.621584},{"name":"cycles:u","cnt":4332494665.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":6062880572.0},{"name":"faults","cnt":34413.0},{"name":"wall-time","cnt":1.46274512},{"name":"cycles:u","cnt":5476000736.0},{"name":"task-clock","cnt":1424.955216},{"name":"max-rss","cnt":232356.0},{"name":"cpu-clock","cnt":1424.954242}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":221552.0},{"name":"wall-time","cnt":0.446298159},{"name":"task-clock","cnt":437.859631},{"name":"instructions:u","cnt":1915106915.0},{"name":"faults","cnt":33343.0},{"name":"cycles:u","cnt":1542154728.0},{"name":"cpu-clock","cnt":437.867859}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":34100.0},{"name":"max-rss","cnt":231056.0},{"name":"wall-time","cnt":0.451407531},{"name":"task-clock","cnt":457.313015},{"name":"cycles:u","cnt":1618089386.0},{"name":"instructions:u","cnt":2003263185.0},{"name":"cpu-clock","cnt":457.311718}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":4327.030306},{"name":"faults","cnt":49975.0},{"name":"wall-time","cnt":2.267737427},{"name":"cpu-clock","cnt":4327.066878},{"name":"instructions:u","cnt":17262317748.0},{"name":"max-rss","cnt":308696.0},{"name":"cycles:u","cnt":16405716950.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":64030.0},{"name":"wall-time","cnt":2.739591278},{"name":"task-clock","cnt":5295.802213},{"name":"cpu-clock","cnt":5295.909629},{"name":"instructions:u","cnt":20601591631.0},{"name":"max-rss","cnt":363604.0},{"name":"cycles:u","cnt":19894119572.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2394246456.0},{"name":"task-clock","cnt":709.231779},{"name":"instructions:u","cnt":2871278732.0},{"name":"wall-time","cnt":0.684002264},{"name":"faults","cnt":46480.0},{"name":"cpu-clock","cnt":709.116439},{"name":"max-rss","cnt":297584.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2529025120.0},{"name":"max-rss","cnt":307652.0},{"name":"wall-time","cnt":0.69272101},{"name":"faults","cnt":47308.0},{"name":"instructions:u","cnt":3000511679.0},{"name":"cpu-clock","cnt":748.707896},{"name":"task-clock","cnt":748.87234}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":297172.0},{"name":"task-clock","cnt":15648.314361},{"name":"cpu-clock","cnt":15648.317426},{"name":"cycles:u","cnt":59155311437.0},{"name":"instructions:u","cnt":47050805114.0},{"name":"wall-time","cnt":3.492717795},{"name":"faults","cnt":49226.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":18452.819921},{"name":"cycles:u","cnt":69428822467.0},{"name":"wall-time","cnt":4.095937375},{"name":"cpu-clock","cnt":18452.865733},{"name":"faults","cnt":63511.0},{"name":"max-rss","cnt":346972.0},{"name":"instructions:u","cnt":55134522213.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":713.284723},{"name":"cycles:u","cnt":2443229327.0},{"name":"task-clock","cnt":713.393718},{"name":"wall-time","cnt":0.680981407},{"name":"instructions:u","cnt":2940334053.0},{"name":"max-rss","cnt":288272.0},{"name":"faults","cnt":48009.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.196189633},{"name":"cycles:u","cnt":6367857249.0},{"name":"faults","cnt":54579.0},{"name":"max-rss","cnt":320944.0},{"name":"task-clock","cnt":1741.342272},{"name":"instructions:u","cnt":6938359060.0},{"name":"cpu-clock","cnt":1741.260823}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1644.084719},{"name":"max-rss","cnt":180560.0},{"name":"cycles:u","cnt":6409434142.0},{"name":"wall-time","cnt":1.680013496},{"name":"task-clock","cnt":1644.084985},{"name":"instructions:u","cnt":12107547500.0},{"name":"faults","cnt":28752.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1751.888392},{"name":"cycles:u","cnt":6825599600.0},{"name":"wall-time","cnt":1.787345085},{"name":"instructions:u","cnt":12850353263.0},{"name":"max-rss","cnt":191224.0},{"name":"task-clock","cnt":1751.901065},{"name":"faults","cnt":31470.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":13366.0},{"name":"task-clock","cnt":157.763297},{"name":"cpu-clock","cnt":157.753046},{"name":"max-rss","cnt":133012.0},{"name":"instructions:u","cnt":828409574.0},{"name":"cycles:u","cnt":538288622.0},{"name":"wall-time","cnt":0.187322859}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":33237.0},{"name":"instructions:u","cnt":12703747411.0},{"name":"cycles:u","cnt":6714048454.0},{"name":"cpu-clock","cnt":1725.915847},{"name":"task-clock","cnt":1725.916122},{"name":"wall-time","cnt":1.739189586},{"name":"max-rss","cnt":199808.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":16656009323.0},{"name":"task-clock","cnt":2663.533074},{"name":"wall-time","cnt":2.475898683},{"name":"cycles:u","cnt":10249081281.0},{"name":"faults","cnt":56843.0},{"name":"cpu-clock","cnt":2663.503747},{"name":"max-rss","cnt":295208.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2876.414375},{"name":"faults","cnt":61052.0},{"name":"max-rss","cnt":309880.0},{"name":"cycles:u","cnt":11053646041.0},{"name":"wall-time","cnt":2.599723866},{"name":"cpu-clock","cnt":2876.39294},{"name":"instructions:u","cnt":17847260868.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1148667470.0},{"name":"wall-time","cnt":0.247705759},{"name":"faults","cnt":18191.0},{"name":"max-rss","cnt":159044.0},{"name":"cycles:u","cnt":743878107.0},{"name":"task-clock","cnt":224.551133},{"name":"cpu-clock","cnt":224.531808}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":17645174779.0},{"name":"wall-time","cnt":2.547101706},{"name":"cpu-clock","cnt":2838.840719},{"name":"cycles:u","cnt":10872196067.0},{"name":"faults","cnt":59637.0},{"name":"task-clock","cnt":2838.83876},{"name":"max-rss","cnt":297460.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":71208.0},{"name":"cycles:u","cnt":32448224850.0},{"name":"task-clock","cnt":8290.814621},{"name":"max-rss","cnt":327116.0},{"name":"wall-time","cnt":8.032504281},{"name":"cpu-clock","cnt":8290.811093},{"name":"instructions:u","cnt":51829400350.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":33259372503.0},{"name":"instructions:u","cnt":52888956371.0},{"name":"task-clock","cnt":8459.388144},{"name":"faults","cnt":73349.0},{"name":"cpu-clock","cnt":8459.376741},{"name":"max-rss","cnt":336404.0},{"name":"wall-time","cnt":8.178341357}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.236390041},{"name":"cpu-clock","cnt":211.505311},{"name":"cycles:u","cnt":709356205.0},{"name":"instructions:u","cnt":1120686097.0},{"name":"task-clock","cnt":211.525791},{"name":"max-rss","cnt":155816.0},{"name":"faults","cnt":17503.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":73891.0},{"name":"task-clock","cnt":7998.073992},{"name":"cpu-clock","cnt":7998.086326},{"name":"instructions:u","cnt":50491731485.0},{"name":"max-rss","cnt":355940.0},{"name":"cycles:u","cnt":31389004244.0},{"name":"wall-time","cnt":7.974604718}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":73.072331},{"name":"faults","cnt":6126.0},{"name":"instructions:u","cnt":346694624.0},{"name":"wall-time","cnt":0.091158604},{"name":"max-rss","cnt":115596.0},{"name":"cycles:u","cnt":232709461.0},{"name":"cpu-clock","cnt":73.07158}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":7914.0},{"name":"cycles:u","cnt":284831821.0},{"name":"wall-time","cnt":0.105798101},{"name":"task-clock","cnt":87.96629},{"name":"instructions:u","cnt":419338848.0},{"name":"cpu-clock","cnt":87.964246},{"name":"max-rss","cnt":123404.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":58.545042},{"name":"wall-time","cnt":0.075304066},{"name":"instructions:u","cnt":258148699.0},{"name":"cpu-clock","cnt":58.542896},{"name":"max-rss","cnt":109340.0},{"name":"faults","cnt":7589.0},{"name":"cycles:u","cnt":172378785.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":83.307691},{"name":"instructions:u","cnt":382608403.0},{"name":"faults","cnt":8219.0},{"name":"task-clock","cnt":83.320787},{"name":"wall-time","cnt":0.100080943},{"name":"max-rss","cnt":125272.0},{"name":"cycles:u","cnt":263878118.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"faults","cnt":8213.0},{"name":"task-clock","cnt":82.723848},{"name":"cpu-clock","cnt":82.730199},{"name":"max-rss","cnt":125104.0},{"name":"cycles:u","cnt":262047005.0},{"name":"instructions:u","cnt":381781461.0},{"name":"wall-time","cnt":0.099783599}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":344553321.0},{"name":"cpu-clock","cnt":76.084172},{"name":"faults","cnt":8206.0},{"name":"max-rss","cnt":124844.0},{"name":"task-clock","cnt":76.087887},{"name":"cycles:u","cnt":235341251.0},{"name":"wall-time","cnt":0.093036711}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":82.944583},{"name":"cycles:u","cnt":262162876.0},{"name":"faults","cnt":8209.0},{"name":"wall-time","cnt":0.099879692},{"name":"task-clock","cnt":82.938161},{"name":"instructions:u","cnt":382309991.0},{"name":"max-rss","cnt":125340.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":8211.0},{"name":"task-clock","cnt":84.311361},{"name":"instructions:u","cnt":383583012.0},{"name":"max-rss","cnt":125276.0},{"name":"cycles:u","cnt":268153500.0},{"name":"wall-time","cnt":0.101404531},{"name":"cpu-clock","cnt":84.308268}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":958291104.0},{"name":"cpu-clock","cnt":241.29625},{"name":"task-clock","cnt":241.293806},{"name":"cycles:u","cnt":832040830.0},{"name":"max-rss","cnt":137956.0},{"name":"faults","cnt":9851.0},{"name":"wall-time","cnt":0.148762208}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":1086832453.0},{"name":"max-rss","cnt":145508.0},{"name":"faults","cnt":11732.0},{"name":"task-clock","cnt":260.820575},{"name":"cycles:u","cnt":900230530.0},{"name":"wall-time","cnt":0.17041197},{"name":"cpu-clock","cnt":260.809372}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":121444.0},{"name":"task-clock","cnt":79.937252},{"name":"cpu-clock","cnt":79.920311},{"name":"instructions:u","cnt":320984919.0},{"name":"faults","cnt":8719.0},{"name":"cycles:u","cnt":231083393.0},{"name":"wall-time","cnt":0.092877006}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":260.969978},{"name":"faults","cnt":12311.0},{"name":"wall-time","cnt":0.160799193},{"name":"task-clock","cnt":260.955655},{"name":"max-rss","cnt":148188.0},{"name":"cycles:u","cnt":887924012.0},{"name":"instructions:u","cnt":1029187913.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"task-clock","cnt":241.991808},{"name":"max-rss","cnt":148132.0},{"name":"wall-time","cnt":0.151879508},{"name":"instructions:u","cnt":958566716.0},{"name":"faults","cnt":12263.0},{"name":"cpu-clock","cnt":241.983782},{"name":"cycles:u","cnt":818270758.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"wall-time","cnt":0.141549199},{"name":"cycles:u","cnt":785722186.0},{"name":"faults","cnt":12038.0},{"name":"instructions:u","cnt":910328325.0},{"name":"cpu-clock","cnt":232.67084},{"name":"task-clock","cnt":232.687559},{"name":"max-rss","cnt":146984.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":248.068764},{"name":"cycles:u","cnt":839569997.0},{"name":"faults","cnt":12104.0},{"name":"max-rss","cnt":147464.0},{"name":"wall-time","cnt":0.152976868},{"name":"task-clock","cnt":248.051403},{"name":"instructions:u","cnt":960828451.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":148016.0},{"name":"instructions:u","cnt":966312857.0},{"name":"wall-time","cnt":0.15318858},{"name":"task-clock","cnt":246.066721},{"name":"cpu-clock","cnt":246.068722},{"name":"cycles:u","cnt":833003708.0},{"name":"faults","cnt":12200.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":2299350390.0},{"name":"faults","cnt":11675.0},{"name":"cpu-clock","cnt":638.639093},{"name":"max-rss","cnt":146152.0},{"name":"task-clock","cnt":638.65432},{"name":"cycles:u","cnt":2341221119.0},{"name":"wall-time","cnt":0.274347332}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":681.305879},{"name":"instructions:u","cnt":2436485790.0},{"name":"task-clock","cnt":681.314434},{"name":"cycles:u","cnt":2493436030.0},{"name":"max-rss","cnt":153764.0},{"name":"faults","cnt":13707.0},{"name":"wall-time","cnt":0.293955833}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":8728.0},{"name":"instructions:u","cnt":322394155.0},{"name":"cpu-clock","cnt":77.359869},{"name":"cycles:u","cnt":226959986.0},{"name":"task-clock","cnt":77.394174},{"name":"max-rss","cnt":120240.0},{"name":"wall-time","cnt":0.090706422}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":641.358427},{"name":"cycles:u","cnt":2337569339.0},{"name":"wall-time","cnt":0.29686419},{"name":"max-rss","cnt":155288.0},{"name":"cpu-clock","cnt":641.358206},{"name":"faults","cnt":14007.0},{"name":"instructions:u","cnt":2362435691.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"faults","cnt":13162.0},{"name":"max-rss","cnt":151936.0},{"name":"instructions:u","cnt":1426374615.0},{"name":"cycles:u","cnt":1415902837.0},{"name":"wall-time","cnt":0.188591779},{"name":"cpu-clock","cnt":400.620335},{"name":"task-clock","cnt":400.640659}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":373.085348},{"name":"cycles:u","cnt":1309009094.0},{"name":"cpu-clock","cnt":373.060239},{"name":"max-rss","cnt":150996.0},{"name":"faults","cnt":12983.0},{"name":"instructions:u","cnt":1327219684.0},{"name":"wall-time","cnt":0.178440297}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"wall-time","cnt":0.188697737},{"name":"cpu-clock","cnt":372.050684},{"name":"max-rss","cnt":151456.0},{"name":"instructions:u","cnt":1358393221.0},{"name":"cycles:u","cnt":1310605217.0},{"name":"task-clock","cnt":372.047607},{"name":"faults","cnt":13005.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":13026.0},{"name":"cycles:u","cnt":1313507901.0},{"name":"cpu-clock","cnt":373.681389},{"name":"instructions:u","cnt":1368661614.0},{"name":"wall-time","cnt":0.186246273},{"name":"task-clock","cnt":373.691082},{"name":"max-rss","cnt":151276.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":5325.575748},{"name":"cpu-clock","cnt":5325.577083},{"name":"faults","cnt":140733.0},{"name":"cycles:u","cnt":20603893486.0},{"name":"wall-time","cnt":5.343698651},{"name":"max-rss","cnt":500048.0},{"name":"instructions:u","cnt":40655948232.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":520824.0},{"name":"faults","cnt":147297.0},{"name":"wall-time","cnt":5.766664601},{"name":"instructions:u","cnt":43171580391.0},{"name":"task-clock","cnt":5728.77626},{"name":"cycles:u","cnt":22155486105.0},{"name":"cpu-clock","cnt":5728.776247}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2009973535.0},{"name":"task-clock","cnt":465.85074},{"name":"cycles:u","cnt":1670473078.0},{"name":"max-rss","cnt":201064.0},{"name":"faults","cnt":34012.0},{"name":"cpu-clock","cnt":465.850151},{"name":"wall-time","cnt":0.484990546}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":28516774804.0},{"name":"task-clock","cnt":7479.203288},{"name":"faults","cnt":337959.0},{"name":"wall-time","cnt":7.475160856},{"name":"instructions:u","cnt":51401668380.0},{"name":"max-rss","cnt":1235180.0},{"name":"cpu-clock","cnt":7479.21759}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7960.152582},{"name":"wall-time","cnt":7.918636335},{"name":"task-clock","cnt":7960.134281},{"name":"instructions:u","cnt":54706745577.0},{"name":"faults","cnt":342489.0},{"name":"max-rss","cnt":1259332.0},{"name":"cycles:u","cnt":30463999930.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2021728758.0},{"name":"faults","cnt":42443.0},{"name":"cpu-clock","cnt":567.034814},{"name":"max-rss","cnt":238936.0},{"name":"instructions:u","cnt":2718771839.0},{"name":"wall-time","cnt":0.581822563},{"name":"task-clock","cnt":567.048491}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":6812.816652},{"name":"instructions:u","cnt":51894361576.0},{"name":"max-rss","cnt":993940.0},{"name":"faults","cnt":276342.0},{"name":"cpu-clock","cnt":6812.804215},{"name":"cycles:u","cnt":26133322371.0},{"name":"wall-time","cnt":6.813398479}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":55064452348.0},{"name":"max-rss","cnt":935112.0},{"name":"faults","cnt":256167.0},{"name":"cycles:u","cnt":28077007486.0},{"name":"task-clock","cnt":7302.139965},{"name":"cpu-clock","cnt":7302.147488},{"name":"wall-time","cnt":7.271375168}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":558.104969},{"name":"instructions:u","cnt":2659197570.0},{"name":"faults","cnt":43588.0},{"name":"max-rss","cnt":242312.0},{"name":"wall-time","cnt":0.573230132},{"name":"cpu-clock","cnt":558.103923},{"name":"cycles:u","cnt":1979456699.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmpuovCYG)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x559661a4d3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x559661a4d552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x559661a4c86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x5596619e8470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x5596616d6afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x5596616de722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x5596616f0541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5596616ffa1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5596616f596e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x5596616a9e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x559661a740d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x559661a7ed39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x559661a74c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x559661703d57 - main\n  14:     0x7f05cbc7582f - __libc_start_main\n  15:     0x55966169f518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1823.091345},{"name":"task-clock","cnt":1823.091334},{"name":"max-rss","cnt":202272.0},{"name":"cycles:u","cnt":7099211762.0},{"name":"instructions:u","cnt":8655732614.0},{"name":"wall-time","cnt":1.862293018},{"name":"faults","cnt":26720.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2280.658942},{"name":"max-rss","cnt":257576.0},{"name":"instructions:u","cnt":10648341784.0},{"name":"faults","cnt":40405.0},{"name":"cycles:u","cnt":8854983432.0},{"name":"cpu-clock","cnt":2280.657255},{"name":"wall-time","cnt":2.318634135}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":483.399165},{"name":"max-rss","cnt":238872.0},{"name":"wall-time","cnt":0.489432576},{"name":"cycles:u","cnt":1711990962.0},{"name":"instructions:u","cnt":2178065669.0},{"name":"cpu-clock","cnt":483.378582},{"name":"faults","cnt":37406.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2271757132.0},{"name":"cpu-clock","cnt":511.751326},{"name":"max-rss","cnt":246196.0},{"name":"wall-time","cnt":0.501590508},{"name":"task-clock","cnt":511.771391},{"name":"faults","cnt":37547.0},{"name":"cycles:u","cnt":1822816371.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":9118.668816},{"name":"max-rss","cnt":475044.0},{"name":"cycles:u","cnt":34447264993.0},{"name":"cpu-clock","cnt":9118.669516},{"name":"wall-time","cnt":4.014331342},{"name":"faults","cnt":95275.0},{"name":"instructions:u","cnt":36567099311.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":10588.687174},{"name":"faults","cnt":102369.0},{"name":"instructions:u","cnt":41016293007.0},{"name":"wall-time","cnt":4.666744943},{"name":"max-rss","cnt":516160.0},{"name":"task-clock","cnt":10588.63456},{"name":"cycles:u","cnt":39928225619.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":3946275504.0},{"name":"wall-time","cnt":0.904235845},{"name":"max-rss","cnt":378744.0},{"name":"cycles:u","cnt":3207306769.0},{"name":"cpu-clock","cnt":937.549224},{"name":"faults","cnt":62934.0},{"name":"task-clock","cnt":937.637736}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":390628.0},{"name":"cpu-clock","cnt":1016.27618},{"name":"faults","cnt":64172.0},{"name":"instructions:u","cnt":4243696688.0},{"name":"wall-time","cnt":0.958729004},{"name":"task-clock","cnt":1016.353989},{"name":"cycles:u","cnt":3516015273.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":148780689167.0},{"name":"max-rss","cnt":438116.0},{"name":"instructions:u","cnt":120550752598.0},{"name":"faults","cnt":88419.0},{"name":"cpu-clock","cnt":39306.880726},{"name":"wall-time","cnt":7.982459252},{"name":"task-clock","cnt":39306.877658}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":162625781166.0},{"name":"instructions:u","cnt":128449828784.0},{"name":"faults","cnt":106612.0},{"name":"cpu-clock","cnt":43103.240258},{"name":"task-clock","cnt":43103.133609},{"name":"wall-time","cnt":8.282366964},{"name":"max-rss","cnt":495068.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":362560.0},{"name":"task-clock","cnt":945.34161},{"name":"instructions:u","cnt":4039734289.0},{"name":"faults","cnt":64801.0},{"name":"wall-time","cnt":0.898423377},{"name":"cpu-clock","cnt":945.265351},{"name":"cycles:u","cnt":3302970332.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1442.748432},{"name":"instructions:u","cnt":6251928458.0},{"name":"faults","cnt":66755.0},{"name":"cpu-clock","cnt":1442.668238},{"name":"max-rss","cnt":378564.0},{"name":"wall-time","cnt":1.318045098},{"name":"cycles:u","cnt":5214947224.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":169884.0},{"name":"wall-time","cnt":0.952432172},{"name":"cpu-clock","cnt":932.710729},{"name":"instructions:u","cnt":3958528216.0},{"name":"faults","cnt":19018.0},{"name":"task-clock","cnt":932.711885},{"name":"cycles:u","cnt":3589093522.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":4560482886.0},{"name":"cpu-clock","cnt":1192.648574},{"name":"instructions:u","cnt":5065134167.0},{"name":"max-rss","cnt":214356.0},{"name":"wall-time","cnt":1.262085321},{"name":"task-clock","cnt":1192.649533},{"name":"faults","cnt":29993.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":193240.0},{"name":"cpu-clock","cnt":326.466457},{"name":"task-clock","cnt":326.453144},{"name":"faults","cnt":26282.0},{"name":"cycles:u","cnt":1137072788.0},{"name":"wall-time","cnt":0.327101362},{"name":"instructions:u","cnt":1502025982.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":214672.0},{"name":"instructions:u","cnt":2253375191.0},{"name":"faults","cnt":29948.0},{"name":"cpu-clock","cnt":510.436802},{"name":"cycles:u","cnt":1854295843.0},{"name":"wall-time","cnt":0.529000649},{"name":"task-clock","cnt":510.428169}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"faults","cnt":26731.0},{"name":"wall-time","cnt":0.341725975},{"name":"max-rss","cnt":201864.0},{"name":"cpu-clock","cnt":341.503164},{"name":"task-clock","cnt":341.503801},{"name":"cycles:u","cnt":1196928563.0},{"name":"instructions:u","cnt":1553592194.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"wall-time","cnt":0.370553914},{"name":"max-rss","cnt":203960.0},{"name":"faults","cnt":27076.0},{"name":"instructions:u","cnt":1600908218.0},{"name":"cycles:u","cnt":1227027963.0},{"name":"cpu-clock","cnt":350.215189},{"name":"task-clock","cnt":350.206128}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"faults","cnt":30010.0},{"name":"task-clock","cnt":522.805638},{"name":"cycles:u","cnt":1906012031.0},{"name":"max-rss","cnt":215080.0},{"name":"wall-time","cnt":0.519415657},{"name":"cpu-clock","cnt":522.806738},{"name":"instructions:u","cnt":2275189162.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"max-rss","cnt":214860.0},{"name":"cycles:u","cnt":1921919275.0},{"name":"instructions:u","cnt":2272752343.0},{"name":"wall-time","cnt":0.547763781},{"name":"faults","cnt":29997.0},{"name":"task-clock","cnt":528.868037},{"name":"cpu-clock","cnt":528.867922}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"max-rss","cnt":201648.0},{"name":"cycles:u","cnt":1209085705.0},{"name":"task-clock","cnt":344.674756},{"name":"instructions:u","cnt":1538668538.0},{"name":"wall-time","cnt":0.345037115},{"name":"faults","cnt":26735.0},{"name":"cpu-clock","cnt":344.673679}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"faults","cnt":29525.0},{"name":"task-clock","cnt":441.271273},{"name":"cycles:u","cnt":1579713481.0},{"name":"instructions:u","cnt":1980936602.0},{"name":"wall-time","cnt":0.463095948},{"name":"cpu-clock","cnt":441.270679},{"name":"max-rss","cnt":213324.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"cycles:u","cnt":1334807938.0},{"name":"cpu-clock","cnt":376.940537},{"name":"instructions:u","cnt":1724026095.0},{"name":"wall-time","cnt":0.377138205},{"name":"faults","cnt":27282.0},{"name":"task-clock","cnt":376.941551},{"name":"max-rss","cnt":204388.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cycles:u","cnt":1437330668.0},{"name":"instructions:u","cnt":1775781190.0},{"name":"task-clock","cnt":405.37397},{"name":"cpu-clock","cnt":405.373491},{"name":"faults","cnt":29424.0},{"name":"wall-time","cnt":0.42431882},{"name":"max-rss","cnt":212520.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"task-clock","cnt":7340.122808},{"name":"faults","cnt":78723.0},{"name":"wall-time","cnt":2.193674165},{"name":"max-rss","cnt":408536.0},{"name":"cycles:u","cnt":27444016107.0},{"name":"instructions:u","cnt":22829272305.0},{"name":"cpu-clock","cnt":7340.135694}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.661338853},{"name":"faults","cnt":78887.0},{"name":"task-clock","cnt":7745.682942},{"name":"max-rss","cnt":416516.0},{"name":"instructions:u","cnt":25702577682.0},{"name":"cpu-clock","cnt":7745.745558},{"name":"cycles:u","cnt":28993146719.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2260123207.0},{"name":"faults","cnt":42150.0},{"name":"cycles:u","cnt":1822503565.0},{"name":"cpu-clock","cnt":544.163633},{"name":"max-rss","cnt":276244.0},{"name":"task-clock","cnt":544.2255},{"name":"wall-time","cnt":0.520771136}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.972617468},{"name":"task-clock","cnt":1732.624772},{"name":"faults","cnt":55744.0},{"name":"max-rss","cnt":333744.0},{"name":"instructions:u","cnt":6866620078.0},{"name":"cycles:u","cnt":6259142052.0},{"name":"cpu-clock","cnt":1732.563515}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"max-rss","cnt":283524.0},{"name":"instructions:u","cnt":2343095940.0},{"name":"wall-time","cnt":0.537018763},{"name":"cycles:u","cnt":1913699646.0},{"name":"task-clock","cnt":571.761559},{"name":"faults","cnt":42046.0},{"name":"cpu-clock","cnt":571.671166}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"faults","cnt":44941.0},{"name":"cycles:u","cnt":2570527664.0},{"name":"instructions:u","cnt":3077635387.0},{"name":"cpu-clock","cnt":742.567904},{"name":"wall-time","cnt":0.63610937},{"name":"task-clock","cnt":742.635854},{"name":"max-rss","cnt":294260.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"max-rss","cnt":333452.0},{"name":"cpu-clock","cnt":1753.964309},{"name":"faults","cnt":55706.0},{"name":"task-clock","cnt":1754.008896},{"name":"instructions:u","cnt":6903374271.0},{"name":"cycles:u","cnt":6386073238.0},{"name":"wall-time","cnt":0.983962144}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"cycles:u","cnt":6366022269.0},{"name":"faults","cnt":56432.0},{"name":"cpu-clock","cnt":1751.293827},{"name":"task-clock","cnt":1751.358278},{"name":"max-rss","cnt":336032.0},{"name":"wall-time","cnt":0.98831627},{"name":"instructions:u","cnt":6893463796.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"max-rss","cnt":276512.0},{"name":"faults","cnt":41561.0},{"name":"cpu-clock","cnt":548.369125},{"name":"wall-time","cnt":0.523563306},{"name":"instructions:u","cnt":2288206846.0},{"name":"task-clock","cnt":548.426973},{"name":"cycles:u","cnt":1842490499.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"cpu-clock","cnt":5568.231225},{"name":"instructions:u","cnt":17610177982.0},{"name":"faults","cnt":82174.0},{"name":"cycles:u","cnt":20546874072.0},{"name":"task-clock","cnt":5568.221611},{"name":"wall-time","cnt":1.47934022},{"name":"max-rss","cnt":431980.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":16947254104.0},{"name":"wall-time","cnt":1.456128467},{"name":"cpu-clock","cnt":5298.261017},{"name":"task-clock","cnt":5298.280733},{"name":"cycles:u","cnt":19546197302.0},{"name":"max-rss","cnt":429672.0},{"name":"faults","cnt":81827.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"instructions:u","cnt":3684397729.0},{"name":"cpu-clock","cnt":871.506806},{"name":"wall-time","cnt":0.661320161},{"name":"max-rss","cnt":305800.0},{"name":"task-clock","cnt":871.572183},{"name":"cycles:u","cnt":3052792522.0},{"name":"faults","cnt":47765.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"wall-time","cnt":4.550279555},{"name":"cpu-clock","cnt":21888.603067},{"name":"faults","cnt":63864.0},{"name":"instructions:u","cnt":66248313574.0},{"name":"max-rss","cnt":351644.0},{"name":"cycles:u","cnt":82741009817.0},{"name":"task-clock","cnt":21888.566329}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":90990866924.0},{"name":"faults","cnt":75467.0},{"name":"cpu-clock","cnt":24127.37314},{"name":"instructions:u","cnt":71859265786.0},{"name":"max-rss","cnt":391712.0},{"name":"wall-time","cnt":4.930650553},{"name":"task-clock","cnt":24127.336978}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2286744118.0},{"name":"cycles:u","cnt":1826917447.0},{"name":"cpu-clock","cnt":533.169147},{"name":"max-rss","cnt":261016.0},{"name":"wall-time","cnt":0.501498813},{"name":"task-clock","cnt":533.225871},{"name":"faults","cnt":41258.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":41875324344.0},{"name":"task-clock","cnt":13833.633831},{"name":"cycles:u","cnt":51981333043.0},{"name":"cpu-clock","cnt":13833.639717},{"name":"wall-time","cnt":2.980969762},{"name":"faults","cnt":75107.0},{"name":"max-rss","cnt":395056.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"faults","cnt":42261.0},{"name":"cpu-clock","cnt":608.155545},{"name":"wall-time","cnt":0.526785383},{"name":"max-rss","cnt":273644.0},{"name":"instructions:u","cnt":2572942368.0},{"name":"cycles:u","cnt":2097492107.0},{"name":"task-clock","cnt":608.235955}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cpu-clock","cnt":615.966915},{"name":"max-rss","cnt":274100.0},{"name":"wall-time","cnt":0.536624727},{"name":"task-clock","cnt":616.032613},{"name":"instructions:u","cnt":2617382087.0},{"name":"cycles:u","cnt":2125093577.0},{"name":"faults","cnt":42318.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cpu-clock","cnt":13848.0443},{"name":"wall-time","cnt":2.954498992},{"name":"instructions:u","cnt":41932814254.0},{"name":"max-rss","cnt":394712.0},{"name":"task-clock","cnt":13848.029517},{"name":"cycles:u","cnt":52056414572.0},{"name":"faults","cnt":74995.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"wall-time","cnt":2.963009986},{"name":"cpu-clock","cnt":13882.546771},{"name":"cycles:u","cnt":52229424380.0},{"name":"task-clock","cnt":13882.502402},{"name":"max-rss","cnt":395816.0},{"name":"instructions:u","cnt":41909650753.0},{"name":"faults","cnt":75097.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"instructions:u","cnt":2312281328.0},{"name":"task-clock","cnt":541.1184},{"name":"cpu-clock","cnt":541.057486},{"name":"cycles:u","cnt":1853852087.0},{"name":"faults","cnt":41511.0},{"name":"wall-time","cnt":0.512039966},{"name":"max-rss","cnt":264148.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"instructions:u","cnt":58175087347.0},{"name":"task-clock","cnt":19100.062756},{"name":"cpu-clock","cnt":19100.120466},{"name":"faults","cnt":77446.0},{"name":"cycles:u","cnt":71878519310.0},{"name":"wall-time","cnt":3.575530942},{"name":"max-rss","cnt":406200.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"task-clock","cnt":19024.045115},{"name":"instructions:u","cnt":57873407567.0},{"name":"faults","cnt":77333.0},{"name":"wall-time","cnt":3.488259771},{"name":"cycles:u","cnt":71589178690.0},{"name":"cpu-clock","cnt":19024.054005},{"name":"max-rss","cnt":403892.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"instructions:u","cnt":12850535989.0},{"name":"faults","cnt":56536.0},{"name":"task-clock","cnt":2566.978176},{"name":"max-rss","cnt":315432.0},{"name":"cpu-clock","cnt":2566.937827},{"name":"wall-time","cnt":1.904115834},{"name":"cycles:u","cnt":9699133385.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":239.426421},{"name":"instructions:u","cnt":1222001276.0},{"name":"task-clock","cnt":239.428538},{"name":"faults","cnt":8022.0},{"name":"wall-time","cnt":0.257207187},{"name":"cycles:u","cnt":885672794.0},{"name":"max-rss","cnt":125596.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":1493652698.0},{"name":"wall-time","cnt":0.31516471},{"name":"task-clock","cnt":295.20714},{"name":"max-rss","cnt":138564.0},{"name":"faults","cnt":11195.0},{"name":"cpu-clock","cnt":295.205232},{"name":"cycles:u","cnt":1092162736.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":10673.0},{"name":"max-rss","cnt":122748.0},{"name":"cycles:u","cnt":266489181.0},{"name":"cpu-clock","cnt":86.776267},{"name":"task-clock","cnt":86.778149},{"name":"wall-time","cnt":0.100892692},{"name":"instructions:u","cnt":399354368.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":114.187379},{"name":"cpu-clock","cnt":114.185376},{"name":"max-rss","cnt":139196.0},{"name":"wall-time","cnt":0.127922044},{"name":"faults","cnt":11320.0},{"name":"cycles:u","cnt":368774822.0},{"name":"instructions:u","cnt":515430063.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7614696533.0},{"name":"faults","cnt":28415.0},{"name":"cycles:u","cnt":7052274887.0},{"name":"task-clock","cnt":1886.960657},{"name":"cpu-clock","cnt":1886.956412},{"name":"max-rss","cnt":214580.0},{"name":"wall-time","cnt":0.889759736}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.030819735},{"name":"task-clock","cnt":2132.25153},{"name":"faults","cnt":32707.0},{"name":"instructions:u","cnt":8499281114.0},{"name":"cpu-clock","cnt":2132.238257},{"name":"max-rss","cnt":232964.0},{"name":"cycles:u","cnt":7968562035.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":205.680927},{"name":"cycles:u","cnt":659618766.0},{"name":"max-rss","cnt":166844.0},{"name":"task-clock","cnt":205.714497},{"name":"faults","cnt":17505.0},{"name":"wall-time","cnt":0.226458189},{"name":"instructions:u","cnt":853285601.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":254.362979},{"name":"max-rss","cnt":189016.0},{"name":"cycles:u","cnt":829866640.0},{"name":"faults","cnt":19687.0},{"name":"wall-time","cnt":0.239683194},{"name":"instructions:u","cnt":1060362573.0},{"name":"cpu-clock","cnt":254.336352}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":6890.47224},{"name":"wall-time","cnt":2.624326223},{"name":"faults","cnt":28057.0},{"name":"cycles:u","cnt":26268406258.0},{"name":"max-rss","cnt":211188.0},{"name":"instructions:u","cnt":24659197654.0},{"name":"task-clock","cnt":6890.483179}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":25825894107.0},{"name":"max-rss","cnt":237712.0},{"name":"wall-time","cnt":2.760411895},{"name":"cpu-clock","cnt":7310.432182},{"name":"faults","cnt":34972.0},{"name":"cycles:u","cnt":27814474388.0},{"name":"task-clock","cnt":7310.428331}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":204.757813},{"name":"cycles:u","cnt":668163978.0},{"name":"wall-time","cnt":0.221310141},{"name":"task-clock","cnt":204.787886},{"name":"instructions:u","cnt":861271016.0},{"name":"faults","cnt":18613.0},{"name":"max-rss","cnt":164064.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2474.190352},{"name":"cpu-clock","cnt":2474.176869},{"name":"wall-time","cnt":1.367520216},{"name":"max-rss","cnt":221896.0},{"name":"faults","cnt":30260.0},{"name":"cycles:u","cnt":9365053002.0},{"name":"instructions:u","cnt":9920522149.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3472006129.0},{"name":"cpu-clock","cnt":753.521989},{"name":"max-rss","cnt":166544.0},{"name":"task-clock","cnt":753.522516},{"name":"cycles:u","cnt":2891614023.0},{"name":"wall-time","cnt":0.792652667},{"name":"faults","cnt":17603.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":4460514939.0},{"name":"task-clock","cnt":982.526043},{"name":"max-rss","cnt":205324.0},{"name":"faults","cnt":26960.0},{"name":"wall-time","cnt":1.015264732},{"name":"cycles:u","cnt":3747462685.0},{"name":"cpu-clock","cnt":982.525114}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":184700.0},{"name":"cycles:u","cnt":822953130.0},{"name":"instructions:u","cnt":1160395538.0},{"name":"faults","cnt":23695.0},{"name":"cpu-clock","cnt":244.560646},{"name":"wall-time","cnt":0.2440252},{"name":"task-clock","cnt":244.562187}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":980011776.0},{"name":"max-rss","cnt":198560.0},{"name":"instructions:u","cnt":1347441095.0},{"name":"cpu-clock","cnt":285.68525},{"name":"faults","cnt":25066.0},{"name":"wall-time","cnt":0.308747126},{"name":"task-clock","cnt":285.672951}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":332752.0},{"name":"faults","cnt":105500.0},{"name":"task-clock","cnt":5447.511267},{"name":"cpu-clock","cnt":5447.53375},{"name":"wall-time","cnt":3.061555538},{"name":"instructions:u","cnt":21164908419.0},{"name":"cycles:u","cnt":19865367881.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":3.590005335},{"name":"task-clock","cnt":6388.405717},{"name":"cycles:u","cnt":23175484712.0},{"name":"instructions:u","cnt":24697492219.0},{"name":"cpu-clock","cnt":6388.434377},{"name":"max-rss","cnt":374904.0},{"name":"faults","cnt":118618.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1634.67344},{"name":"cpu-clock","cnt":1634.59966},{"name":"max-rss","cnt":283160.0},{"name":"cycles:u","cnt":5158110749.0},{"name":"instructions:u","cnt":6437250778.0},{"name":"wall-time","cnt":1.602646616},{"name":"faults","cnt":93038.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1670.954631},{"name":"instructions:u","cnt":6614457657.0},{"name":"max-rss","cnt":290296.0},{"name":"cycles:u","cnt":5302738689.0},{"name":"faults","cnt":95973.0},{"name":"cpu-clock","cnt":1670.868753},{"name":"wall-time","cnt":1.629814224}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":41094.382487},{"name":"cycles:u","cnt":154422380163.0},{"name":"faults","cnt":184111.0},{"name":"max-rss","cnt":631372.0},{"name":"cpu-clock","cnt":41094.416225},{"name":"wall-time","cnt":7.887856295},{"name":"instructions:u","cnt":122427139273.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":171357149767.0},{"name":"cpu-clock","cnt":45713.533017},{"name":"instructions:u","cnt":133138316894.0},{"name":"task-clock","cnt":45713.47661},{"name":"max-rss","cnt":638360.0},{"name":"faults","cnt":185535.0},{"name":"wall-time","cnt":8.303085315}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":4307986546.0},{"name":"instructions:u","cnt":6787465043.0},{"name":"wall-time","cnt":1.273419805},{"name":"cpu-clock","cnt":1325.018487},{"name":"max-rss","cnt":302252.0},{"name":"faults","cnt":90607.0},{"name":"task-clock","cnt":1325.1233}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2100.084639},{"name":"wall-time","cnt":1.774663353},{"name":"task-clock","cnt":2100.178929},{"name":"instructions:u","cnt":10309156450.0},{"name":"cycles:u","cnt":7297279639.0},{"name":"max-rss","cnt":354728.0},{"name":"faults","cnt":99359.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":2431180.0},{"name":"cycles:u","cnt":171909463772.0},{"name":"task-clock","cnt":44376.211392},{"name":"faults","cnt":710354.0},{"name":"wall-time","cnt":44.479942896},{"name":"instructions:u","cnt":189461763436.0},{"name":"cpu-clock","cnt":44376.226147}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":55.692579302},{"name":"instructions:u","cnt":245452579487.0},{"name":"cycles:u","cnt":214434337329.0},{"name":"cpu-clock","cnt":55654.84834},{"name":"max-rss","cnt":3881460.0},{"name":"faults","cnt":1110534.0},{"name":"task-clock","cnt":55654.831426}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":20410.028424},{"name":"faults","cnt":1056560.0},{"name":"wall-time","cnt":21.494481602},{"name":"instructions:u","cnt":88603659622.0},{"name":"cycles:u","cnt":76428573332.0},{"name":"task-clock","cnt":20410.043995},{"name":"max-rss","cnt":4249404.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":20.756580764},{"name":"task-clock","cnt":20513.063858},{"name":"max-rss","cnt":4229868.0},{"name":"faults","cnt":1051026.0},{"name":"cycles:u","cnt":76844943010.0},{"name":"cpu-clock","cnt":20513.063763},{"name":"instructions:u","cnt":88795854708.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"wall-time","cnt":21.26023966},{"name":"cycles:u","cnt":78644772061.0},{"name":"faults","cnt":1046671.0},{"name":"instructions:u","cnt":91738938845.0},{"name":"max-rss","cnt":4175940.0},{"name":"cpu-clock","cnt":20947.901032},{"name":"task-clock","cnt":20947.909067}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"faults","cnt":1330550.0},{"name":"task-clock","cnt":43865.52503},{"name":"cpu-clock","cnt":43865.557435},{"name":"wall-time","cnt":43.124530836},{"name":"max-rss","cnt":4808880.0},{"name":"instructions:u","cnt":188099662560.0},{"name":"cycles:u","cnt":166482190804.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"wall-time","cnt":91.910419093},{"name":"task-clock","cnt":207823.884709},{"name":"cycles:u","cnt":788077916974.0},{"name":"faults","cnt":2020212.0},{"name":"instructions:u","cnt":773328115066.0},{"name":"cpu-clock","cnt":207824.072205},{"name":"max-rss","cnt":5610732.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":389667.316759},{"name":"faults","cnt":3066687.0},{"name":"cpu-clock","cnt":389667.67952},{"name":"instructions:u","cnt":1697608664675.0},{"name":"cycles:u","cnt":1473644941015.0},{"name":"wall-time","cnt":189.818705805},{"name":"max-rss","cnt":8580912.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":30169.955557},{"name":"faults","cnt":1506807.0},{"name":"max-rss","cnt":9098168.0},{"name":"cycles:u","cnt":105143396503.0},{"name":"wall-time","cnt":42.279893346},{"name":"instructions:u","cnt":119643298850.0},{"name":"task-clock","cnt":30172.197623}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":139159682439.0},{"name":"max-rss","cnt":9371340.0},{"name":"cpu-clock","cnt":35333.773185},{"name":"cycles:u","cnt":123284926638.0},{"name":"wall-time","cnt":42.599301285},{"name":"faults","cnt":1563209.0},{"name":"task-clock","cnt":35336.218268}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"faults","cnt":1498445.0},{"name":"wall-time","cnt":41.38563232},{"name":"task-clock","cnt":31812.714839},{"name":"instructions:u","cnt":126641181379.0},{"name":"cpu-clock","cnt":31810.73242},{"name":"cycles:u","cnt":111834598782.0},{"name":"max-rss","cnt":9130936.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"task-clock","cnt":348988.761353},{"name":"cycles:u","cnt":1313484791394.0},{"name":"faults","cnt":3192889.0},{"name":"wall-time","cnt":164.639406559},{"name":"max-rss","cnt":9548748.0},{"name":"cpu-clock","cnt":348988.890804},{"name":"instructions:u","cnt":1500878627018.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"faults","cnt":2555962.0},{"name":"max-rss","cnt":4312296.0},{"name":"cpu-clock","cnt":789223.556219},{"name":"wall-time","cnt":184.105450757},{"name":"cycles:u","cnt":2980676721862.0},{"name":"instructions:u","cnt":2246365287021.0},{"name":"task-clock","cnt":789223.19566}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":4187050698785.0},{"name":"wall-time","cnt":214.409772012},{"name":"instructions:u","cnt":3223640970311.0},{"name":"max-rss","cnt":5475488.0},{"name":"task-clock","cnt":1113363.129817},{"name":"faults","cnt":3305674.0},{"name":"cpu-clock","cnt":1113364.505186}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":28302.518229},{"name":"instructions:u","cnt":113461899570.0},{"name":"wall-time","cnt":26.203823414},{"name":"cycles:u","cnt":102410067518.0},{"name":"max-rss","cnt":5743704.0},{"name":"faults","cnt":1405716.0},{"name":"task-clock","cnt":28303.439329}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":86.115420959},{"name":"cpu-clock","cnt":398265.531169},{"name":"instructions:u","cnt":1149969787855.0},{"name":"cycles:u","cnt":1494114485724.0},{"name":"task-clock","cnt":398265.544594},{"name":"max-rss","cnt":7195052.0},{"name":"faults","cnt":2202831.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"faults","cnt":1771163.0},{"name":"wall-time","cnt":68.20546919},{"name":"task-clock","cnt":109262.546251},{"name":"cpu-clock","cnt":109261.993252},{"name":"max-rss","cnt":6665664.0},{"name":"cycles:u","cnt":417178555633.0},{"name":"instructions:u","cnt":420224508428.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1081131.800291},{"name":"cycles:u","cnt":4059965131625.0},{"name":"faults","cnt":3560590.0},{"name":"wall-time","cnt":196.932967748},{"name":"instructions:u","cnt":3119452390075.0},{"name":"max-rss","cnt":6685904.0},{"name":"task-clock","cnt":1081130.274032}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":2328.812068},{"name":"cycles:u","cnt":9055604198.0},{"name":"faults","cnt":35160.0},{"name":"instructions:u","cnt":11381548066.0},{"name":"max-rss","cnt":250256.0},{"name":"task-clock","cnt":2328.811374},{"name":"wall-time","cnt":2.347219303}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2935.825238},{"name":"faults","cnt":53899.0},{"name":"wall-time","cnt":2.953505426},{"name":"instructions:u","cnt":14388934076.0},{"name":"cycles:u","cnt":11397517816.0},{"name":"max-rss","cnt":324932.0},{"name":"cpu-clock","cnt":2935.814945}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2589502596.0},{"name":"cpu-clock","cnt":716.575836},{"name":"faults","cnt":47825.0},{"name":"task-clock","cnt":716.574867},{"name":"max-rss","cnt":295476.0},{"name":"instructions:u","cnt":3607941380.0},{"name":"wall-time","cnt":0.701581706}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":3361621428.0},{"name":"task-clock","cnt":917.116645},{"name":"max-rss","cnt":312048.0},{"name":"wall-time","cnt":0.902900239},{"name":"instructions:u","cnt":4313353826.0},{"name":"faults","cnt":50226.0},{"name":"cpu-clock","cnt":917.106089}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":334708.0},{"name":"instructions:u","cnt":61383939783.0},{"name":"wall-time","cnt":10.463347941},{"name":"task-clock","cnt":14313.490746},{"name":"cycles:u","cnt":53560615237.0},{"name":"cpu-clock","cnt":14313.503932},{"name":"max-rss","cnt":954752.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":706924.0},{"name":"wall-time","cnt":9.528962835},{"name":"cpu-clock","cnt":18662.502653},{"name":"cycles:u","cnt":68969757850.0},{"name":"instructions:u","cnt":71389677615.0},{"name":"faults","cnt":280542.0},{"name":"task-clock","cnt":18662.456292}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":3824.964284},{"name":"max-rss","cnt":498680.0},{"name":"wall-time","cnt":3.745517934},{"name":"faults","cnt":211631.0},{"name":"instructions:u","cnt":14478882107.0},{"name":"cpu-clock","cnt":3824.828849},{"name":"cycles:u","cnt":12638238596.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":17807649758.0},{"name":"max-rss","cnt":591104.0},{"name":"wall-time","cnt":4.336653489},{"name":"cpu-clock","cnt":5229.239553},{"name":"task-clock","cnt":5229.370859},{"name":"faults","cnt":235130.0},{"name":"instructions:u","cnt":19580909660.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":773296.0},{"name":"cycles:u","cnt":356988680009.0},{"name":"wall-time","cnt":19.32265641},{"name":"instructions:u","cnt":289901887895.0},{"name":"cpu-clock","cnt":94417.700147},{"name":"task-clock","cnt":94417.645682},{"name":"faults","cnt":238382.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":105516.375811},{"name":"faults","cnt":244357.0},{"name":"cycles:u","cnt":398118359441.0},{"name":"wall-time","cnt":20.954425523},{"name":"task-clock","cnt":105516.201598},{"name":"max-rss","cnt":753640.0},{"name":"instructions:u","cnt":316135093641.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2352.062105},{"name":"wall-time","cnt":2.222081391},{"name":"task-clock","cnt":2352.261273},{"name":"max-rss","cnt":515364.0},{"name":"cycles:u","cnt":8045981529.0},{"name":"faults","cnt":153554.0},{"name":"instructions:u","cnt":8968262008.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":719788.0},{"name":"cpu-clock","cnt":58930.919354},{"name":"instructions:u","cnt":174566994130.0},{"name":"faults","cnt":227301.0},{"name":"cycles:u","cnt":221565286132.0},{"name":"task-clock","cnt":58930.870539},{"name":"wall-time","cnt":11.591101087}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":5001.237882},{"name":"cycles:u","cnt":19718039969.0},{"name":"cpu-clock","cnt":5001.228942},{"name":"instructions:u","cnt":29612344752.0},{"name":"max-rss","cnt":255452.0},{"name":"faults","cnt":41555.0},{"name":"wall-time","cnt":5.070994813}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":65360.0},{"name":"cycles:u","cnt":22688140446.0},{"name":"max-rss","cnt":348856.0},{"name":"wall-time","cnt":5.812677979},{"name":"task-clock","cnt":5777.376796},{"name":"instructions:u","cnt":33447866135.0},{"name":"cpu-clock","cnt":5777.368299}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4223087939.0},{"name":"max-rss","cnt":333848.0},{"name":"faults","cnt":63866.0},{"name":"cycles:u","cnt":3287262390.0},{"name":"cpu-clock","cnt":906.132328},{"name":"task-clock","cnt":906.119669},{"name":"wall-time","cnt":0.893411786}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5557.275701},{"name":"instructions:u","cnt":32449682984.0},{"name":"cpu-clock","cnt":5557.293686},{"name":"cycles:u","cnt":21807147161.0},{"name":"max-rss","cnt":299148.0},{"name":"wall-time","cnt":5.453654083},{"name":"faults","cnt":49843.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":37368289093.0},{"name":"max-rss","cnt":410972.0},{"name":"wall-time","cnt":6.447547668},{"name":"cycles:u","cnt":25701696859.0},{"name":"cpu-clock","cnt":6574.968449},{"name":"faults","cnt":78437.0},{"name":"task-clock","cnt":6574.968352}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.056366537},{"name":"task-clock","cnt":1075.044209},{"name":"faults","cnt":72399.0},{"name":"instructions:u","cnt":5151165423.0},{"name":"max-rss","cnt":377880.0},{"name":"cycles:u","cnt":3860560679.0},{"name":"cpu-clock","cnt":1075.008685}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":305736.0},{"name":"task-clock","cnt":5912.608803},{"name":"instructions:u","cnt":33353541852.0},{"name":"faults","cnt":51411.0},{"name":"cpu-clock","cnt":5912.604537},{"name":"cycles:u","cnt":23141496708.0},{"name":"wall-time","cnt":5.462988792}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":27007897582.0},{"name":"cpu-clock","cnt":6930.849741},{"name":"task-clock","cnt":6930.835538},{"name":"wall-time","cnt":6.426253792},{"name":"instructions:u","cnt":38290847300.0},{"name":"max-rss","cnt":420020.0},{"name":"faults","cnt":80531.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":5145837951.0},{"name":"task-clock","cnt":1069.254143},{"name":"cycles:u","cnt":3851911086.0},{"name":"max-rss","cnt":376680.0},{"name":"faults","cnt":72230.0},{"name":"cpu-clock","cnt":1069.224422},{"name":"wall-time","cnt":1.049219412}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":330092.0},{"name":"max-rss","cnt":1367356.0},{"name":"cycles:u","cnt":106578672815.0},{"name":"cpu-clock","cnt":27099.331295},{"name":"task-clock","cnt":27099.321259},{"name":"wall-time","cnt":27.141918729},{"name":"instructions:u","cnt":121531845650.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":131665491833.0},{"name":"task-clock","cnt":33930.921393},{"name":"faults","cnt":585837.0},{"name":"max-rss","cnt":2247164.0},{"name":"wall-time","cnt":33.96426749},{"name":"instructions:u","cnt":152747597528.0},{"name":"cpu-clock","cnt":33930.935352}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":39847432221.0},{"name":"instructions:u","cnt":47833259380.0},{"name":"cpu-clock","cnt":10859.069943},{"name":"task-clock","cnt":10859.067114},{"name":"faults","cnt":508357.0},{"name":"max-rss","cnt":2122860.0},{"name":"wall-time","cnt":10.462164432}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":20432.671919},{"name":"wall-time","cnt":20.047142333},{"name":"max-rss","cnt":2355304.0},{"name":"faults","cnt":576779.0},{"name":"cycles:u","cnt":77663320824.0},{"name":"instructions:u","cnt":92480384486.0},{"name":"task-clock","cnt":20432.681692}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":2446780.0},{"name":"instructions:u","cnt":95340542812.0},{"name":"cycles:u","cnt":83115345205.0},{"name":"cpu-clock","cnt":21561.14713},{"name":"task-clock","cnt":21561.117669},{"name":"faults","cnt":590985.0},{"name":"wall-time","cnt":21.192893085}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"instructions:u","cnt":297334649629.0},{"name":"cpu-clock","cnt":72372.037075},{"name":"task-clock","cnt":72372.033033},{"name":"max-rss","cnt":2748608.0},{"name":"cycles:u","cnt":276746526393.0},{"name":"wall-time","cnt":41.742298144},{"name":"faults","cnt":731580.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":1052814.0},{"name":"wall-time","cnt":66.950382695},{"name":"cpu-clock","cnt":115349.415178},{"name":"max-rss","cnt":3358356.0},{"name":"instructions:u","cnt":531522243628.0},{"name":"cycles:u","cnt":438305284225.0},{"name":"task-clock","cnt":115348.799502}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":3601092.0},{"name":"cpu-clock","cnt":14471.356656},{"name":"task-clock","cnt":14471.942312},{"name":"instructions:u","cnt":62304448159.0},{"name":"cycles:u","cnt":51862151728.0},{"name":"faults","cnt":695611.0},{"name":"wall-time","cnt":16.307570713}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":300705656715.0},{"name":"cycles:u","cnt":251916528907.0},{"name":"faults","cnt":1008175.0},{"name":"cpu-clock","cnt":67165.404185},{"name":"wall-time","cnt":41.01446041},{"name":"task-clock","cnt":67165.164312},{"name":"max-rss","cnt":3871040.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":345378998570.0},{"name":"wall-time","cnt":50.262427585},{"name":"cpu-clock","cnt":91899.041784},{"name":"max-rss","cnt":4014824.0},{"name":"instructions:u","cnt":423210831960.0},{"name":"faults","cnt":1108577.0},{"name":"task-clock","cnt":91899.150914}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"cpu-clock","cnt":256986.460049},{"name":"instructions:u","cnt":799268735786.0},{"name":"task-clock","cnt":256986.302476},{"name":"max-rss","cnt":2428284.0},{"name":"wall-time","cnt":61.595384447},{"name":"cycles:u","cnt":972657982921.0},{"name":"faults","cnt":744650.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":396217.522796},{"name":"cycles:u","cnt":1492542751946.0},{"name":"faults","cnt":1069335.0},{"name":"max-rss","cnt":3004360.0},{"name":"instructions:u","cnt":1253222987242.0},{"name":"cpu-clock","cnt":396218.33719},{"name":"wall-time","cnt":82.760771324}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":12.038405417},{"name":"cycles:u","cnt":46944195236.0},{"name":"max-rss","cnt":2777532.0},{"name":"faults","cnt":670002.0},{"name":"instructions:u","cnt":54068612816.0},{"name":"cpu-clock","cnt":12954.754616},{"name":"task-clock","cnt":12955.401382}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1058373821909.0},{"name":"cpu-clock","cnt":333947.53808},{"name":"cycles:u","cnt":1253979261717.0},{"name":"task-clock","cnt":333947.009548},{"name":"faults","cnt":1123207.0},{"name":"max-rss","cnt":3467888.0},{"name":"wall-time","cnt":61.678295639}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":1143903.0},{"name":"task-clock","cnt":361334.12708},{"name":"cycles:u","cnt":1356506606308.0},{"name":"cpu-clock","cnt":361334.782093},{"name":"instructions:u","cnt":1129605707373.0},{"name":"wall-time","cnt":66.610291204},{"name":"max-rss","cnt":3555516.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3230529326.0},{"name":"task-clock","cnt":698.993193},{"name":"faults","cnt":14854.0},{"name":"cpu-clock","cnt":698.992519},{"name":"max-rss","cnt":150376.0},{"name":"cycles:u","cnt":2650222665.0},{"name":"wall-time","cnt":0.717365997}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.894487691},{"name":"cycles:u","cnt":3351357861.0},{"name":"cpu-clock","cnt":876.673895},{"name":"instructions:u","cnt":4088660897.0},{"name":"task-clock","cnt":876.666889},{"name":"max-rss","cnt":183644.0},{"name":"faults","cnt":22825.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":283.647937},{"name":"faults","cnt":21433.0},{"name":"instructions:u","cnt":1326029438.0},{"name":"max-rss","cnt":165036.0},{"name":"task-clock","cnt":283.648946},{"name":"cycles:u","cnt":972061745.0},{"name":"wall-time","cnt":0.287548773}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1536745322.0},{"name":"cycles:u","cnt":1173440133.0},{"name":"task-clock","cnt":331.512685},{"name":"faults","cnt":22759.0},{"name":"cpu-clock","cnt":331.523164},{"name":"max-rss","cnt":184228.0},{"name":"wall-time","cnt":0.336262207}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":1.485312648},{"name":"instructions:u","cnt":11893762916.0},{"name":"max-rss","cnt":243052.0},{"name":"task-clock","cnt":2824.576351},{"name":"cycles:u","cnt":10648855960.0},{"name":"cpu-clock","cnt":2824.570837},{"name":"faults","cnt":36423.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":47994.0},{"name":"wall-time","cnt":1.749571024},{"name":"task-clock","cnt":3540.031756},{"name":"cpu-clock","cnt":3540.08982},{"name":"max-rss","cnt":290076.0},{"name":"instructions:u","cnt":14457311312.0},{"name":"cycles:u","cnt":13279616691.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1907370472.0},{"name":"cycles:u","cnt":1443624009.0},{"name":"faults","cnt":32763.0},{"name":"task-clock","cnt":432.220584},{"name":"wall-time","cnt":0.419205135},{"name":"cpu-clock","cnt":432.148093},{"name":"max-rss","cnt":226564.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":631.467602},{"name":"wall-time","cnt":0.530266438},{"name":"faults","cnt":37127.0},{"name":"max-rss","cnt":256932.0},{"name":"cpu-clock","cnt":631.385691},{"name":"cycles:u","cnt":2149220843.0},{"name":"instructions:u","cnt":2688743768.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":14541.151836},{"name":"instructions:u","cnt":44856109145.0},{"name":"task-clock","cnt":14541.129544},{"name":"wall-time","cnt":2.934226383},{"name":"cycles:u","cnt":54915688639.0},{"name":"faults","cnt":41907.0},{"name":"max-rss","cnt":262372.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":16091.19118},{"name":"cycles:u","cnt":60653801896.0},{"name":"task-clock","cnt":16091.180942},{"name":"wall-time","cnt":3.252988514},{"name":"instructions:u","cnt":48392009927.0},{"name":"max-rss","cnt":303800.0},{"name":"faults","cnt":52774.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":32916.0},{"name":"max-rss","cnt":219040.0},{"name":"task-clock","cnt":444.993035},{"name":"cpu-clock","cnt":444.959231},{"name":"wall-time","cnt":0.427346895},{"name":"cycles:u","cnt":1523324505.0},{"name":"instructions:u","cnt":1924973406.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":8259.911314},{"name":"task-clock","cnt":8259.907611},{"name":"cycles:u","cnt":30938596087.0},{"name":"max-rss","cnt":298656.0},{"name":"instructions:u","cnt":24463320781.0},{"name":"wall-time","cnt":1.683713094},{"name":"faults","cnt":50702.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":345.362114},{"name":"max-rss","cnt":146552.0},{"name":"instructions:u","cnt":1757384196.0},{"name":"wall-time","cnt":0.363141414},{"name":"cycles:u","cnt":1286957025.0},{"name":"faults","cnt":11280.0},{"name":"cpu-clock","cnt":345.360826}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.469514267},{"name":"faults","cnt":17390.0},{"name":"instructions:u","cnt":2269294136.0},{"name":"cpu-clock","cnt":451.454888},{"name":"task-clock","cnt":451.442689},{"name":"max-rss","cnt":172752.0},{"name":"cycles:u","cnt":1682383755.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":137.294545},{"name":"wall-time","cnt":0.146063972},{"name":"max-rss","cnt":147888.0},{"name":"cycles:u","cnt":437354799.0},{"name":"cpu-clock","cnt":137.292886},{"name":"faults","cnt":16176.0},{"name":"instructions:u","cnt":635214267.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.321817392},{"name":"max-rss","cnt":182136.0},{"name":"task-clock","cnt":312.08643},{"name":"instructions:u","cnt":1451520623.0},{"name":"cpu-clock","cnt":312.094035},{"name":"cycles:u","cnt":1107838531.0},{"name":"faults","cnt":19633.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":19760.0},{"name":"wall-time","cnt":0.304583175},{"name":"max-rss","cnt":183112.0},{"name":"task-clock","cnt":295.349695},{"name":"cpu-clock","cnt":295.356962},{"name":"instructions:u","cnt":1383038290.0},{"name":"cycles:u","cnt":1043454481.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cpu-clock","cnt":4261.413972},{"name":"faults","cnt":89516.0},{"name":"instructions:u","cnt":17594166213.0},{"name":"cycles:u","cnt":15585392369.0},{"name":"wall-time","cnt":2.485439798},{"name":"task-clock","cnt":4261.373122},{"name":"max-rss","cnt":294436.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":18925258083.0},{"name":"faults","cnt":102623.0},{"name":"max-rss","cnt":337276.0},{"name":"instructions:u","cnt":20924113801.0},{"name":"wall-time","cnt":2.872179761},{"name":"cpu-clock","cnt":5213.536665},{"name":"task-clock","cnt":5213.385675}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":273944.0},{"name":"cycles:u","cnt":4259722882.0},{"name":"faults","cnt":86322.0},{"name":"wall-time","cnt":1.333026786},{"name":"instructions:u","cnt":5206952024.0},{"name":"task-clock","cnt":1342.393364},{"name":"cpu-clock","cnt":1342.309885}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":17430766595.0},{"name":"faults","cnt":108639.0},{"name":"cpu-clock","cnt":4844.139445},{"name":"max-rss","cnt":357916.0},{"name":"task-clock","cnt":4844.058509},{"name":"wall-time","cnt":2.543560641},{"name":"instructions:u","cnt":19425116486.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":17691274896.0},{"name":"max-rss","cnt":360796.0},{"name":"faults","cnt":108899.0},{"name":"cpu-clock","cnt":4915.217289},{"name":"instructions:u","cnt":19395002338.0},{"name":"task-clock","cnt":4915.12178},{"name":"wall-time","cnt":2.567586102}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"max-rss","cnt":339440.0},{"name":"wall-time","cnt":4.11772981},{"name":"faults","cnt":78721.0},{"name":"instructions:u","cnt":68142999280.0},{"name":"task-clock","cnt":22798.913819},{"name":"cycles:u","cnt":85807519111.0},{"name":"cpu-clock","cnt":22798.92076}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":359900.0},{"name":"wall-time","cnt":4.621404379},{"name":"task-clock","cnt":27053.303968},{"name":"cycles:u","cnt":101585239148.0},{"name":"cpu-clock","cnt":27053.343732},{"name":"faults","cnt":85062.0},{"name":"instructions:u","cnt":78369539179.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":59503.0},{"name":"cycles:u","cnt":2286217479.0},{"name":"instructions:u","cnt":2742965837.0},{"name":"task-clock","cnt":715.923884},{"name":"wall-time","cnt":0.693960077},{"name":"max-rss","cnt":258136.0},{"name":"cpu-clock","cnt":715.810594}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":26754.22739},{"name":"instructions:u","cnt":76790769128.0},{"name":"cycles:u","cnt":100319675641.0},{"name":"wall-time","cnt":4.297350137},{"name":"max-rss","cnt":378584.0},{"name":"faults","cnt":89508.0},{"name":"cpu-clock","cnt":26754.295426}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":67932051396.0},{"name":"instructions:u","cnt":53417177366.0},{"name":"faults","cnt":88085.0},{"name":"task-clock","cnt":18129.146997},{"name":"max-rss","cnt":377144.0},{"name":"cpu-clock","cnt":18129.178193},{"name":"wall-time","cnt":3.375135447}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":3.31167858},{"name":"task-clock","cnt":3243.187431},{"name":"cycles:u","cnt":12320618942.0},{"name":"faults","cnt":85831.0},{"name":"max-rss","cnt":416412.0},{"name":"cpu-clock","cnt":3243.177655},{"name":"instructions:u","cnt":18187339985.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3875.166628},{"name":"faults","cnt":99593.0},{"name":"cycles:u","cnt":14994694614.0},{"name":"wall-time","cnt":3.913014971},{"name":"max-rss","cnt":473044.0},{"name":"cpu-clock","cnt":3875.166368},{"name":"instructions:u","cnt":23485656427.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":6915812533.0},{"name":"cycles:u","cnt":4051342032.0},{"name":"task-clock","cnt":1111.273538},{"name":"cpu-clock","cnt":1111.281386},{"name":"faults","cnt":75243.0},{"name":"max-rss","cnt":366456.0},{"name":"wall-time","cnt":1.146019579}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3968.338832},{"name":"cycles:u","cnt":15316075126.0},{"name":"task-clock","cnt":3968.339379},{"name":"max-rss","cnt":498512.0},{"name":"wall-time","cnt":4.003916545},{"name":"instructions:u","cnt":23533467365.0},{"name":"faults","cnt":105344.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"cpu-clock","cnt":3433.445925},{"name":"instructions:u","cnt":18710388178.0},{"name":"wall-time","cnt":3.463345125},{"name":"cycles:u","cnt":12864939193.0},{"name":"faults","cnt":103196.0},{"name":"max-rss","cnt":463644.0},{"name":"task-clock","cnt":3433.444065}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":498272.0},{"name":"cpu-clock","cnt":4041.760212},{"name":"instructions:u","cnt":24103468903.0},{"name":"cycles:u","cnt":15479986659.0},{"name":"wall-time","cnt":4.036751645},{"name":"task-clock","cnt":4041.763749},{"name":"faults","cnt":110384.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":385488.0},{"name":"cycles:u","cnt":4144300428.0},{"name":"wall-time","cnt":1.197111615},{"name":"instructions:u","cnt":7297934243.0},{"name":"cpu-clock","cnt":1169.619514},{"name":"faults","cnt":83529.0},{"name":"task-clock","cnt":1169.647782}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":117524.0},{"name":"wall-time","cnt":4.11133795},{"name":"cpu-clock","cnt":4119.312135},{"name":"task-clock","cnt":4119.321856},{"name":"cycles:u","cnt":15729132918.0},{"name":"max-rss","cnt":526392.0},{"name":"instructions:u","cnt":24074068630.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"instructions:u","cnt":18659283586.0},{"name":"cpu-clock","cnt":3378.122819},{"name":"wall-time","cnt":3.388283484},{"name":"max-rss","cnt":454772.0},{"name":"cycles:u","cnt":12686644803.0},{"name":"faults","cnt":99984.0},{"name":"task-clock","cnt":3378.137542}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":106640.0},{"name":"instructions:u","cnt":24058115129.0},{"name":"task-clock","cnt":4005.673024},{"name":"cpu-clock","cnt":4005.689149},{"name":"wall-time","cnt":4.00187527},{"name":"max-rss","cnt":490604.0},{"name":"cycles:u","cnt":15388855823.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":7232631827.0},{"name":"cycles:u","cnt":4209984973.0},{"name":"wall-time","cnt":1.212307672},{"name":"cpu-clock","cnt":1178.937929},{"name":"task-clock","cnt":1178.959308},{"name":"faults","cnt":82129.0},{"name":"max-rss","cnt":385116.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4005.635882},{"name":"task-clock","cnt":4005.66855},{"name":"cycles:u","cnt":15323185451.0},{"name":"instructions:u","cnt":24015524986.0},{"name":"max-rss","cnt":522304.0},{"name":"wall-time","cnt":3.997008282},{"name":"faults","cnt":114691.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":5162.013118},{"name":"wall-time","cnt":5.233190169},{"name":"faults","cnt":115562.0},{"name":"instructions:u","cnt":34618450028.0},{"name":"cycles:u","cnt":20071258819.0},{"name":"max-rss","cnt":537272.0},{"name":"cpu-clock","cnt":5162.013284}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":23657320813.0},{"name":"max-rss","cnt":581028.0},{"name":"task-clock","cnt":6130.636477},{"name":"faults","cnt":125875.0},{"name":"instructions:u","cnt":44210856869.0},{"name":"cpu-clock","cnt":6130.638306},{"name":"wall-time","cnt":6.168705427}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12317942185.0},{"name":"cpu-clock","cnt":1753.297468},{"name":"wall-time","cnt":1.780193479},{"name":"task-clock","cnt":1753.285582},{"name":"faults","cnt":125314.0},{"name":"max-rss","cnt":567672.0},{"name":"cycles:u","cnt":6367428051.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":625868.0},{"name":"task-clock","cnt":5865.996104},{"name":"faults","cnt":131316.0},{"name":"wall-time","cnt":5.533648472},{"name":"cpu-clock","cnt":5866.005039},{"name":"cycles:u","cnt":22623274861.0},{"name":"instructions:u","cnt":37757258524.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":47644988792.0},{"name":"faults","cnt":144601.0},{"name":"cpu-clock","cnt":6972.952265},{"name":"cycles:u","cnt":26878922478.0},{"name":"max-rss","cnt":678600.0},{"name":"wall-time","cnt":6.490664873},{"name":"task-clock","cnt":6972.957637}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":6419449518.0},{"name":"instructions:u","cnt":12525389038.0},{"name":"cpu-clock","cnt":1793.574357},{"name":"task-clock","cnt":1793.598336},{"name":"faults","cnt":127377.0},{"name":"max-rss","cnt":607120.0},{"name":"wall-time","cnt":1.814231969}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":142516.0},{"name":"task-clock","cnt":6993.822171},{"name":"cycles:u","cnt":26645135652.0},{"name":"wall-time","cnt":5.806847489},{"name":"cpu-clock","cnt":6993.77663},{"name":"instructions:u","cnt":42598149213.0},{"name":"max-rss","cnt":666652.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":153372.0},{"name":"cycles:u","cnt":31213414156.0},{"name":"instructions:u","cnt":52102483795.0},{"name":"cpu-clock","cnt":8141.321735},{"name":"wall-time","cnt":6.511414254},{"name":"task-clock","cnt":8141.31079},{"name":"max-rss","cnt":681484.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.811544297},{"name":"instructions:u","cnt":12562080210.0},{"name":"max-rss","cnt":608184.0},{"name":"cycles:u","cnt":6480262918.0},{"name":"task-clock","cnt":1805.939375},{"name":"faults","cnt":127659.0},{"name":"cpu-clock","cnt":1805.933122}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":25278.0},{"name":"instructions:u","cnt":31022193112.0},{"name":"max-rss","cnt":184200.0},{"name":"task-clock","cnt":3670.147461},{"name":"wall-time","cnt":3.704471481},{"name":"cpu-clock","cnt":3670.156855},{"name":"cycles:u","cnt":14503431965.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4014.449316},{"name":"cpu-clock","cnt":4014.448552},{"name":"max-rss","cnt":191668.0},{"name":"wall-time","cnt":4.050898434},{"name":"cycles:u","cnt":15850168192.0},{"name":"faults","cnt":25643.0},{"name":"instructions:u","cnt":34971027928.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":15713.0},{"name":"cycles:u","cnt":671390093.0},{"name":"cpu-clock","cnt":194.070263},{"name":"max-rss","cnt":149056.0},{"name":"task-clock","cnt":194.071491},{"name":"instructions:u","cnt":1218285601.0},{"name":"wall-time","cnt":0.2289649}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":195164.0},{"name":"faults","cnt":26316.0},{"name":"task-clock","cnt":3643.58983},{"name":"cpu-clock","cnt":3643.589474},{"name":"instructions:u","cnt":32280706717.0},{"name":"wall-time","cnt":3.657433596},{"name":"cycles:u","cnt":14377333836.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":15206124146.0},{"name":"faults","cnt":33519.0},{"name":"instructions:u","cnt":32326080991.0},{"name":"task-clock","cnt":3862.448858},{"name":"cpu-clock","cnt":3862.449786},{"name":"wall-time","cnt":3.865933881},{"name":"max-rss","cnt":227564.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4174.251161},{"name":"cycles:u","cnt":16434561797.0},{"name":"faults","cnt":34284.0},{"name":"cpu-clock","cnt":4174.227819},{"name":"instructions:u","cnt":36648725449.0},{"name":"max-rss","cnt":233556.0},{"name":"wall-time","cnt":4.151355112}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":21233.0},{"name":"cpu-clock","cnt":264.981701},{"name":"task-clock","cnt":264.994938},{"name":"max-rss","cnt":177496.0},{"name":"wall-time","cnt":0.293533219},{"name":"cycles:u","cnt":898458532.0},{"name":"instructions:u","cnt":1704402613.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":32594.0},{"name":"cycles:u","cnt":14905019045.0},{"name":"max-rss","cnt":222924.0},{"name":"task-clock","cnt":3787.584216},{"name":"wall-time","cnt":3.799560613},{"name":"cpu-clock","cnt":3787.583728},{"name":"instructions:u","cnt":33562747985.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":34122.0},{"name":"wall-time","cnt":4.004683844},{"name":"cycles:u","cnt":15749419809.0},{"name":"task-clock","cnt":4000.658698},{"name":"instructions:u","cnt":33506034462.0},{"name":"cpu-clock","cnt":4000.675083},{"name":"max-rss","cnt":233928.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.305622771},{"name":"instructions:u","cnt":37831076130.0},{"name":"max-rss","cnt":241652.0},{"name":"faults","cnt":35791.0},{"name":"cycles:u","cnt":17020596294.0},{"name":"cpu-clock","cnt":4324.678642},{"name":"task-clock","cnt":4324.677141}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":21258.0},{"name":"wall-time","cnt":0.286475112},{"name":"cycles:u","cnt":878087133.0},{"name":"task-clock","cnt":256.940048},{"name":"max-rss","cnt":177768.0},{"name":"instructions:u","cnt":1701349852.0},{"name":"cpu-clock","cnt":256.936014}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":32079.0},{"name":"cycles:u","cnt":14906734946.0},{"name":"max-rss","cnt":221484.0},{"name":"wall-time","cnt":3.802127213},{"name":"instructions:u","cnt":33566400013.0},{"name":"task-clock","cnt":3788.413827},{"name":"cpu-clock","cnt":3788.412662}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":228085102.0},{"name":"task-clock","cnt":70.13559},{"name":"faults","cnt":5413.0},{"name":"instructions:u","cnt":346233670.0},{"name":"max-rss","cnt":103096.0},{"name":"cpu-clock","cnt":70.13396},{"name":"wall-time","cnt":0.087991703}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":108680.0},{"name":"cycles:u","cnt":261330406.0},{"name":"task-clock","cnt":80.24305},{"name":"cpu-clock","cnt":80.240049},{"name":"faults","cnt":6751.0},{"name":"instructions:u","cnt":391860725.0},{"name":"wall-time","cnt":0.098075584}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":43.389568},{"name":"instructions:u","cnt":177798660.0},{"name":"cycles:u","cnt":121275570.0},{"name":"max-rss","cnt":90716.0},{"name":"task-clock","cnt":43.393371},{"name":"wall-time","cnt":0.060937952},{"name":"faults","cnt":5863.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":228408497.0},{"name":"cycles:u","cnt":154849971.0},{"name":"max-rss","cnt":107580.0},{"name":"task-clock","cnt":53.604656},{"name":"faults","cnt":6632.0},{"name":"wall-time","cnt":0.07102036},{"name":"cpu-clock","cnt":53.593617}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"wall-time","cnt":0.167269999},{"name":"instructions:u","cnt":749205997.0},{"name":"task-clock","cnt":168.285203},{"name":"cpu-clock","cnt":168.286764},{"name":"max-rss","cnt":124052.0},{"name":"cycles:u","cnt":522013240.0},{"name":"faults","cnt":13165.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":579762756.0},{"name":"cpu-clock","cnt":185.933714},{"name":"wall-time","cnt":0.181473579},{"name":"instructions:u","cnt":825192227.0},{"name":"max-rss","cnt":131444.0},{"name":"task-clock","cnt":185.924857},{"name":"faults","cnt":14984.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.135115526},{"name":"max-rss","cnt":113160.0},{"name":"cpu-clock","cnt":121.633916},{"name":"cycles:u","cnt":340699510.0},{"name":"faults","cnt":13553.0},{"name":"instructions:u","cnt":516376148.0},{"name":"task-clock","cnt":121.630436}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.151426885},{"name":"task-clock","cnt":153.763845},{"name":"max-rss","cnt":131164.0},{"name":"instructions:u","cnt":641794886.0},{"name":"cycles:u","cnt":452430340.0},{"name":"faults","cnt":14824.0},{"name":"cpu-clock","cnt":153.773489}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"wall-time","cnt":0.168673958},{"name":"faults","cnt":12325.0},{"name":"cycles:u","cnt":507725909.0},{"name":"max-rss","cnt":122944.0},{"name":"instructions:u","cnt":752151268.0},{"name":"cpu-clock","cnt":161.519383},{"name":"task-clock","cnt":161.523911}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":180.919786},{"name":"cpu-clock","cnt":180.915295},{"name":"wall-time","cnt":0.181818831},{"name":"instructions:u","cnt":842423445.0},{"name":"max-rss","cnt":128580.0},{"name":"cycles:u","cnt":571699492.0},{"name":"faults","cnt":14353.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.131567587},{"name":"cpu-clock","cnt":117.063469},{"name":"max-rss","cnt":112756.0},{"name":"faults","cnt":13241.0},{"name":"cycles:u","cnt":334137688.0},{"name":"task-clock","cnt":117.070096},{"name":"instructions:u","cnt":506054273.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":364181361.0},{"name":"wall-time","cnt":0.138335817},{"name":"instructions:u","cnt":541800466.0},{"name":"task-clock","cnt":126.512063},{"name":"faults","cnt":13655.0},{"name":"max-rss","cnt":119644.0},{"name":"cpu-clock","cnt":126.506177}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":487.578974},{"name":"instructions:u","cnt":2457727410.0},{"name":"max-rss","cnt":208796.0},{"name":"faults","cnt":33520.0},{"name":"cycles:u","cnt":1787590218.0},{"name":"task-clock","cnt":487.5796},{"name":"wall-time","cnt":0.505399797}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.750844494},{"name":"cpu-clock","cnt":732.551753},{"name":"max-rss","cnt":309252.0},{"name":"task-clock","cnt":732.54073},{"name":"instructions:u","cnt":3415128422.0},{"name":"faults","cnt":58255.0},{"name":"cycles:u","cnt":2649048363.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2919413774.0},{"name":"cycles:u","cnt":2283249572.0},{"name":"cpu-clock","cnt":650.301342},{"name":"task-clock","cnt":650.30056},{"name":"faults","cnt":64722.0},{"name":"wall-time","cnt":0.62770851},{"name":"max-rss","cnt":322876.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.704366277},{"name":"faults","cnt":64903.0},{"name":"instructions:u","cnt":3128249368.0},{"name":"cycles:u","cnt":2592499409.0},{"name":"cpu-clock","cnt":729.788761},{"name":"task-clock","cnt":729.778932},{"name":"max-rss","cnt":336232.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":2786541467.0},{"name":"faults","cnt":40657.0},{"name":"cpu-clock","cnt":570.837562},{"name":"max-rss","cnt":229272.0},{"name":"task-clock","cnt":570.843157},{"name":"wall-time","cnt":0.579540482},{"name":"cycles:u","cnt":2019719636.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.876647347},{"name":"faults","cnt":65085.0},{"name":"instructions:u","cnt":3783869575.0},{"name":"task-clock","cnt":868.653979},{"name":"max-rss","cnt":326692.0},{"name":"cycles:u","cnt":3083574843.0},{"name":"cpu-clock","cnt":868.648366}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":739.362061},{"name":"wall-time","cnt":0.710804274},{"name":"cpu-clock","cnt":739.351088},{"name":"cycles:u","cnt":2525238613.0},{"name":"faults","cnt":71697.0},{"name":"max-rss","cnt":339796.0},{"name":"instructions:u","cnt":3237238453.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":3473793784.0},{"name":"cpu-clock","cnt":809.558161},{"name":"max-rss","cnt":356780.0},{"name":"cycles:u","cnt":2799888883.0},{"name":"faults","cnt":72387.0},{"name":"wall-time","cnt":0.776299414},{"name":"task-clock","cnt":809.563268}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":2815180140.0},{"name":"task-clock","cnt":576.973404},{"name":"cycles:u","cnt":2046717727.0},{"name":"faults","cnt":40331.0},{"name":"wall-time","cnt":0.579236755},{"name":"max-rss","cnt":230812.0},{"name":"cpu-clock","cnt":576.970043}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":822.714535},{"name":"instructions:u","cnt":3810376331.0},{"name":"cpu-clock","cnt":822.711271},{"name":"cycles:u","cnt":2896705923.0},{"name":"max-rss","cnt":331004.0},{"name":"faults","cnt":65701.0},{"name":"wall-time","cnt":0.824947034}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2490323076.0},{"name":"task-clock","cnt":728.916603},{"name":"instructions:u","cnt":3235312080.0},{"name":"cpu-clock","cnt":728.924057},{"name":"faults","cnt":71488.0},{"name":"wall-time","cnt":0.702568736},{"name":"max-rss","cnt":339768.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2809062092.0},{"name":"faults","cnt":71927.0},{"name":"cpu-clock","cnt":812.080256},{"name":"wall-time","cnt":0.776829347},{"name":"task-clock","cnt":812.074212},{"name":"instructions:u","cnt":3441538989.0},{"name":"max-rss","cnt":346304.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":12778770983.0},{"name":"cpu-clock","cnt":3270.382512},{"name":"faults","cnt":49026.0},{"name":"task-clock","cnt":3270.383459},{"name":"max-rss","cnt":302012.0},{"name":"wall-time","cnt":3.326332322},{"name":"instructions:u","cnt":14057062163.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":416608.0},{"name":"cpu-clock","cnt":4187.349501},{"name":"task-clock","cnt":4187.349313},{"name":"wall-time","cnt":4.257495479},{"name":"cycles:u","cnt":16277090054.0},{"name":"faults","cnt":77780.0},{"name":"instructions:u","cnt":18459318334.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":4089317606.0},{"name":"instructions:u","cnt":4829119890.0},{"name":"cpu-clock","cnt":1125.355741},{"name":"task-clock","cnt":1125.355311},{"name":"max-rss","cnt":395896.0},{"name":"faults","cnt":73539.0},{"name":"wall-time","cnt":1.140945749}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":4965392728.0},{"name":"max-rss","cnt":409920.0},{"name":"wall-time","cnt":1.351209787},{"name":"instructions:u","cnt":5755685346.0},{"name":"cpu-clock","cnt":1344.486864},{"name":"task-clock","cnt":1344.478333},{"name":"faults","cnt":75484.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":251591.0},{"name":"max-rss","cnt":1045684.0},{"name":"wall-time","cnt":9.772355673},{"name":"cycles:u","cnt":97543379956.0},{"name":"cpu-clock","cnt":25891.260776},{"name":"instructions:u","cnt":98984067197.0},{"name":"task-clock","cnt":25891.277043}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":28768.253638},{"name":"cycles:u","cnt":108485724514.0},{"name":"instructions:u","cnt":115588528248.0},{"name":"wall-time","cnt":11.804596601},{"name":"max-rss","cnt":1044936.0},{"name":"cpu-clock","cnt":28768.266789},{"name":"faults","cnt":255636.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":748988.0},{"name":"wall-time","cnt":2.087152471},{"name":"cycles:u","cnt":7619887532.0},{"name":"faults","cnt":133263.0},{"name":"instructions:u","cnt":9177914225.0},{"name":"task-clock","cnt":2173.808013},{"name":"cpu-clock","cnt":2173.684775}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":8842631034.0},{"name":"wall-time","cnt":2.372724706},{"name":"cpu-clock","cnt":2514.681942},{"name":"max-rss","cnt":764312.0},{"name":"faults","cnt":135246.0},{"name":"instructions:u","cnt":10383075298.0},{"name":"task-clock","cnt":2514.842426}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":336489.0},{"name":"wall-time","cnt":20.34048376},{"name":"instructions:u","cnt":316805555148.0},{"name":"task-clock","cnt":108419.42949},{"name":"cpu-clock","cnt":108419.51693},{"name":"max-rss","cnt":1380540.0},{"name":"cycles:u","cnt":408416039470.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":22.215362646},{"name":"instructions:u","cnt":355875005006.0},{"name":"cycles:u","cnt":454399685611.0},{"name":"task-clock","cnt":120790.556156},{"name":"max-rss","cnt":1289696.0},{"name":"faults","cnt":350473.0},{"name":"cpu-clock","cnt":120790.745035}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.104824732},{"name":"cycles:u","cnt":7678860067.0},{"name":"task-clock","cnt":2215.004581},{"name":"cpu-clock","cnt":2214.88838},{"name":"instructions:u","cnt":9036595197.0},{"name":"max-rss","cnt":762548.0},{"name":"faults","cnt":136612.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":10319.376092},{"name":"faults","cnt":199129.0},{"name":"wall-time","cnt":4.192768343},{"name":"task-clock","cnt":10319.422025},{"name":"max-rss","cnt":994448.0},{"name":"cycles:u","cnt":38188484064.0},{"name":"instructions:u","cnt":40702116353.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":8879770076.0},{"name":"faults","cnt":24045.0},{"name":"max-rss","cnt":178660.0},{"name":"task-clock","cnt":2260.886539},{"name":"instructions:u","cnt":14241786125.0},{"name":"cpu-clock","cnt":2260.886468},{"name":"wall-time","cnt":2.316194913}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":191400.0},{"name":"faults","cnt":26536.0},{"name":"cycles:u","cnt":9828706177.0},{"name":"cpu-clock","cnt":2504.691707},{"name":"instructions:u","cnt":15584784087.0},{"name":"task-clock","cnt":2504.683468},{"name":"wall-time","cnt":2.539590378}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1204497063.0},{"name":"wall-time","cnt":0.245901777},{"name":"max-rss","cnt":155660.0},{"name":"faults","cnt":18715.0},{"name":"cycles:u","cnt":752053651.0},{"name":"task-clock","cnt":218.964145},{"name":"cpu-clock","cnt":218.961744}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":206820.0},{"name":"cycles:u","cnt":9183274660.0},{"name":"cpu-clock","cnt":2343.319442},{"name":"instructions:u","cnt":14732216640.0},{"name":"wall-time","cnt":2.392799504},{"name":"task-clock","cnt":2343.331534},{"name":"faults","cnt":26200.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":10283038513.0},{"name":"cpu-clock","cnt":2629.222085},{"name":"max-rss","cnt":216976.0},{"name":"wall-time","cnt":2.643407298},{"name":"faults","cnt":28760.0},{"name":"instructions:u","cnt":16294844859.0},{"name":"task-clock","cnt":2629.221178}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":248.276124},{"name":"cpu-clock","cnt":248.272607},{"name":"faults","cnt":22558.0},{"name":"wall-time","cnt":0.273721535},{"name":"cycles:u","cnt":840632995.0},{"name":"instructions:u","cnt":1372794933.0},{"name":"max-rss","cnt":178916.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":9536632143.0},{"name":"cpu-clock","cnt":2437.548921},{"name":"wall-time","cnt":2.456278772},{"name":"task-clock","cnt":2437.545517},{"name":"instructions:u","cnt":15291986165.0},{"name":"max-rss","cnt":210704.0},{"name":"faults","cnt":27209.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":219880.0},{"name":"cycles:u","cnt":10674417129.0},{"name":"instructions:u","cnt":16864615238.0},{"name":"faults","cnt":29890.0},{"name":"task-clock","cnt":2730.111405},{"name":"cpu-clock","cnt":2730.106648},{"name":"wall-time","cnt":2.680251198}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":849474311.0},{"name":"task-clock","cnt":251.118004},{"name":"wall-time","cnt":0.275479801},{"name":"faults","cnt":22691.0},{"name":"cpu-clock","cnt":251.103708},{"name":"max-rss","cnt":179608.0},{"name":"instructions:u","cnt":1389958315.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}