{"commit":{"sha":"3e964612302e649e3c59a0b556001d801357306d","date":"2017-08-27T01:41:45+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":18651755193.0},{"name":"cycles:u","cnt":15501784716.0},{"name":"task-clock","cnt":3798.147976},{"name":"cpu-clock","cnt":3974.768534},{"name":"faults","cnt":21092.0},{"name":"max-rss","cnt":275816.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1280999387.0},{"name":"cycles:u","cnt":835090547.0},{"name":"task-clock","cnt":129.544322},{"name":"cpu-clock","cnt":242.449666},{"name":"faults","cnt":12814.0},{"name":"max-rss","cnt":127556.0}]}]}]},"html5ever-2016-08-25":{"Ok":[{"name":"html5ever-2016-08-25","runs":[{"stats":[{"name":"instructions:u","cnt":17721012228.0},{"name":"cycles:u","cnt":11942802265.0},{"name":"task-clock","cnt":3057.498941},{"name":"cpu-clock","cnt":3057.498941},{"name":"faults","cnt":18458.0},{"name":"max-rss","cnt":268756.0}]}]}]},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24212437239.0},{"name":"cycles:u","cnt":20401806651.0},{"name":"task-clock","cnt":5183.844421},{"name":"cpu-clock","cnt":5183.83983},{"name":"faults","cnt":11643.0},{"name":"max-rss","cnt":323212.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":23470238145.0},{"name":"cycles:u","cnt":12942460664.0},{"name":"task-clock","cnt":3316.729363},{"name":"cpu-clock","cnt":3316.738681},{"name":"faults","cnt":25022.0},{"name":"max-rss","cnt":304984.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":14226771748.0},{"name":"cycles:u","cnt":8591139029.0},{"name":"task-clock","cnt":2154.464846},{"name":"cpu-clock","cnt":2272.200557},{"name":"faults","cnt":86828.0},{"name":"max-rss","cnt":265740.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":13470890539.0},{"name":"cycles:u","cnt":10427732445.0},{"name":"task-clock","cnt":2649.702306},{"name":"cpu-clock","cnt":2649.710877},{"name":"faults","cnt":6149.0},{"name":"max-rss","cnt":214620.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":2046873173.0},{"name":"cycles:u","cnt":1308894276.0},{"name":"task-clock","cnt":253.339607},{"name":"cpu-clock","cnt":365.871417},{"name":"faults","cnt":16750.0},{"name":"max-rss","cnt":137448.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":8885338671.0},{"name":"cycles:u","cnt":6134623509.0},{"name":"task-clock","cnt":1460.152377},{"name":"cpu-clock","cnt":1621.14056},{"name":"faults","cnt":30587.0},{"name":"max-rss","cnt":376324.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":2836667975.0},{"name":"cycles:u","cnt":1864309530.0},{"name":"task-clock","cnt":400.806974},{"name":"cpu-clock","cnt":513.624074},{"name":"faults","cnt":23336.0},{"name":"max-rss","cnt":156596.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":7450767997.0},{"name":"cycles:u","cnt":5490357990.0},{"name":"task-clock","cnt":1404.760275},{"name":"cpu-clock","cnt":1423.613395},{"name":"faults","cnt":14673.0},{"name":"max-rss","cnt":172632.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52149620463.0},{"name":"cycles:u","cnt":42904705588.0},{"name":"task-clock","cnt":10883.282553},{"name":"cpu-clock","cnt":10883.282923},{"name":"faults","cnt":15715.0},{"name":"max-rss","cnt":487524.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":30175914039.0},{"name":"cycles:u","cnt":24471181218.0},{"name":"task-clock","cnt":6205.926879},{"name":"cpu-clock","cnt":6205.907706},{"name":"faults","cnt":15647.0},{"name":"max-rss","cnt":354744.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":42376538294.0},{"name":"cycles:u","cnt":45605326698.0},{"name":"task-clock","cnt":12144.004413},{"name":"cpu-clock","cnt":12144.011252},{"name":"faults","cnt":60176.0},{"name":"max-rss","cnt":400756.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":14195654771.0},{"name":"cycles:u","cnt":12404103299.0},{"name":"task-clock","cnt":3251.240785},{"name":"cpu-clock","cnt":3251.236621},{"name":"faults","cnt":11429.0},{"name":"max-rss","cnt":401404.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":8393123020.0},{"name":"cycles:u","cnt":6708240212.0},{"name":"task-clock","cnt":1759.871387},{"name":"cpu-clock","cnt":1759.812319},{"name":"faults","cnt":11327.0},{"name":"max-rss","cnt":356768.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":11030992021.0},{"name":"cycles:u","cnt":8888922611.0},{"name":"task-clock","cnt":2313.032129},{"name":"cpu-clock","cnt":2313.034274},{"name":"faults","cnt":15357.0},{"name":"max-rss","cnt":367904.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":18150130593.0},{"name":"cycles:u","cnt":16391964391.0},{"name":"task-clock","cnt":4291.691074},{"name":"cpu-clock","cnt":4291.662622},{"name":"faults","cnt":17092.0},{"name":"max-rss","cnt":418072.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":8784709160.0},{"name":"cycles:u","cnt":7053300506.0},{"name":"task-clock","cnt":1836.970492},{"name":"cpu-clock","cnt":1836.920392},{"name":"faults","cnt":9631.0},{"name":"max-rss","cnt":359752.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":41630302843.0},{"name":"cycles:u","cnt":44264937900.0},{"name":"task-clock","cnt":11785.93736},{"name":"cpu-clock","cnt":11785.92146},{"name":"faults","cnt":64966.0},{"name":"max-rss","cnt":398800.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":42128733936.0},{"name":"cycles:u","cnt":45143783083.0},{"name":"task-clock","cnt":12049.156289},{"name":"cpu-clock","cnt":12049.142251},{"name":"faults","cnt":65473.0},{"name":"max-rss","cnt":395880.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":8298361463.0},{"name":"cycles:u","cnt":6548585007.0},{"name":"task-clock","cnt":1707.141457},{"name":"cpu-clock","cnt":1707.12448},{"name":"faults","cnt":10153.0},{"name":"max-rss","cnt":347048.0}]}]}]},"regex-opt-0.1.80":{"Ok":[{"name":"regex-opt-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":75638479788.0},{"name":"cycles:u","cnt":57900547676.0},{"name":"task-clock","cnt":14572.870393},{"name":"cpu-clock","cnt":14572.857878},{"name":"faults","cnt":17115.0},{"name":"max-rss","cnt":250164.0}]}]},{"name":"regex-opt-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":90676217786.0},{"name":"cycles:u","cnt":108782032055.0},{"name":"task-clock","cnt":28787.003334},{"name":"cpu-clock","cnt":28787.016866},{"name":"faults","cnt":28936.0},{"name":"max-rss","cnt":389516.0}]}]},{"name":"regex-opt-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":19770030473.0},{"name":"cycles:u","cnt":17202857893.0},{"name":"task-clock","cnt":4468.036535},{"name":"cpu-clock","cnt":4468.028623},{"name":"faults","cnt":8229.0},{"name":"max-rss","cnt":372236.0}]}]},{"name":"regex-opt-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":7954903998.0},{"name":"cycles:u","cnt":6424445360.0},{"name":"task-clock","cnt":1678.861365},{"name":"cpu-clock","cnt":1678.825376},{"name":"faults","cnt":10996.0},{"name":"max-rss","cnt":356124.0}]}]},{"name":"regex-opt-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":7946856755.0},{"name":"cycles:u","cnt":6473348751.0},{"name":"task-clock","cnt":1679.935263},{"name":"cpu-clock","cnt":1679.908955},{"name":"faults","cnt":10745.0},{"name":"max-rss","cnt":358204.0}]}]},{"name":"regex-opt-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":19677258050.0},{"name":"cycles:u","cnt":17178393440.0},{"name":"task-clock","cnt":4459.087677},{"name":"cpu-clock","cnt":4459.081924},{"name":"faults","cnt":9765.0},{"name":"max-rss","cnt":370260.0}]}]},{"name":"regex-opt-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":8736943926.0},{"name":"cycles:u","cnt":7160552487.0},{"name":"task-clock","cnt":1863.722251},{"name":"cpu-clock","cnt":1863.675352},{"name":"faults","cnt":10513.0},{"name":"max-rss","cnt":351640.0}]}]},{"name":"regex-opt-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":89221277054.0},{"name":"cycles:u","cnt":106727350620.0},{"name":"task-clock","cnt":28228.449009},{"name":"cpu-clock","cnt":28228.481707},{"name":"faults","cnt":31701.0},{"name":"max-rss","cnt":403616.0}]}]},{"name":"regex-opt-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":89916649157.0},{"name":"cycles:u","cnt":107848869711.0},{"name":"task-clock","cnt":28542.004245},{"name":"cpu-clock","cnt":28542.016369},{"name":"faults","cnt":30233.0},{"name":"max-rss","cnt":406392.0}]}]},{"name":"regex-opt-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":7760030651.0},{"name":"cycles:u","cnt":6234396000.0},{"name":"task-clock","cnt":1632.596645},{"name":"cpu-clock","cnt":1632.542069},{"name":"faults","cnt":10572.0},{"name":"max-rss","cnt":345480.0}]}]}]},"regex-opt.0.1.30":{"Ok":[{"name":"regex-opt.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":28979444327.0},{"name":"cycles:u","cnt":21532013308.0},{"name":"task-clock","cnt":5436.06536},{"name":"cpu-clock","cnt":5436.064402},{"name":"faults","cnt":11750.0},{"name":"max-rss","cnt":210772.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":11652695717.0},{"name":"cycles:u","cnt":9160394643.0},{"name":"task-clock","cnt":2337.331481},{"name":"cpu-clock","cnt":2337.340832},{"name":"faults","cnt":8969.0},{"name":"max-rss","cnt":225288.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9587831724.0},{"name":"cycles:u","cnt":7202472232.0},{"name":"task-clock","cnt":1841.756228},{"name":"cpu-clock","cnt":1841.755141},{"name":"faults","cnt":8143.0},{"name":"max-rss","cnt":208480.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling rayon-core v1.2.1\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling heapsize v0.4.1\\n   Compiling rustc-serialize v0.3.24\\n   Compiling odds v0.2.25\\n   Compiling void v1.0.2\\n   Compiling lazy_static v0.2.8\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling itoa v0.3.1\\n   Compiling quote v0.3.15\\n   Compiling futures v0.1.14\\n   Compiling log v0.3.8\\n   Compiling same-file v0.1.3\\n   Compiling fnv v1.0.5\\n   Compiling libc v0.2.28\\n   Compiling siphasher v0.2.2\\n   Compiling serde v1.0.10\\n   Compiling pdqsort v0.1.2\\n   Compiling smallvec v0.4.1\\n   Compiling num-traits v0.1.40\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling precomputed-hash v0.1.0\\n   Compiling byteorder v1.1.0\\n   Compiling cfg-if v0.1.2\\n   Compiling scopeguard v0.3.2\\n   Compiling matches v0.1.6\\n   Compiling bitflags v0.7.0\\n   Compiling atomic_refcell v0.1.1\\n   Compiling bit-vec v0.4.4\\n   Compiling either v1.1.0\\n   Compiling unicode-xid v0.0.4\\n   Compiling unreachable v0.1.1\\n   Compiling owning_ref v0.3.3\\n   Compiling nodrop v0.1.9\\n   Compiling walkdir v1.0.7\\n   Compiling phf_shared v0.7.21\\n   Compiling num_cpus v1.6.2\\n   Compiling thread-id v3.2.0\\n   Compiling time v0.1.38\\n   Compiling rand v0.3.15\\n   Compiling unicode-bidi v0.3.4\\n   Compiling num-integer v0.1.35\\n   Compiling ordered-float v0.4.0\\n   Compiling synom v0.11.3\\n   Compiling coco v0.1.1\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/components/servo_arc)\\n   Compiling arrayvec v0.3.23\\n   Compiling arraydeque v0.2.3\\n   Compiling phf v0.7.21\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/components/style)\\n   Compiling syn v0.11.11\\n   Compiling parking_lot_core v0.2.2\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling selectors v0.19.0 (file:///tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/components/selectors)\\n   Compiling parking_lot v0.4.4\\n   Compiling rayon v0.8.2\\n   Compiling euclid v0.15.1\\n   Compiling app_units v0.5.1\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:165:5\\n    |\\n165 | /     pub fn post_mul<NewDst>(&self, mat: &TypedTransform2D<T, Dst, NewDst>) -> TypedTransform2D<T, Src, NewDst> {\\n166 | |         TypedTransform2D::row_major(\\n167 | |             self.m11 * mat.m11 + self.m12 * mat.m21,\\n168 | |             self.m11 * mat.m12 + self.m12 * mat.m22,\\n...   |\\n173 | |         )\\n174 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:179:5\\n    |\\n179 | /     pub fn pre_mul<NewSrc>(&self, mat: &TypedTransform2D<T, NewSrc, Src>) -> TypedTransform2D<T, NewSrc, Dst> {\\n180 | |         mat.post_mul(self)\\n181 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:195:5\\n    |\\n195 | /     pub fn post_translate(&self, v: TypedVector2D<T, Dst>) -> Self {\\n196 | |         self.post_mul(&TypedTransform2D::create_translation(v.x, v.y))\\n197 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:201:5\\n    |\\n201 | /     pub fn pre_translate(&self, v: TypedVector2D<T, Src>) -> Self {\\n202 | |         self.pre_mul(&TypedTransform2D::create_translation(v.x, v.y))\\n203 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:217:5\\n    |\\n217 | /     pub fn post_scale(&self, x: T, y: T) -> Self {\\n218 | |         self.post_mul(&TypedTransform2D::create_scale(x, y))\\n219 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:223:5\\n    |\\n223 | /     pub fn pre_scale(&self, x: T, y: T) -> Self {\\n224 | |         TypedTransform2D::row_major(\\n225 | |             self.m11 * x, self.m12,\\n226 | |             self.m21,     self.m22 * y,\\n227 | |             self.m31,     self.m32\\n228 | |         )\\n229 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:245:5\\n    |\\n245 | /     pub fn post_rotate(&self, theta: Radians<T>) -> Self {\\n246 | |         self.post_mul(&TypedTransform2D::create_rotation(theta))\\n247 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:251:5\\n    |\\n251 | /     pub fn pre_rotate(&self, theta: Radians<T>) -> Self {\\n252 | |         self.pre_mul(&TypedTransform2D::create_rotation(theta))\\n253 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:258:5\\n    |\\n258 | /     pub fn transform_point(&self, point: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst> {\\n259 | |         TypedPoint2D::new(point.x * self.m11 + point.y * self.m21 + self.m31,\\n260 | |                           point.x * self.m12 + point.y * self.m22 + self.m32)\\n261 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:266:5\\n    |\\n266 | /     pub fn transform_vector(&self, vec: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst> {\\n267 | |         vec2(vec.x * self.m11 + vec.y * self.m21,\\n268 | |              vec.x * self.m12 + vec.y * self.m22)\\n269 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:275:5\\n    |\\n275 | /     pub fn transform_rect(&self, rect: &TypedRect<T, Src>) -> TypedRect<T, Dst> {\\n276 | |         TypedRect::from_points(&[\\n277 | |             self.transform_point(&rect.origin),\\n278 | |             self.transform_point(&rect.top_right()),\\n...   |\\n281 | |         ])\\n282 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:291:5\\n    |\\n291 | /     pub fn inverse(&self) -> Option<TypedTransform2D<T, Dst, Src>> {\\n292 | |         let det = self.determinant();\\n293 | |\\n294 | |         let _0: T = Zero::zero();\\n...   |\\n309 | |         ))\\n310 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:374:5\\n    |\\n374 | /     pub fn mul_s(&self, x: T) -> Self {\\n375 | |         TypedTransform3D::row_major(\\n376 | |             self.m11 * x, self.m12 * x, self.m13 * x, self.m14 * x,\\n377 | |             self.m21 * x, self.m22 * x, self.m23 * x, self.m24 * x,\\n...   |\\n380 | |         )\\n381 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:461:5\\n    |\\n461 | /     pub fn pre_translate(&self, v: TypedVector3D<T, Src>) -> Self {\\n462 | |         self.pre_mul(&TypedTransform3D::create_translation(v.x, v.y, v.z))\\n463 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:467:5\\n    |\\n467 | /     pub fn post_translate(&self, v: TypedVector3D<T, Dst>) -> Self {\\n468 | |         self.post_mul(&TypedTransform3D::create_translation(v.x, v.y, v.z))\\n469 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:484:5\\n    |\\n484 | /     pub fn pre_scale(&self, x: T, y: T, z: T) -> Self {\\n485 | |         TypedTransform3D::row_major(\\n486 | |             self.m11 * x, self.m12,     self.m13,     self.m14,\\n487 | |             self.m21    , self.m22 * y, self.m23,     self.m24,\\n...   |\\n490 | |         )\\n491 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:495:5\\n    |\\n495 | /     pub fn post_scale(&self, x: T, y: T, z: T) -> Self {\\n496 | |         self.post_mul(&TypedTransform3D::create_scale(x, y, z))\\n497 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:538:5\\n    |\\n538 | /     pub fn post_rotate(&self, x: T, y: T, z: T, theta: Radians<T>) -> Self {\\n539 | |         self.post_mul(&TypedTransform3D::create_rotation(x, y, z, theta))\\n540 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:544:5\\n    |\\n544 | /     pub fn pre_rotate(&self, x: T, y: T, z: T, theta: Radians<T>) -> Self {\\n545 | |         self.pre_mul(&TypedTransform3D::create_rotation(x, y, z, theta))\\n546 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:237:5\\n    |\\n237 | /     pub fn round(&self) -> Self {\\n238 | |         point2(self.x.round(), self.y.round())\\n239 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:249:5\\n    |\\n249 | /     pub fn ceil(&self) -> Self {\\n250 | |         point2(self.x.ceil(), self.y.ceil())\\n251 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:261:5\\n    |\\n261 | /     pub fn floor(&self) -> Self {\\n262 | |         point2(self.x.floor(), self.y.floor())\\n263 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:548:5\\n    |\\n548 | /     pub fn round(&self) -> Self {\\n549 | |         point3(self.x.round(), self.y.round(), self.z.round())\\n550 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:559:5\\n    |\\n559 | /     pub fn ceil(&self) -> Self {\\n560 | |         point3(self.x.ceil(), self.y.ceil(), self.z.ceil())\\n561 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:570:5\\n    |\\n570 | /     pub fn floor(&self) -> Self {\\n571 | |         point3(self.x.floor(), self.y.floor(), self.z.floor())\\n572 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:171:5\\n    |\\n171 | /     pub fn translate(&self, by: &TypedVector2D<T, U>) -> Self {\\n172 | |         Self::new(self.origin + *by, self.size)\\n173 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:196:5\\n    |\\n196 | /     pub fn inflate(&self, width: T, height: T) -> Self {\\n197 | |         TypedRect::new(\\n198 | |             TypedPoint2D::new(self.origin.x - width, self.origin.y - height),\\n199 | |             TypedSize2D::new(self.size.width + width + width, self.size.height + height + height),\\n200 | |         )\\n201 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:205:5\\n    |\\n205 | /     pub fn inflate_typed(&self, width: Length<T, U>, height: Length<T, U>) -> Self {\\n206 | |         self.inflate(width.get(), height.get())\\n207 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:226:5\\n    |\\n226 | /     pub fn translate_by_size(&self, size: &TypedSize2D<T, U>) -> Self {\\n227 | |         self.translate(&size.to_vector())\\n228 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:398:5\\n    |\\n398 | /     pub fn round(&self) -> Self {\\n399 | |         let origin = self.origin.round();\\n400 | |         let size = self.origin.add_size(&self.size).round() - origin;\\n401 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n402 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:407:5\\n    |\\n407 | /     pub fn round_in(&self) -> Self {\\n408 | |         let origin = self.origin.ceil();\\n409 | |         let size = self.origin.add_size(&self.size).floor() - origin;\\n410 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n411 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:416:5\\n    |\\n416 | /     pub fn round_out(&self) -> Self {\\n417 | |         let origin = self.origin.floor();\\n418 | |         let size = self.origin.add_size(&self.size).ceil() - origin;\\n419 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n420 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:270:5\\n    |\\n270 | /     pub fn round(&self) -> Self {\\n271 | |         vec2(self.x.round(), self.y.round())\\n272 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:282:5\\n    |\\n282 | /     pub fn ceil(&self) -> Self {\\n283 | |         vec2(self.x.ceil(), self.y.ceil())\\n284 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:294:5\\n    |\\n294 | /     pub fn floor(&self) -> Self {\\n295 | |         vec2(self.x.floor(), self.y.floor())\\n296 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:617:5\\n    |\\n617 | /     pub fn round(&self) -> Self {\\n618 | |         vec3(self.x.round(), self.y.round(), self.z.round())\\n619 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:628:5\\n    |\\n628 | /     pub fn ceil(&self) -> Self {\\n629 | |         vec3(self.x.ceil(), self.y.ceil(), self.z.ceil())\\n630 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:639:5\\n    |\\n639 | /     pub fn floor(&self) -> Self {\\n640 | |         vec3(self.x.floor(), self.y.floor(), self.z.floor())\\n641 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\n   Compiling cssparser-macros v0.3.0\\n   Compiling cssparser v0.17.0\\n   Compiling synstructure v0.5.2\\n   Compiling style_derive v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/components/style_derive)\\nwarning: variable does not need to be mutable\\n   --> components/selectors/matching.rs:461:39\\n    |\\n461 |                                       mut context: &mut LocalMatchingContext<E::Impl>,\\n    |                                       ^^^^^^^^^^^\\n    |\\n    = note: #[warn(unused_mut)] on by default\\n\\nwarning: variable does not need to be mutable\\n    --> components/selectors/parser.rs:1472:5\\n     |\\n1472 |     mut builder: &mut SelectorBuilder<Impl>)\\n     |     ^^^^^^^^^^^\\n\\n   Compiling style_traits v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/components/style_traits)\\nwarning: doc comment not used by rustdoc\\n   --> components/style/values/specified/image.rs:688:17\\n    |\\n688 |                 /// `to` keyword is mandatory in modern syntax.\\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n    |\\n    = note: #[warn(unused_doc_comment)] on by default\\n\\nwarning: doc comment not used by rustdoc\\n   --> components/style/values/specified/image.rs:694:17\\n    |\\n694 |                 /// There is no `to` keyword in webkit prefixed syntax. If it\\'s consumed,\\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: doc comment not used by rustdoc\\n    --> /tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/target/debug/build/style-b41f1b787cd3e241/out/gecko_properties.rs:8443:9\\n     |\\n8443 |         /// XXXManishearth this should also handle text zoom\\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nerror[E0106]: missing lifetime specifier\\n   --> /tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/target/debug/build/style-b41f1b787cd3e241/out/gecko/bindings.rs:558:9\\n    |\\n558 |      -> RawGeckoNodeBorrowedOrNull;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter\\n    |\\n    = help: this function\\'s return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\\n    = help: consider giving it an explicit bounded or \\'static lifetime\\n\\nerror[E0106]: missing lifetime specifier\\n   --> /tmp/rustc-benchmark-style-9b276565.sqSDQEgekA6R/target/debug/build/style-b41f1b787cd3e241/out/gecko/bindings.rs:827:9\\n    |\\n827 |      -> RawServoAnimationValueBorrowedOrNull;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter\\n    |\\n    = help: this function\\'s return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\\n    = help: consider giving it an explicit bounded or \\'static lifetime\\n\\nerror: aborting due to 2 previous errors\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:30:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `style`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/3e964612302e649e3c59a0b556001d801357306d/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\n39376663634;;instructions:u;6591859360;100.00;1.52;insn per cycle\\n25945349037;;cycles:u;6591859360;100.00;3.936;GHz\\n6591.850261;;task-clock;6591850261;100.00;1.000;CPUs utilized\\n6591.842973;;cpu-clock;6591850261;100.00;1.000;CPUs utilized\\n5203;;faults;6591850261;100.00;0.789;K/sec\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: None })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":135602132183.0},{"name":"cycles:u","cnt":110279495966.0},{"name":"task-clock","cnt":27897.259137},{"name":"cpu-clock","cnt":27897.255669},{"name":"faults","cnt":30796.0},{"name":"max-rss","cnt":931952.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":211434998067.0},{"name":"cycles:u","cnt":200421530050.0},{"name":"task-clock","cnt":52925.447277},{"name":"cpu-clock","cnt":52925.466241},{"name":"faults","cnt":228087.0},{"name":"max-rss","cnt":965324.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":55600409719.0},{"name":"cycles:u","cnt":39995784826.0},{"name":"task-clock","cnt":10215.64719},{"name":"cpu-clock","cnt":10215.531488},{"name":"faults","cnt":24446.0},{"name":"max-rss","cnt":950040.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28423490052.0},{"name":"cycles:u","cnt":23859503477.0},{"name":"task-clock","cnt":6144.043041},{"name":"cpu-clock","cnt":6147.442338},{"name":"faults","cnt":43587.0},{"name":"max-rss","cnt":388232.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":43458514730.0},{"name":"cycles:u","cnt":39323513359.0},{"name":"task-clock","cnt":10315.921836},{"name":"cpu-clock","cnt":10462.62839},{"name":"faults","cnt":76088.0},{"name":"max-rss","cnt":409188.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9638866902.0},{"name":"cycles:u","cnt":7431269890.0},{"name":"task-clock","cnt":1732.869743},{"name":"cpu-clock","cnt":2063.206032},{"name":"faults","cnt":49164.0},{"name":"max-rss","cnt":380268.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":43831930413.0},{"name":"cycles:u","cnt":39646312789.0},{"name":"task-clock","cnt":10512.307953},{"name":"cpu-clock","cnt":10564.331777},{"name":"faults","cnt":79293.0},{"name":"max-rss","cnt":412224.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":23626912498.0},{"name":"cycles:u","cnt":16491738892.0},{"name":"task-clock","cnt":4207.843102},{"name":"cpu-clock","cnt":4227.214825},{"name":"faults","cnt":36359.0},{"name":"max-rss","cnt":422376.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}