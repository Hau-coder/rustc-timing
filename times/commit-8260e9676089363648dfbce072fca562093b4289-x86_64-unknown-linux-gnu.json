{"commit":{"sha":"8260e9676089363648dfbce072fca562093b4289","date":"2019-04-17T16:23:25+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":28329826495.0},{"name":"cpu-clock","cnt":7229.203805},{"name":"instructions:u","cnt":33896611562.0},{"name":"max-rss","cnt":424288.0},{"name":"faults","cnt":79646.0},{"name":"task-clock","cnt":7229.202612},{"name":"wall-time","cnt":7.263785644}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":8655.398975},{"name":"cycles:u","cnt":33884577461.0},{"name":"wall-time","cnt":8.673791881},{"name":"instructions:u","cnt":41400565207.0},{"name":"task-clock","cnt":8655.406222},{"name":"max-rss","cnt":575848.0},{"name":"faults","cnt":117872.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":9071643576.0},{"name":"faults","cnt":109473.0},{"name":"cpu-clock","cnt":2419.811479},{"name":"task-clock","cnt":2419.811126},{"name":"wall-time","cnt":2.35411966},{"name":"instructions:u","cnt":11704627317.0},{"name":"max-rss","cnt":538576.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":111162.0},{"name":"wall-time","cnt":2.749646943},{"name":"task-clock","cnt":2815.441188},{"name":"instructions:u","cnt":13196629184.0},{"name":"cpu-clock","cnt":2815.441545},{"name":"max-rss","cnt":552180.0},{"name":"cycles:u","cnt":10641075396.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":180742300858.0},{"name":"cpu-clock","cnt":45794.781615},{"name":"faults","cnt":389191.0},{"name":"task-clock","cnt":45794.76834},{"name":"max-rss","cnt":1572664.0},{"name":"cycles:u","cnt":173194540000.0},{"name":"wall-time","cnt":18.751596744}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":436783.0},{"name":"max-rss","cnt":1517956.0},{"name":"instructions:u","cnt":206454352314.0},{"name":"cycles:u","cnt":204481503056.0},{"name":"wall-time","cnt":21.647812992},{"name":"task-clock","cnt":54209.605847},{"name":"cpu-clock","cnt":54209.739039}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":1158632.0},{"name":"instructions:u","cnt":19032226282.0},{"name":"task-clock","cnt":4344.422672},{"name":"cpu-clock","cnt":4344.225554},{"name":"cycles:u","cnt":15681439022.0},{"name":"wall-time","cnt":4.231634396},{"name":"faults","cnt":213645.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1509208.0},{"name":"faults","cnt":322115.0},{"name":"cycles:u","cnt":55116818857.0},{"name":"task-clock","cnt":14786.188628},{"name":"wall-time","cnt":7.682757015},{"name":"cpu-clock","cnt":14786.060538},{"name":"instructions:u","cnt":59867447766.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":37.960539896},{"name":"instructions:u","cnt":630457333106.0},{"name":"max-rss","cnt":1354412.0},{"name":"task-clock","cnt":215161.979273},{"name":"cycles:u","cnt":812084487499.0},{"name":"faults","cnt":430376.0},{"name":"cpu-clock","cnt":215162.092686}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":258799.25412},{"name":"cycles:u","cnt":975610803332.0},{"name":"instructions:u","cnt":753026443033.0},{"name":"faults","cnt":442679.0},{"name":"wall-time","cnt":43.197210496},{"name":"max-rss","cnt":1334636.0},{"name":"cpu-clock","cnt":258799.593567}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3607.749043},{"name":"task-clock","cnt":3607.946747},{"name":"instructions:u","cnt":14866017710.0},{"name":"wall-time","cnt":3.308732346},{"name":"max-rss","cnt":1007608.0},{"name":"faults","cnt":215762.0},{"name":"cycles:u","cnt":12998716652.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":574685911977.0},{"name":"wall-time","cnt":24.403094104},{"name":"task-clock","cnt":152714.224441},{"name":"cpu-clock","cnt":152714.507294},{"name":"instructions:u","cnt":456483702857.0},{"name":"faults","cnt":385729.0},{"name":"max-rss","cnt":1339168.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":3647.089851},{"name":"instructions:u","cnt":18751692818.0},{"name":"task-clock","cnt":3647.088471},{"name":"max-rss","cnt":256304.0},{"name":"cycles:u","cnt":14316010983.0},{"name":"faults","cnt":47298.0},{"name":"wall-time","cnt":3.683624817}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":95191.0},{"name":"cpu-clock","cnt":6272.225437},{"name":"cycles:u","cnt":24415727079.0},{"name":"wall-time","cnt":6.307178464},{"name":"max-rss","cnt":445224.0},{"name":"task-clock","cnt":6272.213082},{"name":"instructions:u","cnt":39445082669.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":6233354503.0},{"name":"max-rss","cnt":811748.0},{"name":"cpu-clock","cnt":1787.956389},{"name":"instructions:u","cnt":10212008965.0},{"name":"wall-time","cnt":1.788311006},{"name":"task-clock","cnt":1787.958178},{"name":"faults","cnt":182050.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":183925.0},{"name":"wall-time","cnt":2.594787565},{"name":"cycles:u","cnt":9422459624.0},{"name":"task-clock","cnt":2594.10618},{"name":"max-rss","cnt":825388.0},{"name":"cpu-clock","cnt":2594.106781},{"name":"instructions:u","cnt":14026440171.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":9.277331507},{"name":"instructions:u","cnt":71407812224.0},{"name":"max-rss","cnt":975816.0},{"name":"cpu-clock","cnt":15460.022985},{"name":"cycles:u","cnt":58903298431.0},{"name":"faults","cnt":245167.0},{"name":"task-clock","cnt":15460.010695}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":20821.824213},{"name":"cycles:u","cnt":78973314860.0},{"name":"faults","cnt":237128.0},{"name":"max-rss","cnt":970000.0},{"name":"wall-time","cnt":11.998030671},{"name":"instructions:u","cnt":96358737391.0},{"name":"task-clock","cnt":20821.748126}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2418.093715},{"name":"instructions:u","cnt":12897614414.0},{"name":"cycles:u","cnt":8434249209.0},{"name":"max-rss","cnt":943972.0},{"name":"cpu-clock","cnt":2418.037767},{"name":"wall-time","cnt":2.375592577},{"name":"faults","cnt":205515.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":11243.563958},{"name":"instructions:u","cnt":51007007539.0},{"name":"cycles:u","cnt":42198456034.0},{"name":"faults","cnt":341236.0},{"name":"wall-time","cnt":7.457358599},{"name":"cpu-clock","cnt":11243.505667},{"name":"max-rss","cnt":1422108.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":481504.0},{"name":"instructions:u","cnt":202661452727.0},{"name":"cpu-clock","cnt":54582.722783},{"name":"cycles:u","cnt":209755048767.0},{"name":"task-clock","cnt":54582.668695},{"name":"wall-time","cnt":25.740078045},{"name":"faults","cnt":148029.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":232588097180.0},{"name":"task-clock","cnt":63243.525042},{"name":"faults","cnt":199152.0},{"name":"cpu-clock","cnt":63243.599308},{"name":"max-rss","cnt":657100.0},{"name":"cycles:u","cnt":241918214053.0},{"name":"wall-time","cnt":26.905241712}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2368.106557},{"name":"faults","cnt":205362.0},{"name":"wall-time","cnt":2.313952975},{"name":"max-rss","cnt":914400.0},{"name":"cpu-clock","cnt":2368.01676},{"name":"instructions:u","cnt":12759337183.0},{"name":"cycles:u","cnt":8324718494.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":126297581027.0},{"name":"faults","cnt":274360.0},{"name":"cpu-clock","cnt":34471.35066},{"name":"cycles:u","cnt":130595905690.0},{"name":"task-clock","cnt":34471.269505},{"name":"max-rss","cnt":1170244.0},{"name":"wall-time","cnt":13.365755213}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":180356.0},{"name":"instructions:u","cnt":5394546632.0},{"name":"wall-time","cnt":0.792483976},{"name":"faults","cnt":25999.0},{"name":"task-clock","cnt":765.654528},{"name":"cycles:u","cnt":2918366483.0},{"name":"cpu-clock","cnt":765.652617}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":978.213188},{"name":"faults","cnt":28924.0},{"name":"wall-time","cnt":0.996306528},{"name":"instructions:u","cnt":7134562553.0},{"name":"cpu-clock","cnt":978.211926},{"name":"max-rss","cnt":194116.0},{"name":"cycles:u","cnt":3744835406.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":263.072525},{"name":"cpu-clock","cnt":263.070431},{"name":"faults","cnt":23685.0},{"name":"cycles:u","cnt":912178692.0},{"name":"instructions:u","cnt":1732464856.0},{"name":"max-rss","cnt":160872.0},{"name":"wall-time","cnt":0.297328121}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":282.813237},{"name":"cycles:u","cnt":985707509.0},{"name":"max-rss","cnt":175640.0},{"name":"instructions:u","cnt":1889573524.0},{"name":"faults","cnt":23596.0},{"name":"cpu-clock","cnt":282.811408},{"name":"wall-time","cnt":0.300373296}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":978.470152},{"name":"cpu-clock","cnt":978.468726},{"name":"faults","cnt":31184.0},{"name":"instructions:u","cnt":7142935397.0},{"name":"cycles:u","cnt":3738057824.0},{"name":"max-rss","cnt":204548.0},{"name":"wall-time","cnt":0.996308548}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"instructions:u","cnt":7232333048.0},{"name":"task-clock","cnt":1125.34731},{"name":"wall-time","cnt":1.151808241},{"name":"cpu-clock","cnt":1125.342906},{"name":"faults","cnt":56661.0},{"name":"max-rss","cnt":279064.0},{"name":"cycles:u","cnt":4112272025.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.313410649},{"name":"cpu-clock","cnt":1341.628606},{"name":"task-clock","cnt":1341.632654},{"name":"instructions:u","cnt":8958442063.0},{"name":"faults","cnt":57351.0},{"name":"cycles:u","cnt":4952163039.0},{"name":"max-rss","cnt":283504.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":32969.0},{"name":"max-rss","cnt":177872.0},{"name":"task-clock","cnt":376.557267},{"name":"cycles:u","cnt":1213740607.0},{"name":"cpu-clock","cnt":376.546013},{"name":"instructions:u","cnt":2236948396.0},{"name":"wall-time","cnt":0.410070422}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":655.131109},{"name":"max-rss","cnt":276160.0},{"name":"cycles:u","cnt":2220568186.0},{"name":"instructions:u","cnt":3762856771.0},{"name":"wall-time","cnt":0.583351414},{"name":"task-clock","cnt":655.137519},{"name":"faults","cnt":55033.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1356.452855},{"name":"max-rss","cnt":290556.0},{"name":"cycles:u","cnt":4975376164.0},{"name":"faults","cnt":61797.0},{"name":"task-clock","cnt":1356.447277},{"name":"instructions:u","cnt":8942618955.0},{"name":"wall-time","cnt":1.307809071}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"wall-time","cnt":0.934039971},{"name":"cycles:u","cnt":3406368271.0},{"name":"faults","cnt":35745.0},{"name":"instructions:u","cnt":6137785234.0},{"name":"task-clock","cnt":912.051357},{"name":"cpu-clock","cnt":912.038809},{"name":"max-rss","cnt":210960.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":215748.0},{"name":"task-clock","cnt":1121.141394},{"name":"wall-time","cnt":1.123292816},{"name":"cpu-clock","cnt":1121.136134},{"name":"cycles:u","cnt":4218383399.0},{"name":"instructions:u","cnt":7882019002.0},{"name":"faults","cnt":36491.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1133497158.0},{"name":"max-rss","cnt":177404.0},{"name":"wall-time","cnt":0.372141948},{"name":"instructions:u","cnt":2046755885.0},{"name":"faults","cnt":30257.0},{"name":"cpu-clock","cnt":340.001342},{"name":"task-clock","cnt":340.006532}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":201448.0},{"name":"faults","cnt":32508.0},{"name":"cycles:u","cnt":1527560203.0},{"name":"cpu-clock","cnt":442.150791},{"name":"wall-time","cnt":0.43372732},{"name":"instructions:u","cnt":2642672335.0},{"name":"task-clock","cnt":442.155752}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":1.123004409},{"name":"max-rss","cnt":220564.0},{"name":"cpu-clock","cnt":1130.906127},{"name":"task-clock","cnt":1130.909717},{"name":"faults","cnt":40574.0},{"name":"instructions:u","cnt":7865909093.0},{"name":"cycles:u","cnt":4244252473.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":6013.23408},{"name":"cpu-clock","cnt":6013.236119},{"name":"max-rss","cnt":513980.0},{"name":"faults","cnt":105691.0},{"name":"instructions:u","cnt":30051019121.0},{"name":"wall-time","cnt":6.062717894},{"name":"cycles:u","cnt":23379096731.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7170.48726},{"name":"instructions:u","cnt":36380763809.0},{"name":"max-rss","cnt":589628.0},{"name":"cycles:u","cnt":27827808843.0},{"name":"faults","cnt":124393.0},{"name":"task-clock","cnt":7170.488141},{"name":"wall-time","cnt":7.212289364}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1486.834965},{"name":"instructions:u","cnt":7002441003.0},{"name":"faults","cnt":86828.0},{"name":"wall-time","cnt":1.475077841},{"name":"task-clock","cnt":1486.838025},{"name":"max-rss","cnt":436424.0},{"name":"cycles:u","cnt":5415967757.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":9.203556257},{"name":"cycles:u","cnt":59914010509.0},{"name":"faults","cnt":178048.0},{"name":"max-rss","cnt":769864.0},{"name":"cpu-clock","cnt":15687.014545},{"name":"task-clock","cnt":15686.998102},{"name":"instructions:u","cnt":69161634856.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":191546.0},{"name":"wall-time","cnt":11.400594359},{"name":"cpu-clock","cnt":18722.217606},{"name":"max-rss","cnt":830536.0},{"name":"cycles:u","cnt":71264290139.0},{"name":"instructions:u","cnt":85817529969.0},{"name":"task-clock","cnt":18721.989682}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.3444177},{"name":"instructions:u","cnt":12011149470.0},{"name":"cycles:u","cnt":8549403143.0},{"name":"max-rss","cnt":734156.0},{"name":"task-clock","cnt":2437.576258},{"name":"faults","cnt":150719.0},{"name":"cpu-clock","cnt":2437.434892}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":226549747169.0},{"name":"cycles:u","cnt":267396294465.0},{"name":"wall-time","cnt":20.103904732},{"name":"task-clock","cnt":70535.460964},{"name":"max-rss","cnt":1170220.0},{"name":"cpu-clock","cnt":70535.566967},{"name":"faults","cnt":283970.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":20.878780827},{"name":"instructions:u","cnt":261630882182.0},{"name":"cycles:u","cnt":315867375446.0},{"name":"cpu-clock","cnt":83686.526125},{"name":"faults","cnt":287868.0},{"name":"max-rss","cnt":1070128.0},{"name":"task-clock","cnt":83686.318019}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2417.088671},{"name":"max-rss","cnt":728472.0},{"name":"instructions:u","cnt":11877029528.0},{"name":"cycles:u","cnt":8562141584.0},{"name":"faults","cnt":144830.0},{"name":"wall-time","cnt":2.291155983},{"name":"task-clock","cnt":2417.245295}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":6330.370821},{"name":"max-rss","cnt":380996.0},{"name":"instructions:u","cnt":32263033255.0},{"name":"cpu-clock","cnt":6330.372556},{"name":"faults","cnt":65896.0},{"name":"cycles:u","cnt":24878342339.0},{"name":"wall-time","cnt":6.375411888}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7676.777195},{"name":"wall-time","cnt":7.724331944},{"name":"cycles:u","cnt":29996947870.0},{"name":"max-rss","cnt":534820.0},{"name":"task-clock","cnt":7676.776078},{"name":"instructions:u","cnt":38711367675.0},{"name":"faults","cnt":105426.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":103918.0},{"name":"wall-time","cnt":1.85265205},{"name":"instructions:u","cnt":9025776979.0},{"name":"cycles:u","cnt":7144939243.0},{"name":"task-clock","cnt":1927.675542},{"name":"max-rss","cnt":527688.0},{"name":"cpu-clock","cnt":1927.671946}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2143.648429},{"name":"instructions:u","cnt":9988916970.0},{"name":"faults","cnt":104624.0},{"name":"wall-time","cnt":2.068367853},{"name":"task-clock","cnt":2143.641866},{"name":"cycles:u","cnt":7875661000.0},{"name":"max-rss","cnt":537808.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":1159248.0},{"name":"faults","cnt":263472.0},{"name":"cycles:u","cnt":107988612573.0},{"name":"instructions:u","cnt":116393565826.0},{"name":"wall-time","cnt":13.019863697},{"name":"cpu-clock","cnt":28478.939948},{"name":"task-clock","cnt":28478.907337}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":16.640469422},{"name":"task-clock","cnt":32155.549568},{"name":"faults","cnt":277400.0},{"name":"cycles:u","cnt":121772188086.0},{"name":"cpu-clock","cnt":32155.476248},{"name":"max-rss","cnt":1204064.0},{"name":"instructions:u","cnt":130707640838.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":14040751355.0},{"name":"wall-time","cnt":3.055208296},{"name":"task-clock","cnt":3198.182845},{"name":"max-rss","cnt":925388.0},{"name":"faults","cnt":164869.0},{"name":"cycles:u","cnt":11380281197.0},{"name":"cpu-clock","cnt":3197.99421}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":4373.465827},{"name":"cpu-clock","cnt":4373.258121},{"name":"wall-time","cnt":3.735341559},{"name":"instructions:u","cnt":19260098334.0},{"name":"faults","cnt":180535.0},{"name":"max-rss","cnt":987380.0},{"name":"cycles:u","cnt":15886822071.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":436795731812.0},{"name":"cpu-clock","cnt":115460.382435},{"name":"wall-time","cnt":23.838346708},{"name":"instructions:u","cnt":350330862275.0},{"name":"task-clock","cnt":115460.291386},{"name":"faults","cnt":235999.0},{"name":"max-rss","cnt":966388.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":497617483996.0},{"name":"wall-time","cnt":25.616922872},{"name":"faults","cnt":274047.0},{"name":"max-rss","cnt":1073756.0},{"name":"instructions:u","cnt":394519452554.0},{"name":"cpu-clock","cnt":131858.352203},{"name":"task-clock","cnt":131858.101562}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.913170225},{"name":"cycles:u","cnt":11333238562.0},{"name":"instructions:u","cnt":13716786710.0},{"name":"max-rss","cnt":819396.0},{"name":"faults","cnt":164259.0},{"name":"cpu-clock","cnt":3134.149825},{"name":"task-clock","cnt":3134.365133}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":58735860321.0},{"name":"wall-time","cnt":6.148221448},{"name":"max-rss","cnt":950308.0},{"name":"cpu-clock","cnt":15577.050926},{"name":"cycles:u","cnt":58558069068.0},{"name":"task-clock","cnt":15577.117366},{"name":"faults","cnt":201661.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":254612.0},{"name":"instructions:u","cnt":67984793866.0},{"name":"wall-time","cnt":7.854926998},{"name":"cpu-clock","cnt":7809.110504},{"name":"cycles:u","cnt":30948502103.0},{"name":"task-clock","cnt":7809.112724},{"name":"faults","cnt":42962.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":504708.0},{"name":"cycles:u","cnt":38655745840.0},{"name":"cpu-clock","cnt":9856.693658},{"name":"instructions:u","cnt":91736401322.0},{"name":"task-clock","cnt":9856.694666},{"name":"wall-time","cnt":9.891100757},{"name":"faults","cnt":107755.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":871.426101},{"name":"instructions:u","cnt":5652634919.0},{"name":"wall-time","cnt":0.905214368},{"name":"faults","cnt":121451.0},{"name":"task-clock","cnt":871.428195},{"name":"max-rss","cnt":554372.0},{"name":"cycles:u","cnt":2591858893.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.903289071},{"name":"task-clock","cnt":7838.146128},{"name":"instructions:u","cnt":68221012300.0},{"name":"faults","cnt":43291.0},{"name":"max-rss","cnt":255224.0},{"name":"cycles:u","cnt":31068552663.0},{"name":"cpu-clock","cnt":7838.154184}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":10683.33537},{"name":"instructions:u","cnt":100869102436.0},{"name":"max-rss","cnt":738008.0},{"name":"wall-time","cnt":10.717488324},{"name":"cycles:u","cnt":41593791115.0},{"name":"cpu-clock","cnt":10683.387884},{"name":"faults","cnt":189220.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1349.318994},{"name":"faults","cnt":233201.0},{"name":"wall-time","cnt":1.381457076},{"name":"cycles:u","cnt":3974032713.0},{"name":"max-rss","cnt":979568.0},{"name":"instructions:u","cnt":8397382707.0},{"name":"task-clock","cnt":1349.304163}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":6413.446304},{"name":"max-rss","cnt":260344.0},{"name":"cpu-clock","cnt":6413.452414},{"name":"faults","cnt":43397.0},{"name":"wall-time","cnt":6.447121087},{"name":"instructions:u","cnt":55001812788.0},{"name":"cycles:u","cnt":25376038216.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":9310.907199},{"name":"cycles:u","cnt":36095804517.0},{"name":"faults","cnt":189381.0},{"name":"instructions:u","cnt":87053847673.0},{"name":"max-rss","cnt":740200.0},{"name":"task-clock","cnt":9310.900072},{"name":"wall-time","cnt":9.34306193}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1349.979449},{"name":"cycles:u","cnt":3977850443.0},{"name":"wall-time","cnt":1.384621375},{"name":"instructions:u","cnt":8396031711.0},{"name":"faults","cnt":233147.0},{"name":"task-clock","cnt":1349.981053},{"name":"max-rss","cnt":979676.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":4104019297.0},{"name":"max-rss","cnt":289892.0},{"name":"task-clock","cnt":1086.037256},{"name":"faults","cnt":52457.0},{"name":"cpu-clock","cnt":1086.027347},{"name":"wall-time","cnt":1.124090462},{"name":"instructions:u","cnt":7002359935.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1207.512589},{"name":"max-rss","cnt":298188.0},{"name":"wall-time","cnt":1.24297289},{"name":"instructions:u","cnt":7999886342.0},{"name":"cycles:u","cnt":4579973139.0},{"name":"faults","cnt":53971.0},{"name":"cpu-clock","cnt":1207.511137}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":360.499318},{"name":"instructions:u","cnt":2511173101.0},{"name":"cycles:u","cnt":1281190749.0},{"name":"max-rss","cnt":193828.0},{"name":"task-clock","cnt":360.510482},{"name":"wall-time","cnt":0.395979261},{"name":"faults","cnt":32368.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":293324.0},{"name":"faults","cnt":52442.0},{"name":"task-clock","cnt":1198.764782},{"name":"cpu-clock","cnt":1198.764164},{"name":"wall-time","cnt":1.216276755},{"name":"cycles:u","cnt":4554214204.0},{"name":"instructions:u","cnt":7996081247.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":52120.0},{"name":"wall-time","cnt":1.260225541},{"name":"task-clock","cnt":1223.316978},{"name":"cpu-clock","cnt":1223.296131},{"name":"instructions:u","cnt":7994411852.0},{"name":"cycles:u","cnt":4620350963.0},{"name":"max-rss","cnt":292820.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"instructions:u","cnt":10143607584.0},{"name":"faults","cnt":81684.0},{"name":"task-clock","cnt":1683.874549},{"name":"wall-time","cnt":1.683827105},{"name":"max-rss","cnt":383156.0},{"name":"cycles:u","cnt":6284316188.0},{"name":"cpu-clock","cnt":1683.874826}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":11546657931.0},{"name":"cpu-clock","cnt":1873.813697},{"name":"task-clock","cnt":1873.803458},{"name":"max-rss","cnt":391712.0},{"name":"faults","cnt":83714.0},{"name":"cycles:u","cnt":7018681212.0},{"name":"wall-time","cnt":1.845353248}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":42642.0},{"name":"instructions:u","cnt":3203719772.0},{"name":"wall-time","cnt":0.507220555},{"name":"cycles:u","cnt":1623408041.0},{"name":"max-rss","cnt":224996.0},{"name":"task-clock","cnt":475.872081},{"name":"cpu-clock","cnt":475.845139}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":82608.0},{"name":"cycles:u","cnt":6844903680.0},{"name":"max-rss","cnt":388868.0},{"name":"instructions:u","cnt":11574883037.0},{"name":"cpu-clock","cnt":1834.27698},{"name":"wall-time","cnt":1.790670362},{"name":"task-clock","cnt":1834.255411}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1829.616871},{"name":"max-rss","cnt":392792.0},{"name":"instructions:u","cnt":11546507739.0},{"name":"cpu-clock","cnt":1829.615474},{"name":"faults","cnt":83624.0},{"name":"wall-time","cnt":1.802616332},{"name":"cycles:u","cnt":6828973453.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"max-rss","cnt":592788.0},{"name":"cycles:u","cnt":11860150426.0},{"name":"wall-time","cnt":3.132819421},{"name":"instructions:u","cnt":17360161485.0},{"name":"faults","cnt":140710.0},{"name":"task-clock","cnt":3149.994527},{"name":"cpu-clock","cnt":3149.996233}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":3267.463704},{"name":"max-rss","cnt":604400.0},{"name":"wall-time","cnt":3.231331099},{"name":"task-clock","cnt":3267.450042},{"name":"instructions:u","cnt":18734418532.0},{"name":"faults","cnt":144040.0},{"name":"cycles:u","cnt":12344325310.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1614214473.0},{"name":"cpu-clock","cnt":471.224083},{"name":"instructions:u","cnt":3162366857.0},{"name":"max-rss","cnt":225000.0},{"name":"wall-time","cnt":0.501218168},{"name":"faults","cnt":41968.0},{"name":"task-clock","cnt":471.241043}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":3244.483022},{"name":"instructions:u","cnt":18511485731.0},{"name":"faults","cnt":141910.0},{"name":"wall-time","cnt":3.190795678},{"name":"cpu-clock","cnt":3244.496476},{"name":"max-rss","cnt":598660.0},{"name":"cycles:u","cnt":12260884939.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":12290956182.0},{"name":"max-rss","cnt":605048.0},{"name":"cpu-clock","cnt":3284.748998},{"name":"task-clock","cnt":3284.755732},{"name":"faults","cnt":142450.0},{"name":"wall-time","cnt":3.249590527},{"name":"instructions:u","cnt":18603674873.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":5772.0},{"name":"max-rss","cnt":110276.0},{"name":"cpu-clock","cnt":83.725903},{"name":"cycles:u","cnt":276624145.0},{"name":"instructions:u","cnt":428941881.0},{"name":"task-clock","cnt":83.718122},{"name":"wall-time","cnt":0.101506507}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":95.836535},{"name":"wall-time","cnt":0.113777999},{"name":"max-rss","cnt":119744.0},{"name":"task-clock","cnt":95.839529},{"name":"cycles:u","cnt":317712197.0},{"name":"faults","cnt":7271.0},{"name":"instructions:u","cnt":486956099.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":44.737533},{"name":"max-rss","cnt":92076.0},{"name":"wall-time","cnt":0.062066466},{"name":"task-clock","cnt":44.740168},{"name":"faults","cnt":6039.0},{"name":"cycles:u","cnt":125703805.0},{"name":"instructions:u","cnt":179339175.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.157131532},{"name":"task-clock","cnt":167.836591},{"name":"max-rss","cnt":130296.0},{"name":"faults","cnt":8614.0},{"name":"cycles:u","cnt":579838393.0},{"name":"instructions:u","cnt":776624657.0},{"name":"cpu-clock","cnt":167.819388}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":136980.0},{"name":"faults","cnt":10266.0},{"name":"task-clock","cnt":183.825256},{"name":"cpu-clock","cnt":183.819521},{"name":"wall-time","cnt":0.17073673},{"name":"instructions:u","cnt":849433316.0},{"name":"cycles:u","cnt":632083862.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":112172.0},{"name":"instructions:u","cnt":270245429.0},{"name":"cpu-clock","cnt":66.832738},{"name":"cycles:u","cnt":191690886.0},{"name":"faults","cnt":7492.0},{"name":"task-clock","cnt":66.838034},{"name":"wall-time","cnt":0.08197826}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.208547096},{"name":"cycles:u","cnt":902575531.0},{"name":"task-clock","cnt":248.316443},{"name":"instructions:u","cnt":1277858495.0},{"name":"cpu-clock","cnt":248.302956},{"name":"max-rss","cnt":128036.0},{"name":"faults","cnt":7768.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":265.922793},{"name":"cycles:u","cnt":968178263.0},{"name":"instructions:u","cnt":1350763674.0},{"name":"faults","cnt":9321.0},{"name":"max-rss","cnt":135004.0},{"name":"wall-time","cnt":0.219880845},{"name":"task-clock","cnt":265.907653}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":7342.0},{"name":"cpu-clock","cnt":64.095082},{"name":"wall-time","cnt":0.080407426},{"name":"max-rss","cnt":111396.0},{"name":"cycles:u","cnt":187647136.0},{"name":"instructions:u","cnt":267926718.0},{"name":"task-clock","cnt":64.099156}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":1587303881.0},{"name":"faults","cnt":12224.0},{"name":"wall-time","cnt":0.438561871},{"name":"instructions:u","cnt":1909315722.0},{"name":"max-rss","cnt":144168.0},{"name":"cpu-clock","cnt":420.468254},{"name":"task-clock","cnt":420.468387}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":18732.0},{"name":"cycles:u","cnt":2045395450.0},{"name":"instructions:u","cnt":2446285021.0},{"name":"cpu-clock","cnt":543.632367},{"name":"wall-time","cnt":0.561483649},{"name":"max-rss","cnt":171176.0},{"name":"task-clock","cnt":543.633968}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":162532.0},{"name":"cpu-clock","cnt":183.005218},{"name":"task-clock","cnt":183.007696},{"name":"faults","cnt":18294.0},{"name":"wall-time","cnt":0.192155304},{"name":"instructions:u","cnt":858851336.0},{"name":"cycles:u","cnt":611779106.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":680347763.0},{"name":"cpu-clock","cnt":200.772968},{"name":"instructions:u","cnt":925757717.0},{"name":"wall-time","cnt":0.20931345},{"name":"max-rss","cnt":168912.0},{"name":"task-clock","cnt":200.784703},{"name":"faults","cnt":18280.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1869.92138},{"name":"wall-time","cnt":0.902657035},{"name":"instructions:u","cnt":7702214702.0},{"name":"cpu-clock","cnt":1869.919112},{"name":"max-rss","cnt":229408.0},{"name":"faults","cnt":31594.0},{"name":"cycles:u","cnt":7013087746.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":36674.0},{"name":"cycles:u","cnt":8577905419.0},{"name":"task-clock","cnt":2311.226},{"name":"max-rss","cnt":248624.0},{"name":"wall-time","cnt":1.128654893},{"name":"cpu-clock","cnt":2311.231972},{"name":"instructions:u","cnt":9462954998.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1182391660.0},{"name":"faults","cnt":22998.0},{"name":"wall-time","cnt":0.267054964},{"name":"cycles:u","cnt":871885041.0},{"name":"task-clock","cnt":276.463878},{"name":"max-rss","cnt":188788.0},{"name":"cpu-clock","cnt":276.40651}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":299.833174},{"name":"wall-time","cnt":0.311292987},{"name":"max-rss","cnt":195616.0},{"name":"faults","cnt":23452.0},{"name":"cycles:u","cnt":962192046.0},{"name":"instructions:u","cnt":1288844253.0},{"name":"task-clock","cnt":299.889952}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":1.429952972},{"name":"instructions:u","cnt":18207124193.0},{"name":"cycles:u","cnt":20093895584.0},{"name":"faults","cnt":33914.0},{"name":"cpu-clock","cnt":5331.407256},{"name":"max-rss","cnt":238588.0},{"name":"task-clock","cnt":5331.411355}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":5958.019699},{"name":"cycles:u","cnt":22353041450.0},{"name":"max-rss","cnt":260044.0},{"name":"faults","cnt":39561.0},{"name":"instructions:u","cnt":20238740665.0},{"name":"wall-time","cnt":1.625173783},{"name":"task-clock","cnt":5958.001168}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.2625609},{"name":"cycles:u","cnt":884230881.0},{"name":"task-clock","cnt":270.97906},{"name":"max-rss","cnt":187660.0},{"name":"cpu-clock","cnt":270.930798},{"name":"instructions:u","cnt":1193680168.0},{"name":"faults","cnt":22997.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.354428389},{"name":"task-clock","cnt":382.581201},{"name":"cpu-clock","cnt":382.540512},{"name":"max-rss","cnt":200856.0},{"name":"cycles:u","cnt":1312512187.0},{"name":"instructions:u","cnt":1691327487.0},{"name":"faults","cnt":24273.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":2923429595.0},{"name":"faults","cnt":11831.0},{"name":"wall-time","cnt":0.77426218},{"name":"cpu-clock","cnt":756.053519},{"name":"task-clock","cnt":756.0545},{"name":"max-rss","cnt":140384.0},{"name":"instructions:u","cnt":3993433299.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.94458042},{"name":"faults","cnt":19217.0},{"name":"cpu-clock","cnt":926.315379},{"name":"task-clock","cnt":926.297588},{"name":"instructions:u","cnt":4694992452.0},{"name":"cycles:u","cnt":3565890904.0},{"name":"max-rss","cnt":170996.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":937566013.0},{"name":"cpu-clock","cnt":201.458205},{"name":"faults","cnt":18650.0},{"name":"max-rss","cnt":161960.0},{"name":"wall-time","cnt":0.245406968},{"name":"task-clock","cnt":201.451329},{"name":"cycles:u","cnt":678790385.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":200.7524},{"name":"max-rss","cnt":162592.0},{"name":"instructions:u","cnt":948057828.0},{"name":"task-clock","cnt":200.753814},{"name":"faults","cnt":18668.0},{"name":"wall-time","cnt":0.208271426},{"name":"cycles:u","cnt":679131488.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.917569657},{"name":"max-rss","cnt":165132.0},{"name":"task-clock","cnt":1082.305011},{"name":"cpu-clock","cnt":1082.300457},{"name":"cycles:u","cnt":4134947647.0},{"name":"instructions:u","cnt":5239039466.0},{"name":"faults","cnt":16096.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":6223775371.0},{"name":"cpu-clock","cnt":1330.389969},{"name":"cycles:u","cnt":5037998565.0},{"name":"max-rss","cnt":195332.0},{"name":"wall-time","cnt":1.120499164},{"name":"faults","cnt":23758.0},{"name":"task-clock","cnt":1330.384233}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":823433850.0},{"name":"cpu-clock","cnt":250.12535},{"name":"wall-time","cnt":0.268093964},{"name":"instructions:u","cnt":1113708442.0},{"name":"task-clock","cnt":250.139434},{"name":"max-rss","cnt":180648.0},{"name":"faults","cnt":21793.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":832715247.0},{"name":"max-rss","cnt":180772.0},{"name":"task-clock","cnt":253.451786},{"name":"instructions:u","cnt":1125422538.0},{"name":"faults","cnt":21767.0},{"name":"cpu-clock","cnt":253.416316},{"name":"wall-time","cnt":0.251454387}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":18007.0},{"name":"cpu-clock","cnt":1616.540702},{"name":"task-clock","cnt":1616.596386},{"name":"wall-time","cnt":0.976066524},{"name":"instructions:u","cnt":6601774374.0},{"name":"max-rss","cnt":173348.0},{"name":"cycles:u","cnt":6125842358.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1927.603988},{"name":"wall-time","cnt":1.181066097},{"name":"instructions:u","cnt":7664074004.0},{"name":"cycles:u","cnt":7270122876.0},{"name":"cpu-clock","cnt":1927.590579},{"name":"faults","cnt":25284.0},{"name":"max-rss","cnt":201872.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.262972907},{"name":"instructions:u","cnt":1107667894.0},{"name":"faults","cnt":21639.0},{"name":"task-clock","cnt":246.384989},{"name":"max-rss","cnt":179504.0},{"name":"cpu-clock","cnt":246.373138},{"name":"cycles:u","cnt":820216759.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":248.111396},{"name":"cpu-clock","cnt":248.075753},{"name":"instructions:u","cnt":1119321795.0},{"name":"wall-time","cnt":0.247343918},{"name":"faults","cnt":21761.0},{"name":"max-rss","cnt":180236.0},{"name":"cycles:u","cnt":824945902.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":4936.0},{"name":"wall-time","cnt":0.064185115},{"name":"cpu-clock","cnt":45.709009},{"name":"instructions:u","cnt":191720073.0},{"name":"cycles:u","cnt":131660877.0},{"name":"max-rss","cnt":100308.0},{"name":"task-clock","cnt":45.711128}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":105532.0},{"name":"faults","cnt":6131.0},{"name":"wall-time","cnt":0.068617913},{"name":"cpu-clock","cnt":50.889672},{"name":"instructions:u","cnt":216322739.0},{"name":"task-clock","cnt":50.892719},{"name":"cycles:u","cnt":147128498.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":119815948.0},{"name":"wall-time","cnt":0.060524946},{"name":"max-rss","cnt":90316.0},{"name":"faults","cnt":5567.0},{"name":"instructions:u","cnt":169156208.0},{"name":"cpu-clock","cnt":42.687336},{"name":"task-clock","cnt":42.689882}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":50.176008},{"name":"wall-time","cnt":0.06789661},{"name":"max-rss","cnt":105912.0},{"name":"instructions:u","cnt":209965253.0},{"name":"faults","cnt":6236.0},{"name":"cycles:u","cnt":143895755.0},{"name":"task-clock","cnt":50.178349}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":357788122.0},{"name":"task-clock","cnt":124.029771},{"name":"cpu-clock","cnt":124.015293},{"name":"max-rss","cnt":118780.0},{"name":"instructions:u","cnt":523157205.0},{"name":"faults","cnt":12047.0},{"name":"wall-time","cnt":0.131483808}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":124776.0},{"name":"cpu-clock","cnt":134.828878},{"name":"instructions:u","cnt":571008867.0},{"name":"wall-time","cnt":0.141359382},{"name":"task-clock","cnt":134.825882},{"name":"cycles:u","cnt":393242860.0},{"name":"faults","cnt":13460.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":112.276935},{"name":"wall-time","cnt":0.126125822},{"name":"cycles:u","cnt":309049652.0},{"name":"faults","cnt":12749.0},{"name":"cpu-clock","cnt":112.235419},{"name":"max-rss","cnt":108308.0},{"name":"instructions:u","cnt":473704163.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.139324445},{"name":"faults","cnt":13637.0},{"name":"max-rss","cnt":126348.0},{"name":"cpu-clock","cnt":133.099516},{"name":"cycles:u","cnt":384058499.0},{"name":"task-clock","cnt":133.096365},{"name":"instructions:u","cnt":550593308.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":128.294044},{"name":"task-clock","cnt":128.288218},{"name":"instructions:u","cnt":549607670.0},{"name":"cycles:u","cnt":376610922.0},{"name":"faults","cnt":12069.0},{"name":"wall-time","cnt":0.135568511},{"name":"max-rss","cnt":121772.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":137.743176},{"name":"faults","cnt":13380.0},{"name":"instructions:u","cnt":596960595.0},{"name":"max-rss","cnt":127516.0},{"name":"cycles:u","cnt":407203643.0},{"name":"cpu-clock","cnt":137.736504},{"name":"wall-time","cnt":0.144501616}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":108004.0},{"name":"faults","cnt":12483.0},{"name":"instructions:u","cnt":471315101.0},{"name":"wall-time","cnt":0.124168599},{"name":"cpu-clock","cnt":109.398556},{"name":"cycles:u","cnt":307105309.0},{"name":"task-clock","cnt":109.414255}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":136.079785},{"name":"wall-time","cnt":0.141703142},{"name":"faults","cnt":13656.0},{"name":"cycles:u","cnt":400219177.0},{"name":"max-rss","cnt":128764.0},{"name":"instructions:u","cnt":577870234.0},{"name":"task-clock","cnt":136.075975}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1634.716026},{"name":"instructions:u","cnt":9335526458.0},{"name":"task-clock","cnt":1634.716814},{"name":"wall-time","cnt":1.685178694},{"name":"faults","cnt":35905.0},{"name":"cycles:u","cnt":6331154641.0},{"name":"max-rss","cnt":230400.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":257752.0},{"name":"instructions:u","cnt":11840728660.0},{"name":"cycles:u","cnt":7718163967.0},{"name":"cpu-clock","cnt":1992.563988},{"name":"task-clock","cnt":1992.565078},{"name":"faults","cnt":42120.0},{"name":"wall-time","cnt":2.044660517}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":613.62134},{"name":"max-rss","cnt":237648.0},{"name":"cycles:u","cnt":2233940282.0},{"name":"wall-time","cnt":0.616135101},{"name":"instructions:u","cnt":3961530190.0},{"name":"faults","cnt":37154.0},{"name":"cpu-clock","cnt":613.621118}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":728.337625},{"name":"max-rss","cnt":248472.0},{"name":"wall-time","cnt":0.73102859},{"name":"instructions:u","cnt":4494745816.0},{"name":"cycles:u","cnt":2679953863.0},{"name":"cpu-clock","cnt":728.33594},{"name":"faults","cnt":38378.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":13384519708.0},{"name":"cpu-clock","cnt":2619.062468},{"name":"faults","cnt":50140.0},{"name":"task-clock","cnt":2619.057248},{"name":"max-rss","cnt":297080.0},{"name":"wall-time","cnt":2.084584029},{"name":"cycles:u","cnt":10016652363.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":11937376075.0},{"name":"cpu-clock","cnt":3144.683729},{"name":"max-rss","cnt":342780.0},{"name":"wall-time","cnt":2.531786213},{"name":"instructions:u","cnt":16667409706.0},{"name":"faults","cnt":61910.0},{"name":"task-clock","cnt":3144.648534}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":762.778653},{"name":"instructions:u","cnt":4502302461.0},{"name":"faults","cnt":48345.0},{"name":"cycles:u","cnt":2691691532.0},{"name":"max-rss","cnt":295884.0},{"name":"wall-time","cnt":0.747300988},{"name":"cpu-clock","cnt":762.723991}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":3125053850.0},{"name":"cpu-clock","cnt":874.769421},{"name":"wall-time","cnt":0.854531775},{"name":"instructions:u","cnt":5073675535.0},{"name":"faults","cnt":50665.0},{"name":"max-rss","cnt":309648.0},{"name":"task-clock","cnt":874.836687}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":7250.033621},{"name":"cycles:u","cnt":27280969822.0},{"name":"faults","cnt":78821.0},{"name":"instructions:u","cnt":27092624203.0},{"name":"cpu-clock","cnt":7249.999511},{"name":"max-rss","cnt":388292.0},{"name":"wall-time","cnt":2.761035056}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":3.03185021},{"name":"faults","cnt":70719.0},{"name":"cycles:u","cnt":27934595499.0},{"name":"cpu-clock","cnt":7396.741605},{"name":"instructions:u","cnt":28166832351.0},{"name":"task-clock","cnt":7396.753645},{"name":"max-rss","cnt":376224.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":779.359739},{"name":"faults","cnt":50570.0},{"name":"wall-time","cnt":0.746582486},{"name":"instructions:u","cnt":4624175464.0},{"name":"task-clock","cnt":779.389838},{"name":"cycles:u","cnt":2773290337.0},{"name":"max-rss","cnt":303028.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":937.528286},{"name":"max-rss","cnt":317108.0},{"name":"cycles:u","cnt":3380077532.0},{"name":"faults","cnt":52244.0},{"name":"instructions:u","cnt":5305168948.0},{"name":"wall-time","cnt":0.87122129},{"name":"cpu-clock","cnt":937.478158}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":1.145646752},{"name":"faults","cnt":21329.0},{"name":"task-clock","cnt":1119.092919},{"name":"instructions:u","cnt":4735576653.0},{"name":"max-rss","cnt":179932.0},{"name":"cpu-clock","cnt":1119.093061},{"name":"cycles:u","cnt":4308686048.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":34424.0},{"name":"max-rss","cnt":232848.0},{"name":"cpu-clock","cnt":1418.299434},{"name":"task-clock","cnt":1418.291205},{"name":"instructions:u","cnt":6061611232.0},{"name":"cycles:u","cnt":5450476569.0},{"name":"wall-time","cnt":1.453009431}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":33378.0},{"name":"instructions:u","cnt":1914521496.0},{"name":"max-rss","cnt":222356.0},{"name":"wall-time","cnt":0.443416075},{"name":"cycles:u","cnt":1526805548.0},{"name":"cpu-clock","cnt":432.738103},{"name":"task-clock","cnt":432.738819}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1619609019.0},{"name":"max-rss","cnt":231500.0},{"name":"instructions:u","cnt":2002209359.0},{"name":"faults","cnt":34091.0},{"name":"cpu-clock","cnt":455.017732},{"name":"wall-time","cnt":0.449293236},{"name":"task-clock","cnt":455.009694}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":17263207233.0},{"name":"cpu-clock","cnt":4312.942739},{"name":"faults","cnt":50700.0},{"name":"wall-time","cnt":2.245514897},{"name":"max-rss","cnt":307964.0},{"name":"cycles:u","cnt":16370621492.0},{"name":"task-clock","cnt":4312.924025}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.727967171},{"name":"task-clock","cnt":5382.924647},{"name":"instructions:u","cnt":20580453043.0},{"name":"cycles:u","cnt":20179633375.0},{"name":"max-rss","cnt":363636.0},{"name":"faults","cnt":64324.0},{"name":"cpu-clock","cnt":5382.889137}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":710.963218},{"name":"instructions:u","cnt":2869059822.0},{"name":"max-rss","cnt":298572.0},{"name":"cycles:u","cnt":2410730879.0},{"name":"faults","cnt":46428.0},{"name":"wall-time","cnt":0.684730362},{"name":"task-clock","cnt":711.071951}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2534005678.0},{"name":"task-clock","cnt":744.434782},{"name":"max-rss","cnt":308240.0},{"name":"faults","cnt":47326.0},{"name":"wall-time","cnt":0.687844267},{"name":"cpu-clock","cnt":744.320345},{"name":"instructions:u","cnt":3000340416.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":59183581602.0},{"name":"max-rss","cnt":298132.0},{"name":"task-clock","cnt":15651.760619},{"name":"wall-time","cnt":3.514645814},{"name":"cpu-clock","cnt":15651.74891},{"name":"faults","cnt":49200.0},{"name":"instructions:u","cnt":47180997281.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":55113051623.0},{"name":"wall-time","cnt":4.0797771},{"name":"max-rss","cnt":343624.0},{"name":"cycles:u","cnt":69480250734.0},{"name":"faults","cnt":63441.0},{"name":"task-clock","cnt":18461.88753},{"name":"cpu-clock","cnt":18461.894728}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2939417984.0},{"name":"cycles:u","cnt":2443093267.0},{"name":"task-clock","cnt":711.731342},{"name":"max-rss","cnt":289320.0},{"name":"wall-time","cnt":0.675562997},{"name":"faults","cnt":48202.0},{"name":"cpu-clock","cnt":711.636554}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":6936398186.0},{"name":"max-rss","cnt":323516.0},{"name":"cycles:u","cnt":6405651244.0},{"name":"cpu-clock","cnt":1752.894858},{"name":"faults","cnt":55095.0},{"name":"task-clock","cnt":1752.984103},{"name":"wall-time","cnt":1.199664322}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":29086.0},{"name":"task-clock","cnt":1567.861798},{"name":"instructions:u","cnt":12105698811.0},{"name":"cycles:u","cnt":6102620148.0},{"name":"cpu-clock","cnt":1567.861121},{"name":"max-rss","cnt":181632.0},{"name":"wall-time","cnt":1.603282929}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":12840891054.0},{"name":"faults","cnt":31556.0},{"name":"cycles:u","cnt":6546941872.0},{"name":"cpu-clock","cnt":1681.712977},{"name":"max-rss","cnt":191156.0},{"name":"task-clock","cnt":1681.714778},{"name":"wall-time","cnt":1.715896341}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":133632.0},{"name":"faults","cnt":13372.0},{"name":"instructions:u","cnt":828444730.0},{"name":"cpu-clock","cnt":157.584639},{"name":"task-clock","cnt":157.585388},{"name":"wall-time","cnt":0.18885255},{"name":"cycles:u","cnt":536923219.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":12712385596.0},{"name":"cpu-clock","cnt":1648.2779},{"name":"max-rss","cnt":200716.0},{"name":"wall-time","cnt":1.661339542},{"name":"task-clock","cnt":1648.288889},{"name":"cycles:u","cnt":6404395860.0},{"name":"faults","cnt":33346.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":2.378625847},{"name":"max-rss","cnt":288448.0},{"name":"instructions:u","cnt":16639157848.0},{"name":"task-clock","cnt":2564.798018},{"name":"cycles:u","cnt":9864422887.0},{"name":"cpu-clock","cnt":2564.785273},{"name":"faults","cnt":55568.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.508167154},{"name":"max-rss","cnt":318100.0},{"name":"task-clock","cnt":2788.580935},{"name":"instructions:u","cnt":17854068804.0},{"name":"cycles:u","cnt":10685459973.0},{"name":"faults","cnt":62756.0},{"name":"cpu-clock","cnt":2788.558579}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":221.1544},{"name":"instructions:u","cnt":1149189151.0},{"name":"cycles:u","cnt":731164334.0},{"name":"wall-time","cnt":0.243503823},{"name":"task-clock","cnt":221.182232},{"name":"faults","cnt":18106.0},{"name":"max-rss","cnt":158960.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2764.515924},{"name":"cpu-clock","cnt":2764.523489},{"name":"wall-time","cnt":2.462543097},{"name":"cycles:u","cnt":10578979718.0},{"name":"faults","cnt":62890.0},{"name":"instructions:u","cnt":17643686102.0},{"name":"max-rss","cnt":321912.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":8244.397388},{"name":"instructions:u","cnt":51767345110.0},{"name":"faults","cnt":71390.0},{"name":"max-rss","cnt":328640.0},{"name":"wall-time","cnt":7.990959373},{"name":"cycles:u","cnt":32430191030.0},{"name":"task-clock","cnt":8244.393011}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":33012511468.0},{"name":"wall-time","cnt":8.112124703},{"name":"faults","cnt":75051.0},{"name":"instructions:u","cnt":52830678527.0},{"name":"max-rss","cnt":329656.0},{"name":"cpu-clock","cnt":8398.21049},{"name":"task-clock","cnt":8398.201691}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":212.998604},{"name":"wall-time","cnt":0.237920133},{"name":"max-rss","cnt":155796.0},{"name":"task-clock","cnt":212.98457},{"name":"cycles:u","cnt":715975710.0},{"name":"faults","cnt":17474.0},{"name":"instructions:u","cnt":1121891922.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":7897.616566},{"name":"instructions:u","cnt":50411810718.0},{"name":"cpu-clock","cnt":7897.613664},{"name":"wall-time","cnt":7.874474027},{"name":"faults","cnt":74881.0},{"name":"max-rss","cnt":344344.0},{"name":"cycles:u","cnt":30925538526.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":73.295125},{"name":"faults","cnt":6127.0},{"name":"cycles:u","cnt":233264557.0},{"name":"max-rss","cnt":116236.0},{"name":"task-clock","cnt":73.296154},{"name":"wall-time","cnt":0.091121856},{"name":"instructions:u","cnt":346155768.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":123944.0},{"name":"cycles:u","cnt":291613642.0},{"name":"faults","cnt":7869.0},{"name":"cpu-clock","cnt":90.026894},{"name":"wall-time","cnt":0.108031592},{"name":"instructions:u","cnt":418622159.0},{"name":"task-clock","cnt":90.028928}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":177097330.0},{"name":"instructions:u","cnt":257948432.0},{"name":"max-rss","cnt":109500.0},{"name":"faults","cnt":7579.0},{"name":"wall-time","cnt":0.077468665},{"name":"cpu-clock","cnt":60.388229},{"name":"task-clock","cnt":60.371276}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":84.441169},{"name":"faults","cnt":8219.0},{"name":"cycles:u","cnt":266588034.0},{"name":"max-rss","cnt":126204.0},{"name":"wall-time","cnt":0.101440572},{"name":"instructions:u","cnt":382150921.0},{"name":"task-clock","cnt":84.44357}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":125968.0},{"name":"instructions:u","cnt":381604504.0},{"name":"task-clock","cnt":83.364861},{"name":"wall-time","cnt":0.100153624},{"name":"faults","cnt":8211.0},{"name":"cycles:u","cnt":263757406.0},{"name":"cpu-clock","cnt":83.362824}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":344155316.0},{"name":"wall-time","cnt":0.092777168},{"name":"cycles:u","cnt":235231450.0},{"name":"max-rss","cnt":125616.0},{"name":"faults","cnt":8201.0},{"name":"cpu-clock","cnt":76.091211},{"name":"task-clock","cnt":76.094224}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"wall-time","cnt":0.09940463},{"name":"task-clock","cnt":82.618148},{"name":"cpu-clock","cnt":82.606524},{"name":"faults","cnt":8202.0},{"name":"instructions:u","cnt":381641812.0},{"name":"cycles:u","cnt":261155876.0},{"name":"max-rss","cnt":125660.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":8215.0},{"name":"instructions:u","cnt":383005398.0},{"name":"wall-time","cnt":0.100906195},{"name":"cpu-clock","cnt":84.038218},{"name":"cycles:u","cnt":267345068.0},{"name":"max-rss","cnt":126216.0},{"name":"task-clock","cnt":84.032211}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"wall-time","cnt":0.147756103},{"name":"cycles:u","cnt":813202238.0},{"name":"task-clock","cnt":236.275453},{"name":"max-rss","cnt":138948.0},{"name":"faults","cnt":10068.0},{"name":"cpu-clock","cnt":236.259602},{"name":"instructions:u","cnt":958087625.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":907503266.0},{"name":"task-clock","cnt":263.325543},{"name":"instructions:u","cnt":1086608037.0},{"name":"faults","cnt":11698.0},{"name":"max-rss","cnt":146056.0},{"name":"wall-time","cnt":0.169944198},{"name":"cpu-clock","cnt":263.315716}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":8698.0},{"name":"instructions:u","cnt":320634343.0},{"name":"max-rss","cnt":122136.0},{"name":"cpu-clock","cnt":79.870196},{"name":"cycles:u","cnt":228542904.0},{"name":"task-clock","cnt":79.878938},{"name":"wall-time","cnt":0.092426807}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1028098997.0},{"name":"faults","cnt":12093.0},{"name":"task-clock","cnt":253.034777},{"name":"cycles:u","cnt":864199301.0},{"name":"cpu-clock","cnt":253.046191},{"name":"wall-time","cnt":0.160781325},{"name":"max-rss","cnt":148512.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"cpu-clock","cnt":241.706001},{"name":"faults","cnt":12282.0},{"name":"wall-time","cnt":0.151011081},{"name":"cycles:u","cnt":818451327.0},{"name":"instructions:u","cnt":957480218.0},{"name":"task-clock","cnt":241.713772},{"name":"max-rss","cnt":149020.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":148964.0},{"name":"cpu-clock","cnt":234.747373},{"name":"cycles:u","cnt":789672286.0},{"name":"wall-time","cnt":0.14213701},{"name":"task-clock","cnt":234.736702},{"name":"instructions:u","cnt":910608153.0},{"name":"faults","cnt":12239.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":148572.0},{"name":"faults","cnt":12191.0},{"name":"wall-time","cnt":0.153366624},{"name":"task-clock","cnt":244.841176},{"name":"instructions:u","cnt":960211542.0},{"name":"cpu-clock","cnt":244.83038},{"name":"cycles:u","cnt":828868371.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":966091087.0},{"name":"task-clock","cnt":245.315367},{"name":"cycles:u","cnt":834378590.0},{"name":"wall-time","cnt":0.153664539},{"name":"cpu-clock","cnt":245.329411},{"name":"faults","cnt":12053.0},{"name":"max-rss","cnt":148116.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"faults","cnt":11752.0},{"name":"cpu-clock","cnt":636.093907},{"name":"wall-time","cnt":0.269956222},{"name":"max-rss","cnt":146076.0},{"name":"instructions:u","cnt":2298269607.0},{"name":"task-clock","cnt":636.121479},{"name":"cycles:u","cnt":2336120901.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.288462866},{"name":"task-clock","cnt":682.110123},{"name":"instructions:u","cnt":2435841145.0},{"name":"cycles:u","cnt":2497272295.0},{"name":"cpu-clock","cnt":682.088621},{"name":"faults","cnt":13735.0},{"name":"max-rss","cnt":154464.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":77.655457},{"name":"cycles:u","cnt":227491306.0},{"name":"wall-time","cnt":0.091417549},{"name":"instructions:u","cnt":322331518.0},{"name":"cpu-clock","cnt":77.64161},{"name":"faults","cnt":8708.0},{"name":"max-rss","cnt":120444.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2332729465.0},{"name":"instructions:u","cnt":2362372341.0},{"name":"max-rss","cnt":156220.0},{"name":"cpu-clock","cnt":640.718719},{"name":"task-clock","cnt":640.717104},{"name":"faults","cnt":14013.0},{"name":"wall-time","cnt":0.301195616}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":1426836616.0},{"name":"cycles:u","cnt":1409266212.0},{"name":"cpu-clock","cnt":398.982763},{"name":"wall-time","cnt":0.18823112},{"name":"faults","cnt":13154.0},{"name":"max-rss","cnt":152772.0},{"name":"task-clock","cnt":398.968574}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1326680067.0},{"name":"wall-time","cnt":0.179562346},{"name":"cpu-clock","cnt":371.566441},{"name":"max-rss","cnt":151944.0},{"name":"task-clock","cnt":371.603065},{"name":"faults","cnt":13022.0},{"name":"cycles:u","cnt":1302427264.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":1311037391.0},{"name":"max-rss","cnt":152044.0},{"name":"task-clock","cnt":372.326662},{"name":"instructions:u","cnt":1359472289.0},{"name":"faults","cnt":12990.0},{"name":"wall-time","cnt":0.189836264},{"name":"cpu-clock","cnt":372.339751}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":13010.0},{"name":"max-rss","cnt":152024.0},{"name":"cycles:u","cnt":1349426281.0},{"name":"instructions:u","cnt":1366710599.0},{"name":"cpu-clock","cnt":382.491177},{"name":"wall-time","cnt":0.191728851},{"name":"task-clock","cnt":382.481741}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":5362.954644},{"name":"cycles:u","cnt":20866324120.0},{"name":"cpu-clock","cnt":5362.955737},{"name":"max-rss","cnt":501668.0},{"name":"faults","cnt":141197.0},{"name":"instructions:u","cnt":40654125485.0},{"name":"wall-time","cnt":5.380937033}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":5807.038959},{"name":"faults","cnt":147444.0},{"name":"max-rss","cnt":523724.0},{"name":"task-clock","cnt":5807.039256},{"name":"wall-time","cnt":5.841837369},{"name":"instructions:u","cnt":43258515073.0},{"name":"cycles:u","cnt":22452165882.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":473.472363},{"name":"max-rss","cnt":201984.0},{"name":"cpu-clock","cnt":473.471442},{"name":"wall-time","cnt":0.491049116},{"name":"faults","cnt":34045.0},{"name":"instructions:u","cnt":2011511645.0},{"name":"cycles:u","cnt":1661660895.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1228196.0},{"name":"instructions:u","cnt":51460982621.0},{"name":"wall-time","cnt":7.581888962},{"name":"cpu-clock","cnt":7574.640949},{"name":"faults","cnt":332135.0},{"name":"task-clock","cnt":7574.650461},{"name":"cycles:u","cnt":28960775998.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7999.93889},{"name":"instructions:u","cnt":54854423056.0},{"name":"cpu-clock","cnt":7999.939091},{"name":"max-rss","cnt":1253532.0},{"name":"wall-time","cnt":7.960155807},{"name":"cycles:u","cnt":30653465608.0},{"name":"faults","cnt":338760.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2719706232.0},{"name":"cycles:u","cnt":2005931207.0},{"name":"max-rss","cnt":239908.0},{"name":"wall-time","cnt":0.582100051},{"name":"faults","cnt":42470.0},{"name":"task-clock","cnt":567.659007},{"name":"cpu-clock","cnt":567.646213}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":26154056526.0},{"name":"faults","cnt":279589.0},{"name":"instructions:u","cnt":51889558135.0},{"name":"task-clock","cnt":6819.595007},{"name":"cpu-clock","cnt":6819.596703},{"name":"wall-time","cnt":6.820268607},{"name":"max-rss","cnt":998760.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7275.955073},{"name":"max-rss","cnt":1058372.0},{"name":"faults","cnt":286922.0},{"name":"task-clock","cnt":7275.955525},{"name":"cycles:u","cnt":27967024876.0},{"name":"wall-time","cnt":7.246770843},{"name":"instructions:u","cnt":55060914149.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":558.108826},{"name":"cycles:u","cnt":1981667641.0},{"name":"wall-time","cnt":0.573729114},{"name":"cpu-clock","cnt":558.107594},{"name":"faults","cnt":43614.0},{"name":"max-rss","cnt":243188.0},{"name":"instructions:u","cnt":2659962084.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmpOPs5lw)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x559c3a0083bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x559c3a008552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x559c3a00786c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x559c39fa3470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x559c39c91afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x559c39c99722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x559c39cab541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x559c39cbaa1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x559c39cb096e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x559c39c64e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x559c3a02f0d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x559c3a039d39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x559c3a02fc9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x559c39cbed57 - main\n  14:     0x7f770831a82f - __libc_start_main\n  15:     0x559c39c5a518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":26713.0},{"name":"instructions:u","cnt":8654597654.0},{"name":"cpu-clock","cnt":1825.898724},{"name":"cycles:u","cnt":7124684930.0},{"name":"wall-time","cnt":1.857757182},{"name":"max-rss","cnt":202364.0},{"name":"task-clock","cnt":1825.909119}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2281.331056},{"name":"wall-time","cnt":2.31833627},{"name":"faults","cnt":40407.0},{"name":"cpu-clock","cnt":2281.318834},{"name":"cycles:u","cnt":8863480184.0},{"name":"instructions:u","cnt":10654086981.0},{"name":"max-rss","cnt":258348.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":37132.0},{"name":"task-clock","cnt":487.264625},{"name":"max-rss","cnt":238364.0},{"name":"cpu-clock","cnt":487.26302},{"name":"wall-time","cnt":0.4939541},{"name":"instructions:u","cnt":2176958852.0},{"name":"cycles:u","cnt":1707333874.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2269507170.0},{"name":"cycles:u","cnt":1803525852.0},{"name":"task-clock","cnt":511.91314},{"name":"wall-time","cnt":0.50244207},{"name":"cpu-clock","cnt":511.912915},{"name":"faults","cnt":37589.0},{"name":"max-rss","cnt":247416.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":95981.0},{"name":"instructions:u","cnt":36608684627.0},{"name":"max-rss","cnt":475220.0},{"name":"cycles:u","cnt":35332229292.0},{"name":"wall-time","cnt":3.972854052},{"name":"cpu-clock","cnt":9355.96298},{"name":"task-clock","cnt":9355.939917}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":10477.016387},{"name":"cycles:u","cnt":39590799164.0},{"name":"faults","cnt":100202.0},{"name":"task-clock","cnt":10476.964353},{"name":"instructions:u","cnt":41055195473.0},{"name":"max-rss","cnt":507428.0},{"name":"wall-time","cnt":4.781952006}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":927.699903},{"name":"faults","cnt":62871.0},{"name":"wall-time","cnt":0.896774016},{"name":"cycles:u","cnt":3193887570.0},{"name":"max-rss","cnt":380476.0},{"name":"task-clock","cnt":927.785163},{"name":"instructions:u","cnt":3945812122.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1018.826896},{"name":"max-rss","cnt":391296.0},{"name":"faults","cnt":64241.0},{"name":"cpu-clock","cnt":1018.719375},{"name":"wall-time","cnt":0.96545035},{"name":"cycles:u","cnt":3521675127.0},{"name":"instructions:u","cnt":4243291188.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":120454968052.0},{"name":"faults","cnt":87216.0},{"name":"max-rss","cnt":433204.0},{"name":"cycles:u","cnt":148456881563.0},{"name":"wall-time","cnt":8.01459705},{"name":"task-clock","cnt":39221.511873},{"name":"cpu-clock","cnt":39221.548181}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":43219.624535},{"name":"cycles:u","cnt":163062727763.0},{"name":"task-clock","cnt":43219.555379},{"name":"max-rss","cnt":500000.0},{"name":"wall-time","cnt":8.309011552},{"name":"instructions:u","cnt":128422128814.0},{"name":"faults","cnt":106902.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4038732864.0},{"name":"max-rss","cnt":362376.0},{"name":"task-clock","cnt":956.305839},{"name":"cpu-clock","cnt":956.24066},{"name":"cycles:u","cnt":3358670606.0},{"name":"faults","cnt":64788.0},{"name":"wall-time","cnt":0.910923933}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":6245016706.0},{"name":"cpu-clock","cnt":1426.82388},{"name":"max-rss","cnt":379248.0},{"name":"faults","cnt":66786.0},{"name":"task-clock","cnt":1426.922547},{"name":"cycles:u","cnt":5210941716.0},{"name":"wall-time","cnt":1.302280033}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":3568857020.0},{"name":"faults","cnt":19033.0},{"name":"cpu-clock","cnt":932.625833},{"name":"task-clock","cnt":932.625954},{"name":"max-rss","cnt":171316.0},{"name":"wall-time","cnt":0.950849826},{"name":"instructions:u","cnt":3959201107.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1182.080109},{"name":"faults","cnt":30012.0},{"name":"max-rss","cnt":214964.0},{"name":"cycles:u","cnt":4534266288.0},{"name":"cpu-clock","cnt":1182.068609},{"name":"wall-time","cnt":1.237889145},{"name":"instructions:u","cnt":5066948713.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":335.33183},{"name":"instructions:u","cnt":1502502450.0},{"name":"cpu-clock","cnt":335.344183},{"name":"wall-time","cnt":0.333503989},{"name":"faults","cnt":26303.0},{"name":"cycles:u","cnt":1179926481.0},{"name":"max-rss","cnt":193652.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":216140.0},{"name":"cycles:u","cnt":1845931430.0},{"name":"task-clock","cnt":514.160646},{"name":"cpu-clock","cnt":514.150571},{"name":"instructions:u","cnt":2255218649.0},{"name":"faults","cnt":29988.0},{"name":"wall-time","cnt":0.538568691}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"task-clock","cnt":339.813249},{"name":"cpu-clock","cnt":339.811872},{"name":"faults","cnt":26740.0},{"name":"instructions:u","cnt":1554335775.0},{"name":"wall-time","cnt":0.337047918},{"name":"cycles:u","cnt":1196126389.0},{"name":"max-rss","cnt":202056.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"instructions:u","cnt":1601161198.0},{"name":"task-clock","cnt":356.639352},{"name":"wall-time","cnt":0.380663509},{"name":"cycles:u","cnt":1226578694.0},{"name":"faults","cnt":27069.0},{"name":"max-rss","cnt":204592.0},{"name":"cpu-clock","cnt":356.639159}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"task-clock","cnt":515.90982},{"name":"cpu-clock","cnt":515.908795},{"name":"faults","cnt":29980.0},{"name":"max-rss","cnt":215888.0},{"name":"cycles:u","cnt":1880406644.0},{"name":"wall-time","cnt":0.514512282},{"name":"instructions:u","cnt":2278334933.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":2275239804.0},{"name":"cycles:u","cnt":1879760983.0},{"name":"task-clock","cnt":514.693068},{"name":"max-rss","cnt":216168.0},{"name":"cpu-clock","cnt":514.691996},{"name":"wall-time","cnt":0.536618514},{"name":"faults","cnt":30017.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"instructions:u","cnt":1539820588.0},{"name":"max-rss","cnt":202124.0},{"name":"faults","cnt":26717.0},{"name":"cpu-clock","cnt":344.105028},{"name":"wall-time","cnt":0.340348562},{"name":"task-clock","cnt":344.106061},{"name":"cycles:u","cnt":1210239911.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"instructions:u","cnt":1983195147.0},{"name":"faults","cnt":29529.0},{"name":"task-clock","cnt":443.083249},{"name":"cycles:u","cnt":1582842458.0},{"name":"max-rss","cnt":213800.0},{"name":"wall-time","cnt":0.461998965},{"name":"cpu-clock","cnt":443.082737}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":1724796176.0},{"name":"task-clock","cnt":380.57507},{"name":"faults","cnt":27240.0},{"name":"wall-time","cnt":0.38076352},{"name":"cpu-clock","cnt":380.585615},{"name":"max-rss","cnt":204720.0},{"name":"cycles:u","cnt":1352594510.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"max-rss","cnt":213472.0},{"name":"wall-time","cnt":0.428112409},{"name":"cpu-clock","cnt":406.858217},{"name":"cycles:u","cnt":1437539308.0},{"name":"faults","cnt":29416.0},{"name":"instructions:u","cnt":1775842485.0},{"name":"task-clock","cnt":406.859493}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"faults","cnt":78964.0},{"name":"wall-time","cnt":2.200946317},{"name":"max-rss","cnt":410736.0},{"name":"task-clock","cnt":7277.549837},{"name":"cpu-clock","cnt":7277.56311},{"name":"cycles:u","cnt":27216171304.0},{"name":"instructions:u","cnt":22833339807.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7868.61431},{"name":"wall-time","cnt":2.628655629},{"name":"faults","cnt":78559.0},{"name":"max-rss","cnt":415700.0},{"name":"instructions:u","cnt":25687852348.0},{"name":"cycles:u","cnt":29422489859.0},{"name":"task-clock","cnt":7868.57278}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2260420507.0},{"name":"task-clock","cnt":540.458276},{"name":"cpu-clock","cnt":540.409046},{"name":"faults","cnt":41736.0},{"name":"cycles:u","cnt":1801622912.0},{"name":"max-rss","cnt":275456.0},{"name":"wall-time","cnt":0.516094064}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.999261597},{"name":"task-clock","cnt":1745.420361},{"name":"instructions:u","cnt":6864721099.0},{"name":"cycles:u","cnt":6338241099.0},{"name":"faults","cnt":55597.0},{"name":"max-rss","cnt":333692.0},{"name":"cpu-clock","cnt":1745.368349}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"cpu-clock","cnt":563.327774},{"name":"wall-time","cnt":0.531882172},{"name":"faults","cnt":42006.0},{"name":"cycles:u","cnt":1888444125.0},{"name":"instructions:u","cnt":2342154704.0},{"name":"task-clock","cnt":563.395458},{"name":"max-rss","cnt":283968.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"wall-time","cnt":0.634520362},{"name":"max-rss","cnt":295164.0},{"name":"task-clock","cnt":741.629242},{"name":"cpu-clock","cnt":741.555839},{"name":"instructions:u","cnt":3075094660.0},{"name":"cycles:u","cnt":2569499807.0},{"name":"faults","cnt":44930.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"faults","cnt":55569.0},{"name":"wall-time","cnt":0.991765685},{"name":"cycles:u","cnt":6369623468.0},{"name":"cpu-clock","cnt":1746.743968},{"name":"max-rss","cnt":333532.0},{"name":"instructions:u","cnt":6897065676.0},{"name":"task-clock","cnt":1746.818921}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1758.483818},{"name":"faults","cnt":56136.0},{"name":"max-rss","cnt":335368.0},{"name":"instructions:u","cnt":6889495574.0},{"name":"cycles:u","cnt":6401374649.0},{"name":"task-clock","cnt":1758.536395},{"name":"wall-time","cnt":0.971306801}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"faults","cnt":41998.0},{"name":"wall-time","cnt":0.519610239},{"name":"cpu-clock","cnt":543.059903},{"name":"instructions:u","cnt":2286597862.0},{"name":"cycles:u","cnt":1827368145.0},{"name":"task-clock","cnt":543.130248},{"name":"max-rss","cnt":278756.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"max-rss","cnt":429836.0},{"name":"instructions:u","cnt":17613844235.0},{"name":"task-clock","cnt":5457.362174},{"name":"wall-time","cnt":1.492952622},{"name":"cpu-clock","cnt":5457.336616},{"name":"faults","cnt":81356.0},{"name":"cycles:u","cnt":20192003930.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":16941295441.0},{"name":"task-clock","cnt":5309.740462},{"name":"max-rss","cnt":430224.0},{"name":"cycles:u","cnt":19636564977.0},{"name":"wall-time","cnt":1.389290104},{"name":"cpu-clock","cnt":5309.757337},{"name":"faults","cnt":81754.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cpu-clock","cnt":861.967129},{"name":"faults","cnt":47863.0},{"name":"task-clock","cnt":862.054433},{"name":"max-rss","cnt":306704.0},{"name":"instructions:u","cnt":3682377223.0},{"name":"wall-time","cnt":0.660566589},{"name":"cycles:u","cnt":3011755218.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"task-clock","cnt":22191.122451},{"name":"cpu-clock","cnt":22191.160156},{"name":"faults","cnt":64092.0},{"name":"max-rss","cnt":351568.0},{"name":"instructions:u","cnt":66136372973.0},{"name":"cycles:u","cnt":83880657453.0},{"name":"wall-time","cnt":4.558934929}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.945829573},{"name":"cpu-clock","cnt":24183.876283},{"name":"faults","cnt":74918.0},{"name":"cycles:u","cnt":91222981086.0},{"name":"max-rss","cnt":390060.0},{"name":"instructions:u","cnt":71809146031.0},{"name":"task-clock","cnt":24183.820583}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":538.633689},{"name":"faults","cnt":41215.0},{"name":"cpu-clock","cnt":538.572938},{"name":"wall-time","cnt":0.509006568},{"name":"instructions:u","cnt":2284530181.0},{"name":"max-rss","cnt":261332.0},{"name":"cycles:u","cnt":1842446756.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":52252277434.0},{"name":"wall-time","cnt":2.983721338},{"name":"instructions:u","cnt":41865608953.0},{"name":"faults","cnt":75073.0},{"name":"task-clock","cnt":13906.004045},{"name":"cpu-clock","cnt":13906.00233},{"name":"max-rss","cnt":395888.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"cycles:u","cnt":2097055394.0},{"name":"instructions:u","cnt":2571460916.0},{"name":"cpu-clock","cnt":603.598131},{"name":"max-rss","cnt":274148.0},{"name":"wall-time","cnt":0.51891377},{"name":"task-clock","cnt":603.648819},{"name":"faults","cnt":42258.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"task-clock","cnt":620.176358},{"name":"cpu-clock","cnt":620.126789},{"name":"instructions:u","cnt":2614642456.0},{"name":"wall-time","cnt":0.5528057},{"name":"cycles:u","cnt":2150098181.0},{"name":"faults","cnt":42333.0},{"name":"max-rss","cnt":274692.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"task-clock","cnt":13879.719422},{"name":"faults","cnt":75125.0},{"name":"cycles:u","cnt":52215555938.0},{"name":"max-rss","cnt":396368.0},{"name":"cpu-clock","cnt":13879.73574},{"name":"instructions:u","cnt":41901716922.0},{"name":"wall-time","cnt":2.974517302}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"wall-time","cnt":2.939824668},{"name":"faults","cnt":74933.0},{"name":"max-rss","cnt":395596.0},{"name":"cpu-clock","cnt":13868.053408},{"name":"task-clock","cnt":13868.029613},{"name":"cycles:u","cnt":52176991306.0},{"name":"instructions:u","cnt":41902032752.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"wall-time","cnt":0.509605387},{"name":"cycles:u","cnt":1845262006.0},{"name":"instructions:u","cnt":2312071355.0},{"name":"max-rss","cnt":264352.0},{"name":"faults","cnt":41481.0},{"name":"cpu-clock","cnt":541.443307},{"name":"task-clock","cnt":541.488303}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"faults","cnt":76705.0},{"name":"max-rss","cnt":404596.0},{"name":"cpu-clock","cnt":18956.649527},{"name":"cycles:u","cnt":71343796574.0},{"name":"instructions:u","cnt":58123786889.0},{"name":"task-clock","cnt":18956.634842},{"name":"wall-time","cnt":3.574752264}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":57892341961.0},{"name":"faults","cnt":76547.0},{"name":"cpu-clock","cnt":19077.064843},{"name":"task-clock","cnt":19077.050744},{"name":"max-rss","cnt":401828.0},{"name":"wall-time","cnt":3.487440825},{"name":"cycles:u","cnt":71787785160.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"instructions:u","cnt":12857159787.0},{"name":"max-rss","cnt":328864.0},{"name":"cycles:u","cnt":9768311463.0},{"name":"wall-time","cnt":1.916625521},{"name":"task-clock","cnt":2580.878854},{"name":"faults","cnt":56660.0},{"name":"cpu-clock","cnt":2580.828004}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":125524.0},{"name":"wall-time","cnt":0.257882765},{"name":"task-clock","cnt":239.849242},{"name":"faults","cnt":8024.0},{"name":"instructions:u","cnt":1220489154.0},{"name":"cycles:u","cnt":889368665.0},{"name":"cpu-clock","cnt":239.847898}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":297.395327},{"name":"max-rss","cnt":140140.0},{"name":"faults","cnt":11218.0},{"name":"instructions:u","cnt":1490338015.0},{"name":"task-clock","cnt":297.397261},{"name":"cycles:u","cnt":1101685955.0},{"name":"wall-time","cnt":0.316018835}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.101791625},{"name":"instructions:u","cnt":398872543.0},{"name":"cpu-clock","cnt":87.766501},{"name":"task-clock","cnt":87.768657},{"name":"cycles:u","cnt":270097746.0},{"name":"max-rss","cnt":122764.0},{"name":"faults","cnt":10679.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":367602230.0},{"name":"instructions:u","cnt":514463613.0},{"name":"cpu-clock","cnt":113.920588},{"name":"max-rss","cnt":139928.0},{"name":"faults","cnt":11314.0},{"name":"task-clock","cnt":113.923481},{"name":"wall-time","cnt":0.127069845}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7605693979.0},{"name":"faults","cnt":28698.0},{"name":"max-rss","cnt":216736.0},{"name":"cpu-clock","cnt":1898.581799},{"name":"wall-time","cnt":0.883594387},{"name":"cycles:u","cnt":7077557700.0},{"name":"task-clock","cnt":1898.578577}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2105.398533},{"name":"max-rss","cnt":233072.0},{"name":"cpu-clock","cnt":2105.423614},{"name":"wall-time","cnt":1.033201245},{"name":"instructions:u","cnt":8486175529.0},{"name":"faults","cnt":32434.0},{"name":"cycles:u","cnt":7860269724.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":17500.0},{"name":"max-rss","cnt":166976.0},{"name":"task-clock","cnt":208.453722},{"name":"wall-time","cnt":0.227392654},{"name":"instructions:u","cnt":852107201.0},{"name":"cpu-clock","cnt":208.42028},{"name":"cycles:u","cnt":670476590.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":252.45249},{"name":"wall-time","cnt":0.238483313},{"name":"task-clock","cnt":252.474073},{"name":"instructions:u","cnt":1059247600.0},{"name":"max-rss","cnt":189316.0},{"name":"cycles:u","cnt":826222651.0},{"name":"faults","cnt":19684.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":24883843441.0},{"name":"cpu-clock","cnt":6924.429572},{"name":"cycles:u","cnt":26413722113.0},{"name":"faults","cnt":29156.0},{"name":"max-rss","cnt":215736.0},{"name":"task-clock","cnt":6924.427883},{"name":"wall-time","cnt":2.6386493}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.783369627},{"name":"cpu-clock","cnt":7373.301881},{"name":"task-clock","cnt":7373.306381},{"name":"cycles:u","cnt":28057219025.0},{"name":"faults","cnt":35234.0},{"name":"instructions:u","cnt":26058245429.0},{"name":"max-rss","cnt":236508.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":205.593114},{"name":"faults","cnt":18585.0},{"name":"instructions:u","cnt":859364682.0},{"name":"wall-time","cnt":0.223698433},{"name":"task-clock","cnt":205.602688},{"name":"cycles:u","cnt":675209811.0},{"name":"max-rss","cnt":164028.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":30514.0},{"name":"cpu-clock","cnt":2517.11726},{"name":"instructions:u","cnt":10120794676.0},{"name":"wall-time","cnt":1.387707207},{"name":"cycles:u","cnt":9531899574.0},{"name":"task-clock","cnt":2517.120378},{"name":"max-rss","cnt":222544.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3474406267.0},{"name":"cpu-clock","cnt":758.67485},{"name":"faults","cnt":17509.0},{"name":"wall-time","cnt":0.799655861},{"name":"task-clock","cnt":758.675848},{"name":"cycles:u","cnt":2911381454.0},{"name":"max-rss","cnt":167248.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":206020.0},{"name":"wall-time","cnt":1.022111784},{"name":"cycles:u","cnt":3732102917.0},{"name":"faults","cnt":26964.0},{"name":"task-clock","cnt":977.258376},{"name":"instructions:u","cnt":4457685272.0},{"name":"cpu-clock","cnt":977.27038}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.246548225},{"name":"faults","cnt":23688.0},{"name":"cycles:u","cnt":826478157.0},{"name":"cpu-clock","cnt":244.790861},{"name":"task-clock","cnt":244.791205},{"name":"max-rss","cnt":184780.0},{"name":"instructions:u","cnt":1160272341.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1347300082.0},{"name":"max-rss","cnt":198972.0},{"name":"cpu-clock","cnt":285.977946},{"name":"task-clock","cnt":285.968787},{"name":"faults","cnt":25059.0},{"name":"cycles:u","cnt":987825419.0},{"name":"wall-time","cnt":0.306355181}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":5510.415855},{"name":"faults","cnt":105146.0},{"name":"cycles:u","cnt":20100793096.0},{"name":"instructions:u","cnt":21145210414.0},{"name":"max-rss","cnt":331320.0},{"name":"cpu-clock","cnt":5510.403742},{"name":"wall-time","cnt":3.075335207}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":6441.821251},{"name":"max-rss","cnt":377332.0},{"name":"faults","cnt":119259.0},{"name":"cycles:u","cnt":23346673365.0},{"name":"task-clock","cnt":6441.791876},{"name":"wall-time","cnt":3.566725772},{"name":"instructions:u","cnt":24695749451.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":283804.0},{"name":"faults","cnt":92953.0},{"name":"cpu-clock","cnt":1648.635531},{"name":"wall-time","cnt":1.618013426},{"name":"instructions:u","cnt":6440794004.0},{"name":"task-clock","cnt":1648.706588},{"name":"cycles:u","cnt":5164799533.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.641868472},{"name":"task-clock","cnt":1687.265961},{"name":"max-rss","cnt":290536.0},{"name":"faults","cnt":93540.0},{"name":"cycles:u","cnt":5251036410.0},{"name":"instructions:u","cnt":6617358400.0},{"name":"cpu-clock","cnt":1687.187637}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":7.861244141},{"name":"task-clock","cnt":41019.883264},{"name":"faults","cnt":183339.0},{"name":"cpu-clock","cnt":41019.874258},{"name":"instructions:u","cnt":122496287597.0},{"name":"max-rss","cnt":636928.0},{"name":"cycles:u","cnt":154123258035.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":634604.0},{"name":"task-clock","cnt":45934.505762},{"name":"cycles:u","cnt":172237129753.0},{"name":"instructions:u","cnt":133292842463.0},{"name":"cpu-clock","cnt":45934.554784},{"name":"faults","cnt":186422.0},{"name":"wall-time","cnt":8.318767628}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.286105096},{"name":"faults","cnt":90037.0},{"name":"cycles:u","cnt":4364631499.0},{"name":"instructions:u","cnt":6808367213.0},{"name":"max-rss","cnt":302744.0},{"name":"task-clock","cnt":1340.226403},{"name":"cpu-clock","cnt":1340.125807}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":355436.0},{"name":"task-clock","cnt":2095.54712},{"name":"wall-time","cnt":1.766214969},{"name":"cpu-clock","cnt":2095.451968},{"name":"cycles:u","cnt":7272672273.0},{"name":"faults","cnt":98813.0},{"name":"instructions:u","cnt":10308933459.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":172855501994.0},{"name":"wall-time","cnt":44.22688286},{"name":"cpu-clock","cnt":44184.254162},{"name":"max-rss","cnt":2427796.0},{"name":"faults","cnt":704718.0},{"name":"instructions:u","cnt":189567968905.0},{"name":"task-clock","cnt":44184.234457}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":245498024297.0},{"name":"cpu-clock","cnt":55909.640973},{"name":"max-rss","cnt":3804552.0},{"name":"cycles:u","cnt":215258703791.0},{"name":"faults","cnt":1145590.0},{"name":"wall-time","cnt":55.949711767},{"name":"task-clock","cnt":55909.628034}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":19.632984385},{"name":"instructions:u","cnt":88551215031.0},{"name":"task-clock","cnt":20391.651367},{"name":"faults","cnt":1068064.0},{"name":"cycles:u","cnt":76231015196.0},{"name":"cpu-clock","cnt":20391.644632},{"name":"max-rss","cnt":4309208.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":19.663094464},{"name":"max-rss","cnt":4323692.0},{"name":"instructions:u","cnt":88775460339.0},{"name":"faults","cnt":1079805.0},{"name":"task-clock","cnt":20430.999333},{"name":"cpu-clock","cnt":20431.006677},{"name":"cycles:u","cnt":76545285931.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"faults","cnt":1042894.0},{"name":"cpu-clock","cnt":21066.835677},{"name":"instructions:u","cnt":91535385607.0},{"name":"cycles:u","cnt":77240476193.0},{"name":"max-rss","cnt":4175472.0},{"name":"wall-time","cnt":20.330097748},{"name":"task-clock","cnt":21066.843786}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"wall-time","cnt":43.477598445},{"name":"cpu-clock","cnt":44202.643765},{"name":"max-rss","cnt":4828988.0},{"name":"faults","cnt":1327872.0},{"name":"task-clock","cnt":44202.615854},{"name":"instructions:u","cnt":188015875300.0},{"name":"cycles:u","cnt":169844679326.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"cpu-clock","cnt":205185.639209},{"name":"faults","cnt":2019584.0},{"name":"instructions:u","cnt":772016177733.0},{"name":"task-clock","cnt":205185.548505},{"name":"cycles:u","cnt":775589124905.0},{"name":"wall-time","cnt":91.853923793},{"name":"max-rss","cnt":5696616.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1482243677218.0},{"name":"instructions:u","cnt":1697969733277.0},{"name":"faults","cnt":3068555.0},{"name":"max-rss","cnt":8558468.0},{"name":"task-clock","cnt":391789.618391},{"name":"cpu-clock","cnt":391790.863776},{"name":"wall-time","cnt":193.431705104}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":9094544.0},{"name":"cycles:u","cnt":104604954089.0},{"name":"cpu-clock","cnt":30468.449854},{"name":"faults","cnt":1502055.0},{"name":"instructions:u","cnt":119644249504.0},{"name":"task-clock","cnt":30470.815361},{"name":"wall-time","cnt":46.192590865}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":1544063.0},{"name":"cpu-clock","cnt":34956.316178},{"name":"cycles:u","cnt":123008211699.0},{"name":"instructions:u","cnt":139104032595.0},{"name":"wall-time","cnt":45.953671924},{"name":"task-clock","cnt":34958.29442},{"name":"max-rss","cnt":9339388.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"task-clock","cnt":31669.443061},{"name":"cycles:u","cnt":111266873288.0},{"name":"max-rss","cnt":9069492.0},{"name":"faults","cnt":1490890.0},{"name":"cpu-clock","cnt":31667.464035},{"name":"instructions:u","cnt":126634457670.0},{"name":"wall-time","cnt":45.452317933}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":351456.467067},{"name":"task-clock","cnt":351455.703342},{"name":"instructions:u","cnt":1498471220026.0},{"name":"faults","cnt":3220745.0},{"name":"wall-time","cnt":164.653482425},{"name":"cycles:u","cnt":1324192275604.0},{"name":"max-rss","cnt":9513424.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"task-clock","cnt":788090.935542},{"name":"wall-time","cnt":185.076380531},{"name":"max-rss","cnt":4303196.0},{"name":"cycles:u","cnt":2975391038358.0},{"name":"cpu-clock","cnt":788091.24719},{"name":"faults","cnt":2537756.0},{"name":"instructions:u","cnt":2243874146133.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":5402848.0},{"name":"wall-time","cnt":214.19003464},{"name":"instructions:u","cnt":3223377790989.0},{"name":"faults","cnt":3319046.0},{"name":"cpu-clock","cnt":1115162.42919},{"name":"task-clock","cnt":1115161.19363},{"name":"cycles:u","cnt":4195132170844.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":101841873840.0},{"name":"wall-time","cnt":26.13757117},{"name":"task-clock","cnt":28184.781449},{"name":"faults","cnt":1428805.0},{"name":"max-rss","cnt":5751264.0},{"name":"instructions:u","cnt":113508986389.0},{"name":"cpu-clock","cnt":28183.838945}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":398877.358053},{"name":"faults","cnt":2142166.0},{"name":"cpu-clock","cnt":398877.428818},{"name":"wall-time","cnt":85.521438023},{"name":"instructions:u","cnt":1148917209254.0},{"name":"cycles:u","cnt":1494956170943.0},{"name":"max-rss","cnt":7209664.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"max-rss","cnt":6606768.0},{"name":"cycles:u","cnt":415914991509.0},{"name":"task-clock","cnt":108791.878641},{"name":"faults","cnt":1754267.0},{"name":"cpu-clock","cnt":108791.398269},{"name":"instructions:u","cnt":420019711828.0},{"name":"wall-time","cnt":68.335245949}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"faults","cnt":3562265.0},{"name":"instructions:u","cnt":3115820190329.0},{"name":"cpu-clock","cnt":1079755.127915},{"name":"task-clock","cnt":1079753.690472},{"name":"max-rss","cnt":6665816.0},{"name":"cycles:u","cnt":4055364083992.0},{"name":"wall-time","cnt":196.691603622}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":35124.0},{"name":"instructions:u","cnt":11379130934.0},{"name":"cpu-clock","cnt":2335.874521},{"name":"wall-time","cnt":2.358044074},{"name":"cycles:u","cnt":9068268059.0},{"name":"task-clock","cnt":2335.874388},{"name":"max-rss","cnt":250856.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":2901.58398},{"name":"instructions:u","cnt":14349878575.0},{"name":"max-rss","cnt":325160.0},{"name":"cycles:u","cnt":11258087065.0},{"name":"faults","cnt":53903.0},{"name":"task-clock","cnt":2901.584713},{"name":"wall-time","cnt":2.919860984}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":716.598058},{"name":"faults","cnt":47822.0},{"name":"cycles:u","cnt":2590331921.0},{"name":"wall-time","cnt":0.703410022},{"name":"instructions:u","cnt":3603065082.0},{"name":"max-rss","cnt":296260.0},{"name":"cpu-clock","cnt":716.598236}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":3315403194.0},{"name":"wall-time","cnt":0.886972862},{"name":"max-rss","cnt":312996.0},{"name":"task-clock","cnt":900.652124},{"name":"faults","cnt":50204.0},{"name":"instructions:u","cnt":4307132373.0},{"name":"cpu-clock","cnt":900.652009}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":10.473629492},{"name":"faults","cnt":334817.0},{"name":"task-clock","cnt":14277.66746},{"name":"cycles:u","cnt":53278670157.0},{"name":"max-rss","cnt":955252.0},{"name":"cpu-clock","cnt":14277.692651},{"name":"instructions:u","cnt":61369181917.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":18456.813838},{"name":"wall-time","cnt":9.547872024},{"name":"cpu-clock","cnt":18456.92486},{"name":"cycles:u","cnt":68184995655.0},{"name":"instructions:u","cnt":71373773854.0},{"name":"faults","cnt":280730.0},{"name":"max-rss","cnt":704492.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":3853.591067},{"name":"cpu-clock","cnt":3853.444071},{"name":"max-rss","cnt":500460.0},{"name":"instructions:u","cnt":14479007852.0},{"name":"cycles:u","cnt":12729410498.0},{"name":"faults","cnt":211900.0},{"name":"wall-time","cnt":3.774298925}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":17733941596.0},{"name":"wall-time","cnt":4.356244275},{"name":"task-clock","cnt":5254.899974},{"name":"faults","cnt":237828.0},{"name":"cpu-clock","cnt":5254.762415},{"name":"instructions:u","cnt":19579563417.0},{"name":"max-rss","cnt":600780.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":776940.0},{"name":"task-clock","cnt":94592.745317},{"name":"cycles:u","cnt":357549389042.0},{"name":"cpu-clock","cnt":94592.774604},{"name":"wall-time","cnt":19.249349161},{"name":"instructions:u","cnt":289779226931.0},{"name":"faults","cnt":244119.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":243139.0},{"name":"wall-time","cnt":21.027453406},{"name":"max-rss","cnt":756048.0},{"name":"task-clock","cnt":106092.85064},{"name":"instructions:u","cnt":316044525526.0},{"name":"cycles:u","cnt":400367005938.0},{"name":"cpu-clock","cnt":106093.032902}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":153519.0},{"name":"instructions:u","cnt":8957279150.0},{"name":"wall-time","cnt":2.253890777},{"name":"cpu-clock","cnt":2384.786984},{"name":"cycles:u","cnt":8188745682.0},{"name":"max-rss","cnt":515472.0},{"name":"task-clock","cnt":2384.971394}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":11.531301963},{"name":"cycles:u","cnt":221205427790.0},{"name":"task-clock","cnt":58810.653723},{"name":"cpu-clock","cnt":58810.704438},{"name":"faults","cnt":226905.0},{"name":"max-rss","cnt":717608.0},{"name":"instructions:u","cnt":174589120594.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":256212.0},{"name":"instructions:u","cnt":29596714023.0},{"name":"faults","cnt":41556.0},{"name":"cycles:u","cnt":19696504857.0},{"name":"task-clock","cnt":5008.863688},{"name":"cpu-clock","cnt":5008.85538},{"name":"wall-time","cnt":5.044262019}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":5846.001833},{"name":"max-rss","cnt":350536.0},{"name":"instructions:u","cnt":33426839100.0},{"name":"cycles:u","cnt":22966595173.0},{"name":"faults","cnt":65343.0},{"name":"task-clock","cnt":5846.002223},{"name":"wall-time","cnt":5.884622406}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4217405382.0},{"name":"cpu-clock","cnt":913.984222},{"name":"task-clock","cnt":913.984349},{"name":"max-rss","cnt":334116.0},{"name":"faults","cnt":63881.0},{"name":"cycles:u","cnt":3319179430.0},{"name":"wall-time","cnt":0.904190347}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":298336.0},{"name":"cycles:u","cnt":21753078621.0},{"name":"faults","cnt":49558.0},{"name":"wall-time","cnt":5.432654257},{"name":"task-clock","cnt":5534.870579},{"name":"instructions:u","cnt":32418422169.0},{"name":"cpu-clock","cnt":5534.859676}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":404992.0},{"name":"cpu-clock","cnt":6626.233988},{"name":"instructions:u","cnt":37318096193.0},{"name":"wall-time","cnt":6.498169308},{"name":"task-clock","cnt":6626.224698},{"name":"cycles:u","cnt":25926787259.0},{"name":"faults","cnt":76733.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.058313886},{"name":"cycles:u","cnt":3889933126.0},{"name":"max-rss","cnt":380592.0},{"name":"faults","cnt":73100.0},{"name":"task-clock","cnt":1081.433492},{"name":"cpu-clock","cnt":1081.412848},{"name":"instructions:u","cnt":5143738119.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":5907.98501},{"name":"instructions:u","cnt":33342001241.0},{"name":"wall-time","cnt":5.442662638},{"name":"cycles:u","cnt":23128903579.0},{"name":"max-rss","cnt":306492.0},{"name":"faults","cnt":51470.0},{"name":"task-clock","cnt":5908.000413}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":38270736803.0},{"name":"cpu-clock","cnt":6972.344154},{"name":"task-clock","cnt":6972.381272},{"name":"wall-time","cnt":6.469602717},{"name":"faults","cnt":79382.0},{"name":"cycles:u","cnt":27173112348.0},{"name":"max-rss","cnt":415756.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":5138975786.0},{"name":"max-rss","cnt":377180.0},{"name":"cycles:u","cnt":3884259085.0},{"name":"task-clock","cnt":1076.69296},{"name":"faults","cnt":72258.0},{"name":"cpu-clock","cnt":1076.680468},{"name":"wall-time","cnt":1.056070889}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":27202.123471},{"name":"cycles:u","cnt":106106930469.0},{"name":"instructions:u","cnt":121560730493.0},{"name":"wall-time","cnt":27.257448763},{"name":"faults","cnt":333157.0},{"name":"max-rss","cnt":1374996.0},{"name":"task-clock","cnt":27202.113082}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":33998.010256},{"name":"wall-time","cnt":34.040645057},{"name":"task-clock","cnt":33997.982714},{"name":"faults","cnt":580306.0},{"name":"instructions:u","cnt":152659497706.0},{"name":"cycles:u","cnt":132786666891.0},{"name":"max-rss","cnt":2207608.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":10726.621907},{"name":"cycles:u","cnt":39423975395.0},{"name":"max-rss","cnt":2130020.0},{"name":"task-clock","cnt":10726.618373},{"name":"wall-time","cnt":10.371930352},{"name":"instructions:u","cnt":47777032028.0},{"name":"faults","cnt":510016.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":2355496.0},{"name":"cpu-clock","cnt":20552.548795},{"name":"cycles:u","cnt":78148319076.0},{"name":"instructions:u","cnt":92471366397.0},{"name":"task-clock","cnt":20552.54066},{"name":"wall-time","cnt":20.163926325},{"name":"faults","cnt":572912.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":2446472.0},{"name":"wall-time","cnt":21.478121402},{"name":"cycles:u","cnt":83443220291.0},{"name":"instructions:u","cnt":95307526503.0},{"name":"cpu-clock","cnt":21869.505914},{"name":"task-clock","cnt":21869.507116},{"name":"faults","cnt":592278.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"faults","cnt":785282.0},{"name":"wall-time","cnt":41.712975183},{"name":"instructions:u","cnt":297256069400.0},{"name":"cpu-clock","cnt":74412.385315},{"name":"max-rss","cnt":2888924.0},{"name":"task-clock","cnt":74412.325346},{"name":"cycles:u","cnt":284135623190.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":115252.485503},{"name":"cycles:u","cnt":437302948775.0},{"name":"cpu-clock","cnt":115252.715151},{"name":"wall-time","cnt":65.338487206},{"name":"instructions:u","cnt":531201342268.0},{"name":"faults","cnt":1047018.0},{"name":"max-rss","cnt":3363516.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":62217710771.0},{"name":"wall-time","cnt":17.866392229},{"name":"task-clock","cnt":14588.334128},{"name":"faults","cnt":692466.0},{"name":"cpu-clock","cnt":14587.714251},{"name":"cycles:u","cnt":51263810064.0},{"name":"max-rss","cnt":3611556.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":246168254118.0},{"name":"instructions:u","cnt":300978885971.0},{"name":"max-rss","cnt":3883672.0},{"name":"wall-time","cnt":40.000034683},{"name":"cpu-clock","cnt":65574.918146},{"name":"task-clock","cnt":65574.907281},{"name":"faults","cnt":993824.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":92580.277075},{"name":"max-rss","cnt":4011960.0},{"name":"task-clock","cnt":92579.943863},{"name":"faults","cnt":1135840.0},{"name":"cycles:u","cnt":347524264670.0},{"name":"wall-time","cnt":49.678414516},{"name":"instructions:u","cnt":422803743452.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"wall-time","cnt":61.280521745},{"name":"cycles:u","cnt":974204587918.0},{"name":"instructions:u","cnt":798052524028.0},{"name":"cpu-clock","cnt":257384.586266},{"name":"max-rss","cnt":2413056.0},{"name":"task-clock","cnt":257384.445805},{"name":"faults","cnt":739284.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":1253594428146.0},{"name":"wall-time","cnt":82.862956392},{"name":"faults","cnt":1046543.0},{"name":"task-clock","cnt":396263.589116},{"name":"cpu-clock","cnt":396264.033112},{"name":"cycles:u","cnt":1492762894010.0},{"name":"max-rss","cnt":2995192.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":46241867412.0},{"name":"cpu-clock","cnt":12920.240822},{"name":"task-clock","cnt":12920.881622},{"name":"faults","cnt":668742.0},{"name":"instructions:u","cnt":53965068062.0},{"name":"max-rss","cnt":2787476.0},{"name":"wall-time","cnt":11.967012662}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":1123844.0},{"name":"cycles:u","cnt":1271043072467.0},{"name":"task-clock","cnt":338692.626665},{"name":"instructions:u","cnt":1059085726933.0},{"name":"max-rss","cnt":3491860.0},{"name":"cpu-clock","cnt":338692.974954},{"name":"wall-time","cnt":62.330538729}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":3540624.0},{"name":"wall-time","cnt":68.618530807},{"name":"instructions:u","cnt":1129991176072.0},{"name":"faults","cnt":1143302.0},{"name":"cpu-clock","cnt":364115.969425},{"name":"cycles:u","cnt":1367879009664.0},{"name":"task-clock","cnt":364115.478952}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3227883696.0},{"name":"max-rss","cnt":151180.0},{"name":"wall-time","cnt":0.713440751},{"name":"cpu-clock","cnt":695.04569},{"name":"task-clock","cnt":695.04647},{"name":"faults","cnt":14827.0},{"name":"cycles:u","cnt":2653180599.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":22872.0},{"name":"cycles:u","cnt":3353125223.0},{"name":"instructions:u","cnt":4085210649.0},{"name":"task-clock","cnt":877.297949},{"name":"max-rss","cnt":184400.0},{"name":"wall-time","cnt":0.895506476},{"name":"cpu-clock","cnt":877.296614}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1325755170.0},{"name":"wall-time","cnt":0.284298994},{"name":"cycles:u","cnt":964883580.0},{"name":"faults","cnt":21444.0},{"name":"task-clock","cnt":279.331027},{"name":"cpu-clock","cnt":279.338272},{"name":"max-rss","cnt":165668.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":329.367249},{"name":"max-rss","cnt":184924.0},{"name":"instructions:u","cnt":1535553058.0},{"name":"faults","cnt":22711.0},{"name":"task-clock","cnt":329.36719},{"name":"cycles:u","cnt":1166592228.0},{"name":"wall-time","cnt":0.332989843}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":243360.0},{"name":"faults","cnt":36259.0},{"name":"task-clock","cnt":2871.835786},{"name":"wall-time","cnt":1.4973253},{"name":"cycles:u","cnt":10823153350.0},{"name":"cpu-clock","cnt":2871.83192},{"name":"instructions:u","cnt":11894666191.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":3529.701216},{"name":"faults","cnt":47510.0},{"name":"max-rss","cnt":289408.0},{"name":"cycles:u","cnt":13243856010.0},{"name":"task-clock","cnt":3529.670354},{"name":"instructions:u","cnt":14463553750.0},{"name":"wall-time","cnt":1.751693522}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.419212366},{"name":"instructions:u","cnt":1907273223.0},{"name":"cycles:u","cnt":1450035522.0},{"name":"cpu-clock","cnt":431.578511},{"name":"task-clock","cnt":431.638168},{"name":"max-rss","cnt":227232.0},{"name":"faults","cnt":32807.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":636.56872},{"name":"wall-time","cnt":0.528311287},{"name":"max-rss","cnt":258124.0},{"name":"cycles:u","cnt":2184131237.0},{"name":"task-clock","cnt":636.625778},{"name":"instructions:u","cnt":2690193519.0},{"name":"faults","cnt":37108.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":262304.0},{"name":"cpu-clock","cnt":14567.56751},{"name":"faults","cnt":41755.0},{"name":"instructions:u","cnt":44648395909.0},{"name":"cycles:u","cnt":54932698055.0},{"name":"task-clock","cnt":14567.535353},{"name":"wall-time","cnt":2.929928682}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":302428.0},{"name":"wall-time","cnt":3.248143948},{"name":"task-clock","cnt":16068.901412},{"name":"cycles:u","cnt":60534412644.0},{"name":"instructions:u","cnt":48205506367.0},{"name":"cpu-clock","cnt":16068.921018},{"name":"faults","cnt":52598.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":219240.0},{"name":"task-clock","cnt":435.691058},{"name":"faults","cnt":32946.0},{"name":"instructions:u","cnt":1926938476.0},{"name":"cpu-clock","cnt":435.667652},{"name":"wall-time","cnt":0.418936278},{"name":"cycles:u","cnt":1466419466.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":8299.685431},{"name":"max-rss","cnt":298956.0},{"name":"wall-time","cnt":1.683908881},{"name":"faults","cnt":50725.0},{"name":"cycles:u","cnt":31118208675.0},{"name":"instructions:u","cnt":24437710279.0},{"name":"cpu-clock","cnt":8299.679735}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.362937908},{"name":"instructions:u","cnt":1760113220.0},{"name":"max-rss","cnt":146704.0},{"name":"cycles:u","cnt":1287247392.0},{"name":"cpu-clock","cnt":344.736978},{"name":"task-clock","cnt":344.737736},{"name":"faults","cnt":11300.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1694688209.0},{"name":"cpu-clock","cnt":453.983513},{"name":"faults","cnt":17306.0},{"name":"wall-time","cnt":0.472187914},{"name":"task-clock","cnt":453.984521},{"name":"max-rss","cnt":172604.0},{"name":"instructions:u","cnt":2266478037.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":134.288132},{"name":"wall-time","cnt":0.144398726},{"name":"max-rss","cnt":148596.0},{"name":"cpu-clock","cnt":134.28581},{"name":"faults","cnt":16184.0},{"name":"instructions:u","cnt":634948700.0},{"name":"cycles:u","cnt":427059292.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.319848312},{"name":"instructions:u","cnt":1451089364.0},{"name":"cpu-clock","cnt":310.448552},{"name":"cycles:u","cnt":1108352084.0},{"name":"task-clock","cnt":310.440863},{"name":"max-rss","cnt":182744.0},{"name":"faults","cnt":19637.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":1382388076.0},{"name":"cycles:u","cnt":1046584639.0},{"name":"task-clock","cnt":294.980647},{"name":"max-rss","cnt":183140.0},{"name":"cpu-clock","cnt":294.9961},{"name":"wall-time","cnt":0.304543778},{"name":"faults","cnt":19769.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cycles:u","cnt":15490338226.0},{"name":"faults","cnt":91489.0},{"name":"task-clock","cnt":4237.19794},{"name":"cpu-clock","cnt":4237.220004},{"name":"max-rss","cnt":300776.0},{"name":"wall-time","cnt":2.470653222},{"name":"instructions:u","cnt":17583562767.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.8424752},{"name":"task-clock","cnt":5133.309561},{"name":"cycles:u","cnt":18579190628.0},{"name":"cpu-clock","cnt":5133.355385},{"name":"max-rss","cnt":339480.0},{"name":"instructions:u","cnt":20917068541.0},{"name":"faults","cnt":103939.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1340.114657},{"name":"wall-time","cnt":1.328252751},{"name":"cpu-clock","cnt":1340.018656},{"name":"cycles:u","cnt":4266569378.0},{"name":"faults","cnt":85592.0},{"name":"max-rss","cnt":271492.0},{"name":"instructions:u","cnt":5198585403.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":110026.0},{"name":"task-clock","cnt":4863.841992},{"name":"max-rss","cnt":366608.0},{"name":"wall-time","cnt":2.558303277},{"name":"cycles:u","cnt":17524537866.0},{"name":"cpu-clock","cnt":4863.889264},{"name":"instructions:u","cnt":19431180294.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":4821.66956},{"name":"faults","cnt":109345.0},{"name":"cycles:u","cnt":17354214548.0},{"name":"max-rss","cnt":361764.0},{"name":"cpu-clock","cnt":4821.744506},{"name":"wall-time","cnt":2.525610299},{"name":"instructions:u","cnt":19403260234.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"instructions:u","cnt":68053970767.0},{"name":"cycles:u","cnt":86201379257.0},{"name":"faults","cnt":79105.0},{"name":"max-rss","cnt":339864.0},{"name":"task-clock","cnt":22892.888154},{"name":"wall-time","cnt":4.129807145},{"name":"cpu-clock","cnt":22892.865517}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":366924.0},{"name":"faults","cnt":87063.0},{"name":"instructions:u","cnt":78357288639.0},{"name":"wall-time","cnt":4.631633515},{"name":"cpu-clock","cnt":27206.541293},{"name":"task-clock","cnt":27206.528598},{"name":"cycles:u","cnt":102168412043.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":59473.0},{"name":"task-clock","cnt":712.273727},{"name":"cycles:u","cnt":2275812818.0},{"name":"max-rss","cnt":258660.0},{"name":"wall-time","cnt":0.692639953},{"name":"instructions:u","cnt":2742625663.0},{"name":"cpu-clock","cnt":712.170436}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":76764618285.0},{"name":"cycles:u","cnt":100975987353.0},{"name":"wall-time","cnt":4.290883486},{"name":"task-clock","cnt":26921.278232},{"name":"faults","cnt":89391.0},{"name":"cpu-clock","cnt":26921.323162},{"name":"max-rss","cnt":378412.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":18123.225091},{"name":"cpu-clock","cnt":18123.240079},{"name":"max-rss","cnt":377144.0},{"name":"instructions:u","cnt":53410640761.0},{"name":"cycles:u","cnt":67892517445.0},{"name":"faults","cnt":87663.0},{"name":"wall-time","cnt":3.35943796}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":12426465900.0},{"name":"wall-time","cnt":3.342496825},{"name":"cpu-clock","cnt":3269.748918},{"name":"max-rss","cnt":436132.0},{"name":"instructions:u","cnt":18226514656.0},{"name":"task-clock","cnt":3269.758139},{"name":"faults","cnt":90473.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":23564148467.0},{"name":"wall-time","cnt":3.997144317},{"name":"cycles:u","cnt":15365852548.0},{"name":"task-clock","cnt":3961.621435},{"name":"max-rss","cnt":474492.0},{"name":"cpu-clock","cnt":3961.634361},{"name":"faults","cnt":99724.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1077.148767},{"name":"max-rss","cnt":366704.0},{"name":"instructions:u","cnt":6918200286.0},{"name":"wall-time","cnt":1.111124054},{"name":"cycles:u","cnt":3897780610.0},{"name":"faults","cnt":75254.0},{"name":"cpu-clock","cnt":1077.137195}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":105250.0},{"name":"task-clock","cnt":3936.866108},{"name":"cpu-clock","cnt":3936.854064},{"name":"wall-time","cnt":3.971432723},{"name":"cycles:u","cnt":15220216130.0},{"name":"instructions:u","cnt":23572526456.0},{"name":"max-rss","cnt":495632.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"faults","cnt":100386.0},{"name":"wall-time","cnt":3.445447112},{"name":"instructions:u","cnt":18756426011.0},{"name":"cpu-clock","cnt":3404.989169},{"name":"max-rss","cnt":458860.0},{"name":"cycles:u","cnt":13036525369.0},{"name":"task-clock","cnt":3404.987725}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4034.805574},{"name":"cycles:u","cnt":15492366243.0},{"name":"instructions:u","cnt":24150042323.0},{"name":"faults","cnt":110527.0},{"name":"wall-time","cnt":4.03153014},{"name":"max-rss","cnt":499324.0},{"name":"cpu-clock","cnt":4034.773844}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1184.138385},{"name":"cpu-clock","cnt":1184.112305},{"name":"wall-time","cnt":1.212501474},{"name":"instructions:u","cnt":7297637716.0},{"name":"faults","cnt":83597.0},{"name":"max-rss","cnt":386272.0},{"name":"cycles:u","cnt":4217881855.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":4.043736354},{"name":"task-clock","cnt":4048.528129},{"name":"cpu-clock","cnt":4048.530157},{"name":"max-rss","cnt":526220.0},{"name":"instructions:u","cnt":24120337273.0},{"name":"cycles:u","cnt":15472312094.0},{"name":"faults","cnt":116502.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"instructions:u","cnt":18692274519.0},{"name":"task-clock","cnt":3382.356042},{"name":"cpu-clock","cnt":3382.368069},{"name":"wall-time","cnt":3.382861561},{"name":"cycles:u","cnt":12998280505.0},{"name":"faults","cnt":96761.0},{"name":"max-rss","cnt":451844.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":15442177238.0},{"name":"faults","cnt":103579.0},{"name":"cpu-clock","cnt":4016.588223},{"name":"instructions:u","cnt":24174600347.0},{"name":"wall-time","cnt":4.011375794},{"name":"task-clock","cnt":4016.605534},{"name":"max-rss","cnt":479000.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":82109.0},{"name":"max-rss","cnt":385064.0},{"name":"wall-time","cnt":1.179391039},{"name":"instructions:u","cnt":7235175693.0},{"name":"cpu-clock","cnt":1148.387375},{"name":"cycles:u","cnt":4092577894.0},{"name":"task-clock","cnt":1148.425628}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":520700.0},{"name":"faults","cnt":114136.0},{"name":"cpu-clock","cnt":4004.383552},{"name":"cycles:u","cnt":15342663033.0},{"name":"task-clock","cnt":4004.380938},{"name":"wall-time","cnt":4.000139381},{"name":"instructions:u","cnt":24053878712.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":34581410041.0},{"name":"max-rss","cnt":535624.0},{"name":"cycles:u","cnt":20203377956.0},{"name":"task-clock","cnt":5190.960431},{"name":"wall-time","cnt":5.257700705},{"name":"cpu-clock","cnt":5190.98798},{"name":"faults","cnt":115119.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":44177280320.0},{"name":"wall-time","cnt":6.191794509},{"name":"cpu-clock","cnt":6155.472116},{"name":"task-clock","cnt":6155.460625},{"name":"cycles:u","cnt":23768137032.0},{"name":"faults","cnt":125243.0},{"name":"max-rss","cnt":577772.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1748.838732},{"name":"instructions:u","cnt":12317198398.0},{"name":"faults","cnt":125433.0},{"name":"max-rss","cnt":568820.0},{"name":"cycles:u","cnt":6347695507.0},{"name":"cpu-clock","cnt":1748.852054},{"name":"wall-time","cnt":1.776939754}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":5.528949509},{"name":"instructions:u","cnt":37757429571.0},{"name":"max-rss","cnt":626888.0},{"name":"faults","cnt":131292.0},{"name":"task-clock","cnt":5879.713115},{"name":"cycles:u","cnt":22683624964.0},{"name":"cpu-clock","cnt":5879.72397}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.369732365},{"name":"cycles:u","cnt":26371521883.0},{"name":"max-rss","cnt":678512.0},{"name":"task-clock","cnt":6844.488076},{"name":"instructions:u","cnt":47557822152.0},{"name":"faults","cnt":144439.0},{"name":"cpu-clock","cnt":6844.490865}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":6610802760.0},{"name":"instructions:u","cnt":12470307130.0},{"name":"faults","cnt":127306.0},{"name":"wall-time","cnt":1.857292503},{"name":"cpu-clock","cnt":1834.457782},{"name":"max-rss","cnt":608220.0},{"name":"task-clock","cnt":1834.468508}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":142241.0},{"name":"instructions:u","cnt":42595266269.0},{"name":"max-rss","cnt":666816.0},{"name":"cycles:u","cnt":26503708990.0},{"name":"cpu-clock","cnt":6950.515462},{"name":"task-clock","cnt":6950.514357},{"name":"wall-time","cnt":5.77326668}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":8157.854064},{"name":"max-rss","cnt":680696.0},{"name":"instructions:u","cnt":52133379391.0},{"name":"wall-time","cnt":6.515552458},{"name":"cpu-clock","cnt":8157.831022},{"name":"faults","cnt":153645.0},{"name":"cycles:u","cnt":31119438463.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1804.86853},{"name":"instructions:u","cnt":12543442373.0},{"name":"max-rss","cnt":613648.0},{"name":"cpu-clock","cnt":1804.866774},{"name":"faults","cnt":129010.0},{"name":"cycles:u","cnt":6500039296.0},{"name":"wall-time","cnt":1.811492591}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":31025057567.0},{"name":"task-clock","cnt":3684.470947},{"name":"faults","cnt":26258.0},{"name":"cpu-clock","cnt":3684.456388},{"name":"cycles:u","cnt":14554619139.0},{"name":"max-rss","cnt":187868.0},{"name":"wall-time","cnt":3.720367626}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3972.301949},{"name":"cpu-clock","cnt":3972.29955},{"name":"wall-time","cnt":4.009837378},{"name":"max-rss","cnt":192096.0},{"name":"instructions:u","cnt":34981410183.0},{"name":"cycles:u","cnt":15695594422.0},{"name":"faults","cnt":25421.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":703235690.0},{"name":"wall-time","cnt":0.235472485},{"name":"instructions:u","cnt":1218264597.0},{"name":"max-rss","cnt":149632.0},{"name":"faults","cnt":15722.0},{"name":"cpu-clock","cnt":201.797543},{"name":"task-clock","cnt":201.799464}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":14533614434.0},{"name":"faults","cnt":26405.0},{"name":"task-clock","cnt":3680.255633},{"name":"cpu-clock","cnt":3680.254393},{"name":"max-rss","cnt":195452.0},{"name":"instructions:u","cnt":32287561609.0},{"name":"wall-time","cnt":3.694475976}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":34397.0},{"name":"task-clock","cnt":3862.975701},{"name":"max-rss","cnt":226732.0},{"name":"cycles:u","cnt":15202816102.0},{"name":"instructions:u","cnt":32324918368.0},{"name":"wall-time","cnt":3.86248522},{"name":"cpu-clock","cnt":3862.981435}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":233924.0},{"name":"wall-time","cnt":4.183272922},{"name":"cpu-clock","cnt":4206.31981},{"name":"faults","cnt":34169.0},{"name":"task-clock","cnt":4206.314556},{"name":"cycles:u","cnt":16550384495.0},{"name":"instructions:u","cnt":36660320262.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":257.286643},{"name":"max-rss","cnt":178028.0},{"name":"task-clock","cnt":257.306796},{"name":"wall-time","cnt":0.289284545},{"name":"faults","cnt":21219.0},{"name":"instructions:u","cnt":1701459185.0},{"name":"cycles:u","cnt":878171286.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":3855.264839},{"name":"cpu-clock","cnt":3855.254261},{"name":"instructions:u","cnt":33568109763.0},{"name":"faults","cnt":32010.0},{"name":"max-rss","cnt":221652.0},{"name":"cycles:u","cnt":15186146998.0},{"name":"wall-time","cnt":3.866804321}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":232808.0},{"name":"task-clock","cnt":3998.440483},{"name":"instructions:u","cnt":33505379892.0},{"name":"cpu-clock","cnt":3998.449025},{"name":"faults","cnt":35497.0},{"name":"cycles:u","cnt":15745139565.0},{"name":"wall-time","cnt":4.001626314}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":4319.486177},{"name":"wall-time","cnt":4.298467294},{"name":"faults","cnt":35771.0},{"name":"task-clock","cnt":4319.481899},{"name":"max-rss","cnt":241892.0},{"name":"instructions:u","cnt":37850436135.0},{"name":"cycles:u","cnt":17016586978.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":259.285876},{"name":"instructions:u","cnt":1698816650.0},{"name":"wall-time","cnt":0.289198171},{"name":"faults","cnt":21319.0},{"name":"task-clock","cnt":259.290347},{"name":"cycles:u","cnt":890691028.0},{"name":"max-rss","cnt":178648.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":32336.0},{"name":"instructions:u","cnt":33571554298.0},{"name":"cycles:u","cnt":15124916446.0},{"name":"task-clock","cnt":3844.08002},{"name":"max-rss","cnt":222896.0},{"name":"wall-time","cnt":3.858358791},{"name":"cpu-clock","cnt":3844.073423}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":70.231528},{"name":"instructions:u","cnt":346291397.0},{"name":"task-clock","cnt":70.233379},{"name":"faults","cnt":5400.0},{"name":"max-rss","cnt":103964.0},{"name":"wall-time","cnt":0.088453975},{"name":"cycles:u","cnt":228289275.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":108484.0},{"name":"wall-time","cnt":0.099972577},{"name":"cycles:u","cnt":263964393.0},{"name":"task-clock","cnt":81.540815},{"name":"instructions:u","cnt":391586340.0},{"name":"cpu-clock","cnt":81.537883},{"name":"faults","cnt":6741.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":44.152594},{"name":"max-rss","cnt":91740.0},{"name":"faults","cnt":5871.0},{"name":"task-clock","cnt":44.155809},{"name":"cycles:u","cnt":122361650.0},{"name":"wall-time","cnt":0.061678865},{"name":"instructions:u","cnt":177625848.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":6646.0},{"name":"cpu-clock","cnt":54.172512},{"name":"task-clock","cnt":54.166733},{"name":"max-rss","cnt":108000.0},{"name":"wall-time","cnt":0.071738974},{"name":"instructions:u","cnt":228166714.0},{"name":"cycles:u","cnt":155200394.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"cycles:u","cnt":527763289.0},{"name":"task-clock","cnt":170.693024},{"name":"cpu-clock","cnt":170.684571},{"name":"max-rss","cnt":123888.0},{"name":"wall-time","cnt":0.16963814},{"name":"faults","cnt":13200.0},{"name":"instructions:u","cnt":748149764.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":823192515.0},{"name":"cycles:u","cnt":588189753.0},{"name":"faults","cnt":14794.0},{"name":"max-rss","cnt":131160.0},{"name":"task-clock","cnt":187.206333},{"name":"cpu-clock","cnt":187.217647},{"name":"wall-time","cnt":0.183340802}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":113656.0},{"name":"cpu-clock","cnt":121.270044},{"name":"wall-time","cnt":0.135725417},{"name":"task-clock","cnt":121.285738},{"name":"cycles:u","cnt":340513544.0},{"name":"instructions:u","cnt":515589075.0},{"name":"faults","cnt":13513.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":451622782.0},{"name":"max-rss","cnt":131632.0},{"name":"faults","cnt":14838.0},{"name":"instructions:u","cnt":641057314.0},{"name":"cpu-clock","cnt":153.546767},{"name":"task-clock","cnt":153.544409},{"name":"wall-time","cnt":0.150228516}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"wall-time","cnt":0.168390352},{"name":"task-clock","cnt":160.32226},{"name":"faults","cnt":12330.0},{"name":"cpu-clock","cnt":160.31783},{"name":"instructions:u","cnt":752392353.0},{"name":"max-rss","cnt":123588.0},{"name":"cycles:u","cnt":501599907.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":182.399954},{"name":"cycles:u","cnt":578903947.0},{"name":"max-rss","cnt":131492.0},{"name":"wall-time","cnt":0.18181923},{"name":"task-clock","cnt":182.383948},{"name":"faults","cnt":14324.0},{"name":"instructions:u","cnt":842269534.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":13178.0},{"name":"task-clock","cnt":118.289514},{"name":"max-rss","cnt":112984.0},{"name":"cycles:u","cnt":334007590.0},{"name":"cpu-clock","cnt":118.302068},{"name":"wall-time","cnt":0.132331099},{"name":"instructions:u","cnt":506153794.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":13643.0},{"name":"max-rss","cnt":120132.0},{"name":"cpu-clock","cnt":128.770878},{"name":"instructions:u","cnt":541941823.0},{"name":"task-clock","cnt":128.78682},{"name":"wall-time","cnt":0.140055068},{"name":"cycles:u","cnt":370825735.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":1828776174.0},{"name":"wall-time","cnt":0.516470412},{"name":"cpu-clock","cnt":497.941853},{"name":"faults","cnt":34649.0},{"name":"task-clock","cnt":497.953027},{"name":"instructions:u","cnt":2457195449.0},{"name":"max-rss","cnt":213988.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.751761791},{"name":"instructions:u","cnt":3417304586.0},{"name":"task-clock","cnt":733.559003},{"name":"max-rss","cnt":309936.0},{"name":"faults","cnt":58422.0},{"name":"cycles:u","cnt":2656380184.0},{"name":"cpu-clock","cnt":733.557601}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":647.498117},{"name":"task-clock","cnt":647.489302},{"name":"instructions:u","cnt":2919041679.0},{"name":"wall-time","cnt":0.623695693},{"name":"max-rss","cnt":324028.0},{"name":"faults","cnt":64741.0},{"name":"cycles:u","cnt":2279402037.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":716.545575},{"name":"wall-time","cnt":0.697023261},{"name":"cycles:u","cnt":2548503673.0},{"name":"faults","cnt":64904.0},{"name":"cpu-clock","cnt":716.53577},{"name":"instructions:u","cnt":3128032392.0},{"name":"max-rss","cnt":336296.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"max-rss","cnt":234044.0},{"name":"wall-time","cnt":0.584126044},{"name":"cycles:u","cnt":2039373966.0},{"name":"faults","cnt":41617.0},{"name":"cpu-clock","cnt":574.413033},{"name":"instructions:u","cnt":2787302225.0},{"name":"task-clock","cnt":574.440882}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":2929010438.0},{"name":"instructions:u","cnt":3783803412.0},{"name":"task-clock","cnt":829.258781},{"name":"max-rss","cnt":326928.0},{"name":"faults","cnt":65119.0},{"name":"cpu-clock","cnt":829.242052},{"name":"wall-time","cnt":0.837312498}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":340712.0},{"name":"instructions:u","cnt":3237821512.0},{"name":"cycles:u","cnt":2498521287.0},{"name":"cpu-clock","cnt":743.452611},{"name":"wall-time","cnt":0.715318729},{"name":"faults","cnt":71680.0},{"name":"task-clock","cnt":743.471351}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.768126802},{"name":"instructions:u","cnt":3473940820.0},{"name":"faults","cnt":72381.0},{"name":"cycles:u","cnt":2776057676.0},{"name":"task-clock","cnt":802.407471},{"name":"max-rss","cnt":357116.0},{"name":"cpu-clock","cnt":802.391604}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"task-clock","cnt":582.706799},{"name":"cpu-clock","cnt":582.703337},{"name":"instructions:u","cnt":2817586333.0},{"name":"cycles:u","cnt":2059897696.0},{"name":"faults","cnt":41752.0},{"name":"max-rss","cnt":237004.0},{"name":"wall-time","cnt":0.590828409}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":3813448009.0},{"name":"max-rss","cnt":331380.0},{"name":"faults","cnt":65698.0},{"name":"cpu-clock","cnt":832.491821},{"name":"wall-time","cnt":0.835012075},{"name":"task-clock","cnt":832.507231},{"name":"cycles:u","cnt":2955013402.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":340376.0},{"name":"cpu-clock","cnt":740.824943},{"name":"wall-time","cnt":0.713560877},{"name":"cycles:u","cnt":2544663368.0},{"name":"instructions:u","cnt":3235234230.0},{"name":"faults","cnt":71381.0},{"name":"task-clock","cnt":740.827939}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":3441227251.0},{"name":"wall-time","cnt":0.764693729},{"name":"faults","cnt":71830.0},{"name":"task-clock","cnt":796.892664},{"name":"cycles:u","cnt":2761419860.0},{"name":"cpu-clock","cnt":796.889055},{"name":"max-rss","cnt":347264.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":14055686365.0},{"name":"cycles:u","cnt":12824695255.0},{"name":"wall-time","cnt":3.354785641},{"name":"cpu-clock","cnt":3281.186721},{"name":"faults","cnt":48998.0},{"name":"task-clock","cnt":3281.196412},{"name":"max-rss","cnt":302044.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.230179477},{"name":"faults","cnt":77763.0},{"name":"cpu-clock","cnt":4177.433121},{"name":"cycles:u","cnt":16175128622.0},{"name":"task-clock","cnt":4177.431414},{"name":"max-rss","cnt":417172.0},{"name":"instructions:u","cnt":18459075460.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":73533.0},{"name":"task-clock","cnt":1096.153569},{"name":"max-rss","cnt":395588.0},{"name":"cycles:u","cnt":3996241953.0},{"name":"instructions:u","cnt":4827694896.0},{"name":"cpu-clock","cnt":1096.142547},{"name":"wall-time","cnt":1.092318672}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":410704.0},{"name":"instructions:u","cnt":5750364781.0},{"name":"wall-time","cnt":1.314537328},{"name":"cpu-clock","cnt":1315.414457},{"name":"cycles:u","cnt":4858651968.0},{"name":"task-clock","cnt":1315.415443},{"name":"faults","cnt":75722.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":9.783114258},{"name":"cpu-clock","cnt":25026.804307},{"name":"faults","cnt":240146.0},{"name":"task-clock","cnt":25026.782223},{"name":"cycles:u","cnt":94383850794.0},{"name":"max-rss","cnt":981640.0},{"name":"instructions:u","cnt":98917446093.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1037476.0},{"name":"instructions:u","cnt":115462983084.0},{"name":"cycles:u","cnt":107817292942.0},{"name":"faults","cnt":254225.0},{"name":"cpu-clock","cnt":28605.398797},{"name":"wall-time","cnt":11.639366536},{"name":"task-clock","cnt":28605.360656}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":7496369935.0},{"name":"task-clock","cnt":2158.787823},{"name":"cpu-clock","cnt":2158.631858},{"name":"max-rss","cnt":747344.0},{"name":"faults","cnt":132596.0},{"name":"wall-time","cnt":2.08132379},{"name":"instructions:u","cnt":9174908864.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":136682.0},{"name":"max-rss","cnt":768768.0},{"name":"instructions:u","cnt":10385181493.0},{"name":"task-clock","cnt":2474.44462},{"name":"wall-time","cnt":2.353356895},{"name":"cycles:u","cnt":8768357185.0},{"name":"cpu-clock","cnt":2474.308289}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":1385236.0},{"name":"task-clock","cnt":109618.672969},{"name":"wall-time","cnt":20.334469084},{"name":"cycles:u","cnt":412974820523.0},{"name":"faults","cnt":347462.0},{"name":"instructions:u","cnt":315831160886.0},{"name":"cpu-clock","cnt":109618.768589}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":120177.062345},{"name":"max-rss","cnt":1257136.0},{"name":"cpu-clock","cnt":120177.138384},{"name":"faults","cnt":340284.0},{"name":"cycles:u","cnt":452225040257.0},{"name":"instructions:u","cnt":355516730368.0},{"name":"wall-time","cnt":22.318600524}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2154.743561},{"name":"wall-time","cnt":2.042672214},{"name":"instructions:u","cnt":9040030457.0},{"name":"faults","cnt":136977.0},{"name":"cpu-clock","cnt":2154.613053},{"name":"cycles:u","cnt":7549038615.0},{"name":"max-rss","cnt":763268.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":10286.136942},{"name":"cycles:u","cnt":38038838042.0},{"name":"max-rss","cnt":945476.0},{"name":"wall-time","cnt":4.124207854},{"name":"faults","cnt":201407.0},{"name":"task-clock","cnt":10286.232785},{"name":"instructions:u","cnt":40744822377.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":14219468195.0},{"name":"cycles:u","cnt":8807959413.0},{"name":"faults","cnt":24384.0},{"name":"task-clock","cnt":2242.419222},{"name":"cpu-clock","cnt":2242.429193},{"name":"wall-time","cnt":2.306307762},{"name":"max-rss","cnt":182364.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":9829520067.0},{"name":"max-rss","cnt":191972.0},{"name":"task-clock","cnt":2505.481175},{"name":"faults","cnt":26503.0},{"name":"instructions:u","cnt":15585159231.0},{"name":"cpu-clock","cnt":2505.470621},{"name":"wall-time","cnt":2.543522688}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1203067699.0},{"name":"task-clock","cnt":218.973782},{"name":"wall-time","cnt":0.244166243},{"name":"max-rss","cnt":157364.0},{"name":"cycles:u","cnt":749445088.0},{"name":"cpu-clock","cnt":218.971489},{"name":"faults","cnt":19054.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2334.802643},{"name":"cycles:u","cnt":9150617466.0},{"name":"wall-time","cnt":2.382766239},{"name":"instructions:u","cnt":14713106508.0},{"name":"cpu-clock","cnt":2334.779794},{"name":"faults","cnt":26573.0},{"name":"max-rss","cnt":201284.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2615.634616},{"name":"instructions:u","cnt":16261630737.0},{"name":"cpu-clock","cnt":2615.631074},{"name":"max-rss","cnt":215240.0},{"name":"faults","cnt":28308.0},{"name":"wall-time","cnt":2.627013823},{"name":"cycles:u","cnt":10251684848.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":22558.0},{"name":"task-clock","cnt":244.991263},{"name":"max-rss","cnt":179304.0},{"name":"cpu-clock","cnt":244.988193},{"name":"cycles:u","cnt":832723263.0},{"name":"instructions:u","cnt":1370343604.0},{"name":"wall-time","cnt":0.269594236}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.444097531},{"name":"task-clock","cnt":2429.064524},{"name":"faults","cnt":27663.0},{"name":"max-rss","cnt":213156.0},{"name":"cpu-clock","cnt":2429.028492},{"name":"cycles:u","cnt":9510252154.0},{"name":"instructions:u","cnt":15341875941.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2712.87874},{"name":"max-rss","cnt":222072.0},{"name":"instructions:u","cnt":16853430384.0},{"name":"cycles:u","cnt":10607348359.0},{"name":"wall-time","cnt":2.662708621},{"name":"cpu-clock","cnt":2712.88285},{"name":"faults","cnt":30005.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":250.417047},{"name":"task-clock","cnt":250.440269},{"name":"wall-time","cnt":0.274326107},{"name":"faults","cnt":22686.0},{"name":"cycles:u","cnt":847925452.0},{"name":"instructions:u","cnt":1388110505.0},{"name":"max-rss","cnt":180096.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}