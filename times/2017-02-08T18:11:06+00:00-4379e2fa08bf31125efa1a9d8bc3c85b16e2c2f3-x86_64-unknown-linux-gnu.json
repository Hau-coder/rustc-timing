{"commit":{"sha":"4379e2fa08bf31125efa1a9d8bc3c85b16e2c2f3","date":"2017-02-08T18:11:06+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":22771619118.0},{"name":"cycles:u","cnt":17413551738.0},{"name":"task-clock","cnt":4241.957194},{"name":"cpu-clock","cnt":4436.624665},{"name":"faults","cnt":20785.0},{"name":"max-rss","cnt":239188.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":4137837448.0},{"name":"cycles:u","cnt":1924644009.0},{"name":"task-clock","cnt":464.505472},{"name":"cpu-clock","cnt":512.20819},{"name":"faults","cnt":11482.0},{"name":"max-rss","cnt":105580.0}]}]}]},"html5ever-2016-08-25":{"Ok":[{"name":"html5ever-2016-08-25","runs":[{"stats":[{"name":"instructions:u","cnt":20369816522.0},{"name":"cycles:u","cnt":12700045301.0},{"name":"task-clock","cnt":3246.760688},{"name":"cpu-clock","cnt":3246.761846},{"name":"faults","cnt":31442.0},{"name":"max-rss","cnt":230868.0}]}]}]},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":28435442122.0},{"name":"cycles:u","cnt":21838943363.0},{"name":"task-clock","cnt":5538.783519},{"name":"cpu-clock","cnt":5538.785071},{"name":"faults","cnt":26111.0},{"name":"max-rss","cnt":264660.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":29050143294.0},{"name":"cycles:u","cnt":15451174209.0},{"name":"task-clock","cnt":3929.79915},{"name":"cpu-clock","cnt":3929.800561},{"name":"faults","cnt":30514.0},{"name":"max-rss","cnt":266824.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":179267287436.0},{"name":"cycles:u","cnt":259624859156.0},{"name":"task-clock","cnt":68292.880933},{"name":"cpu-clock","cnt":68339.062382},{"name":"faults","cnt":3991367.0},{"name":"max-rss","cnt":784496.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":13910186258.0},{"name":"cycles:u","cnt":9987076124.0},{"name":"task-clock","cnt":2534.889213},{"name":"cpu-clock","cnt":2534.891334},{"name":"faults","cnt":10189.0},{"name":"max-rss","cnt":181348.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":2619234944.0},{"name":"cycles:u","cnt":1367641672.0},{"name":"task-clock","cnt":259.155937},{"name":"cpu-clock","cnt":373.283563},{"name":"faults","cnt":11485.0},{"name":"max-rss","cnt":103720.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":7907335355.0},{"name":"cycles:u","cnt":5092207007.0},{"name":"task-clock","cnt":1191.973595},{"name":"cpu-clock","cnt":1351.668017},{"name":"faults","cnt":34862.0},{"name":"max-rss","cnt":253344.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":22743312443.0},{"name":"cycles:u","cnt":8455258708.0},{"name":"task-clock","cnt":2128.882053},{"name":"cpu-clock","cnt":2159.736433},{"name":"faults","cnt":17114.0},{"name":"max-rss","cnt":133496.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":9605247204.0},{"name":"cycles:u","cnt":6058810638.0},{"name":"task-clock","cnt":1453.348345},{"name":"cpu-clock","cnt":1562.386313},{"name":"faults","cnt":14375.0},{"name":"max-rss","cnt":141060.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":56675344749.0},{"name":"cycles:u","cnt":44610518250.0},{"name":"task-clock","cnt":11291.753412},{"name":"cpu-clock","cnt":11291.74557},{"name":"faults","cnt":36990.0},{"name":"max-rss","cnt":414484.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":34680249535.0},{"name":"cycles:u","cnt":26578204238.0},{"name":"task-clock","cnt":6735.651483},{"name":"cpu-clock","cnt":6735.653263},{"name":"faults","cnt":30393.0},{"name":"max-rss","cnt":297096.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":46308776100.0},{"name":"cycles:u","cnt":48045067779.0},{"name":"task-clock","cnt":12714.901304},{"name":"cpu-clock","cnt":12714.786115},{"name":"faults","cnt":46732.0},{"name":"max-rss","cnt":442116.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":46317527911.0},{"name":"cycles:u","cnt":47917169101.0},{"name":"task-clock","cnt":12671.405931},{"name":"cpu-clock","cnt":12671.324511},{"name":"faults","cnt":50650.0},{"name":"max-rss","cnt":434956.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":42862879963.0},{"name":"cycles:u","cnt":43504929199.0},{"name":"task-clock","cnt":11505.64064},{"name":"cpu-clock","cnt":11505.552503},{"name":"faults","cnt":53344.0},{"name":"max-rss","cnt":402112.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":42884082479.0},{"name":"cycles:u","cnt":43528171604.0},{"name":"task-clock","cnt":11519.355712},{"name":"cpu-clock","cnt":11519.267559},{"name":"faults","cnt":53764.0},{"name":"max-rss","cnt":418172.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":46236311040.0},{"name":"cycles:u","cnt":47937539153.0},{"name":"task-clock","cnt":12695.435279},{"name":"cpu-clock","cnt":12695.359078},{"name":"faults","cnt":49997.0},{"name":"max-rss","cnt":435844.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":13859218793.0},{"name":"cycles:u","cnt":8796692951.0},{"name":"task-clock","cnt":2297.954768},{"name":"cpu-clock","cnt":2297.883449},{"name":"faults","cnt":15931.0},{"name":"max-rss","cnt":258364.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":46421936687.0},{"name":"cycles:u","cnt":48096056613.0},{"name":"task-clock","cnt":12716.88499},{"name":"cpu-clock","cnt":12716.741701},{"name":"faults","cnt":49867.0},{"name":"max-rss","cnt":431848.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":46526378680.0},{"name":"cycles:u","cnt":48056866307.0},{"name":"task-clock","cnt":12733.632304},{"name":"cpu-clock","cnt":12733.551212},{"name":"faults","cnt":50432.0},{"name":"max-rss","cnt":440496.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":13349490804.0},{"name":"cycles:u","cnt":8361587170.0},{"name":"task-clock","cnt":2196.6063},{"name":"cpu-clock","cnt":2196.536606},{"name":"faults","cnt":17085.0},{"name":"max-rss","cnt":255540.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":16326257275.0},{"name":"cycles:u","cnt":10976386182.0},{"name":"task-clock","cnt":2791.504687},{"name":"cpu-clock","cnt":2791.506504},{"name":"faults","cnt":18322.0},{"name":"max-rss","cnt":193064.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":12902987402.0},{"name":"cycles:u","cnt":8498172893.0},{"name":"task-clock","cnt":2162.222465},{"name":"cpu-clock","cnt":2162.223172},{"name":"faults","cnt":12718.0},{"name":"max-rss","cnt":186176.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling scopeguard v0.3.2\\n   Compiling libc v0.2.28\\n   Compiling quote v0.3.15\\n   Compiling rustc-serialize v0.3.24\\n   Compiling matches v0.1.6\\n   Compiling heapsize v0.4.1\\n   Compiling unicode-xid v0.0.4\\n   Compiling fnv v1.0.5\\n   Compiling itoa v0.3.1\\n   Compiling precomputed-hash v0.1.0\\n   Compiling log v0.3.8\\n   Compiling rayon-core v1.2.1\\n   Compiling synom v0.11.3\\n   Compiling atomic_refcell v0.1.1\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling bit-vec v0.4.4\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling num-traits v0.1.40\\n   Compiling lazy_static v0.2.8\\n   Compiling num_cpus v1.6.2\\n   Compiling same-file v0.1.3\\n   Compiling cfg-if v0.1.2\\n   Compiling futures v0.1.14\\n   Compiling time v0.1.38\\n   Compiling either v1.1.0\\n   Compiling rand v0.3.15\\n   Compiling walkdir v1.0.7\\n   Compiling coco v0.1.1\\n   Compiling serde v1.0.10\\n   Compiling num-integer v0.1.35\\n   Compiling odds v0.2.25\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.3f1MqTZ8Ajnx/components/style)\\n   Compiling syn v0.11.11\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling thread-id v3.2.0\\n   Compiling nodrop v0.1.9\\n   Compiling pdqsort v0.1.2\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.3f1MqTZ8Ajnx/components/servo_arc)\\n   Compiling arrayvec v0.3.23\\n   Compiling arraydeque v0.2.3\\nerror: use of unstable library feature \\'process_abort\\' (see issue #37838)\\n   --> components/servo_arc/lib.rs:277:13\\n    |\\n277 |             process::abort();\\n    |             ^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(process_abort)] to the crate attributes to enable\\n\\n   Compiling unicode-bidi v0.3.4\\nerror: aborting due to previous error\\n\\nerror: Could not compile `servo_arc`.\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/explicit.rs:180:32\\n    |\\n180 |         self.vec.push(Status { level, status });\\n    |                                ^^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/explicit.rs:180:39\\n    |\\n180 |         self.vec.push(Status { level, status });\\n    |                                       ^^^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs:226:13\\n    |\\n226 |             text,\\n    |             ^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs:227:13\\n    |\\n227 |             original_classes,\\n    |             ^^^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs:228:13\\n    |\\n228 |             paragraphs,\\n    |             ^^^^^^^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs:303:13\\n    |\\n303 |             text,\\n    |             ^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs:304:13\\n    |\\n304 |             original_classes,\\n    |             ^^^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs:305:13\\n    |\\n305 |             paragraphs,\\n    |             ^^^^^^^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: struct field shorthands are unstable (see issue #37340)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/unicode-bidi-0.3.4/src/lib.rs:306:13\\n    |\\n306 |             levels,\\n    |             ^^^^^^\\n    |\\n    = help: add #![feature(field_init_shorthand)] to the crate attributes to enable\\n\\nerror: aborting due to 9 previous errors\\n\\nerror: Could not compile `unicode-bidi`.\\nerror: build failed\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/4379e2fa08bf31125efa1a9d8bc3c85b16e2c2f3/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nBuild failed, waiting for other jobs to finish...\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x56131a1ecdae - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x56131a1ecdee - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x56131a0e29c6 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x56131a0e2a88 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x56131a0c9410 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x56131a0d1236 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x56131a0d2236 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x56131a0d9e7b - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x56131a0dda77 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x56131a3657dc - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x56131a35ee5b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f640316382f - __libc_start_main\n  12:     0x56131a0a1d78 - _start\n  13:                0x0 - <unknown>) })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":150501664403.0},{"name":"cycles:u","cnt":119400540575.0},{"name":"task-clock","cnt":30202.79993},{"name":"cpu-clock","cnt":30202.824605},{"name":"faults","cnt":103064.0},{"name":"max-rss","cnt":803896.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":221187979759.0},{"name":"cycles:u","cnt":226674449926.0},{"name":"task-clock","cnt":59471.764227},{"name":"cpu-clock","cnt":59471.169207},{"name":"faults","cnt":151140.0},{"name":"max-rss","cnt":1429032.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":74980075030.0},{"name":"cycles:u","cnt":50781606981.0},{"name":"task-clock","cnt":13096.506468},{"name":"cpu-clock","cnt":13095.896379},{"name":"faults","cnt":74157.0},{"name":"max-rss","cnt":858508.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":32560816757.0},{"name":"cycles:u","cnt":25607388761.0},{"name":"task-clock","cnt":5979.690521},{"name":"cpu-clock","cnt":6587.430007},{"name":"faults","cnt":42865.0},{"name":"max-rss","cnt":323776.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":45694969703.0},{"name":"cycles:u","cnt":48248941113.0},{"name":"task-clock","cnt":12712.291663},{"name":"cpu-clock","cnt":12807.041126},{"name":"faults","cnt":47179.0},{"name":"max-rss","cnt":493292.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":13529729456.0},{"name":"cycles:u","cnt":8309673992.0},{"name":"task-clock","cnt":1954.267607},{"name":"cpu-clock","cnt":2252.941674},{"name":"faults","cnt":48626.0},{"name":"max-rss","cnt":259960.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":46157280734.0},{"name":"cycles:u","cnt":48676691579.0},{"name":"task-clock","cnt":12772.864789},{"name":"cpu-clock","cnt":12900.415636},{"name":"faults","cnt":52552.0},{"name":"max-rss","cnt":487492.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":21042848791.0},{"name":"cycles:u","cnt":14486014622.0},{"name":"task-clock","cnt":3778.336378},{"name":"cpu-clock","cnt":3784.218636},{"name":"faults","cnt":52753.0},{"name":"max-rss","cnt":326444.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}