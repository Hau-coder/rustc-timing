{"commit":{"sha":"464473ab3b4bedb89fa6841ab2ceea83cb8d75fe","date":"2019-04-14T05:58:13+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":28265402815.0},{"name":"cpu-clock","cnt":7187.206402},{"name":"wall-time","cnt":7.225857421},{"name":"instructions:u","cnt":33937973382.0},{"name":"max-rss","cnt":418088.0},{"name":"task-clock","cnt":7187.219194},{"name":"faults","cnt":78044.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":8733.392607},{"name":"faults","cnt":113559.0},{"name":"instructions:u","cnt":41519369184.0},{"name":"wall-time","cnt":8.752275943},{"name":"cpu-clock","cnt":8733.395283},{"name":"cycles:u","cnt":34202521088.0},{"name":"max-rss","cnt":560432.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.388584638},{"name":"faults","cnt":114948.0},{"name":"max-rss","cnt":560040.0},{"name":"cycles:u","cnt":9228121845.0},{"name":"task-clock","cnt":2461.659976},{"name":"instructions:u","cnt":11916871860.0},{"name":"cpu-clock","cnt":2461.661033}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2870.310092},{"name":"instructions:u","cnt":13395364091.0},{"name":"cpu-clock","cnt":2870.310039},{"name":"cycles:u","cnt":10724858686.0},{"name":"max-rss","cnt":573292.0},{"name":"faults","cnt":116509.0},{"name":"wall-time","cnt":2.806848074}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":45992.20412},{"name":"wall-time","cnt":18.601384179},{"name":"instructions:u","cnt":180751277194.0},{"name":"max-rss","cnt":1585328.0},{"name":"task-clock","cnt":45992.20885},{"name":"faults","cnt":397985.0},{"name":"cycles:u","cnt":173887596466.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":198184762764.0},{"name":"max-rss","cnt":1517228.0},{"name":"wall-time","cnt":21.868795399},{"name":"faults","cnt":418774.0},{"name":"cpu-clock","cnt":52461.621143},{"name":"instructions:u","cnt":206586362065.0},{"name":"task-clock","cnt":52461.529848}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":4.241105622},{"name":"cycles:u","cnt":15730754838.0},{"name":"max-rss","cnt":1100616.0},{"name":"cpu-clock","cnt":4339.180851},{"name":"task-clock","cnt":4339.377413},{"name":"instructions:u","cnt":19316440375.0},{"name":"faults","cnt":199372.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":55332309644.0},{"name":"cpu-clock","cnt":14842.549479},{"name":"instructions:u","cnt":59903302582.0},{"name":"task-clock","cnt":14842.697663},{"name":"faults","cnt":310511.0},{"name":"max-rss","cnt":1466548.0},{"name":"wall-time","cnt":7.800387427}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":38.238385034},{"name":"max-rss","cnt":1307800.0},{"name":"task-clock","cnt":214044.953748},{"name":"instructions:u","cnt":629746463822.0},{"name":"cycles:u","cnt":807898070562.0},{"name":"faults","cnt":422893.0},{"name":"cpu-clock","cnt":214045.105031}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":970603269739.0},{"name":"max-rss","cnt":1297344.0},{"name":"task-clock","cnt":257470.810236},{"name":"wall-time","cnt":43.07002913},{"name":"faults","cnt":435728.0},{"name":"cpu-clock","cnt":257471.357656},{"name":"instructions:u","cnt":752705680780.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":13090314517.0},{"name":"cpu-clock","cnt":3625.194549},{"name":"faults","cnt":201591.0},{"name":"instructions:u","cnt":15127215717.0},{"name":"max-rss","cnt":954344.0},{"name":"task-clock","cnt":3625.438747},{"name":"wall-time","cnt":3.32887091}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":374640.0},{"name":"instructions:u","cnt":456664542953.0},{"name":"cpu-clock","cnt":152348.170802},{"name":"max-rss","cnt":1251836.0},{"name":"cycles:u","cnt":573569975570.0},{"name":"task-clock","cnt":152347.789788},{"name":"wall-time","cnt":24.418368504}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":47203.0},{"name":"max-rss","cnt":255016.0},{"name":"task-clock","cnt":3662.518932},{"name":"cycles:u","cnt":14371613121.0},{"name":"wall-time","cnt":3.718241043},{"name":"instructions:u","cnt":18862959201.0},{"name":"cpu-clock","cnt":3662.509399}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":93701.0},{"name":"max-rss","cnt":440764.0},{"name":"task-clock","cnt":6225.450024},{"name":"instructions:u","cnt":39501887293.0},{"name":"cycles:u","cnt":24289502541.0},{"name":"cpu-clock","cnt":6225.439676},{"name":"wall-time","cnt":6.263819817}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.834132393},{"name":"cycles:u","cnt":6372533972.0},{"name":"faults","cnt":185387.0},{"name":"instructions:u","cnt":10414662956.0},{"name":"cpu-clock","cnt":1835.681541},{"name":"max-rss","cnt":824752.0},{"name":"task-clock","cnt":1835.680368}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":838608.0},{"name":"cycles:u","cnt":9527516697.0},{"name":"instructions:u","cnt":14245146509.0},{"name":"wall-time","cnt":2.629429669},{"name":"task-clock","cnt":2629.127466},{"name":"faults","cnt":187200.0},{"name":"cpu-clock","cnt":2629.137856}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":245225.0},{"name":"cycles:u","cnt":58934641864.0},{"name":"task-clock","cnt":15442.379311},{"name":"max-rss","cnt":976912.0},{"name":"cpu-clock","cnt":15442.377073},{"name":"instructions:u","cnt":71612382230.0},{"name":"wall-time","cnt":9.265286213}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":239232.0},{"name":"cycles:u","cnt":79300569300.0},{"name":"task-clock","cnt":20817.020581},{"name":"instructions:u","cnt":96544507053.0},{"name":"max-rss","cnt":949132.0},{"name":"cpu-clock","cnt":20817.076259},{"name":"wall-time","cnt":12.01899882}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8701305553.0},{"name":"wall-time","cnt":2.44467806},{"name":"task-clock","cnt":2487.317304},{"name":"max-rss","cnt":994604.0},{"name":"faults","cnt":219297.0},{"name":"instructions:u","cnt":13157419303.0},{"name":"cpu-clock","cnt":2487.228716}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":11425.837532},{"name":"cpu-clock","cnt":11425.833746},{"name":"faults","cnt":347511.0},{"name":"cycles:u","cnt":42886539393.0},{"name":"instructions:u","cnt":51377456088.0},{"name":"wall-time","cnt":7.556879711},{"name":"max-rss","cnt":1447292.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":202926155337.0},{"name":"max-rss","cnt":484832.0},{"name":"cycles:u","cnt":209126055676.0},{"name":"cpu-clock","cnt":54423.50904},{"name":"faults","cnt":144948.0},{"name":"task-clock","cnt":54423.438516},{"name":"wall-time","cnt":25.71730839}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":239997176262.0},{"name":"max-rss","cnt":661700.0},{"name":"faults","cnt":199465.0},{"name":"task-clock","cnt":62680.175442},{"name":"cpu-clock","cnt":62680.327465},{"name":"instructions:u","cnt":232731189629.0},{"name":"wall-time","cnt":26.755366625}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8552252504.0},{"name":"faults","cnt":206521.0},{"name":"wall-time","cnt":2.375926098},{"name":"max-rss","cnt":919580.0},{"name":"task-clock","cnt":2432.180677},{"name":"cpu-clock","cnt":2432.093391},{"name":"instructions:u","cnt":12993926540.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":130791325158.0},{"name":"faults","cnt":275213.0},{"name":"max-rss","cnt":1175116.0},{"name":"cpu-clock","cnt":34505.158874},{"name":"instructions:u","cnt":126439793459.0},{"name":"task-clock","cnt":34505.12121},{"name":"wall-time","cnt":13.383289659}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.789210276},{"name":"faults","cnt":27273.0},{"name":"max-rss","cnt":182772.0},{"name":"cpu-clock","cnt":771.077382},{"name":"instructions:u","cnt":5383494555.0},{"name":"cycles:u","cnt":2926748801.0},{"name":"task-clock","cnt":771.077533}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":30099.0},{"name":"instructions:u","cnt":7058311665.0},{"name":"cycles:u","cnt":3807241086.0},{"name":"cpu-clock","cnt":994.110343},{"name":"max-rss","cnt":194732.0},{"name":"task-clock","cnt":994.111311},{"name":"wall-time","cnt":1.012342748}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.301748453},{"name":"instructions:u","cnt":1730882374.0},{"name":"max-rss","cnt":156644.0},{"name":"task-clock","cnt":265.317346},{"name":"cpu-clock","cnt":265.31548},{"name":"cycles:u","cnt":922285895.0},{"name":"faults","cnt":23438.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":289.454635},{"name":"faults","cnt":23470.0},{"name":"max-rss","cnt":170840.0},{"name":"instructions:u","cnt":1887614756.0},{"name":"wall-time","cnt":0.30731405},{"name":"cycles:u","cnt":1018443236.0},{"name":"cpu-clock","cnt":289.453427}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":3798711595.0},{"name":"task-clock","cnt":993.641112},{"name":"cpu-clock","cnt":993.640763},{"name":"max-rss","cnt":200976.0},{"name":"faults","cnt":30726.0},{"name":"wall-time","cnt":1.011623148},{"name":"instructions:u","cnt":7090943977.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"max-rss","cnt":273912.0},{"name":"task-clock","cnt":1130.425251},{"name":"cycles:u","cnt":4141271012.0},{"name":"faults","cnt":55693.0},{"name":"wall-time","cnt":1.154542116},{"name":"instructions:u","cnt":7180911844.0},{"name":"cpu-clock","cnt":1130.41936}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":4974508071.0},{"name":"instructions:u","cnt":8937730974.0},{"name":"max-rss","cnt":286808.0},{"name":"cpu-clock","cnt":1349.680195},{"name":"faults","cnt":59354.0},{"name":"task-clock","cnt":1349.684213},{"name":"wall-time","cnt":1.324532245}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":376.184315},{"name":"max-rss","cnt":173776.0},{"name":"cpu-clock","cnt":376.162085},{"name":"cycles:u","cnt":1214643281.0},{"name":"wall-time","cnt":0.408154365},{"name":"faults","cnt":32720.0},{"name":"instructions:u","cnt":2232971497.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":272580.0},{"name":"cycles:u","cnt":2206087324.0},{"name":"cpu-clock","cnt":653.961812},{"name":"wall-time","cnt":0.576160619},{"name":"task-clock","cnt":653.976805},{"name":"faults","cnt":55088.0},{"name":"instructions:u","cnt":3691928061.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":62078.0},{"name":"cycles:u","cnt":5046488713.0},{"name":"cpu-clock","cnt":1374.243701},{"name":"instructions:u","cnt":8878995879.0},{"name":"task-clock","cnt":1374.260788},{"name":"wall-time","cnt":1.315221592},{"name":"max-rss","cnt":288700.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"instructions:u","cnt":6121768050.0},{"name":"max-rss","cnt":204104.0},{"name":"faults","cnt":34835.0},{"name":"cycles:u","cnt":3400560431.0},{"name":"task-clock","cnt":914.394389},{"name":"cpu-clock","cnt":914.391288},{"name":"wall-time","cnt":0.93729973}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.171521731},{"name":"instructions:u","cnt":7863136779.0},{"name":"cpu-clock","cnt":1160.730665},{"name":"faults","cnt":38374.0},{"name":"max-rss","cnt":217884.0},{"name":"task-clock","cnt":1160.742986},{"name":"cycles:u","cnt":4373094337.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2041051027.0},{"name":"wall-time","cnt":0.365339779},{"name":"faults","cnt":29991.0},{"name":"cycles:u","cnt":1101611142.0},{"name":"cpu-clock","cnt":332.631009},{"name":"task-clock","cnt":332.633766},{"name":"max-rss","cnt":173476.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":196296.0},{"name":"wall-time","cnt":0.435160138},{"name":"cycles:u","cnt":1535223013.0},{"name":"faults","cnt":31895.0},{"name":"cpu-clock","cnt":444.861039},{"name":"task-clock","cnt":444.851332},{"name":"instructions:u","cnt":2640763218.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":4343479964.0},{"name":"faults","cnt":39055.0},{"name":"max-rss","cnt":211652.0},{"name":"cpu-clock","cnt":1157.689451},{"name":"wall-time","cnt":1.147724253},{"name":"task-clock","cnt":1157.712487},{"name":"instructions:u","cnt":7806824858.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":6060.648697},{"name":"wall-time","cnt":6.09452478},{"name":"cycles:u","cnt":23664508427.0},{"name":"max-rss","cnt":515704.0},{"name":"instructions:u","cnt":30472211293.0},{"name":"task-clock","cnt":6060.646139},{"name":"faults","cnt":105756.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7271.565869},{"name":"wall-time","cnt":7.308285402},{"name":"instructions:u","cnt":36822970900.0},{"name":"task-clock","cnt":7271.5732},{"name":"max-rss","cnt":586592.0},{"name":"cycles:u","cnt":28251827922.0},{"name":"faults","cnt":123772.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":7396968808.0},{"name":"cpu-clock","cnt":1538.346283},{"name":"faults","cnt":87199.0},{"name":"cycles:u","cnt":5685155179.0},{"name":"task-clock","cnt":1538.34832},{"name":"max-rss","cnt":438056.0},{"name":"wall-time","cnt":1.522857526}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":60243911861.0},{"name":"faults","cnt":173327.0},{"name":"max-rss","cnt":782740.0},{"name":"task-clock","cnt":15740.8975},{"name":"wall-time","cnt":9.200323951},{"name":"instructions:u","cnt":69689271414.0},{"name":"cpu-clock","cnt":15740.891795}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":11.399969928},{"name":"max-rss","cnt":846168.0},{"name":"cycles:u","cnt":71974239246.0},{"name":"task-clock","cnt":18872.065614},{"name":"faults","cnt":187219.0},{"name":"cpu-clock","cnt":18872.22401},{"name":"instructions:u","cnt":86638563497.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2525.40634},{"name":"wall-time","cnt":2.433274971},{"name":"max-rss","cnt":699212.0},{"name":"instructions:u","cnt":12798278373.0},{"name":"cpu-clock","cnt":2525.28569},{"name":"cycles:u","cnt":9019348506.0},{"name":"faults","cnt":140643.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":226619851345.0},{"name":"faults","cnt":271735.0},{"name":"max-rss","cnt":1130652.0},{"name":"wall-time","cnt":20.209993532},{"name":"task-clock","cnt":70367.481758},{"name":"cpu-clock","cnt":70367.549841},{"name":"cycles:u","cnt":266978296779.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":261975980931.0},{"name":"task-clock","cnt":83887.524911},{"name":"cpu-clock","cnt":83887.750302},{"name":"wall-time","cnt":21.042646303},{"name":"cycles:u","cnt":316534985748.0},{"name":"faults","cnt":297300.0},{"name":"max-rss","cnt":1104568.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":724376.0},{"name":"faults","cnt":143413.0},{"name":"wall-time","cnt":2.402948546},{"name":"cycles:u","cnt":8981482071.0},{"name":"task-clock","cnt":2529.091581},{"name":"instructions:u","cnt":12597431074.0},{"name":"cpu-clock","cnt":2528.946898}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":68404.0},{"name":"cycles:u","cnt":25122741108.0},{"name":"task-clock","cnt":6398.620255},{"name":"cpu-clock","cnt":6398.622572},{"name":"max-rss","cnt":391424.0},{"name":"wall-time","cnt":6.462481103},{"name":"instructions:u","cnt":32679509534.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":7.837534723},{"name":"instructions:u","cnt":39162835830.0},{"name":"faults","cnt":106971.0},{"name":"task-clock","cnt":7802.736348},{"name":"cycles:u","cnt":30545158883.0},{"name":"cpu-clock","cnt":7802.737315},{"name":"max-rss","cnt":543640.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2064.049489},{"name":"cycles:u","cnt":7656854531.0},{"name":"max-rss","cnt":546332.0},{"name":"wall-time","cnt":1.979764482},{"name":"cpu-clock","cnt":2064.047017},{"name":"faults","cnt":108583.0},{"name":"instructions:u","cnt":9699459128.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":554696.0},{"name":"wall-time","cnt":2.21259948},{"name":"task-clock","cnt":2287.742792},{"name":"faults","cnt":109176.0},{"name":"instructions:u","cnt":10666019203.0},{"name":"cpu-clock","cnt":2287.740008},{"name":"cycles:u","cnt":8561077584.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":116841171543.0},{"name":"wall-time","cnt":12.962698144},{"name":"max-rss","cnt":1159044.0},{"name":"faults","cnt":263089.0},{"name":"cpu-clock","cnt":28123.739464},{"name":"task-clock","cnt":28123.740303},{"name":"cycles:u","cnt":106680436952.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":15.573069487},{"name":"cycles:u","cnt":119232254490.0},{"name":"faults","cnt":273422.0},{"name":"max-rss","cnt":1173724.0},{"name":"cpu-clock","cnt":31481.826951},{"name":"task-clock","cnt":31481.845305},{"name":"instructions:u","cnt":131221696070.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":912848.0},{"name":"instructions:u","cnt":14794213765.0},{"name":"task-clock","cnt":3313.619308},{"name":"faults","cnt":161588.0},{"name":"cpu-clock","cnt":3313.421121},{"name":"wall-time","cnt":3.167111838},{"name":"cycles:u","cnt":11935506657.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":4513.016918},{"name":"instructions:u","cnt":20053658080.0},{"name":"cpu-clock","cnt":4512.787007},{"name":"cycles:u","cnt":16502375566.0},{"name":"max-rss","cnt":1005096.0},{"name":"faults","cnt":185950.0},{"name":"wall-time","cnt":3.886430326}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":23.649427905},{"name":"faults","cnt":241846.0},{"name":"instructions:u","cnt":351138077917.0},{"name":"task-clock","cnt":115422.625732},{"name":"max-rss","cnt":973704.0},{"name":"cpu-clock","cnt":115422.729333},{"name":"cycles:u","cnt":436733788458.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":270694.0},{"name":"cycles:u","cnt":495610952098.0},{"name":"wall-time","cnt":25.555197505},{"name":"max-rss","cnt":1057316.0},{"name":"instructions:u","cnt":395306840007.0},{"name":"task-clock","cnt":131293.585975},{"name":"cpu-clock","cnt":131293.901596}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":165308.0},{"name":"max-rss","cnt":822080.0},{"name":"cpu-clock","cnt":3272.451278},{"name":"instructions:u","cnt":14448838338.0},{"name":"cycles:u","cnt":11772316260.0},{"name":"task-clock","cnt":3272.652976},{"name":"wall-time","cnt":3.038915114}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":210630.0},{"name":"task-clock","cnt":15707.491509},{"name":"cycles:u","cnt":59127174105.0},{"name":"wall-time","cnt":6.324638736},{"name":"cpu-clock","cnt":15707.392318},{"name":"max-rss","cnt":984248.0},{"name":"instructions:u","cnt":59445508759.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":7814.674005},{"name":"task-clock","cnt":7814.675194},{"name":"faults","cnt":42990.0},{"name":"instructions:u","cnt":67828930043.0},{"name":"cycles:u","cnt":30975698921.0},{"name":"max-rss","cnt":251520.0},{"name":"wall-time","cnt":7.832917737}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":9.947346241},{"name":"cpu-clock","cnt":9912.298274},{"name":"cycles:u","cnt":38883280255.0},{"name":"task-clock","cnt":9912.300501},{"name":"max-rss","cnt":498904.0},{"name":"instructions:u","cnt":91561081995.0},{"name":"faults","cnt":107035.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2589094233.0},{"name":"cpu-clock","cnt":860.714487},{"name":"faults","cnt":121342.0},{"name":"max-rss","cnt":550452.0},{"name":"instructions:u","cnt":5659799392.0},{"name":"task-clock","cnt":860.705861},{"name":"wall-time","cnt":0.892779939}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":7796.625146},{"name":"wall-time","cnt":7.830842469},{"name":"instructions:u","cnt":67731240142.0},{"name":"faults","cnt":43330.0},{"name":"max-rss","cnt":255248.0},{"name":"task-clock","cnt":7796.648131},{"name":"cycles:u","cnt":30890741639.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":175440.0},{"name":"cpu-clock","cnt":10738.835087},{"name":"instructions:u","cnt":100536312440.0},{"name":"cycles:u","cnt":41773629905.0},{"name":"max-rss","cnt":758332.0},{"name":"wall-time","cnt":10.770447331},{"name":"task-clock","cnt":10738.837637}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3986824343.0},{"name":"faults","cnt":231610.0},{"name":"task-clock","cnt":1356.316949},{"name":"instructions:u","cnt":8404439342.0},{"name":"cpu-clock","cnt":1356.304202},{"name":"wall-time","cnt":1.40126666},{"name":"max-rss","cnt":970560.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":257000.0},{"name":"cycles:u","cnt":25627690487.0},{"name":"task-clock","cnt":6474.355806},{"name":"faults","cnt":43420.0},{"name":"cpu-clock","cnt":6474.363266},{"name":"wall-time","cnt":6.508727764},{"name":"instructions:u","cnt":54832441426.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":9265.422423},{"name":"wall-time","cnt":9.29590165},{"name":"instructions:u","cnt":86755180152.0},{"name":"cycles:u","cnt":35925665080.0},{"name":"faults","cnt":175555.0},{"name":"max-rss","cnt":760172.0},{"name":"task-clock","cnt":9265.44547}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.396670515},{"name":"cpu-clock","cnt":1363.85088},{"name":"instructions:u","cnt":8403404106.0},{"name":"faults","cnt":231553.0},{"name":"cycles:u","cnt":4008795692.0},{"name":"max-rss","cnt":970560.0},{"name":"task-clock","cnt":1363.823895}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":51290.0},{"name":"wall-time","cnt":1.13463314},{"name":"instructions:u","cnt":6986770763.0},{"name":"cpu-clock","cnt":1098.203885},{"name":"task-clock","cnt":1098.205582},{"name":"max-rss","cnt":284484.0},{"name":"cycles:u","cnt":4165594199.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":7967967924.0},{"name":"cycles:u","cnt":4574143030.0},{"name":"faults","cnt":54456.0},{"name":"wall-time","cnt":1.239251388},{"name":"cpu-clock","cnt":1204.312095},{"name":"max-rss","cnt":292800.0},{"name":"task-clock","cnt":1204.312967}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":350.909576},{"name":"wall-time","cnt":0.385258067},{"name":"cpu-clock","cnt":350.907414},{"name":"max-rss","cnt":184376.0},{"name":"cycles:u","cnt":1246962107.0},{"name":"instructions:u","cnt":2517513164.0},{"name":"faults","cnt":30874.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.228351549},{"name":"cpu-clock","cnt":1210.896166},{"name":"faults","cnt":54227.0},{"name":"instructions:u","cnt":7979129310.0},{"name":"task-clock","cnt":1210.897768},{"name":"max-rss","cnt":290836.0},{"name":"cycles:u","cnt":4585564568.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":288472.0},{"name":"wall-time","cnt":1.250244967},{"name":"faults","cnt":52845.0},{"name":"cpu-clock","cnt":1213.4692},{"name":"instructions:u","cnt":7977478284.0},{"name":"task-clock","cnt":1213.470809},{"name":"cycles:u","cnt":4615661506.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"faults","cnt":81870.0},{"name":"max-rss","cnt":374816.0},{"name":"task-clock","cnt":1677.498095},{"name":"cpu-clock","cnt":1677.514268},{"name":"wall-time","cnt":1.675159287},{"name":"instructions:u","cnt":10143951754.0},{"name":"cycles:u","cnt":6208302198.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":381836.0},{"name":"wall-time","cnt":1.818633713},{"name":"cycles:u","cnt":6856316059.0},{"name":"faults","cnt":83658.0},{"name":"task-clock","cnt":1837.413208},{"name":"instructions:u","cnt":11576774411.0},{"name":"cpu-clock","cnt":1837.422076}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":467.643322},{"name":"cpu-clock","cnt":467.608265},{"name":"instructions:u","cnt":3218328571.0},{"name":"wall-time","cnt":0.496774179},{"name":"cycles:u","cnt":1592036662.0},{"name":"faults","cnt":41015.0},{"name":"max-rss","cnt":214940.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":383728.0},{"name":"cycles:u","cnt":6890316442.0},{"name":"task-clock","cnt":1861.903703},{"name":"wall-time","cnt":1.817584585},{"name":"instructions:u","cnt":11546606509.0},{"name":"cpu-clock","cnt":1861.886756},{"name":"faults","cnt":83761.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":396060.0},{"name":"cycles:u","cnt":6918432865.0},{"name":"instructions:u","cnt":11576947741.0},{"name":"faults","cnt":86731.0},{"name":"task-clock","cnt":1858.846907},{"name":"cpu-clock","cnt":1858.847953},{"name":"wall-time","cnt":1.832962208}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"wall-time","cnt":3.107111792},{"name":"cycles:u","cnt":11801359564.0},{"name":"cpu-clock","cnt":3127.292532},{"name":"task-clock","cnt":3127.298486},{"name":"instructions:u","cnt":17140602852.0},{"name":"max-rss","cnt":588928.0},{"name":"faults","cnt":141888.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":18572168278.0},{"name":"task-clock","cnt":3266.874159},{"name":"faults","cnt":141381.0},{"name":"max-rss","cnt":591936.0},{"name":"cycles:u","cnt":12160965505.0},{"name":"wall-time","cnt":3.228779647},{"name":"cpu-clock","cnt":3266.876383}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.497345427},{"name":"faults","cnt":40161.0},{"name":"max-rss","cnt":214796.0},{"name":"cpu-clock","cnt":466.289727},{"name":"instructions:u","cnt":3168080687.0},{"name":"task-clock","cnt":466.297575},{"name":"cycles:u","cnt":1594155555.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":12173260127.0},{"name":"max-rss","cnt":609520.0},{"name":"task-clock","cnt":3227.953647},{"name":"cpu-clock","cnt":3227.938577},{"name":"faults","cnt":146985.0},{"name":"instructions:u","cnt":18483372863.0},{"name":"wall-time","cnt":3.175935885}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.213076763},{"name":"instructions:u","cnt":18530559796.0},{"name":"max-rss","cnt":579036.0},{"name":"task-clock","cnt":3247.792418},{"name":"faults","cnt":146264.0},{"name":"cycles:u","cnt":12244589636.0},{"name":"cpu-clock","cnt":3247.763589}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":5693.0},{"name":"instructions:u","cnt":422735724.0},{"name":"max-rss","cnt":107084.0},{"name":"cpu-clock","cnt":80.568898},{"name":"cycles:u","cnt":266540067.0},{"name":"wall-time","cnt":0.098415322},{"name":"task-clock","cnt":80.560985}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":92.774963},{"name":"cycles:u","cnt":307452780.0},{"name":"instructions:u","cnt":481581481.0},{"name":"wall-time","cnt":0.110765588},{"name":"faults","cnt":7160.0},{"name":"max-rss","cnt":115748.0},{"name":"task-clock","cnt":92.778264}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":120350562.0},{"name":"faults","cnt":6107.0},{"name":"task-clock","cnt":43.67078},{"name":"max-rss","cnt":89000.0},{"name":"cpu-clock","cnt":43.676695},{"name":"instructions:u","cnt":180133350.0},{"name":"wall-time","cnt":0.060735774}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.155161117},{"name":"max-rss","cnt":127160.0},{"name":"instructions:u","cnt":767504166.0},{"name":"task-clock","cnt":166.069578},{"name":"faults","cnt":8560.0},{"name":"cycles:u","cnt":568404130.0},{"name":"cpu-clock","cnt":166.062546}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":133840.0},{"name":"task-clock","cnt":184.640694},{"name":"instructions:u","cnt":841320962.0},{"name":"wall-time","cnt":0.170235561},{"name":"faults","cnt":10216.0},{"name":"cycles:u","cnt":634794352.0},{"name":"cpu-clock","cnt":184.635697}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":271174550.0},{"name":"cpu-clock","cnt":64.857255},{"name":"task-clock","cnt":64.8754},{"name":"max-rss","cnt":108664.0},{"name":"wall-time","cnt":0.079976082},{"name":"faults","cnt":7472.0},{"name":"cycles:u","cnt":184423941.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":245.214142},{"name":"faults","cnt":7713.0},{"name":"cpu-clock","cnt":245.210232},{"name":"instructions:u","cnt":1269385482.0},{"name":"wall-time","cnt":0.204565391},{"name":"max-rss","cnt":125492.0},{"name":"cycles:u","cnt":895875481.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":262.670817},{"name":"max-rss","cnt":131788.0},{"name":"cpu-clock","cnt":262.66534},{"name":"wall-time","cnt":0.217701572},{"name":"faults","cnt":9280.0},{"name":"cycles:u","cnt":954724393.0},{"name":"instructions:u","cnt":1341327948.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":63.166195},{"name":"faults","cnt":7311.0},{"name":"cycles:u","cnt":185190739.0},{"name":"max-rss","cnt":107516.0},{"name":"task-clock","cnt":63.163186},{"name":"wall-time","cnt":0.079265294},{"name":"instructions:u","cnt":268723490.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":429.542475},{"name":"instructions:u","cnt":1938798242.0},{"name":"wall-time","cnt":0.449159682},{"name":"cycles:u","cnt":1624667332.0},{"name":"max-rss","cnt":140844.0},{"name":"faults","cnt":12128.0},{"name":"cpu-clock","cnt":429.541308}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":2072501886.0},{"name":"instructions:u","cnt":2475430747.0},{"name":"max-rss","cnt":168736.0},{"name":"faults","cnt":18977.0},{"name":"task-clock","cnt":549.91681},{"name":"cpu-clock","cnt":549.92656},{"name":"wall-time","cnt":0.568112065}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":185.210778},{"name":"wall-time","cnt":0.194504813},{"name":"instructions:u","cnt":893695258.0},{"name":"task-clock","cnt":185.197759},{"name":"cycles:u","cnt":623686254.0},{"name":"max-rss","cnt":157088.0},{"name":"faults","cnt":17648.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.213507183},{"name":"task-clock","cnt":204.066871},{"name":"faults","cnt":17996.0},{"name":"cycles:u","cnt":696277907.0},{"name":"instructions:u","cnt":960698419.0},{"name":"max-rss","cnt":164652.0},{"name":"cpu-clock","cnt":204.075135}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.921506286},{"name":"instructions:u","cnt":7731112215.0},{"name":"faults","cnt":29975.0},{"name":"cpu-clock","cnt":1801.348689},{"name":"cycles:u","cnt":6757204696.0},{"name":"task-clock","cnt":1801.346977},{"name":"max-rss","cnt":220612.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2334.208253},{"name":"faults","cnt":36873.0},{"name":"instructions:u","cnt":9481139802.0},{"name":"cycles:u","cnt":8661545909.0},{"name":"cpu-clock","cnt":2334.220981},{"name":"wall-time","cnt":1.1353173},{"name":"max-rss","cnt":247276.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":185188.0},{"name":"cycles:u","cnt":912606683.0},{"name":"task-clock","cnt":286.794849},{"name":"faults","cnt":22917.0},{"name":"cpu-clock","cnt":286.736131},{"name":"instructions:u","cnt":1220621070.0},{"name":"wall-time","cnt":0.2752796}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1008703096.0},{"name":"wall-time","cnt":0.319058541},{"name":"max-rss","cnt":192012.0},{"name":"cpu-clock","cnt":313.160997},{"name":"faults","cnt":23480.0},{"name":"instructions:u","cnt":1325794629.0},{"name":"task-clock","cnt":313.229346}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":5324.339314},{"name":"instructions:u","cnt":18185450355.0},{"name":"task-clock","cnt":5324.348811},{"name":"cycles:u","cnt":20065103618.0},{"name":"faults","cnt":33931.0},{"name":"max-rss","cnt":236676.0},{"name":"wall-time","cnt":1.458035085}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":255252.0},{"name":"instructions:u","cnt":20230248068.0},{"name":"task-clock","cnt":5969.489487},{"name":"faults","cnt":39088.0},{"name":"wall-time","cnt":1.637995738},{"name":"cycles:u","cnt":22410154416.0},{"name":"cpu-clock","cnt":5969.504378}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":274.146077},{"name":"cycles:u","cnt":902734975.0},{"name":"max-rss","cnt":184320.0},{"name":"faults","cnt":23040.0},{"name":"cpu-clock","cnt":274.109867},{"name":"instructions:u","cnt":1231348847.0},{"name":"wall-time","cnt":0.265888026}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":197088.0},{"name":"wall-time","cnt":0.375445974},{"name":"faults","cnt":24191.0},{"name":"instructions:u","cnt":1726795520.0},{"name":"task-clock","cnt":391.582458},{"name":"cpu-clock","cnt":391.537803},{"name":"cycles:u","cnt":1354242782.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":11765.0},{"name":"wall-time","cnt":0.766513255},{"name":"cpu-clock","cnt":748.680629},{"name":"cycles:u","cnt":2896155776.0},{"name":"instructions:u","cnt":3977845509.0},{"name":"task-clock","cnt":748.680479},{"name":"max-rss","cnt":137132.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3546325001.0},{"name":"cpu-clock","cnt":920.7422},{"name":"task-clock","cnt":920.744214},{"name":"instructions:u","cnt":4677222815.0},{"name":"faults","cnt":18609.0},{"name":"max-rss","cnt":165340.0},{"name":"wall-time","cnt":0.938897037}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":702439264.0},{"name":"faults","cnt":18995.0},{"name":"task-clock","cnt":207.165487},{"name":"wall-time","cnt":0.213216792},{"name":"cpu-clock","cnt":207.163431},{"name":"instructions:u","cnt":976746559.0},{"name":"max-rss","cnt":160068.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":209.650945},{"name":"max-rss","cnt":160472.0},{"name":"wall-time","cnt":0.216463436},{"name":"cycles:u","cnt":710021960.0},{"name":"faults","cnt":19007.0},{"name":"instructions:u","cnt":986525118.0},{"name":"cpu-clock","cnt":209.658615}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1073.579716},{"name":"cpu-clock","cnt":1073.565458},{"name":"wall-time","cnt":0.908684547},{"name":"faults","cnt":15812.0},{"name":"cycles:u","cnt":4098756009.0},{"name":"instructions:u","cnt":5221098187.0},{"name":"max-rss","cnt":162248.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1335.823265},{"name":"cycles:u","cnt":5055597540.0},{"name":"max-rss","cnt":194840.0},{"name":"instructions:u","cnt":6211643484.0},{"name":"faults","cnt":24469.0},{"name":"cpu-clock","cnt":1335.818492},{"name":"wall-time","cnt":1.117260119}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":844432432.0},{"name":"instructions:u","cnt":1154837387.0},{"name":"task-clock","cnt":256.102374},{"name":"max-rss","cnt":176960.0},{"name":"cpu-clock","cnt":256.084498},{"name":"faults","cnt":21672.0},{"name":"wall-time","cnt":0.271545582}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1166070660.0},{"name":"faults","cnt":21611.0},{"name":"task-clock","cnt":257.366681},{"name":"max-rss","cnt":177180.0},{"name":"wall-time","cnt":0.256309698},{"name":"cpu-clock","cnt":257.359085},{"name":"cycles:u","cnt":853498100.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.97600655},{"name":"instructions:u","cnt":6581789643.0},{"name":"task-clock","cnt":1608.936419},{"name":"cpu-clock","cnt":1608.946889},{"name":"cycles:u","cnt":6101776352.0},{"name":"faults","cnt":18016.0},{"name":"max-rss","cnt":170520.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1907.384651},{"name":"faults","cnt":25615.0},{"name":"max-rss","cnt":200700.0},{"name":"cycles:u","cnt":7200008664.0},{"name":"wall-time","cnt":1.174122756},{"name":"instructions:u","cnt":7636762665.0},{"name":"task-clock","cnt":1907.402212}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":252.978811},{"name":"task-clock","cnt":253.019329},{"name":"wall-time","cnt":0.271083729},{"name":"instructions:u","cnt":1148267068.0},{"name":"max-rss","cnt":176060.0},{"name":"cycles:u","cnt":840028006.0},{"name":"faults","cnt":21556.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":253.7081},{"name":"instructions:u","cnt":1159462240.0},{"name":"max-rss","cnt":176252.0},{"name":"faults","cnt":21586.0},{"name":"cycles:u","cnt":849722165.0},{"name":"task-clock","cnt":253.729509},{"name":"wall-time","cnt":0.252967298}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":94812.0},{"name":"instructions:u","cnt":194151412.0},{"name":"cycles:u","cnt":129848093.0},{"name":"task-clock","cnt":45.082979},{"name":"wall-time","cnt":0.063411248},{"name":"cpu-clock","cnt":45.081485},{"name":"faults","cnt":4912.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":101004.0},{"name":"task-clock","cnt":51.63324},{"name":"wall-time","cnt":0.069846239},{"name":"cycles:u","cnt":149602644.0},{"name":"cpu-clock","cnt":51.640674},{"name":"instructions:u","cnt":218898153.0},{"name":"faults","cnt":6081.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":5555.0},{"name":"max-rss","cnt":86664.0},{"name":"wall-time","cnt":0.059667793},{"name":"cpu-clock","cnt":42.016363},{"name":"task-clock","cnt":42.02859},{"name":"cycles:u","cnt":116625208.0},{"name":"instructions:u","cnt":170397566.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":50.836214},{"name":"cpu-clock","cnt":50.833118},{"name":"faults","cnt":6199.0},{"name":"cycles:u","cnt":145040930.0},{"name":"instructions:u","cnt":212380872.0},{"name":"max-rss","cnt":101984.0},{"name":"wall-time","cnt":0.068480536}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":124.840389},{"name":"cpu-clock","cnt":124.833363},{"name":"cycles:u","cnt":359744398.0},{"name":"wall-time","cnt":0.132597333},{"name":"max-rss","cnt":115372.0},{"name":"faults","cnt":11994.0},{"name":"instructions:u","cnt":525932452.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":13434.0},{"name":"max-rss","cnt":121492.0},{"name":"task-clock","cnt":136.911608},{"name":"cycles:u","cnt":398406008.0},{"name":"cpu-clock","cnt":136.915016},{"name":"instructions:u","cnt":573954221.0},{"name":"wall-time","cnt":0.143575568}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":112.253083},{"name":"cycles:u","cnt":312616914.0},{"name":"instructions:u","cnt":475740325.0},{"name":"max-rss","cnt":105208.0},{"name":"faults","cnt":12664.0},{"name":"task-clock","cnt":112.26375},{"name":"wall-time","cnt":0.127024717}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":553462305.0},{"name":"faults","cnt":13719.0},{"name":"task-clock","cnt":133.276892},{"name":"cpu-clock","cnt":133.28015},{"name":"wall-time","cnt":0.139607938},{"name":"max-rss","cnt":122748.0},{"name":"cycles:u","cnt":383565779.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.1364648},{"name":"cpu-clock","cnt":128.412583},{"name":"faults","cnt":11867.0},{"name":"task-clock","cnt":128.41683},{"name":"instructions:u","cnt":551606879.0},{"name":"max-rss","cnt":117924.0},{"name":"cycles:u","cnt":377648953.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.146797488},{"name":"faults","cnt":13338.0},{"name":"cycles:u","cnt":415059424.0},{"name":"task-clock","cnt":139.85452},{"name":"cpu-clock","cnt":139.83997},{"name":"instructions:u","cnt":599195232.0},{"name":"max-rss","cnt":123540.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.128983569},{"name":"cpu-clock","cnt":113.909316},{"name":"cycles:u","cnt":322114776.0},{"name":"instructions:u","cnt":472871820.0},{"name":"max-rss","cnt":104692.0},{"name":"task-clock","cnt":113.913375},{"name":"faults","cnt":12460.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":580282013.0},{"name":"cpu-clock","cnt":135.462121},{"name":"cycles:u","cnt":398949038.0},{"name":"faults","cnt":13607.0},{"name":"wall-time","cnt":0.141363292},{"name":"max-rss","cnt":125104.0},{"name":"task-clock","cnt":135.475477}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":36785.0},{"name":"max-rss","cnt":229344.0},{"name":"cpu-clock","cnt":1644.781617},{"name":"instructions:u","cnt":9383384874.0},{"name":"wall-time","cnt":1.692907829},{"name":"cycles:u","cnt":6373779414.0},{"name":"task-clock","cnt":1644.782747}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2003.254448},{"name":"max-rss","cnt":257448.0},{"name":"cycles:u","cnt":7732782687.0},{"name":"faults","cnt":42438.0},{"name":"wall-time","cnt":2.0602463},{"name":"instructions:u","cnt":11888767403.0},{"name":"cpu-clock","cnt":2003.242964}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.643995805},{"name":"task-clock","cnt":641.937829},{"name":"instructions:u","cnt":4063165060.0},{"name":"cycles:u","cnt":2336815075.0},{"name":"cpu-clock","cnt":641.937236},{"name":"faults","cnt":39086.0},{"name":"max-rss","cnt":242320.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":4583737490.0},{"name":"task-clock","cnt":748.464933},{"name":"faults","cnt":39941.0},{"name":"wall-time","cnt":0.750949759},{"name":"max-rss","cnt":251896.0},{"name":"cycles:u","cnt":2757287273.0},{"name":"cpu-clock","cnt":748.475099}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":51767.0},{"name":"max-rss","cnt":299876.0},{"name":"cycles:u","cnt":10024184252.0},{"name":"instructions:u","cnt":13469469914.0},{"name":"wall-time","cnt":2.078410213},{"name":"cpu-clock","cnt":2623.552028},{"name":"task-clock","cnt":2623.545942}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":62378.0},{"name":"instructions:u","cnt":16732330630.0},{"name":"wall-time","cnt":2.566671651},{"name":"task-clock","cnt":3170.655036},{"name":"cpu-clock","cnt":3170.650642},{"name":"cycles:u","cnt":12056403507.0},{"name":"max-rss","cnt":341360.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":292860.0},{"name":"cycles:u","cnt":2750419469.0},{"name":"wall-time","cnt":0.761115224},{"name":"task-clock","cnt":777.434233},{"name":"instructions:u","cnt":4611208483.0},{"name":"faults","cnt":48264.0},{"name":"cpu-clock","cnt":777.399959}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":897.871532},{"name":"max-rss","cnt":307548.0},{"name":"wall-time","cnt":0.878179038},{"name":"faults","cnt":50812.0},{"name":"instructions:u","cnt":5172550162.0},{"name":"task-clock","cnt":897.918898},{"name":"cycles:u","cnt":3220045620.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":27156415981.0},{"name":"max-rss","cnt":383716.0},{"name":"cpu-clock","cnt":7209.81929},{"name":"instructions:u","cnt":27115726208.0},{"name":"task-clock","cnt":7209.806538},{"name":"faults","cnt":79159.0},{"name":"wall-time","cnt":2.775289162}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":3.049892688},{"name":"instructions:u","cnt":28232191435.0},{"name":"task-clock","cnt":7411.9169},{"name":"max-rss","cnt":368972.0},{"name":"faults","cnt":70455.0},{"name":"cpu-clock","cnt":7411.898084},{"name":"cycles:u","cnt":27956104191.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":806.228469},{"name":"wall-time","cnt":0.77405116},{"name":"cpu-clock","cnt":806.171267},{"name":"instructions:u","cnt":4729439028.0},{"name":"max-rss","cnt":299292.0},{"name":"faults","cnt":50303.0},{"name":"cycles:u","cnt":2862867963.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":949.821559},{"name":"wall-time","cnt":0.880491684},{"name":"instructions:u","cnt":5396947032.0},{"name":"cycles:u","cnt":3429481872.0},{"name":"faults","cnt":52380.0},{"name":"max-rss","cnt":315020.0},{"name":"task-clock","cnt":949.855547}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":4369266763.0},{"name":"faults","cnt":22084.0},{"name":"cpu-clock","cnt":1129.896439},{"name":"task-clock","cnt":1129.896455},{"name":"wall-time","cnt":1.148014746},{"name":"instructions:u","cnt":4838844640.0},{"name":"max-rss","cnt":182088.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":36628.0},{"name":"task-clock","cnt":1450.884821},{"name":"instructions:u","cnt":6166631773.0},{"name":"max-rss","cnt":239908.0},{"name":"cpu-clock","cnt":1450.883293},{"name":"cycles:u","cnt":5573388072.0},{"name":"wall-time","cnt":1.488786532}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1599665105.0},{"name":"cpu-clock","cnt":450.252076},{"name":"faults","cnt":34373.0},{"name":"task-clock","cnt":450.242051},{"name":"max-rss","cnt":225292.0},{"name":"wall-time","cnt":0.46427826},{"name":"instructions:u","cnt":2040753008.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1698656513.0},{"name":"cpu-clock","cnt":477.094366},{"name":"wall-time","cnt":0.472205603},{"name":"task-clock","cnt":477.095243},{"name":"faults","cnt":35204.0},{"name":"instructions:u","cnt":2129129210.0},{"name":"max-rss","cnt":234392.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":314248.0},{"name":"task-clock","cnt":4313.12871},{"name":"cycles:u","cnt":16365831750.0},{"name":"wall-time","cnt":2.274336639},{"name":"instructions:u","cnt":17356420237.0},{"name":"faults","cnt":51456.0},{"name":"cpu-clock","cnt":4313.114197}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":357712.0},{"name":"faults","cnt":62498.0},{"name":"cycles:u","cnt":20180495667.0},{"name":"task-clock","cnt":5370.097496},{"name":"cpu-clock","cnt":5370.07882},{"name":"instructions:u","cnt":20722802638.0},{"name":"wall-time","cnt":2.752047568}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":728.340673},{"name":"cpu-clock","cnt":728.224205},{"name":"faults","cnt":47047.0},{"name":"cycles:u","cnt":2479552107.0},{"name":"wall-time","cnt":0.702790906},{"name":"instructions:u","cnt":3006807182.0},{"name":"max-rss","cnt":300984.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":769.415019},{"name":"instructions:u","cnt":3123841821.0},{"name":"cycles:u","cnt":2629205532.0},{"name":"task-clock","cnt":769.507271},{"name":"faults","cnt":50268.0},{"name":"wall-time","cnt":0.716236528},{"name":"max-rss","cnt":320200.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":47223057946.0},{"name":"cycles:u","cnt":59616981561.0},{"name":"faults","cnt":49848.0},{"name":"max-rss","cnt":299588.0},{"name":"cpu-clock","cnt":15769.977539},{"name":"wall-time","cnt":3.507517718},{"name":"task-clock","cnt":15769.960287}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":341692.0},{"name":"task-clock","cnt":18511.324635},{"name":"cpu-clock","cnt":18511.400597},{"name":"cycles:u","cnt":69667780642.0},{"name":"instructions:u","cnt":55186660850.0},{"name":"faults","cnt":62457.0},{"name":"wall-time","cnt":4.102222252}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":3063955765.0},{"name":"max-rss","cnt":296936.0},{"name":"task-clock","cnt":746.334726},{"name":"cycles:u","cnt":2566641919.0},{"name":"faults","cnt":50355.0},{"name":"wall-time","cnt":0.70894583},{"name":"cpu-clock","cnt":746.207993}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":6537155485.0},{"name":"instructions:u","cnt":7055672438.0},{"name":"faults","cnt":57307.0},{"name":"max-rss","cnt":331292.0},{"name":"wall-time","cnt":1.223670911},{"name":"task-clock","cnt":1786.717069},{"name":"cpu-clock","cnt":1786.647277}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":12181745082.0},{"name":"max-rss","cnt":181236.0},{"name":"cpu-clock","cnt":1656.916135},{"name":"faults","cnt":29247.0},{"name":"task-clock","cnt":1656.916266},{"name":"wall-time","cnt":1.701118014},{"name":"cycles:u","cnt":6455266459.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":6908866932.0},{"name":"max-rss","cnt":194572.0},{"name":"faults","cnt":31667.0},{"name":"instructions:u","cnt":12921720287.0},{"name":"task-clock","cnt":1772.539157},{"name":"wall-time","cnt":1.808232254},{"name":"cpu-clock","cnt":1772.538191}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":175.46496},{"name":"cycles:u","cnt":601917634.0},{"name":"task-clock","cnt":175.465778},{"name":"faults","cnt":14503.0},{"name":"max-rss","cnt":137644.0},{"name":"instructions:u","cnt":905363092.0},{"name":"wall-time","cnt":0.20485109}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.761229717},{"name":"faults","cnt":33665.0},{"name":"task-clock","cnt":1747.516231},{"name":"instructions:u","cnt":12777817232.0},{"name":"cpu-clock","cnt":1747.515721},{"name":"cycles:u","cnt":6802959026.0},{"name":"max-rss","cnt":202328.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":2693.008231},{"name":"wall-time","cnt":2.509479387},{"name":"faults","cnt":54790.0},{"name":"instructions:u","cnt":16758963779.0},{"name":"cycles:u","cnt":10390043967.0},{"name":"task-clock","cnt":2693.011695},{"name":"max-rss","cnt":288196.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.638298608},{"name":"instructions:u","cnt":17956516631.0},{"name":"cycles:u","cnt":11184274492.0},{"name":"cpu-clock","cnt":2911.085626},{"name":"task-clock","cnt":2911.083195},{"name":"faults","cnt":60553.0},{"name":"max-rss","cnt":299540.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":18598.0},{"name":"max-rss","cnt":160960.0},{"name":"cpu-clock","cnt":243.332919},{"name":"wall-time","cnt":0.266956552},{"name":"instructions:u","cnt":1247088221.0},{"name":"task-clock","cnt":243.354149},{"name":"cycles:u","cnt":818013955.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":17733537885.0},{"name":"cycles:u","cnt":10993561002.0},{"name":"max-rss","cnt":318744.0},{"name":"wall-time","cnt":2.569204141},{"name":"cpu-clock","cnt":2868.484799},{"name":"task-clock","cnt":2868.475529},{"name":"faults","cnt":61976.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":8.023099478},{"name":"faults","cnt":72225.0},{"name":"cycles:u","cnt":32515895306.0},{"name":"cpu-clock","cnt":8281.769369},{"name":"task-clock","cnt":8281.780248},{"name":"max-rss","cnt":327156.0},{"name":"instructions:u","cnt":51905691648.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":74992.0},{"name":"cycles:u","cnt":33281521614.0},{"name":"max-rss","cnt":353652.0},{"name":"task-clock","cnt":8486.038133},{"name":"cpu-clock","cnt":8486.059865},{"name":"wall-time","cnt":8.197165208},{"name":"instructions:u","cnt":52905193294.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":160288.0},{"name":"cycles:u","cnt":799034911.0},{"name":"task-clock","cnt":234.991663},{"name":"wall-time","cnt":0.260669071},{"name":"faults","cnt":18740.0},{"name":"instructions:u","cnt":1218265825.0},{"name":"cpu-clock","cnt":234.972784}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":8043.008731},{"name":"cycles:u","cnt":31686552086.0},{"name":"instructions:u","cnt":50549643613.0},{"name":"task-clock","cnt":8043.014192},{"name":"max-rss","cnt":348476.0},{"name":"wall-time","cnt":8.020107778},{"name":"faults","cnt":76718.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":72.923538},{"name":"cycles:u","cnt":233533858.0},{"name":"faults","cnt":6092.0},{"name":"instructions:u","cnt":349134037.0},{"name":"wall-time","cnt":0.09098505},{"name":"max-rss","cnt":111420.0},{"name":"task-clock","cnt":72.925013}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.107529669},{"name":"faults","cnt":7945.0},{"name":"max-rss","cnt":121136.0},{"name":"instructions:u","cnt":421465337.0},{"name":"cpu-clock","cnt":89.599878},{"name":"cycles:u","cnt":290931172.0},{"name":"task-clock","cnt":89.601345}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":105988.0},{"name":"wall-time","cnt":0.076143821},{"name":"faults","cnt":7517.0},{"name":"cpu-clock","cnt":59.078233},{"name":"task-clock","cnt":59.08076},{"name":"instructions:u","cnt":261667380.0},{"name":"cycles:u","cnt":173795140.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":265078303.0},{"name":"faults","cnt":8169.0},{"name":"instructions:u","cnt":385257294.0},{"name":"wall-time","cnt":0.100599336},{"name":"cpu-clock","cnt":83.527286},{"name":"max-rss","cnt":122432.0},{"name":"task-clock","cnt":83.528906}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"faults","cnt":8167.0},{"name":"task-clock","cnt":84.270081},{"name":"cpu-clock","cnt":84.26768},{"name":"cycles:u","cnt":266213610.0},{"name":"wall-time","cnt":0.101293503},{"name":"instructions:u","cnt":384133504.0},{"name":"max-rss","cnt":122468.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":347196296.0},{"name":"task-clock","cnt":76.764529},{"name":"max-rss","cnt":122240.0},{"name":"cycles:u","cnt":238891580.0},{"name":"cpu-clock","cnt":76.753662},{"name":"faults","cnt":8171.0},{"name":"wall-time","cnt":0.093504769}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":87.731919},{"name":"cycles:u","cnt":277580538.0},{"name":"task-clock","cnt":87.734066},{"name":"wall-time","cnt":0.104730605},{"name":"faults","cnt":8162.0},{"name":"max-rss","cnt":122664.0},{"name":"instructions:u","cnt":384579584.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":122832.0},{"name":"cpu-clock","cnt":84.001956},{"name":"cycles:u","cnt":265792104.0},{"name":"instructions:u","cnt":386019417.0},{"name":"wall-time","cnt":0.101150619},{"name":"task-clock","cnt":83.995484},{"name":"faults","cnt":8164.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":960735982.0},{"name":"task-clock","cnt":238.653896},{"name":"faults","cnt":9824.0},{"name":"cycles:u","cnt":823778863.0},{"name":"max-rss","cnt":135444.0},{"name":"wall-time","cnt":0.15050265},{"name":"cpu-clock","cnt":238.657072}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":142732.0},{"name":"cpu-clock","cnt":269.335736},{"name":"instructions:u","cnt":1089241908.0},{"name":"task-clock","cnt":269.338508},{"name":"faults","cnt":11679.0},{"name":"wall-time","cnt":0.172906397},{"name":"cycles:u","cnt":931650168.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.09381402},{"name":"task-clock","cnt":81.229497},{"name":"cycles:u","cnt":232180037.0},{"name":"max-rss","cnt":118620.0},{"name":"cpu-clock","cnt":81.22855},{"name":"instructions:u","cnt":324172267.0},{"name":"faults","cnt":8688.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":866982181.0},{"name":"instructions:u","cnt":1030474748.0},{"name":"cpu-clock","cnt":254.317326},{"name":"max-rss","cnt":145168.0},{"name":"wall-time","cnt":0.160364337},{"name":"task-clock","cnt":254.283542},{"name":"faults","cnt":12060.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"cpu-clock","cnt":243.870402},{"name":"cycles:u","cnt":827409614.0},{"name":"task-clock","cnt":243.867109},{"name":"max-rss","cnt":145456.0},{"name":"faults","cnt":12154.0},{"name":"wall-time","cnt":0.152388184},{"name":"instructions:u","cnt":960684263.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":233.997496},{"name":"faults","cnt":12090.0},{"name":"wall-time","cnt":0.144032472},{"name":"task-clock","cnt":234.014951},{"name":"instructions:u","cnt":913664674.0},{"name":"cycles:u","cnt":787056041.0},{"name":"max-rss","cnt":144772.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":251.169092},{"name":"faults","cnt":12287.0},{"name":"cycles:u","cnt":853309372.0},{"name":"instructions:u","cnt":962874338.0},{"name":"wall-time","cnt":0.153450851},{"name":"max-rss","cnt":145680.0},{"name":"cpu-clock","cnt":251.169861}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":145604.0},{"name":"cycles:u","cnt":841863003.0},{"name":"task-clock","cnt":247.595069},{"name":"faults","cnt":12214.0},{"name":"instructions:u","cnt":968616355.0},{"name":"wall-time","cnt":0.154231822},{"name":"cpu-clock","cnt":247.589009}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"wall-time","cnt":0.275604281},{"name":"cpu-clock","cnt":641.904924},{"name":"faults","cnt":11587.0},{"name":"max-rss","cnt":142928.0},{"name":"task-clock","cnt":641.917466},{"name":"cycles:u","cnt":2361433745.0},{"name":"instructions:u","cnt":2300368530.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.29163592},{"name":"cpu-clock","cnt":682.485088},{"name":"faults","cnt":13582.0},{"name":"instructions:u","cnt":2438614920.0},{"name":"max-rss","cnt":150812.0},{"name":"cycles:u","cnt":2495377178.0},{"name":"task-clock","cnt":682.507551}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":232151776.0},{"name":"max-rss","cnt":117972.0},{"name":"instructions:u","cnt":325054758.0},{"name":"wall-time","cnt":0.092387118},{"name":"task-clock","cnt":79.474465},{"name":"cpu-clock","cnt":79.449492},{"name":"faults","cnt":8821.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":153152.0},{"name":"cycles:u","cnt":2366943799.0},{"name":"cpu-clock","cnt":648.864758},{"name":"wall-time","cnt":0.293466262},{"name":"instructions:u","cnt":2362689153.0},{"name":"task-clock","cnt":648.863425},{"name":"faults","cnt":14095.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"task-clock","cnt":405.714709},{"name":"wall-time","cnt":0.191372776},{"name":"instructions:u","cnt":1428811007.0},{"name":"faults","cnt":13285.0},{"name":"max-rss","cnt":149828.0},{"name":"cycles:u","cnt":1430076497.0},{"name":"cpu-clock","cnt":405.700912}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1327649852.0},{"name":"cycles:u","cnt":1301369670.0},{"name":"wall-time","cnt":0.183932917},{"name":"cpu-clock","cnt":370.898792},{"name":"faults","cnt":13113.0},{"name":"task-clock","cnt":370.896655},{"name":"max-rss","cnt":148972.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1359127849.0},{"name":"faults","cnt":13108.0},{"name":"task-clock","cnt":380.542572},{"name":"wall-time","cnt":0.194322504},{"name":"cycles:u","cnt":1339057692.0},{"name":"max-rss","cnt":149588.0},{"name":"cpu-clock","cnt":380.501589}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1368400212.0},{"name":"cycles:u","cnt":1338571940.0},{"name":"cpu-clock","cnt":380.466141},{"name":"wall-time","cnt":0.191369984},{"name":"task-clock","cnt":380.475495},{"name":"max-rss","cnt":149140.0},{"name":"faults","cnt":12999.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":20678919596.0},{"name":"wall-time","cnt":5.332976148},{"name":"task-clock","cnt":5314.768557},{"name":"instructions:u","cnt":40534405518.0},{"name":"max-rss","cnt":484568.0},{"name":"faults","cnt":138576.0},{"name":"cpu-clock","cnt":5314.759489}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":510848.0},{"name":"faults","cnt":145945.0},{"name":"instructions:u","cnt":42982336806.0},{"name":"cpu-clock","cnt":5721.220872},{"name":"wall-time","cnt":5.758780845},{"name":"task-clock","cnt":5721.211733},{"name":"cycles:u","cnt":22263784340.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.501275164},{"name":"cpu-clock","cnt":485.201577},{"name":"max-rss","cnt":206884.0},{"name":"cycles:u","cnt":1741588859.0},{"name":"task-clock","cnt":485.181814},{"name":"faults","cnt":36192.0},{"name":"instructions:u","cnt":2075418043.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":333948.0},{"name":"cycles:u","cnt":28586060572.0},{"name":"instructions:u","cnt":51489294290.0},{"name":"task-clock","cnt":7498.395713},{"name":"wall-time","cnt":7.493665215},{"name":"cpu-clock","cnt":7498.375831},{"name":"max-rss","cnt":1229364.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":8.002914355},{"name":"cycles:u","cnt":30845328672.0},{"name":"instructions:u","cnt":54685689173.0},{"name":"max-rss","cnt":1241924.0},{"name":"task-clock","cnt":8048.088905},{"name":"cpu-clock","cnt":8048.099211},{"name":"faults","cnt":337233.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":43170.0},{"name":"cpu-clock","cnt":586.996986},{"name":"task-clock","cnt":586.999535},{"name":"wall-time","cnt":0.603190494},{"name":"instructions:u","cnt":2784390216.0},{"name":"max-rss","cnt":240584.0},{"name":"cycles:u","cnt":2095452893.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1022076.0},{"name":"task-clock","cnt":6872.627606},{"name":"faults","cnt":282187.0},{"name":"cycles:u","cnt":26251328270.0},{"name":"instructions:u","cnt":51764716446.0},{"name":"wall-time","cnt":6.873512642},{"name":"cpu-clock","cnt":6872.618305}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":7.313780502},{"name":"cpu-clock","cnt":7346.852085},{"name":"instructions:u","cnt":54941505678.0},{"name":"cycles:u","cnt":28131796474.0},{"name":"max-rss","cnt":882976.0},{"name":"task-clock","cnt":7346.84141},{"name":"faults","cnt":283996.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2722494787.0},{"name":"faults","cnt":42026.0},{"name":"wall-time","cnt":0.583219702},{"name":"cpu-clock","cnt":568.220793},{"name":"cycles:u","cnt":2035730179.0},{"name":"max-rss","cnt":233776.0},{"name":"task-clock","cnt":568.221508}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmpP0kwuC)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x5575094d73bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x5575094d7552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x5575094d686c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x557509472470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x557509160afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x557509168722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x55750917a541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x557509189a1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x55750917f96e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x557509133e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x5575094fe0d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x557509508d39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x5575094fec9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x55750918dd57 - main\n  14:     0x7f00baf3982f - __libc_start_main\n  15:     0x557509129518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":1.904091634},{"name":"cpu-clock","cnt":1842.283267},{"name":"faults","cnt":26872.0},{"name":"max-rss","cnt":203380.0},{"name":"task-clock","cnt":1842.294021},{"name":"cycles:u","cnt":7170319124.0},{"name":"instructions:u","cnt":8662608695.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":40438.0},{"name":"wall-time","cnt":2.302286036},{"name":"max-rss","cnt":258756.0},{"name":"cycles:u","cnt":8813133592.0},{"name":"instructions:u","cnt":10681785956.0},{"name":"task-clock","cnt":2267.961112},{"name":"cpu-clock","cnt":2267.970116}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1730280516.0},{"name":"max-rss","cnt":244844.0},{"name":"task-clock","cnt":493.283383},{"name":"faults","cnt":38988.0},{"name":"wall-time","cnt":0.502240427},{"name":"instructions:u","cnt":2242676141.0},{"name":"cpu-clock","cnt":493.282004}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2336278000.0},{"name":"task-clock","cnt":528.035039},{"name":"cpu-clock","cnt":528.024964},{"name":"cycles:u","cnt":1884845962.0},{"name":"max-rss","cnt":253384.0},{"name":"wall-time","cnt":0.516354472},{"name":"faults","cnt":39341.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":34028347818.0},{"name":"max-rss","cnt":456256.0},{"name":"faults","cnt":89867.0},{"name":"instructions:u","cnt":36621018661.0},{"name":"task-clock","cnt":8999.967388},{"name":"wall-time","cnt":3.999552915},{"name":"cpu-clock","cnt":8999.975243}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.735645158},{"name":"task-clock","cnt":10523.480915},{"name":"faults","cnt":101448.0},{"name":"instructions:u","cnt":41060956506.0},{"name":"max-rss","cnt":503528.0},{"name":"cycles:u","cnt":39753107322.0},{"name":"cpu-clock","cnt":10523.474821}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":941.105629},{"name":"wall-time","cnt":0.910477305},{"name":"faults","cnt":65936.0},{"name":"cycles:u","cnt":3229664093.0},{"name":"task-clock","cnt":941.212689},{"name":"instructions:u","cnt":4022120536.0},{"name":"max-rss","cnt":390816.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.961319847},{"name":"cycles:u","cnt":3541010515.0},{"name":"cpu-clock","cnt":1024.654451},{"name":"faults","cnt":66999.0},{"name":"max-rss","cnt":401172.0},{"name":"instructions:u","cnt":4323570220.0},{"name":"task-clock","cnt":1024.767731}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":436464.0},{"name":"faults","cnt":87063.0},{"name":"instructions:u","cnt":120323825220.0},{"name":"wall-time","cnt":7.928639786},{"name":"cpu-clock","cnt":38835.859411},{"name":"cycles:u","cnt":146922353192.0},{"name":"task-clock","cnt":38835.800068}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":8.261445331},{"name":"instructions:u","cnt":128361531228.0},{"name":"cycles:u","cnt":162619741340.0},{"name":"task-clock","cnt":43086.426846},{"name":"faults","cnt":100825.0},{"name":"cpu-clock","cnt":43086.530831},{"name":"max-rss","cnt":490036.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":66164.0},{"name":"instructions:u","cnt":4114305501.0},{"name":"max-rss","cnt":367712.0},{"name":"cycles:u","cnt":3349221482.0},{"name":"wall-time","cnt":0.910392986},{"name":"task-clock","cnt":955.070915},{"name":"cpu-clock","cnt":954.978401}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":68249.0},{"name":"cpu-clock","cnt":1460.985819},{"name":"task-clock","cnt":1461.066272},{"name":"wall-time","cnt":1.319225585},{"name":"max-rss","cnt":384596.0},{"name":"instructions:u","cnt":6316766908.0},{"name":"cycles:u","cnt":5314197619.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":18668.0},{"name":"task-clock","cnt":929.637111},{"name":"cycles:u","cnt":3591554888.0},{"name":"cpu-clock","cnt":929.652669},{"name":"instructions:u","cnt":4014189489.0},{"name":"wall-time","cnt":0.953469446},{"name":"max-rss","cnt":166316.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1190.56863},{"name":"max-rss","cnt":204284.0},{"name":"instructions:u","cnt":5123011415.0},{"name":"task-clock","cnt":1190.570447},{"name":"faults","cnt":27978.0},{"name":"cycles:u","cnt":4570915391.0},{"name":"wall-time","cnt":1.254207622}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":202424.0},{"name":"cpu-clock","cnt":338.893396},{"name":"cycles:u","cnt":1174356096.0},{"name":"wall-time","cnt":0.337600969},{"name":"task-clock","cnt":338.893441},{"name":"instructions:u","cnt":1570216747.0},{"name":"faults","cnt":29391.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2317914739.0},{"name":"max-rss","cnt":213836.0},{"name":"cycles:u","cnt":1884188107.0},{"name":"task-clock","cnt":518.32235},{"name":"faults","cnt":30336.0},{"name":"cpu-clock","cnt":518.321653},{"name":"wall-time","cnt":0.537596657}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"task-clock","cnt":346.953779},{"name":"max-rss","cnt":204136.0},{"name":"cpu-clock","cnt":346.953909},{"name":"cycles:u","cnt":1211621005.0},{"name":"wall-time","cnt":0.347392082},{"name":"instructions:u","cnt":1620948084.0},{"name":"faults","cnt":28031.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"max-rss","cnt":211232.0},{"name":"task-clock","cnt":364.380533},{"name":"cpu-clock","cnt":364.378198},{"name":"cycles:u","cnt":1277484394.0},{"name":"instructions:u","cnt":1668022849.0},{"name":"faults","cnt":29809.0},{"name":"wall-time","cnt":0.382721766}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cycles:u","cnt":1909045947.0},{"name":"task-clock","cnt":521.213527},{"name":"wall-time","cnt":0.520313217},{"name":"cpu-clock","cnt":521.211893},{"name":"max-rss","cnt":211192.0},{"name":"faults","cnt":29607.0},{"name":"instructions:u","cnt":2341056783.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":2337281552.0},{"name":"faults","cnt":29630.0},{"name":"cycles:u","cnt":1903736540.0},{"name":"max-rss","cnt":211768.0},{"name":"task-clock","cnt":523.436667},{"name":"wall-time","cnt":0.544409766},{"name":"cpu-clock","cnt":523.436279}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"wall-time","cnt":0.340091765},{"name":"cycles:u","cnt":1190629660.0},{"name":"faults","cnt":28027.0},{"name":"max-rss","cnt":203812.0},{"name":"cpu-clock","cnt":339.805409},{"name":"instructions:u","cnt":1606725321.0},{"name":"task-clock","cnt":339.806587}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"task-clock","cnt":451.691975},{"name":"wall-time","cnt":0.480757525},{"name":"instructions:u","cnt":2045168395.0},{"name":"cpu-clock","cnt":451.691931},{"name":"faults","cnt":29433.0},{"name":"max-rss","cnt":210624.0},{"name":"cycles:u","cnt":1624264388.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"max-rss","cnt":206960.0},{"name":"cpu-clock","cnt":391.709178},{"name":"task-clock","cnt":391.698847},{"name":"instructions:u","cnt":1791496767.0},{"name":"faults","cnt":28667.0},{"name":"wall-time","cnt":0.390621179},{"name":"cycles:u","cnt":1395342698.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"instructions:u","cnt":1840679971.0},{"name":"wall-time","cnt":0.431247321},{"name":"faults","cnt":28832.0},{"name":"cycles:u","cnt":1460311532.0},{"name":"cpu-clock","cnt":408.484747},{"name":"task-clock","cnt":408.48488},{"name":"max-rss","cnt":208240.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":22912198922.0},{"name":"cycles:u","cnt":27104241508.0},{"name":"task-clock","cnt":7238.536653},{"name":"max-rss","cnt":396284.0},{"name":"faults","cnt":76500.0},{"name":"cpu-clock","cnt":7238.534591},{"name":"wall-time","cnt":2.221797713}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7889.035013},{"name":"wall-time","cnt":2.657035612},{"name":"faults","cnt":78840.0},{"name":"instructions:u","cnt":25754424530.0},{"name":"max-rss","cnt":413796.0},{"name":"cycles:u","cnt":29526533483.0},{"name":"task-clock","cnt":7889.026146}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":550.516104},{"name":"task-clock","cnt":550.554781},{"name":"faults","cnt":40576.0},{"name":"max-rss","cnt":268136.0},{"name":"cycles:u","cnt":1855405587.0},{"name":"wall-time","cnt":0.524954069},{"name":"instructions:u","cnt":2338905727.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.01449188},{"name":"cpu-clock","cnt":1769.411154},{"name":"max-rss","cnt":327812.0},{"name":"instructions:u","cnt":6946017128.0},{"name":"task-clock","cnt":1769.454473},{"name":"cycles:u","cnt":6458777278.0},{"name":"faults","cnt":55186.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"cpu-clock","cnt":572.089915},{"name":"cycles:u","cnt":1934794487.0},{"name":"wall-time","cnt":0.539532994},{"name":"max-rss","cnt":277656.0},{"name":"faults","cnt":41216.0},{"name":"instructions:u","cnt":2423371198.0},{"name":"task-clock","cnt":572.17079}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"faults","cnt":43917.0},{"name":"instructions:u","cnt":3158142453.0},{"name":"max-rss","cnt":287976.0},{"name":"task-clock","cnt":758.380702},{"name":"wall-time","cnt":0.648423774},{"name":"cpu-clock","cnt":758.311927},{"name":"cycles:u","cnt":2638291368.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cycles:u","cnt":6447833921.0},{"name":"wall-time","cnt":1.008275534},{"name":"task-clock","cnt":1772.230252},{"name":"max-rss","cnt":331924.0},{"name":"instructions:u","cnt":6983624450.0},{"name":"faults","cnt":55861.0},{"name":"cpu-clock","cnt":1772.180773}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"max-rss","cnt":329736.0},{"name":"wall-time","cnt":1.015951774},{"name":"cpu-clock","cnt":1763.384504},{"name":"task-clock","cnt":1763.422715},{"name":"faults","cnt":55504.0},{"name":"instructions:u","cnt":6973310226.0},{"name":"cycles:u","cnt":6423050623.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cpu-clock","cnt":559.619909},{"name":"wall-time","cnt":0.533924337},{"name":"task-clock","cnt":559.693003},{"name":"max-rss","cnt":271352.0},{"name":"instructions:u","cnt":2365323697.0},{"name":"cycles:u","cnt":1879425520.0},{"name":"faults","cnt":40819.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"cpu-clock","cnt":5446.944281},{"name":"instructions:u","cnt":17708178678.0},{"name":"wall-time","cnt":1.500032664},{"name":"max-rss","cnt":429040.0},{"name":"faults","cnt":82139.0},{"name":"task-clock","cnt":5446.9615},{"name":"cycles:u","cnt":20122975694.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"task-clock","cnt":5277.687185},{"name":"wall-time","cnt":1.428332649},{"name":"cycles:u","cnt":19470615402.0},{"name":"instructions:u","cnt":17042187950.0},{"name":"max-rss","cnt":428608.0},{"name":"cpu-clock","cnt":5277.644056},{"name":"faults","cnt":82413.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cycles:u","cnt":3086892710.0},{"name":"faults","cnt":46756.0},{"name":"task-clock","cnt":878.284263},{"name":"max-rss","cnt":299528.0},{"name":"wall-time","cnt":0.671794145},{"name":"instructions:u","cnt":3759269046.0},{"name":"cpu-clock","cnt":878.21504}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"max-rss","cnt":346848.0},{"name":"wall-time","cnt":4.55532888},{"name":"cpu-clock","cnt":22007.995479},{"name":"task-clock","cnt":22007.950041},{"name":"faults","cnt":63788.0},{"name":"cycles:u","cnt":83224406673.0},{"name":"instructions:u","cnt":66250731294.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":24082.849031},{"name":"faults","cnt":75579.0},{"name":"cycles:u","cnt":90817763167.0},{"name":"max-rss","cnt":390584.0},{"name":"instructions:u","cnt":71783293977.0},{"name":"wall-time","cnt":4.940781764},{"name":"task-clock","cnt":24082.75528}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":254576.0},{"name":"task-clock","cnt":552.53166},{"name":"cycles:u","cnt":1893363553.0},{"name":"cpu-clock","cnt":552.511968},{"name":"faults","cnt":40292.0},{"name":"instructions:u","cnt":2367369860.0},{"name":"wall-time","cnt":0.51900164}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":13744.219542},{"name":"faults","cnt":74545.0},{"name":"task-clock","cnt":13744.197176},{"name":"max-rss","cnt":391544.0},{"name":"instructions:u","cnt":41914292379.0},{"name":"wall-time","cnt":2.956498406},{"name":"cycles:u","cnt":51696521415.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"wall-time","cnt":0.541131292},{"name":"max-rss","cnt":267144.0},{"name":"cpu-clock","cnt":625.64291},{"name":"cycles:u","cnt":2168431783.0},{"name":"task-clock","cnt":625.6881},{"name":"faults","cnt":41263.0},{"name":"instructions:u","cnt":2654052592.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cycles:u","cnt":2204537732.0},{"name":"instructions:u","cnt":2694821498.0},{"name":"cpu-clock","cnt":630.422834},{"name":"faults","cnt":41345.0},{"name":"max-rss","cnt":267904.0},{"name":"task-clock","cnt":630.497726},{"name":"wall-time","cnt":0.546808979}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"instructions:u","cnt":41937489162.0},{"name":"task-clock","cnt":13815.388845},{"name":"cycles:u","cnt":51972175232.0},{"name":"faults","cnt":74810.0},{"name":"max-rss","cnt":392120.0},{"name":"wall-time","cnt":2.97860943},{"name":"cpu-clock","cnt":13815.418622}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":41941997744.0},{"name":"cycles:u","cnt":51898296201.0},{"name":"task-clock","cnt":13793.724072},{"name":"max-rss","cnt":390728.0},{"name":"wall-time","cnt":2.966155424},{"name":"faults","cnt":74462.0},{"name":"cpu-clock","cnt":13793.737132}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"faults","cnt":40440.0},{"name":"wall-time","cnt":0.520462526},{"name":"max-rss","cnt":257472.0},{"name":"cpu-clock","cnt":553.401966},{"name":"cycles:u","cnt":1910386440.0},{"name":"instructions:u","cnt":2393862194.0},{"name":"task-clock","cnt":553.463351}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"max-rss","cnt":404296.0},{"name":"wall-time","cnt":3.550939252},{"name":"instructions:u","cnt":58189059408.0},{"name":"faults","cnt":77994.0},{"name":"cpu-clock","cnt":18911.407163},{"name":"task-clock","cnt":18911.341158},{"name":"cycles:u","cnt":71171347890.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"max-rss","cnt":407216.0},{"name":"instructions:u","cnt":57866489636.0},{"name":"wall-time","cnt":3.505057953},{"name":"cycles:u","cnt":71657534531.0},{"name":"task-clock","cnt":19035.043212},{"name":"cpu-clock","cnt":19035.066718},{"name":"faults","cnt":78157.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cpu-clock","cnt":2598.461211},{"name":"wall-time","cnt":1.914826832},{"name":"cycles:u","cnt":9848926509.0},{"name":"task-clock","cnt":2598.513228},{"name":"instructions:u","cnt":12932841951.0},{"name":"faults","cnt":55949.0},{"name":"max-rss","cnt":324356.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":239.371777},{"name":"cpu-clock","cnt":239.370525},{"name":"faults","cnt":7947.0},{"name":"wall-time","cnt":0.258211195},{"name":"instructions:u","cnt":1215889553.0},{"name":"cycles:u","cnt":888968604.0},{"name":"max-rss","cnt":122256.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.314307076},{"name":"faults","cnt":11026.0},{"name":"instructions:u","cnt":1483681121.0},{"name":"task-clock","cnt":296.206313},{"name":"cpu-clock","cnt":296.204696},{"name":"max-rss","cnt":135628.0},{"name":"cycles:u","cnt":1100474144.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":87.679035},{"name":"instructions:u","cnt":402962582.0},{"name":"wall-time","cnt":0.101380721},{"name":"max-rss","cnt":119832.0},{"name":"cycles:u","cnt":270896684.0},{"name":"cpu-clock","cnt":87.676832},{"name":"faults","cnt":10740.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":137672.0},{"name":"task-clock","cnt":117.13485},{"name":"instructions:u","cnt":518301869.0},{"name":"cycles:u","cnt":382218423.0},{"name":"cpu-clock","cnt":117.132826},{"name":"wall-time","cnt":0.130718771},{"name":"faults","cnt":11517.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.873908261},{"name":"instructions:u","cnt":7605538647.0},{"name":"cycles:u","cnt":7042747425.0},{"name":"cpu-clock","cnt":1885.635744},{"name":"max-rss","cnt":213340.0},{"name":"faults","cnt":27944.0},{"name":"task-clock","cnt":1885.625855}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":230824.0},{"name":"task-clock","cnt":2128.135093},{"name":"faults","cnt":32703.0},{"name":"cpu-clock","cnt":2128.122384},{"name":"cycles:u","cnt":7951292631.0},{"name":"wall-time","cnt":1.017960384},{"name":"instructions:u","cnt":8487811797.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.224237128},{"name":"cycles:u","cnt":652312999.0},{"name":"instructions:u","cnt":858404451.0},{"name":"faults","cnt":17769.0},{"name":"max-rss","cnt":165468.0},{"name":"cpu-clock","cnt":202.670499},{"name":"task-clock","cnt":202.688005}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":186192.0},{"name":"cycles:u","cnt":829598947.0},{"name":"task-clock","cnt":251.899811},{"name":"wall-time","cnt":0.23656748},{"name":"instructions:u","cnt":1065154886.0},{"name":"cpu-clock","cnt":251.884892},{"name":"faults","cnt":19584.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":6936.48089},{"name":"cpu-clock","cnt":6936.476822},{"name":"faults","cnt":29063.0},{"name":"instructions:u","cnt":24826787858.0},{"name":"max-rss","cnt":212004.0},{"name":"cycles:u","cnt":26452645685.0},{"name":"wall-time","cnt":2.650910764}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":25979529363.0},{"name":"task-clock","cnt":7348.794692},{"name":"cpu-clock","cnt":7348.801363},{"name":"wall-time","cnt":2.76563817},{"name":"faults","cnt":34633.0},{"name":"cycles:u","cnt":27957182524.0},{"name":"max-rss","cnt":234032.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":18916.0},{"name":"cpu-clock","cnt":203.869443},{"name":"max-rss","cnt":162228.0},{"name":"wall-time","cnt":0.2215347},{"name":"instructions:u","cnt":864456588.0},{"name":"cycles:u","cnt":667259831.0},{"name":"task-clock","cnt":203.886214}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":9460843459.0},{"name":"instructions:u","cnt":10108962976.0},{"name":"task-clock","cnt":2492.63399},{"name":"cpu-clock","cnt":2492.631098},{"name":"wall-time","cnt":1.390006818},{"name":"max-rss","cnt":220120.0},{"name":"faults","cnt":30492.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":761.883046},{"name":"faults","cnt":17349.0},{"name":"instructions:u","cnt":3499590924.0},{"name":"cycles:u","cnt":2925075668.0},{"name":"wall-time","cnt":0.798606046},{"name":"max-rss","cnt":165908.0},{"name":"cpu-clock","cnt":761.882912}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":984.220065},{"name":"instructions:u","cnt":4484276518.0},{"name":"wall-time","cnt":1.018893163},{"name":"max-rss","cnt":201544.0},{"name":"task-clock","cnt":984.221046},{"name":"cycles:u","cnt":3757213800.0},{"name":"faults","cnt":25828.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":248.032018},{"name":"max-rss","cnt":190144.0},{"name":"wall-time","cnt":0.249265306},{"name":"cpu-clock","cnt":248.03087},{"name":"cycles:u","cnt":833515893.0},{"name":"faults","cnt":24982.0},{"name":"instructions:u","cnt":1188395277.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":294.008374},{"name":"task-clock","cnt":294.002984},{"name":"instructions:u","cnt":1378385518.0},{"name":"max-rss","cnt":202584.0},{"name":"faults","cnt":26031.0},{"name":"cycles:u","cnt":1014577388.0},{"name":"wall-time","cnt":0.316055495}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":5407.953881},{"name":"instructions:u","cnt":21171588915.0},{"name":"cycles:u","cnt":19686184035.0},{"name":"max-rss","cnt":332076.0},{"name":"cpu-clock","cnt":5407.944646},{"name":"faults","cnt":105249.0},{"name":"wall-time","cnt":3.023692961}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":3.590307779},{"name":"task-clock","cnt":6447.599182},{"name":"max-rss","cnt":366300.0},{"name":"cycles:u","cnt":23457742206.0},{"name":"faults","cnt":118056.0},{"name":"instructions:u","cnt":24718647524.0},{"name":"cpu-clock","cnt":6447.566265}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":92069.0},{"name":"cycles:u","cnt":5137641255.0},{"name":"instructions:u","cnt":6459031482.0},{"name":"task-clock","cnt":1621.175163},{"name":"max-rss","cnt":280544.0},{"name":"wall-time","cnt":1.590453289},{"name":"cpu-clock","cnt":1621.098673}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.621509832},{"name":"cycles:u","cnt":5309406331.0},{"name":"task-clock","cnt":1663.881997},{"name":"cpu-clock","cnt":1663.796027},{"name":"max-rss","cnt":289664.0},{"name":"instructions:u","cnt":6637769087.0},{"name":"faults","cnt":93314.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":154037516503.0},{"name":"instructions:u","cnt":122435415154.0},{"name":"max-rss","cnt":627972.0},{"name":"task-clock","cnt":40995.374169},{"name":"wall-time","cnt":7.829614333},{"name":"faults","cnt":183136.0},{"name":"cpu-clock","cnt":40995.39272}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":8.246293044},{"name":"cycles:u","cnt":170396698768.0},{"name":"cpu-clock","cnt":45461.560461},{"name":"task-clock","cnt":45461.395521},{"name":"max-rss","cnt":630820.0},{"name":"faults","cnt":184355.0},{"name":"instructions:u","cnt":132938873912.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":89659.0},{"name":"max-rss","cnt":301608.0},{"name":"task-clock","cnt":1339.082156},{"name":"cpu-clock","cnt":1338.985009},{"name":"cycles:u","cnt":4395123216.0},{"name":"instructions:u","cnt":6814894123.0},{"name":"wall-time","cnt":1.281034728}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2103.958092},{"name":"wall-time","cnt":1.77493728},{"name":"cycles:u","cnt":7322407229.0},{"name":"task-clock","cnt":2104.05445},{"name":"faults","cnt":98408.0},{"name":"instructions:u","cnt":10317613039.0},{"name":"max-rss","cnt":354084.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":47631.966287},{"name":"task-clock","cnt":47631.939114},{"name":"cycles:u","cnt":185995338250.0},{"name":"wall-time","cnt":47.664154342},{"name":"max-rss","cnt":2639504.0},{"name":"instructions:u","cnt":203400842561.0},{"name":"faults","cnt":759610.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":229247793405.0},{"name":"max-rss","cnt":4274464.0},{"name":"cpu-clock","cnt":58976.083827},{"name":"faults","cnt":1261228.0},{"name":"task-clock","cnt":58976.060281},{"name":"instructions:u","cnt":260077509211.0},{"name":"wall-time","cnt":59.008503506}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":101202088927.0},{"name":"wall-time","cnt":23.514715107},{"name":"cycles:u","cnt":88845169597.0},{"name":"max-rss","cnt":4430164.0},{"name":"task-clock","cnt":23589.98255},{"name":"faults","cnt":1117308.0},{"name":"cpu-clock","cnt":23589.983789}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":23723.389095},{"name":"max-rss","cnt":4447572.0},{"name":"faults","cnt":1094316.0},{"name":"cycles:u","cnt":89529904417.0},{"name":"instructions:u","cnt":101360444599.0},{"name":"cpu-clock","cnt":23723.415213},{"name":"wall-time","cnt":22.976042338}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"wall-time","cnt":23.750175493},{"name":"max-rss","cnt":4434108.0},{"name":"faults","cnt":1119519.0},{"name":"cycles:u","cnt":92390579902.0},{"name":"task-clock","cnt":24503.065671},{"name":"cpu-clock","cnt":24503.069262},{"name":"instructions:u","cnt":105384077853.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"max-rss","cnt":5051012.0},{"name":"task-clock","cnt":47405.732339},{"name":"instructions:u","cnt":202353070430.0},{"name":"cycles:u","cnt":182569439928.0},{"name":"wall-time","cnt":46.641274076},{"name":"cpu-clock","cnt":47405.751197},{"name":"faults","cnt":1393491.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"wall-time","cnt":95.722747518},{"name":"max-rss","cnt":5904324.0},{"name":"cycles:u","cnt":798249524658.0},{"name":"task-clock","cnt":211022.369457},{"name":"faults","cnt":2067764.0},{"name":"instructions:u","cnt":788203802975.0},{"name":"cpu-clock","cnt":211022.48512}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":9136308.0},{"name":"cpu-clock","cnt":397640.274916},{"name":"task-clock","cnt":397639.153395},{"name":"cycles:u","cnt":1506649668113.0},{"name":"wall-time","cnt":187.919277932},{"name":"faults","cnt":3269342.0},{"name":"instructions:u","cnt":1711705402491.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":34085.34391},{"name":"wall-time","cnt":41.356978765},{"name":"max-rss","cnt":9280152.0},{"name":"cycles:u","cnt":118040173227.0},{"name":"cpu-clock","cnt":34083.889151},{"name":"instructions:u","cnt":132954315966.0},{"name":"faults","cnt":1630564.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":38835.232597},{"name":"faults","cnt":1714414.0},{"name":"cycles:u","cnt":138613060352.0},{"name":"instructions:u","cnt":152365571271.0},{"name":"max-rss","cnt":9920480.0},{"name":"cpu-clock","cnt":38833.983035},{"name":"wall-time","cnt":43.987885793}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"cpu-clock","cnt":35869.875181},{"name":"task-clock","cnt":35871.394496},{"name":"cycles:u","cnt":124698777714.0},{"name":"wall-time","cnt":42.435832555},{"name":"max-rss","cnt":8465992.0},{"name":"instructions:u","cnt":140938780986.0},{"name":"faults","cnt":1657592.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"max-rss","cnt":9586816.0},{"name":"wall-time","cnt":160.297257452},{"name":"faults","cnt":3229031.0},{"name":"instructions:u","cnt":1512931980950.0},{"name":"cpu-clock","cnt":350792.610834},{"name":"cycles:u","cnt":1319675283182.0},{"name":"task-clock","cnt":350792.47916}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"wall-time","cnt":188.776437937},{"name":"task-clock","cnt":793927.41856},{"name":"instructions:u","cnt":2257433652563.0},{"name":"cycles:u","cnt":3000186619807.0},{"name":"cpu-clock","cnt":793927.902647},{"name":"max-rss","cnt":4587460.0},{"name":"faults","cnt":2622916.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":3237870676175.0},{"name":"wall-time","cnt":217.899692685},{"name":"task-clock","cnt":1114975.096919},{"name":"cpu-clock","cnt":1114977.304144},{"name":"cycles:u","cnt":4194022048832.0},{"name":"faults","cnt":3428077.0},{"name":"max-rss","cnt":5739056.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":31767.498865},{"name":"instructions:u","cnt":126822366136.0},{"name":"max-rss","cnt":5800948.0},{"name":"cycles:u","cnt":115616064642.0},{"name":"wall-time","cnt":29.754193012},{"name":"faults","cnt":1428544.0},{"name":"task-clock","cnt":31768.40324}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":7309200.0},{"name":"cycles:u","cnt":1506813180537.0},{"name":"instructions:u","cnt":1162553191009.0},{"name":"cpu-clock","cnt":401227.793859},{"name":"faults","cnt":2138943.0},{"name":"wall-time","cnt":87.905137046},{"name":"task-clock","cnt":401227.716392}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"faults","cnt":1768679.0},{"name":"instructions:u","cnt":434761346995.0},{"name":"cpu-clock","cnt":112784.702744},{"name":"max-rss","cnt":6703376.0},{"name":"cycles:u","cnt":428744431539.0},{"name":"wall-time","cnt":71.862434505},{"name":"task-clock","cnt":112785.208522}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":3128562094343.0},{"name":"cpu-clock","cnt":1088864.961078},{"name":"max-rss","cnt":6905212.0},{"name":"cycles:u","cnt":4090272991487.0},{"name":"faults","cnt":3620517.0},{"name":"wall-time","cnt":201.253751261},{"name":"task-clock","cnt":1088862.882808}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":35168.0},{"name":"max-rss","cnt":250568.0},{"name":"cpu-clock","cnt":2355.952062},{"name":"wall-time","cnt":2.374801849},{"name":"cycles:u","cnt":9187552393.0},{"name":"instructions:u","cnt":11526662509.0},{"name":"task-clock","cnt":2355.953031}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2918.28871},{"name":"cpu-clock","cnt":2918.287433},{"name":"faults","cnt":51511.0},{"name":"wall-time","cnt":2.936510411},{"name":"instructions:u","cnt":14507554349.0},{"name":"max-rss","cnt":316496.0},{"name":"cycles:u","cnt":11343924798.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.724755862},{"name":"max-rss","cnt":298380.0},{"name":"faults","cnt":48510.0},{"name":"instructions:u","cnt":3786340271.0},{"name":"cycles:u","cnt":2676615432.0},{"name":"cpu-clock","cnt":737.708562},{"name":"task-clock","cnt":737.709335}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":927.941579},{"name":"wall-time","cnt":0.912539797},{"name":"instructions:u","cnt":4487788681.0},{"name":"faults","cnt":50946.0},{"name":"cycles:u","cnt":3387691097.0},{"name":"cpu-clock","cnt":927.918808},{"name":"max-rss","cnt":315752.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":14403.650456},{"name":"wall-time","cnt":10.508201164},{"name":"cycles:u","cnt":53779806309.0},{"name":"task-clock","cnt":14403.644373},{"name":"instructions:u","cnt":61626895142.0},{"name":"max-rss","cnt":953820.0},{"name":"faults","cnt":334200.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":281033.0},{"name":"cpu-clock","cnt":18790.588052},{"name":"cycles:u","cnt":69400063284.0},{"name":"wall-time","cnt":9.558699225},{"name":"instructions:u","cnt":71669120141.0},{"name":"max-rss","cnt":714444.0},{"name":"task-clock","cnt":18790.43924}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3876.972254},{"name":"task-clock","cnt":3877.136509},{"name":"instructions:u","cnt":14680090978.0},{"name":"cycles:u","cnt":12614184171.0},{"name":"faults","cnt":211539.0},{"name":"wall-time","cnt":3.799686851},{"name":"max-rss","cnt":499752.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":4.348051077},{"name":"instructions:u","cnt":19791238264.0},{"name":"task-clock","cnt":5241.147629},{"name":"max-rss","cnt":587732.0},{"name":"cycles:u","cnt":17742103331.0},{"name":"cpu-clock","cnt":5241.027462},{"name":"faults","cnt":234274.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":19.256706081},{"name":"max-rss","cnt":760124.0},{"name":"faults","cnt":239823.0},{"name":"cycles:u","cnt":355624235602.0},{"name":"task-clock","cnt":94052.414353},{"name":"instructions:u","cnt":289950113574.0},{"name":"cpu-clock","cnt":94052.483754}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":315883152958.0},{"name":"task-clock","cnt":105688.247806},{"name":"max-rss","cnt":731100.0},{"name":"faults","cnt":242195.0},{"name":"wall-time","cnt":21.002155328},{"name":"cycles:u","cnt":398661969317.0},{"name":"cpu-clock","cnt":105688.544703}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8097130771.0},{"name":"wall-time","cnt":2.259295292},{"name":"instructions:u","cnt":9167842689.0},{"name":"task-clock","cnt":2393.146288},{"name":"faults","cnt":156283.0},{"name":"max-rss","cnt":524284.0},{"name":"cpu-clock","cnt":2392.973623}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":58652.876502},{"name":"cycles:u","cnt":220457403922.0},{"name":"max-rss","cnt":754564.0},{"name":"instructions:u","cnt":174549044052.0},{"name":"faults","cnt":225840.0},{"name":"cpu-clock","cnt":58652.987708},{"name":"wall-time","cnt":11.681359702}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":19475731934.0},{"name":"faults","cnt":43292.0},{"name":"wall-time","cnt":5.005452334},{"name":"cpu-clock","cnt":4941.484215},{"name":"instructions:u","cnt":29410322731.0},{"name":"task-clock","cnt":4941.493781},{"name":"max-rss","cnt":263040.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":354644.0},{"name":"faults","cnt":65930.0},{"name":"wall-time","cnt":5.807949188},{"name":"cycles:u","cnt":22680221315.0},{"name":"task-clock","cnt":5773.401441},{"name":"instructions:u","cnt":33287629419.0},{"name":"cpu-clock","cnt":5773.401405}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":970.987147},{"name":"max-rss","cnt":329588.0},{"name":"faults","cnt":62407.0},{"name":"instructions:u","cnt":4576568942.0},{"name":"cycles:u","cnt":3561774648.0},{"name":"wall-time","cnt":0.962637883},{"name":"task-clock","cnt":970.997486}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":5500.939218},{"name":"max-rss","cnt":303332.0},{"name":"faults","cnt":50627.0},{"name":"instructions:u","cnt":32282014654.0},{"name":"cycles:u","cnt":21617595827.0},{"name":"wall-time","cnt":5.400621055},{"name":"task-clock","cnt":5500.940444}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.442270231},{"name":"cpu-clock","cnt":6537.829525},{"name":"max-rss","cnt":406652.0},{"name":"task-clock","cnt":6537.809047},{"name":"cycles:u","cnt":25567954905.0},{"name":"instructions:u","cnt":37209313986.0},{"name":"faults","cnt":76750.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1174.012009},{"name":"instructions:u","cnt":5617438443.0},{"name":"wall-time","cnt":1.153657426},{"name":"cycles:u","cnt":4248769875.0},{"name":"task-clock","cnt":1174.044994},{"name":"faults","cnt":77464.0},{"name":"max-rss","cnt":397520.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":52363.0},{"name":"max-rss","cnt":310724.0},{"name":"task-clock","cnt":5864.056284},{"name":"cpu-clock","cnt":5864.067415},{"name":"wall-time","cnt":5.413926353},{"name":"instructions:u","cnt":33175448097.0},{"name":"cycles:u","cnt":22952121618.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":38134220806.0},{"name":"cpu-clock","cnt":6897.834001},{"name":"faults","cnt":78072.0},{"name":"cycles:u","cnt":26898964893.0},{"name":"wall-time","cnt":6.392079268},{"name":"max-rss","cnt":413348.0},{"name":"task-clock","cnt":6897.828539}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":4250480493.0},{"name":"max-rss","cnt":395160.0},{"name":"instructions:u","cnt":5609873296.0},{"name":"cpu-clock","cnt":1172.069319},{"name":"task-clock","cnt":1172.067266},{"name":"faults","cnt":76930.0},{"name":"wall-time","cnt":1.154314043}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":27514.384241},{"name":"cycles:u","cnt":107364102175.0},{"name":"task-clock","cnt":27514.378136},{"name":"wall-time","cnt":27.554689512},{"name":"faults","cnt":339564.0},{"name":"instructions:u","cnt":123350361555.0},{"name":"max-rss","cnt":1366476.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":547339.0},{"name":"cycles:u","cnt":135822861244.0},{"name":"wall-time","cnt":34.757494091},{"name":"cpu-clock","cnt":34709.089633},{"name":"max-rss","cnt":2209624.0},{"name":"instructions:u","cnt":154617753161.0},{"name":"task-clock","cnt":34709.078841}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":10990.564597},{"name":"instructions:u","cnt":50016674801.0},{"name":"cycles:u","cnt":41389067676.0},{"name":"task-clock","cnt":10990.560505},{"name":"max-rss","cnt":2156840.0},{"name":"faults","cnt":518627.0},{"name":"wall-time","cnt":10.581426871}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":20844.004438},{"name":"instructions:u","cnt":94521399404.0},{"name":"wall-time","cnt":20.472862695},{"name":"cpu-clock","cnt":20844.027816},{"name":"cycles:u","cnt":79268131972.0},{"name":"faults","cnt":580620.0},{"name":"max-rss","cnt":2342152.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":616468.0},{"name":"cpu-clock","cnt":22173.176689},{"name":"cycles:u","cnt":84490035185.0},{"name":"instructions:u","cnt":97482786172.0},{"name":"task-clock","cnt":22173.167082},{"name":"wall-time","cnt":21.786509803},{"name":"max-rss","cnt":2515820.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"task-clock","cnt":74981.343119},{"name":"faults","cnt":792161.0},{"name":"cycles:u","cnt":286136862755.0},{"name":"wall-time","cnt":41.888575392},{"name":"max-rss","cnt":2903712.0},{"name":"instructions:u","cnt":299042337493.0},{"name":"cpu-clock","cnt":74981.357924}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":65.722090981},{"name":"max-rss","cnt":3427232.0},{"name":"faults","cnt":1091818.0},{"name":"cpu-clock","cnt":116287.275396},{"name":"instructions:u","cnt":532950088376.0},{"name":"cycles:u","cnt":441702634622.0},{"name":"task-clock","cnt":116286.49697}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":64566407659.0},{"name":"wall-time","cnt":16.119792245},{"name":"task-clock","cnt":14797.109481},{"name":"cycles:u","cnt":53045218354.0},{"name":"cpu-clock","cnt":14796.490268},{"name":"max-rss","cnt":3367652.0},{"name":"faults","cnt":728758.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":67262.010166},{"name":"task-clock","cnt":67262.06576},{"name":"cycles:u","cnt":252299770354.0},{"name":"instructions:u","cnt":304358412499.0},{"name":"faults","cnt":1027988.0},{"name":"max-rss","cnt":3964860.0},{"name":"wall-time","cnt":39.27568313}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":92686.432822},{"name":"wall-time","cnt":49.1317929},{"name":"max-rss","cnt":3955332.0},{"name":"cycles:u","cnt":349240717391.0},{"name":"task-clock","cnt":92685.823609},{"name":"faults","cnt":1114486.0},{"name":"instructions:u","cnt":426236589426.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"cycles:u","cnt":970911780943.0},{"name":"cpu-clock","cnt":256528.561072},{"name":"faults","cnt":748568.0},{"name":"max-rss","cnt":2407700.0},{"name":"task-clock","cnt":256528.355353},{"name":"wall-time","cnt":61.194205229},{"name":"instructions:u","cnt":797414727512.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":3062176.0},{"name":"wall-time","cnt":83.291002795},{"name":"cycles:u","cnt":1486789270547.0},{"name":"cpu-clock","cnt":394897.709699},{"name":"instructions:u","cnt":1254086588238.0},{"name":"faults","cnt":1085540.0},{"name":"task-clock","cnt":394896.731878}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":2812164.0},{"name":"cpu-clock","cnt":13217.600882},{"name":"faults","cnt":682272.0},{"name":"cycles:u","cnt":48059193276.0},{"name":"instructions:u","cnt":56349891851.0},{"name":"task-clock","cnt":13218.319699},{"name":"wall-time","cnt":12.308390409}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":336172.706455},{"name":"faults","cnt":1132877.0},{"name":"max-rss","cnt":3486880.0},{"name":"instructions:u","cnt":1059082259673.0},{"name":"wall-time","cnt":62.614320812},{"name":"cycles:u","cnt":1262687604607.0},{"name":"task-clock","cnt":336171.916743}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":1147026.0},{"name":"instructions:u","cnt":1130024700953.0},{"name":"cpu-clock","cnt":362343.997259},{"name":"cycles:u","cnt":1360362230761.0},{"name":"wall-time","cnt":67.138300909},{"name":"task-clock","cnt":362342.981878},{"name":"max-rss","cnt":3441292.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3308772345.0},{"name":"cpu-clock","cnt":720.380876},{"name":"wall-time","cnt":0.738412287},{"name":"faults","cnt":15581.0},{"name":"max-rss","cnt":154108.0},{"name":"cycles:u","cnt":2706581778.0},{"name":"task-clock","cnt":720.38211}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.918005998},{"name":"max-rss","cnt":185752.0},{"name":"cycles:u","cnt":3430111634.0},{"name":"task-clock","cnt":899.896251},{"name":"cpu-clock","cnt":899.885951},{"name":"instructions:u","cnt":4173180967.0},{"name":"faults","cnt":23084.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.301310692},{"name":"cpu-clock","cnt":296.221476},{"name":"max-rss","cnt":169856.0},{"name":"instructions:u","cnt":1421526734.0},{"name":"faults","cnt":22632.0},{"name":"cycles:u","cnt":1036326327.0},{"name":"task-clock","cnt":296.213661}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":23535.0},{"name":"cycles:u","cnt":1237578087.0},{"name":"instructions:u","cnt":1631552812.0},{"name":"max-rss","cnt":188084.0},{"name":"task-clock","cnt":348.356346},{"name":"wall-time","cnt":0.35170598},{"name":"cpu-clock","cnt":348.355388}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":37121.0},{"name":"task-clock","cnt":2893.793074},{"name":"max-rss","cnt":247160.0},{"name":"instructions:u","cnt":11997901088.0},{"name":"cpu-clock","cnt":2893.813822},{"name":"cycles:u","cnt":10913009352.0},{"name":"wall-time","cnt":1.495545584}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":47193.0},{"name":"instructions:u","cnt":14563416287.0},{"name":"cpu-clock","cnt":3583.116053},{"name":"max-rss","cnt":288792.0},{"name":"cycles:u","cnt":13379105724.0},{"name":"wall-time","cnt":1.785423168},{"name":"task-clock","cnt":3583.06686}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":453.807356},{"name":"wall-time","cnt":0.442467304},{"name":"max-rss","cnt":232644.0},{"name":"task-clock","cnt":453.860335},{"name":"cycles:u","cnt":1528126455.0},{"name":"faults","cnt":34179.0},{"name":"instructions:u","cnt":2013277394.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2794240571.0},{"name":"cycles:u","cnt":2243329863.0},{"name":"task-clock","cnt":649.243508},{"name":"max-rss","cnt":261564.0},{"name":"faults","cnt":38090.0},{"name":"cpu-clock","cnt":649.176605},{"name":"wall-time","cnt":0.566193599}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":42374.0},{"name":"wall-time","cnt":2.972720884},{"name":"instructions:u","cnt":44597239450.0},{"name":"max-rss","cnt":264752.0},{"name":"cpu-clock","cnt":14583.647321},{"name":"task-clock","cnt":14583.612452},{"name":"cycles:u","cnt":55087548813.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":301192.0},{"name":"cycles:u","cnt":60336811133.0},{"name":"wall-time","cnt":3.27969865},{"name":"task-clock","cnt":16037.359841},{"name":"cpu-clock","cnt":16037.387501},{"name":"faults","cnt":52627.0},{"name":"instructions:u","cnt":48142754437.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":456.194308},{"name":"cycles:u","cnt":1564735318.0},{"name":"task-clock","cnt":456.223245},{"name":"instructions:u","cnt":2031171264.0},{"name":"max-rss","cnt":224660.0},{"name":"wall-time","cnt":0.438231826},{"name":"faults","cnt":34435.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":52519.0},{"name":"wall-time","cnt":1.720131225},{"name":"instructions:u","cnt":24456828617.0},{"name":"cycles:u","cnt":31094883370.0},{"name":"cpu-clock","cnt":8299.275048},{"name":"task-clock","cnt":8299.279837},{"name":"max-rss","cnt":306176.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.365738417},{"name":"faults","cnt":11220.0},{"name":"max-rss","cnt":146480.0},{"name":"instructions:u","cnt":1775291565.0},{"name":"task-clock","cnt":345.226171},{"name":"cpu-clock","cnt":345.225186},{"name":"cycles:u","cnt":1291423871.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1692790432.0},{"name":"instructions:u","cnt":2287358787.0},{"name":"task-clock","cnt":454.053708},{"name":"cpu-clock","cnt":454.052186},{"name":"wall-time","cnt":0.47211822},{"name":"max-rss","cnt":173624.0},{"name":"faults","cnt":17589.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":449702797.0},{"name":"instructions:u","cnt":656351833.0},{"name":"cpu-clock","cnt":140.035721},{"name":"faults","cnt":16509.0},{"name":"task-clock","cnt":140.037374},{"name":"max-rss","cnt":149568.0},{"name":"wall-time","cnt":0.149269323}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":181200.0},{"name":"instructions:u","cnt":1471890634.0},{"name":"wall-time","cnt":0.324783567},{"name":"task-clock","cnt":314.814183},{"name":"cycles:u","cnt":1128006013.0},{"name":"cpu-clock","cnt":314.813418},{"name":"faults","cnt":19201.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":1414152878.0},{"name":"cycles:u","cnt":1061733463.0},{"name":"task-clock","cnt":298.756958},{"name":"faults","cnt":19095.0},{"name":"wall-time","cnt":0.308268652},{"name":"cpu-clock","cnt":298.755742},{"name":"max-rss","cnt":180128.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"max-rss","cnt":299132.0},{"name":"faults","cnt":90997.0},{"name":"instructions:u","cnt":17603919735.0},{"name":"task-clock","cnt":4265.840864},{"name":"wall-time","cnt":2.471582302},{"name":"cycles:u","cnt":15567719546.0},{"name":"cpu-clock","cnt":4265.855812}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.882978505},{"name":"task-clock","cnt":5130.513863},{"name":"faults","cnt":105502.0},{"name":"cycles:u","cnt":18589815077.0},{"name":"cpu-clock","cnt":5130.617791},{"name":"instructions:u","cnt":20951306233.0},{"name":"max-rss","cnt":345820.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1358.778404},{"name":"wall-time","cnt":1.346458892},{"name":"task-clock","cnt":1358.880491},{"name":"max-rss","cnt":271576.0},{"name":"faults","cnt":85600.0},{"name":"instructions:u","cnt":5227407253.0},{"name":"cycles:u","cnt":4302473808.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.541880898},{"name":"faults","cnt":110063.0},{"name":"task-clock","cnt":4907.382507},{"name":"instructions:u","cnt":19454749555.0},{"name":"cycles:u","cnt":17631236653.0},{"name":"max-rss","cnt":364500.0},{"name":"cpu-clock","cnt":4907.398728}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":110133.0},{"name":"wall-time","cnt":2.544730692},{"name":"instructions:u","cnt":19435401077.0},{"name":"task-clock","cnt":4905.645892},{"name":"max-rss","cnt":364288.0},{"name":"cycles:u","cnt":17641929849.0},{"name":"cpu-clock","cnt":4905.745874}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"task-clock","cnt":22831.252702},{"name":"faults","cnt":79358.0},{"name":"instructions:u","cnt":68108059529.0},{"name":"cycles:u","cnt":85928299153.0},{"name":"max-rss","cnt":340552.0},{"name":"wall-time","cnt":4.157217368},{"name":"cpu-clock","cnt":22831.301948}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":78298038318.0},{"name":"task-clock","cnt":27130.302056},{"name":"wall-time","cnt":4.617360412},{"name":"max-rss","cnt":367940.0},{"name":"cycles:u","cnt":101862723287.0},{"name":"cpu-clock","cnt":27130.385853},{"name":"faults","cnt":87124.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2768097306.0},{"name":"cpu-clock","cnt":725.492171},{"name":"task-clock","cnt":725.599241},{"name":"cycles:u","cnt":2322590956.0},{"name":"wall-time","cnt":0.704025886},{"name":"faults","cnt":60835.0},{"name":"max-rss","cnt":263360.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":26916.707376},{"name":"task-clock","cnt":26916.597503},{"name":"max-rss","cnt":379344.0},{"name":"instructions:u","cnt":76723880229.0},{"name":"faults","cnt":89576.0},{"name":"wall-time","cnt":4.29878892},{"name":"cycles:u","cnt":100940543026.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":371656.0},{"name":"instructions:u","cnt":53380873590.0},{"name":"faults","cnt":86512.0},{"name":"wall-time","cnt":3.37621677},{"name":"cpu-clock","cnt":18108.29416},{"name":"cycles:u","cnt":67864069040.0},{"name":"task-clock","cnt":18108.273209}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":12358141439.0},{"name":"cpu-clock","cnt":3187.581018},{"name":"instructions:u","cnt":18089171821.0},{"name":"max-rss","cnt":419984.0},{"name":"task-clock","cnt":3187.581236},{"name":"wall-time","cnt":3.239025898},{"name":"faults","cnt":89545.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":458076.0},{"name":"cpu-clock","cnt":3887.650402},{"name":"faults","cnt":110857.0},{"name":"cycles:u","cnt":15021887145.0},{"name":"task-clock","cnt":3887.649877},{"name":"wall-time","cnt":3.922411751},{"name":"instructions:u","cnt":23481879185.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":367320.0},{"name":"task-clock","cnt":1080.055767},{"name":"instructions:u","cnt":6925155526.0},{"name":"cycles:u","cnt":3940263871.0},{"name":"faults","cnt":76564.0},{"name":"cpu-clock","cnt":1080.054839},{"name":"wall-time","cnt":1.116264268}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":23482317993.0},{"name":"cpu-clock","cnt":3860.121036},{"name":"max-rss","cnt":499504.0},{"name":"faults","cnt":107656.0},{"name":"wall-time","cnt":3.894834031},{"name":"cycles:u","cnt":14631770768.0},{"name":"task-clock","cnt":3860.13872}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"faults","cnt":100596.0},{"name":"cpu-clock","cnt":3380.588838},{"name":"cycles:u","cnt":12680321443.0},{"name":"wall-time","cnt":3.408589186},{"name":"max-rss","cnt":446688.0},{"name":"task-clock","cnt":3380.598997},{"name":"instructions:u","cnt":18681945393.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":24077855008.0},{"name":"cycles:u","cnt":15469639255.0},{"name":"cpu-clock","cnt":4029.670359},{"name":"max-rss","cnt":482724.0},{"name":"task-clock","cnt":4029.675479},{"name":"faults","cnt":108213.0},{"name":"wall-time","cnt":4.022864669}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":85521.0},{"name":"task-clock","cnt":1149.019083},{"name":"cpu-clock","cnt":1148.985867},{"name":"wall-time","cnt":1.179486839},{"name":"cycles:u","cnt":4070756790.0},{"name":"instructions:u","cnt":7310860474.0},{"name":"max-rss","cnt":388120.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":3999.978517},{"name":"instructions:u","cnt":24004021609.0},{"name":"cpu-clock","cnt":3999.957758},{"name":"faults","cnt":119392.0},{"name":"max-rss","cnt":529952.0},{"name":"cycles:u","cnt":15275968403.0},{"name":"wall-time","cnt":3.993492174}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"faults","cnt":97142.0},{"name":"instructions:u","cnt":18616275287.0},{"name":"wall-time","cnt":3.355810748},{"name":"cpu-clock","cnt":3339.474023},{"name":"cycles:u","cnt":12567848507.0},{"name":"task-clock","cnt":3339.49096},{"name":"max-rss","cnt":440580.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":472044.0},{"name":"task-clock","cnt":3986.880758},{"name":"cpu-clock","cnt":3986.865393},{"name":"cycles:u","cnt":15323579153.0},{"name":"faults","cnt":103795.0},{"name":"wall-time","cnt":3.980015677},{"name":"instructions:u","cnt":24037760621.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":84035.0},{"name":"max-rss","cnt":387336.0},{"name":"wall-time","cnt":1.173940792},{"name":"cpu-clock","cnt":1143.799257},{"name":"instructions:u","cnt":7251217805.0},{"name":"task-clock","cnt":1143.798068},{"name":"cycles:u","cnt":4060953396.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":23983679213.0},{"name":"cycles:u","cnt":15702590515.0},{"name":"wall-time","cnt":4.088132527},{"name":"max-rss","cnt":516732.0},{"name":"faults","cnt":114952.0},{"name":"cpu-clock","cnt":4095.60629},{"name":"task-clock","cnt":4095.60285}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":116829.0},{"name":"task-clock","cnt":5174.32262},{"name":"instructions:u","cnt":34456392986.0},{"name":"cycles:u","cnt":20126933050.0},{"name":"wall-time","cnt":5.241655616},{"name":"max-rss","cnt":537988.0},{"name":"cpu-clock","cnt":5174.32388}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":44116779469.0},{"name":"wall-time","cnt":6.163748563},{"name":"cpu-clock","cnt":6127.373088},{"name":"faults","cnt":127926.0},{"name":"cycles:u","cnt":23812346724.0},{"name":"task-clock","cnt":6127.381885},{"name":"max-rss","cnt":584068.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":6240971441.0},{"name":"faults","cnt":130693.0},{"name":"instructions:u","cnt":12314100394.0},{"name":"cpu-clock","cnt":1742.628285},{"name":"task-clock","cnt":1742.627911},{"name":"wall-time","cnt":1.76936074},{"name":"max-rss","cnt":587100.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":5759.416592},{"name":"task-clock","cnt":5759.4292},{"name":"wall-time","cnt":5.416347969},{"name":"max-rss","cnt":626072.0},{"name":"instructions:u","cnt":37553771946.0},{"name":"cycles:u","cnt":22203395713.0},{"name":"faults","cnt":133027.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":6794.29148},{"name":"task-clock","cnt":6794.326184},{"name":"max-rss","cnt":672392.0},{"name":"cycles:u","cnt":26174454796.0},{"name":"wall-time","cnt":6.334317722},{"name":"instructions:u","cnt":47424883547.0},{"name":"faults","cnt":149600.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":133524.0},{"name":"max-rss","cnt":629224.0},{"name":"instructions:u","cnt":12465757323.0},{"name":"task-clock","cnt":1779.757017},{"name":"wall-time","cnt":1.800701996},{"name":"cycles:u","cnt":6281903749.0},{"name":"cpu-clock","cnt":1779.726054}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":6851.499243},{"name":"cycles:u","cnt":26286758134.0},{"name":"max-rss","cnt":660440.0},{"name":"instructions:u","cnt":42376473443.0},{"name":"faults","cnt":142786.0},{"name":"wall-time","cnt":5.697714872},{"name":"task-clock","cnt":6851.521935}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":31020792212.0},{"name":"max-rss","cnt":677580.0},{"name":"faults","cnt":153575.0},{"name":"cpu-clock","cnt":8094.205574},{"name":"task-clock","cnt":8094.244729},{"name":"wall-time","cnt":6.432837391},{"name":"instructions:u","cnt":51958841783.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":131707.0},{"name":"instructions:u","cnt":12578378483.0},{"name":"max-rss","cnt":621096.0},{"name":"task-clock","cnt":1778.395761},{"name":"wall-time","cnt":1.782843257},{"name":"cycles:u","cnt":6383892091.0},{"name":"cpu-clock","cnt":1778.393256}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":3441.615985},{"name":"max-rss","cnt":175232.0},{"name":"cycles:u","cnt":13603410412.0},{"name":"instructions:u","cnt":30580013955.0},{"name":"wall-time","cnt":3.478058332},{"name":"cpu-clock","cnt":3441.605413},{"name":"faults","cnt":21915.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":3.79918861},{"name":"max-rss","cnt":186608.0},{"name":"task-clock","cnt":3761.223488},{"name":"faults","cnt":25126.0},{"name":"instructions:u","cnt":34539486780.0},{"name":"cycles:u","cnt":14860464200.0},{"name":"cpu-clock","cnt":3761.223229}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":667930242.0},{"name":"cpu-clock","cnt":192.775761},{"name":"instructions:u","cnt":1222232184.0},{"name":"wall-time","cnt":0.224733872},{"name":"task-clock","cnt":192.756591},{"name":"max-rss","cnt":146356.0},{"name":"faults","cnt":15752.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":26001.0},{"name":"wall-time","cnt":3.48607187},{"name":"task-clock","cnt":3470.839367},{"name":"max-rss","cnt":183604.0},{"name":"instructions:u","cnt":31859330509.0},{"name":"cpu-clock","cnt":3470.838011},{"name":"cycles:u","cnt":13694254234.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":31863550013.0},{"name":"wall-time","cnt":3.632769092},{"name":"max-rss","cnt":216588.0},{"name":"task-clock","cnt":3633.361084},{"name":"faults","cnt":30657.0},{"name":"cycles:u","cnt":14305926180.0},{"name":"cpu-clock","cnt":3633.360954}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":33802.0},{"name":"cpu-clock","cnt":3972.951605},{"name":"instructions:u","cnt":36195445690.0},{"name":"wall-time","cnt":3.950363089},{"name":"max-rss","cnt":228352.0},{"name":"task-clock","cnt":3972.95338},{"name":"cycles:u","cnt":15635563804.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.288828416},{"name":"task-clock","cnt":257.131673},{"name":"instructions:u","cnt":1704939397.0},{"name":"max-rss","cnt":176752.0},{"name":"cpu-clock","cnt":257.122699},{"name":"faults","cnt":21670.0},{"name":"cycles:u","cnt":879096280.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":33123195347.0},{"name":"cycles:u","cnt":14236114005.0},{"name":"task-clock","cnt":3615.874139},{"name":"max-rss","cnt":214548.0},{"name":"cpu-clock","cnt":3615.877381},{"name":"faults","cnt":31536.0},{"name":"wall-time","cnt":3.628909025}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.779392351},{"name":"max-rss","cnt":222364.0},{"name":"instructions:u","cnt":33054305233.0},{"name":"cpu-clock","cnt":3757.01351},{"name":"cycles:u","cnt":14799311959.0},{"name":"faults","cnt":31689.0},{"name":"task-clock","cnt":3757.014674}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":16270786890.0},{"name":"instructions:u","cnt":37372458299.0},{"name":"faults","cnt":34469.0},{"name":"max-rss","cnt":233024.0},{"name":"task-clock","cnt":4131.110359},{"name":"wall-time","cnt":4.111332425},{"name":"cpu-clock","cnt":4131.118506}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":255.388681},{"name":"instructions:u","cnt":1697730625.0},{"name":"wall-time","cnt":0.285313265},{"name":"cpu-clock","cnt":255.394907},{"name":"faults","cnt":21579.0},{"name":"cycles:u","cnt":876322204.0},{"name":"max-rss","cnt":176456.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3622.710888},{"name":"max-rss","cnt":217444.0},{"name":"cycles:u","cnt":14251673380.0},{"name":"wall-time","cnt":3.636038572},{"name":"task-clock","cnt":3622.724337},{"name":"faults","cnt":31986.0},{"name":"instructions:u","cnt":33124270181.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":345971822.0},{"name":"cycles:u","cnt":226607561.0},{"name":"cpu-clock","cnt":69.797887},{"name":"faults","cnt":5354.0},{"name":"max-rss","cnt":98560.0},{"name":"task-clock","cnt":69.789857},{"name":"wall-time","cnt":0.087854274}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":105764.0},{"name":"cpu-clock","cnt":80.154357},{"name":"faults","cnt":6667.0},{"name":"cycles:u","cnt":261923489.0},{"name":"instructions:u","cnt":391381444.0},{"name":"task-clock","cnt":80.156474},{"name":"wall-time","cnt":0.098349265}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":43.44993},{"name":"faults","cnt":5855.0},{"name":"cycles:u","cnt":120683471.0},{"name":"instructions:u","cnt":178669605.0},{"name":"task-clock","cnt":43.452879},{"name":"max-rss","cnt":88096.0},{"name":"wall-time","cnt":0.06096013}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":53.7427},{"name":"wall-time","cnt":0.07120761},{"name":"faults","cnt":6597.0},{"name":"task-clock","cnt":53.736839},{"name":"cycles:u","cnt":156010720.0},{"name":"max-rss","cnt":104240.0},{"name":"instructions:u","cnt":230629976.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"cpu-clock","cnt":169.111917},{"name":"instructions:u","cnt":747778741.0},{"name":"wall-time","cnt":0.16815064},{"name":"cycles:u","cnt":521902802.0},{"name":"task-clock","cnt":169.10985},{"name":"max-rss","cnt":121416.0},{"name":"faults","cnt":13065.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":128816.0},{"name":"task-clock","cnt":183.771167},{"name":"cycles:u","cnt":574588214.0},{"name":"cpu-clock","cnt":183.754085},{"name":"wall-time","cnt":0.181089765},{"name":"instructions:u","cnt":823445717.0},{"name":"faults","cnt":14825.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":122.50023},{"name":"cycles:u","cnt":344269779.0},{"name":"wall-time","cnt":0.135181618},{"name":"faults","cnt":13436.0},{"name":"max-rss","cnt":110288.0},{"name":"task-clock","cnt":122.512268},{"name":"instructions:u","cnt":518178190.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":459805131.0},{"name":"faults","cnt":14914.0},{"name":"max-rss","cnt":128736.0},{"name":"instructions:u","cnt":644040821.0},{"name":"wall-time","cnt":0.151332871},{"name":"task-clock","cnt":155.188956},{"name":"cpu-clock","cnt":155.182319}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":12269.0},{"name":"max-rss","cnt":120340.0},{"name":"instructions:u","cnt":750373142.0},{"name":"cycles:u","cnt":507135970.0},{"name":"cpu-clock","cnt":161.008372},{"name":"task-clock","cnt":161.012797},{"name":"wall-time","cnt":0.16853117}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":575200476.0},{"name":"faults","cnt":14291.0},{"name":"wall-time","cnt":0.182862921},{"name":"cpu-clock","cnt":182.239381},{"name":"task-clock","cnt":182.2314},{"name":"max-rss","cnt":128172.0},{"name":"instructions:u","cnt":840034776.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":118.756831},{"name":"faults","cnt":13199.0},{"name":"instructions:u","cnt":507677776.0},{"name":"task-clock","cnt":118.76272},{"name":"max-rss","cnt":109992.0},{"name":"wall-time","cnt":0.132719501},{"name":"cycles:u","cnt":338364248.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":126.755146},{"name":"cycles:u","cnt":364617547.0},{"name":"task-clock","cnt":126.760207},{"name":"instructions:u","cnt":543601787.0},{"name":"max-rss","cnt":116364.0},{"name":"wall-time","cnt":0.138570019},{"name":"faults","cnt":13600.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":1739112718.0},{"name":"instructions:u","cnt":2459784897.0},{"name":"faults","cnt":33323.0},{"name":"max-rss","cnt":206440.0},{"name":"task-clock","cnt":479.186434},{"name":"cpu-clock","cnt":479.176088},{"name":"wall-time","cnt":0.497469839}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":310900.0},{"name":"cpu-clock","cnt":711.467292},{"name":"instructions:u","cnt":3421965648.0},{"name":"task-clock","cnt":711.478705},{"name":"wall-time","cnt":0.729550671},{"name":"faults","cnt":59572.0},{"name":"cycles:u","cnt":2548940087.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2268065691.0},{"name":"faults","cnt":64784.0},{"name":"max-rss","cnt":320816.0},{"name":"wall-time","cnt":0.619999697},{"name":"task-clock","cnt":643.481004},{"name":"cpu-clock","cnt":643.481725},{"name":"instructions:u","cnt":2922311689.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":65030.0},{"name":"wall-time","cnt":0.68524975},{"name":"max-rss","cnt":333840.0},{"name":"cycles:u","cnt":2524877970.0},{"name":"instructions:u","cnt":3132237823.0},{"name":"cpu-clock","cnt":710.031843},{"name":"task-clock","cnt":710.03111}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"max-rss","cnt":225868.0},{"name":"cpu-clock","cnt":564.428305},{"name":"faults","cnt":40348.0},{"name":"cycles:u","cnt":2008819962.0},{"name":"instructions:u","cnt":2791578929.0},{"name":"wall-time","cnt":0.571997898},{"name":"task-clock","cnt":564.435235}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":816.901752},{"name":"faults","cnt":66854.0},{"name":"wall-time","cnt":0.825087825},{"name":"cycles:u","cnt":2837335395.0},{"name":"max-rss","cnt":331356.0},{"name":"cpu-clock","cnt":816.916351},{"name":"instructions:u","cnt":3788181904.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":3241515081.0},{"name":"cpu-clock","cnt":734.389497},{"name":"max-rss","cnt":338656.0},{"name":"faults","cnt":71905.0},{"name":"cycles:u","cnt":2464733638.0},{"name":"wall-time","cnt":0.708376783},{"name":"task-clock","cnt":734.399047}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":807.796623},{"name":"instructions:u","cnt":3477597848.0},{"name":"max-rss","cnt":354784.0},{"name":"cycles:u","cnt":2792435672.0},{"name":"faults","cnt":72346.0},{"name":"task-clock","cnt":807.791121},{"name":"wall-time","cnt":0.773475515}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":40385.0},{"name":"cycles:u","cnt":2008164663.0},{"name":"wall-time","cnt":0.569824995},{"name":"cpu-clock","cnt":567.175673},{"name":"task-clock","cnt":567.154328},{"name":"max-rss","cnt":228120.0},{"name":"instructions:u","cnt":2820855493.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":3815899100.0},{"name":"wall-time","cnt":0.820523821},{"name":"cycles:u","cnt":2859472922.0},{"name":"cpu-clock","cnt":819.108001},{"name":"max-rss","cnt":333688.0},{"name":"faults","cnt":66861.0},{"name":"task-clock","cnt":819.11133}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":71571.0},{"name":"cycles:u","cnt":2467919989.0},{"name":"wall-time","cnt":0.693348456},{"name":"instructions:u","cnt":3239648535.0},{"name":"cpu-clock","cnt":721.555937},{"name":"max-rss","cnt":338024.0},{"name":"task-clock","cnt":721.557582}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":794.895409},{"name":"faults","cnt":71988.0},{"name":"cycles:u","cnt":2769850900.0},{"name":"max-rss","cnt":343896.0},{"name":"wall-time","cnt":0.761369877},{"name":"instructions:u","cnt":3446582755.0},{"name":"cpu-clock","cnt":794.893395}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":3285.638055},{"name":"wall-time","cnt":3.345855189},{"name":"faults","cnt":49420.0},{"name":"max-rss","cnt":305040.0},{"name":"task-clock","cnt":3285.637659},{"name":"instructions:u","cnt":14183013744.0},{"name":"cycles:u","cnt":12839194279.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":16661348754.0},{"name":"task-clock","cnt":4278.847274},{"name":"instructions:u","cnt":18602503557.0},{"name":"cpu-clock","cnt":4278.838074},{"name":"wall-time","cnt":4.342716642},{"name":"max-rss","cnt":419172.0},{"name":"faults","cnt":77924.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":4088362530.0},{"name":"instructions:u","cnt":5015086038.0},{"name":"task-clock","cnt":1121.90478},{"name":"cpu-clock","cnt":1121.905314},{"name":"wall-time","cnt":1.125982134},{"name":"max-rss","cnt":401748.0},{"name":"faults","cnt":75079.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":1339.900389},{"name":"cycles:u","cnt":4949364593.0},{"name":"faults","cnt":76446.0},{"name":"task-clock","cnt":1339.889809},{"name":"wall-time","cnt":1.340100003},{"name":"max-rss","cnt":414468.0},{"name":"instructions:u","cnt":5935631293.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":25229.359137},{"name":"cycles:u","cnt":95267624520.0},{"name":"max-rss","cnt":1009956.0},{"name":"instructions:u","cnt":99163396504.0},{"name":"task-clock","cnt":25229.343096},{"name":"wall-time","cnt":9.7697065},{"name":"faults","cnt":241700.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":268093.0},{"name":"wall-time","cnt":11.608553257},{"name":"max-rss","cnt":1041744.0},{"name":"cpu-clock","cnt":29195.709397},{"name":"instructions:u","cnt":115670961665.0},{"name":"task-clock","cnt":29195.623936},{"name":"cycles:u","cnt":109955079614.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2203.885693},{"name":"wall-time","cnt":2.135743301},{"name":"task-clock","cnt":2204.001725},{"name":"max-rss","cnt":745540.0},{"name":"faults","cnt":132697.0},{"name":"instructions:u","cnt":9393917706.0},{"name":"cycles:u","cnt":7774174908.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":10607136995.0},{"name":"cpu-clock","cnt":2519.964411},{"name":"task-clock","cnt":2520.127774},{"name":"max-rss","cnt":758892.0},{"name":"faults","cnt":134093.0},{"name":"wall-time","cnt":2.379911345},{"name":"cycles:u","cnt":8904450545.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":107392.209283},{"name":"wall-time","cnt":20.48432412},{"name":"instructions:u","cnt":316518897328.0},{"name":"cycles:u","cnt":404636757515.0},{"name":"cpu-clock","cnt":107392.305372},{"name":"faults","cnt":343247.0},{"name":"max-rss","cnt":1382348.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":121373.476866},{"name":"instructions:u","cnt":355470673877.0},{"name":"cycles:u","cnt":456624602411.0},{"name":"max-rss","cnt":1260900.0},{"name":"task-clock","cnt":121373.277551},{"name":"wall-time","cnt":22.354761233},{"name":"faults","cnt":354076.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2226.713502},{"name":"max-rss","cnt":795640.0},{"name":"faults","cnt":145245.0},{"name":"wall-time","cnt":2.109858201},{"name":"cpu-clock","cnt":2226.61032},{"name":"cycles:u","cnt":7802780670.0},{"name":"instructions:u","cnt":9266393608.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":10254.268594},{"name":"faults","cnt":201043.0},{"name":"wall-time","cnt":4.198431066},{"name":"cycles:u","cnt":37915859293.0},{"name":"cpu-clock","cnt":10254.257088},{"name":"instructions:u","cnt":40906704607.0},{"name":"max-rss","cnt":1003752.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":2220.083647},{"name":"faults","cnt":24074.0},{"name":"task-clock","cnt":2220.084079},{"name":"instructions:u","cnt":14120945153.0},{"name":"max-rss","cnt":178460.0},{"name":"cycles:u","cnt":8718471263.0},{"name":"wall-time","cnt":2.278572849}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":2459.743834},{"name":"task-clock","cnt":2459.745299},{"name":"wall-time","cnt":2.496204088},{"name":"faults","cnt":26230.0},{"name":"cycles:u","cnt":9655122794.0},{"name":"instructions:u","cnt":15470463952.0},{"name":"max-rss","cnt":187396.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":19504.0},{"name":"wall-time","cnt":0.253047569},{"name":"task-clock","cnt":225.432101},{"name":"cpu-clock","cnt":225.430259},{"name":"instructions:u","cnt":1239456022.0},{"name":"max-rss","cnt":156128.0},{"name":"cycles:u","cnt":775338676.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":25677.0},{"name":"wall-time","cnt":2.36081843},{"name":"instructions:u","cnt":14593135081.0},{"name":"cycles:u","cnt":9032632236.0},{"name":"cpu-clock","cnt":2303.542404},{"name":"max-rss","cnt":201800.0},{"name":"task-clock","cnt":2303.542996}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2568.209129},{"name":"max-rss","cnt":209972.0},{"name":"wall-time","cnt":2.580018083},{"name":"cpu-clock","cnt":2568.232172},{"name":"faults","cnt":27707.0},{"name":"cycles:u","cnt":10064614153.0},{"name":"instructions:u","cnt":16162914539.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.281604504},{"name":"cpu-clock","cnt":254.989323},{"name":"task-clock","cnt":254.99203},{"name":"max-rss","cnt":178724.0},{"name":"instructions:u","cnt":1425921707.0},{"name":"faults","cnt":23240.0},{"name":"cycles:u","cnt":871605206.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":207552.0},{"name":"wall-time","cnt":2.411546162},{"name":"task-clock","cnt":2402.265353},{"name":"instructions:u","cnt":15170738080.0},{"name":"cpu-clock","cnt":2402.250252},{"name":"faults","cnt":27097.0},{"name":"cycles:u","cnt":9399346221.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":215480.0},{"name":"cpu-clock","cnt":2684.894546},{"name":"wall-time","cnt":2.634025418},{"name":"cycles:u","cnt":10504848086.0},{"name":"instructions:u","cnt":16774204242.0},{"name":"faults","cnt":29073.0},{"name":"task-clock","cnt":2684.908731}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":265.113397},{"name":"faults","cnt":23434.0},{"name":"instructions:u","cnt":1442420805.0},{"name":"task-clock","cnt":265.128028},{"name":"wall-time","cnt":0.288690598},{"name":"max-rss","cnt":179480.0},{"name":"cycles:u","cnt":903660872.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}