{"commit":{"sha":"9387927ae2c0d2a283f6c48b705f25d38bb6e692","date":"2019-04-17T22:24:11+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":424052.0},{"name":"cpu-clock","cnt":7189.238846},{"name":"cycles:u","cnt":28163647772.0},{"name":"task-clock","cnt":7189.235723},{"name":"instructions:u","cnt":33911519624.0},{"name":"wall-time","cnt":7.225792925},{"name":"faults","cnt":79616.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":8663.353398},{"name":"instructions:u","cnt":41430849309.0},{"name":"faults","cnt":125044.0},{"name":"max-rss","cnt":571776.0},{"name":"cycles:u","cnt":33899100239.0},{"name":"wall-time","cnt":8.682102844},{"name":"cpu-clock","cnt":8663.35747}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":9084061039.0},{"name":"instructions:u","cnt":11719288612.0},{"name":"task-clock","cnt":2417.411105},{"name":"max-rss","cnt":538276.0},{"name":"faults","cnt":109481.0},{"name":"cpu-clock","cnt":2417.410219},{"name":"wall-time","cnt":2.354472402}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":13195870833.0},{"name":"task-clock","cnt":2812.60835},{"name":"cycles:u","cnt":10628730890.0},{"name":"max-rss","cnt":552304.0},{"name":"wall-time","cnt":2.74753575},{"name":"faults","cnt":111170.0},{"name":"cpu-clock","cnt":2812.608247}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":180868117269.0},{"name":"faults","cnt":408935.0},{"name":"max-rss","cnt":1581380.0},{"name":"task-clock","cnt":47069.68227},{"name":"cpu-clock","cnt":47069.654374},{"name":"wall-time","cnt":18.677842752},{"name":"cycles:u","cnt":177922939978.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":52869.12099},{"name":"cpu-clock","cnt":52869.326265},{"name":"cycles:u","cnt":199351835672.0},{"name":"instructions:u","cnt":206512845893.0},{"name":"max-rss","cnt":1505064.0},{"name":"faults","cnt":428934.0},{"name":"wall-time","cnt":21.737039665}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":15732836824.0},{"name":"faults","cnt":213856.0},{"name":"task-clock","cnt":4359.334269},{"name":"max-rss","cnt":1159744.0},{"name":"instructions:u","cnt":19041493831.0},{"name":"wall-time","cnt":4.25893057},{"name":"cpu-clock","cnt":4359.112779}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":59678975851.0},{"name":"task-clock","cnt":14772.741477},{"name":"cpu-clock","cnt":14772.640279},{"name":"cycles:u","cnt":55035895179.0},{"name":"max-rss","cnt":1521552.0},{"name":"faults","cnt":322936.0},{"name":"wall-time","cnt":7.679018882}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":38.464363771},{"name":"instructions:u","cnt":630371100976.0},{"name":"cycles:u","cnt":805013111403.0},{"name":"max-rss","cnt":1350416.0},{"name":"task-clock","cnt":213242.575049},{"name":"faults","cnt":429821.0},{"name":"cpu-clock","cnt":213242.705691}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1324564.0},{"name":"cycles:u","cnt":973922515025.0},{"name":"wall-time","cnt":43.113487767},{"name":"faults","cnt":440817.0},{"name":"cpu-clock","cnt":258341.656168},{"name":"instructions:u","cnt":753166466847.0},{"name":"task-clock","cnt":258341.188753}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":1008876.0},{"name":"instructions:u","cnt":14868079493.0},{"name":"task-clock","cnt":3621.102558},{"name":"faults","cnt":215947.0},{"name":"cycles:u","cnt":13024876410.0},{"name":"wall-time","cnt":3.308265092},{"name":"cpu-clock","cnt":3620.893819}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":576940440148.0},{"name":"wall-time","cnt":24.685092352},{"name":"faults","cnt":381701.0},{"name":"cpu-clock","cnt":153340.423508},{"name":"task-clock","cnt":153340.224732},{"name":"max-rss","cnt":1333468.0},{"name":"instructions:u","cnt":456418660796.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":256300.0},{"name":"cpu-clock","cnt":3675.487598},{"name":"wall-time","cnt":3.712398252},{"name":"instructions:u","cnt":18754852672.0},{"name":"task-clock","cnt":3675.48718},{"name":"cycles:u","cnt":14413749907.0},{"name":"faults","cnt":47400.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.296215745},{"name":"max-rss","cnt":447072.0},{"name":"task-clock","cnt":6260.221642},{"name":"faults","cnt":96631.0},{"name":"instructions:u","cnt":39453738944.0},{"name":"cpu-clock","cnt":6260.221286},{"name":"cycles:u","cnt":24420178595.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1794.205852},{"name":"max-rss","cnt":811480.0},{"name":"wall-time","cnt":1.790911817},{"name":"faults","cnt":181942.0},{"name":"instructions:u","cnt":10182871239.0},{"name":"cycles:u","cnt":6280480330.0},{"name":"cpu-clock","cnt":1794.226559}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.62393049},{"name":"max-rss","cnt":825544.0},{"name":"cycles:u","cnt":9510375026.0},{"name":"cpu-clock","cnt":2622.220722},{"name":"instructions:u","cnt":13987176136.0},{"name":"task-clock","cnt":2622.211286},{"name":"faults","cnt":183926.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":58699333305.0},{"name":"cpu-clock","cnt":15388.396004},{"name":"wall-time","cnt":9.272698735},{"name":"max-rss","cnt":980492.0},{"name":"task-clock","cnt":15388.384078},{"name":"faults","cnt":247271.0},{"name":"instructions:u","cnt":71447308086.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":79540239501.0},{"name":"wall-time","cnt":11.994387458},{"name":"cpu-clock","cnt":20863.347047},{"name":"instructions:u","cnt":96288060055.0},{"name":"max-rss","cnt":959392.0},{"name":"faults","cnt":236327.0},{"name":"task-clock","cnt":20863.349115}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.38928572},{"name":"cpu-clock","cnt":2436.535135},{"name":"cycles:u","cnt":8527383282.0},{"name":"max-rss","cnt":944168.0},{"name":"faults","cnt":205613.0},{"name":"task-clock","cnt":2436.594916},{"name":"instructions:u","cnt":12902855842.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":11287.038813},{"name":"wall-time","cnt":7.49893047},{"name":"faults","cnt":341108.0},{"name":"cycles:u","cnt":42339070511.0},{"name":"cpu-clock","cnt":11287.02397},{"name":"instructions:u","cnt":51120193063.0},{"name":"max-rss","cnt":1419924.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":202810318690.0},{"name":"cycles:u","cnt":208873905635.0},{"name":"faults","cnt":148428.0},{"name":"wall-time","cnt":25.69920058},{"name":"max-rss","cnt":480344.0},{"name":"task-clock","cnt":54308.331206},{"name":"cpu-clock","cnt":54308.36478}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":62940.21296},{"name":"cpu-clock","cnt":62940.244793},{"name":"max-rss","cnt":657608.0},{"name":"faults","cnt":199339.0},{"name":"instructions:u","cnt":232440898126.0},{"name":"cycles:u","cnt":240925746697.0},{"name":"wall-time","cnt":26.640428609}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2382.592498},{"name":"faults","cnt":205342.0},{"name":"instructions:u","cnt":12718433271.0},{"name":"task-clock","cnt":2382.666982},{"name":"max-rss","cnt":915012.0},{"name":"wall-time","cnt":2.327834521},{"name":"cycles:u","cnt":8345018314.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":274685.0},{"name":"cpu-clock","cnt":34420.297881},{"name":"task-clock","cnt":34420.258042},{"name":"cycles:u","cnt":130379931990.0},{"name":"instructions:u","cnt":126347016475.0},{"name":"wall-time","cnt":13.375824604},{"name":"max-rss","cnt":1171088.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.809420612},{"name":"instructions:u","cnt":5390356383.0},{"name":"task-clock","cnt":775.297878},{"name":"faults","cnt":27434.0},{"name":"cpu-clock","cnt":775.307735},{"name":"max-rss","cnt":185892.0},{"name":"cycles:u","cnt":2954737766.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3760300712.0},{"name":"instructions:u","cnt":7101582296.0},{"name":"max-rss","cnt":194160.0},{"name":"faults","cnt":28964.0},{"name":"wall-time","cnt":1.006934971},{"name":"cpu-clock","cnt":988.543415},{"name":"task-clock","cnt":988.534967}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":264.770235},{"name":"cycles:u","cnt":913447142.0},{"name":"instructions:u","cnt":1730400573.0},{"name":"wall-time","cnt":0.301779283},{"name":"max-rss","cnt":160204.0},{"name":"cpu-clock","cnt":264.769389},{"name":"faults","cnt":23495.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":288.417063},{"name":"wall-time","cnt":0.306267158},{"name":"task-clock","cnt":288.419204},{"name":"instructions:u","cnt":1877335686.0},{"name":"max-rss","cnt":175124.0},{"name":"faults","cnt":23600.0},{"name":"cycles:u","cnt":1004767994.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":31313.0},{"name":"wall-time","cnt":1.009084688},{"name":"task-clock","cnt":991.205808},{"name":"max-rss","cnt":204468.0},{"name":"cpu-clock","cnt":991.203647},{"name":"instructions:u","cnt":7113812391.0},{"name":"cycles:u","cnt":3782293007.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cycles:u","cnt":4119782519.0},{"name":"task-clock","cnt":1131.313782},{"name":"faults","cnt":56678.0},{"name":"wall-time","cnt":1.157286286},{"name":"max-rss","cnt":278964.0},{"name":"instructions:u","cnt":7254879197.0},{"name":"cpu-clock","cnt":1131.299683}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1347.026524},{"name":"max-rss","cnt":290348.0},{"name":"wall-time","cnt":1.3252109},{"name":"cycles:u","cnt":4952928162.0},{"name":"instructions:u","cnt":8941712001.0},{"name":"task-clock","cnt":1347.032621},{"name":"faults","cnt":59237.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1192647166.0},{"name":"wall-time","cnt":0.404214309},{"name":"instructions:u","cnt":2228643930.0},{"name":"task-clock","cnt":370.416867},{"name":"cpu-clock","cnt":370.406219},{"name":"max-rss","cnt":178100.0},{"name":"faults","cnt":32981.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2184433944.0},{"name":"task-clock","cnt":647.355899},{"name":"faults","cnt":54992.0},{"name":"max-rss","cnt":276276.0},{"name":"wall-time","cnt":0.580666983},{"name":"cpu-clock","cnt":647.361186},{"name":"instructions:u","cnt":3707944464.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":61751.0},{"name":"max-rss","cnt":290436.0},{"name":"task-clock","cnt":1360.851547},{"name":"wall-time","cnt":1.312932824},{"name":"instructions:u","cnt":8950693674.0},{"name":"cycles:u","cnt":4982672362.0},{"name":"cpu-clock","cnt":1360.837807}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"task-clock","cnt":925.900729},{"name":"wall-time","cnt":0.95025138},{"name":"max-rss","cnt":210248.0},{"name":"instructions:u","cnt":6183709470.0},{"name":"faults","cnt":35783.0},{"name":"cycles:u","cnt":3441700552.0},{"name":"cpu-clock","cnt":925.897296}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1130.6274},{"name":"max-rss","cnt":217236.0},{"name":"cycles:u","cnt":4255048784.0},{"name":"wall-time","cnt":1.124218987},{"name":"task-clock","cnt":1130.661686},{"name":"faults","cnt":37341.0},{"name":"instructions:u","cnt":7884808559.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":177608.0},{"name":"faults","cnt":30279.0},{"name":"instructions:u","cnt":2038853574.0},{"name":"cpu-clock","cnt":326.988571},{"name":"task-clock","cnt":326.983377},{"name":"cycles:u","cnt":1083912472.0},{"name":"wall-time","cnt":0.358167366}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2636905838.0},{"name":"max-rss","cnt":201488.0},{"name":"cycles:u","cnt":1486523388.0},{"name":"wall-time","cnt":0.424487436},{"name":"cpu-clock","cnt":432.811972},{"name":"faults","cnt":32381.0},{"name":"task-clock","cnt":432.826651}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1145.841662},{"name":"faults","cnt":39089.0},{"name":"task-clock","cnt":1145.845098},{"name":"cycles:u","cnt":4304580954.0},{"name":"max-rss","cnt":216280.0},{"name":"instructions:u","cnt":7866295359.0},{"name":"wall-time","cnt":1.13745253}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":105850.0},{"name":"max-rss","cnt":515728.0},{"name":"task-clock","cnt":6019.422702},{"name":"instructions:u","cnt":30047025810.0},{"name":"cycles:u","cnt":23401615699.0},{"name":"cpu-clock","cnt":6019.416849},{"name":"wall-time","cnt":6.084012325}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7158.98746},{"name":"wall-time","cnt":7.201018641},{"name":"cycles:u","cnt":27926415922.0},{"name":"instructions:u","cnt":36383750019.0},{"name":"faults","cnt":126941.0},{"name":"task-clock","cnt":7158.984165},{"name":"max-rss","cnt":583132.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":5475888424.0},{"name":"task-clock","cnt":1511.779191},{"name":"wall-time","cnt":1.486431832},{"name":"instructions:u","cnt":6998411219.0},{"name":"cpu-clock","cnt":1511.777075},{"name":"faults","cnt":86843.0},{"name":"max-rss","cnt":436520.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":15486.870109},{"name":"faults","cnt":171592.0},{"name":"wall-time","cnt":9.109279993},{"name":"cycles:u","cnt":59273278559.0},{"name":"max-rss","cnt":746304.0},{"name":"cpu-clock","cnt":15486.880795},{"name":"instructions:u","cnt":69179532550.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":18707.262962},{"name":"max-rss","cnt":826616.0},{"name":"instructions:u","cnt":85854653356.0},{"name":"cpu-clock","cnt":18707.322338},{"name":"cycles:u","cnt":71399518335.0},{"name":"faults","cnt":190507.0},{"name":"wall-time","cnt":11.305315895}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8665404936.0},{"name":"cpu-clock","cnt":2445.062514},{"name":"max-rss","cnt":734948.0},{"name":"instructions:u","cnt":12008747394.0},{"name":"task-clock","cnt":2445.190204},{"name":"wall-time","cnt":2.34571242},{"name":"faults","cnt":150557.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":267432556519.0},{"name":"task-clock","cnt":70539.538985},{"name":"wall-time","cnt":20.074378728},{"name":"faults","cnt":280825.0},{"name":"instructions:u","cnt":226641175174.0},{"name":"max-rss","cnt":1165372.0},{"name":"cpu-clock","cnt":70539.58963}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":285093.0},{"name":"max-rss","cnt":1045300.0},{"name":"instructions:u","cnt":260505297715.0},{"name":"cpu-clock","cnt":83704.490738},{"name":"cycles:u","cnt":315823922576.0},{"name":"wall-time","cnt":20.927808154},{"name":"task-clock","cnt":83704.23745}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.327870656},{"name":"max-rss","cnt":731200.0},{"name":"instructions:u","cnt":11889399885.0},{"name":"task-clock","cnt":2445.610497},{"name":"cycles:u","cnt":8531707163.0},{"name":"cpu-clock","cnt":2445.45516},{"name":"faults","cnt":145951.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":32287425524.0},{"name":"faults","cnt":65394.0},{"name":"task-clock","cnt":6328.162345},{"name":"wall-time","cnt":6.37283668},{"name":"cycles:u","cnt":24752148347.0},{"name":"cpu-clock","cnt":6328.151914},{"name":"max-rss","cnt":379756.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7598.555984},{"name":"wall-time","cnt":7.639285572},{"name":"cpu-clock","cnt":7598.55784},{"name":"instructions:u","cnt":38714151352.0},{"name":"cycles:u","cnt":29726964994.0},{"name":"faults","cnt":106005.0},{"name":"max-rss","cnt":537620.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":103920.0},{"name":"wall-time","cnt":1.875299608},{"name":"task-clock","cnt":1950.39495},{"name":"max-rss","cnt":528224.0},{"name":"instructions:u","cnt":9020971566.0},{"name":"cpu-clock","cnt":1950.393149},{"name":"cycles:u","cnt":7222353635.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2129.607939},{"name":"instructions:u","cnt":9993444861.0},{"name":"task-clock","cnt":2129.611166},{"name":"cycles:u","cnt":7952088798.0},{"name":"wall-time","cnt":2.044779579},{"name":"faults","cnt":104637.0},{"name":"max-rss","cnt":538284.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":29023.341403},{"name":"wall-time","cnt":12.847238524},{"name":"faults","cnt":251832.0},{"name":"cycles:u","cnt":109854067138.0},{"name":"max-rss","cnt":1139344.0},{"name":"instructions:u","cnt":116235543563.0},{"name":"cpu-clock","cnt":29023.316385}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":14.90677168},{"name":"max-rss","cnt":1173092.0},{"name":"faults","cnt":265377.0},{"name":"task-clock","cnt":31798.130953},{"name":"cycles:u","cnt":120233932221.0},{"name":"instructions:u","cnt":130712568608.0},{"name":"cpu-clock","cnt":31798.186552}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":165494.0},{"name":"max-rss","cnt":927304.0},{"name":"wall-time","cnt":3.023203063},{"name":"cycles:u","cnt":11276750625.0},{"name":"task-clock","cnt":3179.618616},{"name":"instructions:u","cnt":14040442778.0},{"name":"cpu-clock","cnt":3179.425782}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":3.784708651},{"name":"cpu-clock","cnt":4419.743028},{"name":"cycles:u","cnt":16033147702.0},{"name":"task-clock","cnt":4419.963757},{"name":"instructions:u","cnt":19293855084.0},{"name":"faults","cnt":181796.0},{"name":"max-rss","cnt":992884.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":23.570949877},{"name":"max-rss","cnt":974324.0},{"name":"cpu-clock","cnt":115142.295352},{"name":"task-clock","cnt":115142.235818},{"name":"faults","cnt":238213.0},{"name":"instructions:u","cnt":350237433316.0},{"name":"cycles:u","cnt":435538825286.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":494227714269.0},{"name":"max-rss","cnt":1073268.0},{"name":"wall-time","cnt":25.423610202},{"name":"instructions:u","cnt":394633424925.0},{"name":"task-clock","cnt":130968.852805},{"name":"cpu-clock","cnt":130969.038794},{"name":"faults","cnt":273376.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3112.151997},{"name":"cycles:u","cnt":11272529187.0},{"name":"wall-time","cnt":2.882697426},{"name":"task-clock","cnt":3112.356671},{"name":"max-rss","cnt":816620.0},{"name":"instructions:u","cnt":13719056874.0},{"name":"faults","cnt":164359.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":6.10959962},{"name":"max-rss","cnt":956840.0},{"name":"cpu-clock","cnt":15401.501925},{"name":"task-clock","cnt":15401.593765},{"name":"instructions:u","cnt":58704249592.0},{"name":"cycles:u","cnt":57876892640.0},{"name":"faults","cnt":202426.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":7933.258452},{"name":"cycles:u","cnt":31450284021.0},{"name":"max-rss","cnt":254496.0},{"name":"instructions:u","cnt":68217588761.0},{"name":"task-clock","cnt":7933.25938},{"name":"faults","cnt":42941.0},{"name":"wall-time","cnt":7.95167017}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":10096.907903},{"name":"instructions:u","cnt":91707618128.0},{"name":"wall-time","cnt":10.134960444},{"name":"max-rss","cnt":504828.0},{"name":"faults","cnt":107773.0},{"name":"task-clock","cnt":10096.90973},{"name":"cycles:u","cnt":39618561023.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":5652622671.0},{"name":"faults","cnt":121450.0},{"name":"wall-time","cnt":0.895567258},{"name":"cycles:u","cnt":2580679299.0},{"name":"task-clock","cnt":860.419057},{"name":"max-rss","cnt":554276.0},{"name":"cpu-clock","cnt":860.416968}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.925881824},{"name":"instructions:u","cnt":67839035703.0},{"name":"cpu-clock","cnt":7893.234024},{"name":"max-rss","cnt":254944.0},{"name":"cycles:u","cnt":31266962679.0},{"name":"task-clock","cnt":7893.236631},{"name":"faults","cnt":43292.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":10823.45286},{"name":"cycles:u","cnt":42198822114.0},{"name":"max-rss","cnt":764000.0},{"name":"wall-time","cnt":10.855796139},{"name":"cpu-clock","cnt":10823.459986},{"name":"instructions:u","cnt":100492664054.0},{"name":"faults","cnt":176178.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3968600379.0},{"name":"faults","cnt":233198.0},{"name":"task-clock","cnt":1342.541107},{"name":"wall-time","cnt":1.377973856},{"name":"cpu-clock","cnt":1342.537819},{"name":"max-rss","cnt":979760.0},{"name":"instructions:u","cnt":8397251125.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":55746121529.0},{"name":"max-rss","cnt":260268.0},{"name":"task-clock","cnt":6549.962495},{"name":"faults","cnt":43393.0},{"name":"wall-time","cnt":6.616882047},{"name":"cpu-clock","cnt":6549.960241},{"name":"cycles:u","cnt":25926184811.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":9.457575849},{"name":"max-rss","cnt":741580.0},{"name":"instructions:u","cnt":87503684724.0},{"name":"faults","cnt":189717.0},{"name":"task-clock","cnt":9426.824932},{"name":"cycles:u","cnt":36553668814.0},{"name":"cpu-clock","cnt":9426.847106}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":233143.0},{"name":"wall-time","cnt":1.387700346},{"name":"task-clock","cnt":1352.582493},{"name":"instructions:u","cnt":8396101649.0},{"name":"cycles:u","cnt":3974060803.0},{"name":"cpu-clock","cnt":1352.581498},{"name":"max-rss","cnt":979516.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":51307.0},{"name":"cpu-clock","cnt":1101.889422},{"name":"cycles:u","cnt":4166912392.0},{"name":"instructions:u","cnt":6991627312.0},{"name":"wall-time","cnt":1.139921872},{"name":"max-rss","cnt":286480.0},{"name":"task-clock","cnt":1101.877532}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1208.25285},{"name":"task-clock","cnt":1208.241622},{"name":"cycles:u","cnt":4590341791.0},{"name":"faults","cnt":53731.0},{"name":"wall-time","cnt":1.244188596},{"name":"max-rss","cnt":295872.0},{"name":"instructions:u","cnt":7974802194.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":199640.0},{"name":"cycles:u","cnt":1262006534.0},{"name":"wall-time","cnt":0.390595002},{"name":"cpu-clock","cnt":356.624345},{"name":"faults","cnt":33598.0},{"name":"instructions:u","cnt":2507179888.0},{"name":"task-clock","cnt":356.635831}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":298240.0},{"name":"instructions:u","cnt":7994369729.0},{"name":"cycles:u","cnt":4576197909.0},{"name":"cpu-clock","cnt":1208.228499},{"name":"wall-time","cnt":1.225838238},{"name":"task-clock","cnt":1208.229264},{"name":"faults","cnt":53969.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7990006222.0},{"name":"task-clock","cnt":1203.516515},{"name":"cycles:u","cnt":4574463979.0},{"name":"cpu-clock","cnt":1203.503382},{"name":"faults","cnt":52449.0},{"name":"wall-time","cnt":1.238183342},{"name":"max-rss","cnt":291808.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"wall-time","cnt":1.689442994},{"name":"faults","cnt":81614.0},{"name":"cpu-clock","cnt":1679.48215},{"name":"cycles:u","cnt":6257550340.0},{"name":"task-clock","cnt":1679.447866},{"name":"max-rss","cnt":382824.0},{"name":"instructions:u","cnt":10136353033.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1843.466945},{"name":"instructions:u","cnt":11546249169.0},{"name":"cycles:u","cnt":6857571640.0},{"name":"faults","cnt":83797.0},{"name":"max-rss","cnt":393300.0},{"name":"task-clock","cnt":1843.45651},{"name":"wall-time","cnt":1.823091605}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":42862.0},{"name":"instructions:u","cnt":3199301649.0},{"name":"cycles:u","cnt":1615760190.0},{"name":"cpu-clock","cnt":476.874439},{"name":"task-clock","cnt":476.905591},{"name":"max-rss","cnt":225360.0},{"name":"wall-time","cnt":0.506840016}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":6745830970.0},{"name":"instructions:u","cnt":11539938798.0},{"name":"faults","cnt":82186.0},{"name":"task-clock","cnt":1820.448072},{"name":"wall-time","cnt":1.77538824},{"name":"max-rss","cnt":387780.0},{"name":"cpu-clock","cnt":1820.460889}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":6849462776.0},{"name":"task-clock","cnt":1853.401648},{"name":"faults","cnt":84540.0},{"name":"max-rss","cnt":395168.0},{"name":"instructions:u","cnt":11535407738.0},{"name":"cpu-clock","cnt":1853.40665},{"name":"wall-time","cnt":1.825986584}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"cycles:u","cnt":11710637083.0},{"name":"task-clock","cnt":3116.941321},{"name":"cpu-clock","cnt":3116.93487},{"name":"faults","cnt":140654.0},{"name":"max-rss","cnt":592208.0},{"name":"wall-time","cnt":3.100223762},{"name":"instructions:u","cnt":17193393283.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":604484.0},{"name":"task-clock","cnt":3277.32322},{"name":"wall-time","cnt":3.242133248},{"name":"cpu-clock","cnt":3277.311206},{"name":"faults","cnt":144077.0},{"name":"instructions:u","cnt":18810333821.0},{"name":"cycles:u","cnt":12199059288.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":471.059944},{"name":"wall-time","cnt":0.501028975},{"name":"task-clock","cnt":471.083555},{"name":"cycles:u","cnt":1605532600.0},{"name":"faults","cnt":42329.0},{"name":"instructions:u","cnt":3158273400.0},{"name":"max-rss","cnt":225292.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":18554972235.0},{"name":"faults","cnt":145104.0},{"name":"cycles:u","cnt":12267901505.0},{"name":"wall-time","cnt":3.197235819},{"name":"task-clock","cnt":3250.033503},{"name":"cpu-clock","cnt":3250.026401},{"name":"max-rss","cnt":610100.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":3228.871497},{"name":"cycles:u","cnt":12155174592.0},{"name":"task-clock","cnt":3228.857658},{"name":"max-rss","cnt":603124.0},{"name":"instructions:u","cnt":18566716953.0},{"name":"wall-time","cnt":3.194851849},{"name":"faults","cnt":142185.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":273930668.0},{"name":"max-rss","cnt":110516.0},{"name":"wall-time","cnt":0.100908782},{"name":"instructions:u","cnt":428519042.0},{"name":"faults","cnt":5751.0},{"name":"cpu-clock","cnt":82.778194},{"name":"task-clock","cnt":82.789137}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":486678207.0},{"name":"task-clock","cnt":94.049939},{"name":"max-rss","cnt":120140.0},{"name":"wall-time","cnt":0.112149576},{"name":"faults","cnt":7300.0},{"name":"cpu-clock","cnt":94.04766},{"name":"cycles:u","cnt":311907983.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":6041.0},{"name":"max-rss","cnt":92284.0},{"name":"cpu-clock","cnt":43.667557},{"name":"cycles:u","cnt":122226606.0},{"name":"wall-time","cnt":0.060783918},{"name":"instructions:u","cnt":179350533.0},{"name":"task-clock","cnt":43.670591}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":130168.0},{"name":"wall-time","cnt":0.157422366},{"name":"faults","cnt":8650.0},{"name":"cycles:u","cnt":576840731.0},{"name":"task-clock","cnt":168.292709},{"name":"instructions:u","cnt":775839313.0},{"name":"cpu-clock","cnt":168.293762}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":184.027185},{"name":"cpu-clock","cnt":184.002182},{"name":"cycles:u","cnt":632426927.0},{"name":"instructions:u","cnt":849105195.0},{"name":"faults","cnt":10248.0},{"name":"max-rss","cnt":137088.0},{"name":"wall-time","cnt":0.17064992}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":7475.0},{"name":"cpu-clock","cnt":64.850599},{"name":"max-rss","cnt":112476.0},{"name":"wall-time","cnt":0.079723917},{"name":"cycles:u","cnt":187316299.0},{"name":"instructions:u","cnt":270138618.0},{"name":"task-clock","cnt":64.86267}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":7716.0},{"name":"wall-time","cnt":0.205513458},{"name":"max-rss","cnt":128152.0},{"name":"instructions:u","cnt":1277718582.0},{"name":"task-clock","cnt":247.596221},{"name":"cpu-clock","cnt":247.592647},{"name":"cycles:u","cnt":906593031.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":261.687134},{"name":"instructions:u","cnt":1350225932.0},{"name":"cycles:u","cnt":953196869.0},{"name":"faults","cnt":9337.0},{"name":"max-rss","cnt":135144.0},{"name":"task-clock","cnt":261.681036},{"name":"wall-time","cnt":0.21818705}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":7348.0},{"name":"instructions:u","cnt":267820434.0},{"name":"cpu-clock","cnt":61.753579},{"name":"cycles:u","cnt":180743341.0},{"name":"wall-time","cnt":0.0780183},{"name":"task-clock","cnt":61.748665},{"name":"max-rss","cnt":111340.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":144160.0},{"name":"wall-time","cnt":0.442498449},{"name":"faults","cnt":12229.0},{"name":"instructions:u","cnt":1909998307.0},{"name":"cpu-clock","cnt":423.586565},{"name":"task-clock","cnt":423.58782},{"name":"cycles:u","cnt":1598777336.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":2446305528.0},{"name":"wall-time","cnt":0.563187356},{"name":"faults","cnt":18710.0},{"name":"cpu-clock","cnt":544.86082},{"name":"cycles:u","cnt":2051552106.0},{"name":"task-clock","cnt":544.86361},{"name":"max-rss","cnt":171136.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":858907914.0},{"name":"cpu-clock","cnt":185.122887},{"name":"wall-time","cnt":0.194506423},{"name":"faults","cnt":18289.0},{"name":"task-clock","cnt":185.125368},{"name":"cycles:u","cnt":622044068.0},{"name":"max-rss","cnt":162708.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":196.714019},{"name":"faults","cnt":18281.0},{"name":"max-rss","cnt":168924.0},{"name":"instructions:u","cnt":925644969.0},{"name":"task-clock","cnt":196.716526},{"name":"cycles:u","cnt":665538300.0},{"name":"wall-time","cnt":0.2049243}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1799.48647},{"name":"task-clock","cnt":1799.487303},{"name":"max-rss","cnt":227800.0},{"name":"cycles:u","cnt":6741307491.0},{"name":"faults","cnt":31013.0},{"name":"wall-time","cnt":0.914295323},{"name":"instructions:u","cnt":7706978087.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2303.027855},{"name":"cpu-clock","cnt":2303.012397},{"name":"cycles:u","cnt":8534388064.0},{"name":"wall-time","cnt":1.12685334},{"name":"max-rss","cnt":251716.0},{"name":"faults","cnt":37518.0},{"name":"instructions:u","cnt":9444685017.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":274.757282},{"name":"max-rss","cnt":188468.0},{"name":"instructions:u","cnt":1182062790.0},{"name":"faults","cnt":22944.0},{"name":"cycles:u","cnt":866834475.0},{"name":"wall-time","cnt":0.26482677},{"name":"cpu-clock","cnt":274.710278}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.302388451},{"name":"cycles:u","cnt":966361965.0},{"name":"cpu-clock","cnt":301.158534},{"name":"task-clock","cnt":301.229703},{"name":"instructions:u","cnt":1287492850.0},{"name":"max-rss","cnt":195828.0},{"name":"faults","cnt":23481.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":5310.302274},{"name":"max-rss","cnt":238792.0},{"name":"wall-time","cnt":1.441343668},{"name":"instructions:u","cnt":18126924337.0},{"name":"cycles:u","cnt":20006142155.0},{"name":"faults","cnt":33819.0},{"name":"cpu-clock","cnt":5310.318522}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":22270332973.0},{"name":"faults","cnt":39482.0},{"name":"max-rss","cnt":259784.0},{"name":"wall-time","cnt":1.623785203},{"name":"cpu-clock","cnt":5936.775082},{"name":"task-clock","cnt":5936.756525},{"name":"instructions:u","cnt":20214219305.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":876722119.0},{"name":"max-rss","cnt":187732.0},{"name":"task-clock","cnt":268.976281},{"name":"instructions:u","cnt":1193165233.0},{"name":"faults","cnt":23071.0},{"name":"cpu-clock","cnt":268.931154},{"name":"wall-time","cnt":0.261859125}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":385.629242},{"name":"task-clock","cnt":385.680349},{"name":"wall-time","cnt":0.349550567},{"name":"faults","cnt":24269.0},{"name":"cycles:u","cnt":1326954083.0},{"name":"max-rss","cnt":200612.0},{"name":"instructions:u","cnt":1691605554.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3997413649.0},{"name":"wall-time","cnt":0.769455142},{"name":"task-clock","cnt":751.361847},{"name":"cpu-clock","cnt":751.360861},{"name":"cycles:u","cnt":2908329055.0},{"name":"faults","cnt":11848.0},{"name":"max-rss","cnt":141636.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3541750506.0},{"name":"max-rss","cnt":171032.0},{"name":"instructions:u","cnt":4692660736.0},{"name":"cpu-clock","cnt":919.756853},{"name":"wall-time","cnt":0.93880653},{"name":"faults","cnt":19199.0},{"name":"task-clock","cnt":919.759536}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":200.959175},{"name":"cpu-clock","cnt":200.958091},{"name":"faults","cnt":18650.0},{"name":"max-rss","cnt":161964.0},{"name":"wall-time","cnt":0.211913472},{"name":"cycles:u","cnt":677036654.0},{"name":"instructions:u","cnt":937297380.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":162804.0},{"name":"cycles:u","cnt":695151684.0},{"name":"instructions:u","cnt":947799690.0},{"name":"wall-time","cnt":0.21219655},{"name":"faults","cnt":18672.0},{"name":"task-clock","cnt":205.343962},{"name":"cpu-clock","cnt":205.356132}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.91141451},{"name":"cpu-clock","cnt":1083.782435},{"name":"task-clock","cnt":1083.798224},{"name":"cycles:u","cnt":4138501495.0},{"name":"instructions:u","cnt":5240073791.0},{"name":"max-rss","cnt":164616.0},{"name":"faults","cnt":15880.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":24074.0},{"name":"instructions:u","cnt":6223882794.0},{"name":"task-clock","cnt":1335.12739},{"name":"cpu-clock","cnt":1335.115059},{"name":"max-rss","cnt":195956.0},{"name":"wall-time","cnt":1.119126301},{"name":"cycles:u","cnt":5053513445.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":253.131623},{"name":"instructions:u","cnt":1113445525.0},{"name":"cycles:u","cnt":831749943.0},{"name":"cpu-clock","cnt":253.103805},{"name":"faults","cnt":21736.0},{"name":"max-rss","cnt":180372.0},{"name":"wall-time","cnt":0.267896988}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":253.554052},{"name":"cpu-clock","cnt":253.551274},{"name":"wall-time","cnt":0.251908518},{"name":"instructions:u","cnt":1125494228.0},{"name":"max-rss","cnt":180484.0},{"name":"cycles:u","cnt":835247871.0},{"name":"faults","cnt":21751.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1613.327541},{"name":"instructions:u","cnt":6605709357.0},{"name":"cycles:u","cnt":6123905319.0},{"name":"faults","cnt":18011.0},{"name":"max-rss","cnt":173620.0},{"name":"cpu-clock","cnt":1613.312371},{"name":"wall-time","cnt":0.970299204}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":7659292858.0},{"name":"faults","cnt":25352.0},{"name":"max-rss","cnt":201956.0},{"name":"cycles:u","cnt":7210001693.0},{"name":"task-clock","cnt":1910.023162},{"name":"wall-time","cnt":1.171924669},{"name":"cpu-clock","cnt":1910.014891}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":21689.0},{"name":"task-clock","cnt":244.962906},{"name":"wall-time","cnt":0.263359712},{"name":"instructions:u","cnt":1107038212.0},{"name":"cycles:u","cnt":812807457.0},{"name":"max-rss","cnt":179536.0},{"name":"cpu-clock","cnt":244.957981}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":247.478536},{"name":"faults","cnt":21733.0},{"name":"cpu-clock","cnt":247.461377},{"name":"cycles:u","cnt":822623042.0},{"name":"instructions:u","cnt":1118855550.0},{"name":"wall-time","cnt":0.247912828},{"name":"max-rss","cnt":180088.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":44.436794},{"name":"wall-time","cnt":0.062920864},{"name":"instructions:u","cnt":191705475.0},{"name":"cpu-clock","cnt":44.435094},{"name":"max-rss","cnt":100164.0},{"name":"faults","cnt":4932.0},{"name":"cycles:u","cnt":127689914.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":216278680.0},{"name":"cpu-clock","cnt":51.691979},{"name":"wall-time","cnt":0.069737076},{"name":"faults","cnt":6130.0},{"name":"max-rss","cnt":105344.0},{"name":"cycles:u","cnt":149132113.0},{"name":"task-clock","cnt":51.695487}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":114222572.0},{"name":"instructions:u","cnt":169132082.0},{"name":"faults","cnt":5569.0},{"name":"cpu-clock","cnt":41.160816},{"name":"max-rss","cnt":90284.0},{"name":"task-clock","cnt":41.153058},{"name":"wall-time","cnt":0.059211563}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":49.99637},{"name":"cycles:u","cnt":143050353.0},{"name":"wall-time","cnt":0.068307509},{"name":"faults","cnt":6241.0},{"name":"instructions:u","cnt":209927340.0},{"name":"cpu-clock","cnt":49.993071},{"name":"max-rss","cnt":105988.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":523156885.0},{"name":"faults","cnt":12018.0},{"name":"cpu-clock","cnt":124.961714},{"name":"task-clock","cnt":124.975753},{"name":"max-rss","cnt":119200.0},{"name":"cycles:u","cnt":359336892.0},{"name":"wall-time","cnt":0.132931683}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":13480.0},{"name":"instructions:u","cnt":571206896.0},{"name":"cpu-clock","cnt":136.006007},{"name":"wall-time","cnt":0.142905745},{"name":"cycles:u","cnt":393533241.0},{"name":"task-clock","cnt":136.012886},{"name":"max-rss","cnt":124900.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":108336.0},{"name":"task-clock","cnt":113.502159},{"name":"instructions:u","cnt":473695455.0},{"name":"cpu-clock","cnt":113.477623},{"name":"wall-time","cnt":0.12679883},{"name":"cycles:u","cnt":314195816.0},{"name":"faults","cnt":12701.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":133.286746},{"name":"instructions:u","cnt":550406950.0},{"name":"faults","cnt":13778.0},{"name":"max-rss","cnt":126416.0},{"name":"wall-time","cnt":0.13990143},{"name":"cycles:u","cnt":383237168.0},{"name":"task-clock","cnt":133.294228}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":121392.0},{"name":"cycles:u","cnt":377023613.0},{"name":"wall-time","cnt":0.135705639},{"name":"cpu-clock","cnt":129.107661},{"name":"task-clock","cnt":129.113451},{"name":"instructions:u","cnt":549424847.0},{"name":"faults","cnt":11944.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":138.867967},{"name":"instructions:u","cnt":596428324.0},{"name":"faults","cnt":13351.0},{"name":"max-rss","cnt":127176.0},{"name":"cycles:u","cnt":411286904.0},{"name":"cpu-clock","cnt":138.862214},{"name":"wall-time","cnt":0.144265424}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":12490.0},{"name":"cpu-clock","cnt":110.369657},{"name":"max-rss","cnt":108008.0},{"name":"task-clock","cnt":110.374507},{"name":"instructions:u","cnt":471030969.0},{"name":"wall-time","cnt":0.125739743},{"name":"cycles:u","cnt":306964697.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":135.508548},{"name":"cpu-clock","cnt":135.504021},{"name":"faults","cnt":13639.0},{"name":"cycles:u","cnt":396978990.0},{"name":"max-rss","cnt":128608.0},{"name":"instructions:u","cnt":577876047.0},{"name":"wall-time","cnt":0.141489546}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":1635.427781},{"name":"max-rss","cnt":230412.0},{"name":"instructions:u","cnt":9340933511.0},{"name":"cpu-clock","cnt":1635.436474},{"name":"cycles:u","cnt":6337173166.0},{"name":"faults","cnt":35786.0},{"name":"wall-time","cnt":1.701372913}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":42213.0},{"name":"wall-time","cnt":2.05205338},{"name":"task-clock","cnt":1994.700041},{"name":"cycles:u","cnt":7703703446.0},{"name":"instructions:u","cnt":11828914226.0},{"name":"max-rss","cnt":258072.0},{"name":"cpu-clock","cnt":1994.700202}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2256320316.0},{"name":"task-clock","cnt":618.906648},{"name":"faults","cnt":37163.0},{"name":"max-rss","cnt":238112.0},{"name":"cpu-clock","cnt":618.904655},{"name":"instructions:u","cnt":3968758917.0},{"name":"wall-time","cnt":0.620781975}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":4485899243.0},{"name":"cpu-clock","cnt":726.501075},{"name":"wall-time","cnt":0.728920891},{"name":"cycles:u","cnt":2677297445.0},{"name":"max-rss","cnt":248464.0},{"name":"task-clock","cnt":726.501964},{"name":"faults","cnt":38369.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":13394825922.0},{"name":"max-rss","cnt":298220.0},{"name":"task-clock","cnt":2594.297898},{"name":"cpu-clock","cnt":2594.302724},{"name":"cycles:u","cnt":9914703714.0},{"name":"wall-time","cnt":2.116943392},{"name":"faults","cnt":50431.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3151.734312},{"name":"cycles:u","cnt":11947074504.0},{"name":"max-rss","cnt":346708.0},{"name":"wall-time","cnt":2.537364783},{"name":"faults","cnt":62854.0},{"name":"cpu-clock","cnt":3151.764957},{"name":"instructions:u","cnt":16687486848.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":48336.0},{"name":"task-clock","cnt":765.129926},{"name":"cycles:u","cnt":2696759555.0},{"name":"max-rss","cnt":295592.0},{"name":"cpu-clock","cnt":765.069802},{"name":"instructions:u","cnt":4509407263.0},{"name":"wall-time","cnt":0.74923508}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":5066261990.0},{"name":"task-clock","cnt":883.412667},{"name":"wall-time","cnt":0.864160276},{"name":"cycles:u","cnt":3150165261.0},{"name":"cpu-clock","cnt":883.357875},{"name":"max-rss","cnt":309528.0},{"name":"faults","cnt":50599.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":2.756708887},{"name":"task-clock","cnt":7213.651233},{"name":"faults","cnt":78338.0},{"name":"cycles:u","cnt":27160796484.0},{"name":"max-rss","cnt":385836.0},{"name":"cpu-clock","cnt":7213.662456},{"name":"instructions:u","cnt":27036412299.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7378.717648},{"name":"faults","cnt":69841.0},{"name":"task-clock","cnt":7378.719818},{"name":"max-rss","cnt":372176.0},{"name":"cycles:u","cnt":27853432115.0},{"name":"wall-time","cnt":3.02761657},{"name":"instructions:u","cnt":28216648600.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4626142495.0},{"name":"wall-time","cnt":0.757384315},{"name":"max-rss","cnt":303284.0},{"name":"task-clock","cnt":792.197372},{"name":"cycles:u","cnt":2798398960.0},{"name":"cpu-clock","cnt":792.142625},{"name":"faults","cnt":50607.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":935.935838},{"name":"wall-time","cnt":0.868922214},{"name":"cycles:u","cnt":3379509563.0},{"name":"task-clock","cnt":935.981194},{"name":"faults","cnt":52250.0},{"name":"instructions:u","cnt":5300345871.0},{"name":"max-rss","cnt":317336.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":4737587925.0},{"name":"faults","cnt":21311.0},{"name":"max-rss","cnt":179776.0},{"name":"cycles:u","cnt":4325960404.0},{"name":"cpu-clock","cnt":1122.947901},{"name":"wall-time","cnt":1.148614297},{"name":"task-clock","cnt":1122.936208}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":232952.0},{"name":"task-clock","cnt":1426.371078},{"name":"instructions:u","cnt":6053943689.0},{"name":"wall-time","cnt":1.462004481},{"name":"faults","cnt":34424.0},{"name":"cpu-clock","cnt":1426.369015},{"name":"cycles:u","cnt":5482801185.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.451292906},{"name":"cpu-clock","cnt":440.657048},{"name":"cycles:u","cnt":1544101185.0},{"name":"instructions:u","cnt":1913977214.0},{"name":"faults","cnt":33387.0},{"name":"max-rss","cnt":222432.0},{"name":"task-clock","cnt":440.658542}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":464.224581},{"name":"task-clock","cnt":464.225008},{"name":"max-rss","cnt":232072.0},{"name":"cycles:u","cnt":1648162672.0},{"name":"instructions:u","cnt":2002277343.0},{"name":"faults","cnt":34109.0},{"name":"wall-time","cnt":0.457091917}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":17249820021.0},{"name":"cycles:u","cnt":16406538277.0},{"name":"max-rss","cnt":307396.0},{"name":"wall-time","cnt":2.259324224},{"name":"faults","cnt":49873.0},{"name":"task-clock","cnt":4334.897184},{"name":"cpu-clock","cnt":4334.888811}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":20607926603.0},{"name":"cpu-clock","cnt":5318.907034},{"name":"cycles:u","cnt":19964945209.0},{"name":"task-clock","cnt":5318.938753},{"name":"faults","cnt":63852.0},{"name":"wall-time","cnt":2.760886154},{"name":"max-rss","cnt":360328.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":46392.0},{"name":"wall-time","cnt":0.685276472},{"name":"cpu-clock","cnt":707.972639},{"name":"cycles:u","cnt":2396905457.0},{"name":"instructions:u","cnt":2871824828.0},{"name":"task-clock","cnt":708.067452},{"name":"max-rss","cnt":298560.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2560240119.0},{"name":"faults","cnt":47321.0},{"name":"instructions:u","cnt":2999775751.0},{"name":"cpu-clock","cnt":749.713451},{"name":"task-clock","cnt":749.835168},{"name":"wall-time","cnt":0.696610231},{"name":"max-rss","cnt":308316.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":49575.0},{"name":"instructions:u","cnt":47041153557.0},{"name":"max-rss","cnt":297768.0},{"name":"cycles:u","cnt":59385417240.0},{"name":"cpu-clock","cnt":15702.621077},{"name":"task-clock","cnt":15702.602949},{"name":"wall-time","cnt":3.509073497}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":69510179827.0},{"name":"max-rss","cnt":344936.0},{"name":"task-clock","cnt":18473.681087},{"name":"faults","cnt":62940.0},{"name":"instructions:u","cnt":55107723748.0},{"name":"cpu-clock","cnt":18473.676175},{"name":"wall-time","cnt":4.076754212}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2938506598.0},{"name":"max-rss","cnt":289216.0},{"name":"task-clock","cnt":720.167223},{"name":"wall-time","cnt":0.685172003},{"name":"cpu-clock","cnt":720.064794},{"name":"faults","cnt":48135.0},{"name":"cycles:u","cnt":2464673347.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.198710047},{"name":"instructions:u","cnt":6931983005.0},{"name":"faults","cnt":54772.0},{"name":"cycles:u","cnt":6391850655.0},{"name":"cpu-clock","cnt":1749.801002},{"name":"task-clock","cnt":1749.882722},{"name":"max-rss","cnt":321808.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1536.967734},{"name":"task-clock","cnt":1536.968029},{"name":"faults","cnt":28769.0},{"name":"instructions:u","cnt":12107420350.0},{"name":"cycles:u","cnt":5988513501.0},{"name":"wall-time","cnt":1.5715513},{"name":"max-rss","cnt":179152.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1652.618521},{"name":"cycles:u","cnt":6430973128.0},{"name":"cpu-clock","cnt":1652.61776},{"name":"instructions:u","cnt":12851738412.0},{"name":"max-rss","cnt":191916.0},{"name":"wall-time","cnt":1.686928271},{"name":"faults","cnt":31550.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":133196.0},{"name":"cycles:u","cnt":538827251.0},{"name":"faults","cnt":13355.0},{"name":"cpu-clock","cnt":159.108877},{"name":"instructions:u","cnt":827983423.0},{"name":"task-clock","cnt":159.096531},{"name":"wall-time","cnt":0.191955538}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.651052064},{"name":"instructions:u","cnt":12716126827.0},{"name":"max-rss","cnt":200792.0},{"name":"faults","cnt":33567.0},{"name":"cpu-clock","cnt":1637.517167},{"name":"task-clock","cnt":1637.518161},{"name":"cycles:u","cnt":6367147146.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":57586.0},{"name":"wall-time","cnt":2.371135223},{"name":"cpu-clock","cnt":2560.59402},{"name":"cycles:u","cnt":9844602890.0},{"name":"instructions:u","cnt":16641005845.0},{"name":"max-rss","cnt":295896.0},{"name":"task-clock","cnt":2560.585667}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":311344.0},{"name":"task-clock","cnt":2773.033019},{"name":"cpu-clock","cnt":2773.022805},{"name":"instructions:u","cnt":17854715265.0},{"name":"cycles:u","cnt":10621453257.0},{"name":"faults","cnt":60918.0},{"name":"wall-time","cnt":2.503468749}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":159308.0},{"name":"task-clock","cnt":221.299791},{"name":"cycles:u","cnt":732750626.0},{"name":"cpu-clock","cnt":221.277129},{"name":"wall-time","cnt":0.245527197},{"name":"instructions:u","cnt":1149967108.0},{"name":"faults","cnt":18173.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2729.160024},{"name":"cpu-clock","cnt":2729.164792},{"name":"cycles:u","cnt":10445409770.0},{"name":"faults","cnt":63558.0},{"name":"instructions:u","cnt":17634713112.0},{"name":"wall-time","cnt":2.438931216},{"name":"max-rss","cnt":313240.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":51928647972.0},{"name":"cycles:u","cnt":32145789791.0},{"name":"wall-time","cnt":7.976055623},{"name":"cpu-clock","cnt":8219.217362},{"name":"faults","cnt":71391.0},{"name":"max-rss","cnt":346532.0},{"name":"task-clock","cnt":8219.23773}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":32821842473.0},{"name":"max-rss","cnt":346228.0},{"name":"instructions:u","cnt":52898084385.0},{"name":"faults","cnt":75703.0},{"name":"wall-time","cnt":8.087212822},{"name":"task-clock","cnt":8371.979222},{"name":"cpu-clock","cnt":8371.953805}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.237293728},{"name":"cpu-clock","cnt":211.952313},{"name":"instructions:u","cnt":1122043572.0},{"name":"task-clock","cnt":211.947061},{"name":"cycles:u","cnt":711468606.0},{"name":"max-rss","cnt":155836.0},{"name":"faults","cnt":17487.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":346928.0},{"name":"task-clock","cnt":7900.511249},{"name":"instructions:u","cnt":50555434633.0},{"name":"wall-time","cnt":7.880763953},{"name":"cpu-clock","cnt":7900.496907},{"name":"cycles:u","cnt":31098068595.0},{"name":"faults","cnt":74859.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":73.328674},{"name":"task-clock","cnt":73.32916},{"name":"faults","cnt":6131.0},{"name":"wall-time","cnt":0.091386146},{"name":"cycles:u","cnt":234039700.0},{"name":"instructions:u","cnt":346305684.0},{"name":"max-rss","cnt":115532.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":89.419252},{"name":"cpu-clock","cnt":89.441381},{"name":"faults","cnt":7911.0},{"name":"wall-time","cnt":0.107786352},{"name":"instructions:u","cnt":418361319.0},{"name":"cycles:u","cnt":288642592.0},{"name":"max-rss","cnt":124364.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":174176581.0},{"name":"wall-time","cnt":0.076142208},{"name":"faults","cnt":7577.0},{"name":"max-rss","cnt":109588.0},{"name":"instructions:u","cnt":257908536.0},{"name":"cpu-clock","cnt":59.491297},{"name":"task-clock","cnt":59.493242}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":8223.0},{"name":"cycles:u","cnt":264772036.0},{"name":"wall-time","cnt":0.100555905},{"name":"instructions:u","cnt":382542682.0},{"name":"max-rss","cnt":126132.0},{"name":"task-clock","cnt":83.510301},{"name":"cpu-clock","cnt":83.507677}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"cycles:u","cnt":272047589.0},{"name":"task-clock","cnt":85.68224},{"name":"cpu-clock","cnt":85.680465},{"name":"max-rss","cnt":126012.0},{"name":"instructions:u","cnt":381594353.0},{"name":"wall-time","cnt":0.102724067},{"name":"faults","cnt":8218.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":75.900699},{"name":"instructions:u","cnt":344218513.0},{"name":"wall-time","cnt":0.092809543},{"name":"cycles:u","cnt":234500127.0},{"name":"cpu-clock","cnt":75.897571},{"name":"max-rss","cnt":125876.0},{"name":"faults","cnt":8215.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":381660637.0},{"name":"cpu-clock","cnt":82.545965},{"name":"cycles:u","cnt":260616411.0},{"name":"wall-time","cnt":0.099594744},{"name":"task-clock","cnt":82.54817},{"name":"faults","cnt":8213.0},{"name":"max-rss","cnt":125632.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":266853399.0},{"name":"max-rss","cnt":126136.0},{"name":"task-clock","cnt":84.009467},{"name":"faults","cnt":8217.0},{"name":"cpu-clock","cnt":84.015845},{"name":"wall-time","cnt":0.101059725},{"name":"instructions:u","cnt":382983367.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":138072.0},{"name":"instructions:u","cnt":957187506.0},{"name":"cycles:u","cnt":811074752.0},{"name":"wall-time","cnt":0.148696549},{"name":"cpu-clock","cnt":236.426106},{"name":"task-clock","cnt":236.430333},{"name":"faults","cnt":9819.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":264.323761},{"name":"task-clock","cnt":264.313422},{"name":"faults","cnt":11749.0},{"name":"cycles:u","cnt":910175866.0},{"name":"max-rss","cnt":146656.0},{"name":"instructions:u","cnt":1085105312.0},{"name":"wall-time","cnt":0.170050674}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":225360718.0},{"name":"cpu-clock","cnt":79.352051},{"name":"instructions:u","cnt":320512221.0},{"name":"task-clock","cnt":79.369653},{"name":"wall-time","cnt":0.092207976},{"name":"max-rss","cnt":122012.0},{"name":"faults","cnt":8712.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":881801093.0},{"name":"faults","cnt":12237.0},{"name":"wall-time","cnt":0.161074795},{"name":"max-rss","cnt":148552.0},{"name":"task-clock","cnt":257.975283},{"name":"instructions:u","cnt":1028086936.0},{"name":"cpu-clock","cnt":257.944703}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"faults","cnt":12208.0},{"name":"cycles:u","cnt":814869742.0},{"name":"task-clock","cnt":240.701556},{"name":"max-rss","cnt":148664.0},{"name":"instructions:u","cnt":957241634.0},{"name":"cpu-clock","cnt":240.701993},{"name":"wall-time","cnt":0.152269017}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":229.479352},{"name":"max-rss","cnt":147844.0},{"name":"wall-time","cnt":0.142417517},{"name":"instructions:u","cnt":910713379.0},{"name":"faults","cnt":12080.0},{"name":"cycles:u","cnt":776531996.0},{"name":"task-clock","cnt":229.447586}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":241.657728},{"name":"max-rss","cnt":148300.0},{"name":"wall-time","cnt":0.1504954},{"name":"instructions:u","cnt":960350139.0},{"name":"faults","cnt":12093.0},{"name":"task-clock","cnt":241.646018},{"name":"cycles:u","cnt":823908460.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":965972566.0},{"name":"cpu-clock","cnt":244.059265},{"name":"max-rss","cnt":148740.0},{"name":"wall-time","cnt":0.152032025},{"name":"faults","cnt":12121.0},{"name":"cycles:u","cnt":830437287.0},{"name":"task-clock","cnt":244.064864}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"cycles:u","cnt":2346918067.0},{"name":"cpu-clock","cnt":639.65049},{"name":"max-rss","cnt":146084.0},{"name":"task-clock","cnt":639.664502},{"name":"faults","cnt":11695.0},{"name":"wall-time","cnt":0.268949521},{"name":"instructions:u","cnt":2300992280.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":13721.0},{"name":"max-rss","cnt":154304.0},{"name":"cpu-clock","cnt":682.273086},{"name":"task-clock","cnt":682.290048},{"name":"wall-time","cnt":0.294722137},{"name":"instructions:u","cnt":2436493648.0},{"name":"cycles:u","cnt":2495124528.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":322217751.0},{"name":"cpu-clock","cnt":77.589518},{"name":"wall-time","cnt":0.090946738},{"name":"cycles:u","cnt":227037717.0},{"name":"task-clock","cnt":77.595827},{"name":"faults","cnt":8738.0},{"name":"max-rss","cnt":120968.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":649.452228},{"name":"wall-time","cnt":0.295101707},{"name":"task-clock","cnt":649.442805},{"name":"faults","cnt":13990.0},{"name":"instructions:u","cnt":2361125155.0},{"name":"cycles:u","cnt":2377200222.0},{"name":"max-rss","cnt":155904.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":1427374591.0},{"name":"task-clock","cnt":397.579587},{"name":"max-rss","cnt":152312.0},{"name":"faults","cnt":13079.0},{"name":"cycles:u","cnt":1405307496.0},{"name":"wall-time","cnt":0.189361954},{"name":"cpu-clock","cnt":397.58573}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":367.18001},{"name":"max-rss","cnt":151656.0},{"name":"instructions:u","cnt":1325397326.0},{"name":"cycles:u","cnt":1290967293.0},{"name":"faults","cnt":13019.0},{"name":"cpu-clock","cnt":367.150848},{"name":"wall-time","cnt":0.178310387}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":374.355204},{"name":"max-rss","cnt":151852.0},{"name":"cpu-clock","cnt":374.340903},{"name":"faults","cnt":13012.0},{"name":"wall-time","cnt":0.189435474},{"name":"cycles:u","cnt":1313933040.0},{"name":"instructions:u","cnt":1357137089.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":152228.0},{"name":"faults","cnt":13019.0},{"name":"cpu-clock","cnt":374.261572},{"name":"task-clock","cnt":374.273394},{"name":"instructions:u","cnt":1367377030.0},{"name":"cycles:u","cnt":1318203692.0},{"name":"wall-time","cnt":0.188876582}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":40664083833.0},{"name":"max-rss","cnt":501508.0},{"name":"cycles:u","cnt":20648695169.0},{"name":"wall-time","cnt":5.356172435},{"name":"faults","cnt":140904.0},{"name":"cpu-clock","cnt":5337.694539},{"name":"task-clock","cnt":5337.692829}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":147200.0},{"name":"wall-time","cnt":5.700817143},{"name":"max-rss","cnt":523500.0},{"name":"cycles:u","cnt":22014433374.0},{"name":"task-clock","cnt":5666.137806},{"name":"instructions:u","cnt":43104165469.0},{"name":"cpu-clock","cnt":5666.138027}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":34003.0},{"name":"wall-time","cnt":0.478831497},{"name":"cpu-clock","cnt":461.584251},{"name":"task-clock","cnt":461.585563},{"name":"max-rss","cnt":201636.0},{"name":"instructions:u","cnt":2009638153.0},{"name":"cycles:u","cnt":1653053873.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":7519.050026},{"name":"max-rss","cnt":1230536.0},{"name":"wall-time","cnt":7.512947948},{"name":"faults","cnt":334121.0},{"name":"instructions:u","cnt":51478287105.0},{"name":"cycles:u","cnt":28759888520.0},{"name":"cpu-clock","cnt":7519.038721}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":337546.0},{"name":"wall-time","cnt":7.926107685},{"name":"task-clock","cnt":7963.152222},{"name":"instructions:u","cnt":54779678721.0},{"name":"cycles:u","cnt":30407401239.0},{"name":"max-rss","cnt":1248384.0},{"name":"cpu-clock","cnt":7963.159617}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":42460.0},{"name":"max-rss","cnt":240460.0},{"name":"wall-time","cnt":0.58046873},{"name":"instructions:u","cnt":2718364882.0},{"name":"cpu-clock","cnt":564.226359},{"name":"cycles:u","cnt":2004944439.0},{"name":"task-clock","cnt":564.219364}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":25963588789.0},{"name":"max-rss","cnt":1017788.0},{"name":"instructions:u","cnt":51900157350.0},{"name":"task-clock","cnt":6768.930877},{"name":"cpu-clock","cnt":6768.933256},{"name":"faults","cnt":280063.0},{"name":"wall-time","cnt":6.768569924}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1043172.0},{"name":"instructions:u","cnt":55105031607.0},{"name":"wall-time","cnt":7.244613617},{"name":"task-clock","cnt":7273.951686},{"name":"cycles:u","cnt":27941639696.0},{"name":"cpu-clock","cnt":7273.971085},{"name":"faults","cnt":285595.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2664747215.0},{"name":"cycles:u","cnt":1988355207.0},{"name":"cpu-clock","cnt":556.061921},{"name":"faults","cnt":43594.0},{"name":"wall-time","cnt":0.574306566},{"name":"task-clock","cnt":556.042381},{"name":"max-rss","cnt":242984.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmp0RAmzB)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x55fa428f13bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x55fa428f1552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x55fa428f086c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x55fa4288c470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x55fa4257aafa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x55fa42582722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x55fa42594541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x55fa425a3a1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x55fa4259996e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x55fa4254de22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x55fa429180d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x55fa42922d39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x55fa42918c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x55fa425a7d57 - main\n  14:     0x7fcb65f2282f - __libc_start_main\n  15:     0x55fa42543518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":1841.275459},{"name":"max-rss","cnt":202280.0},{"name":"faults","cnt":26716.0},{"name":"cycles:u","cnt":7175099339.0},{"name":"instructions:u","cnt":8656009899.0},{"name":"cpu-clock","cnt":1841.291755},{"name":"wall-time","cnt":1.878936442}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":258648.0},{"name":"wall-time","cnt":2.294022166},{"name":"task-clock","cnt":2258.030183},{"name":"cycles:u","cnt":8770406498.0},{"name":"cpu-clock","cnt":2258.028172},{"name":"instructions:u","cnt":10654849636.0},{"name":"faults","cnt":40509.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":491.772524},{"name":"instructions:u","cnt":2177752600.0},{"name":"cycles:u","cnt":1728602614.0},{"name":"cpu-clock","cnt":491.762037},{"name":"max-rss","cnt":238448.0},{"name":"faults","cnt":37136.0},{"name":"wall-time","cnt":0.497174857}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1828187504.0},{"name":"task-clock","cnt":514.419683},{"name":"max-rss","cnt":247368.0},{"name":"faults","cnt":37598.0},{"name":"wall-time","cnt":0.5047396},{"name":"instructions:u","cnt":2269539120.0},{"name":"cpu-clock","cnt":514.419211}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":36631942450.0},{"name":"faults","cnt":101426.0},{"name":"cycles:u","cnt":35634509769.0},{"name":"max-rss","cnt":503524.0},{"name":"wall-time","cnt":4.027832843},{"name":"task-clock","cnt":9432.337531},{"name":"cpu-clock","cnt":9432.34995}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":10482.130796},{"name":"wall-time","cnt":4.706756244},{"name":"cycles:u","cnt":39576385817.0},{"name":"max-rss","cnt":505024.0},{"name":"faults","cnt":101143.0},{"name":"task-clock","cnt":10482.147626},{"name":"instructions:u","cnt":40995546433.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":62889.0},{"name":"instructions:u","cnt":3943343100.0},{"name":"cycles:u","cnt":3164289476.0},{"name":"cpu-clock","cnt":919.217591},{"name":"task-clock","cnt":919.308739},{"name":"wall-time","cnt":0.889113237},{"name":"max-rss","cnt":381016.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":992.766074},{"name":"instructions:u","cnt":4241837873.0},{"name":"wall-time","cnt":0.92913335},{"name":"faults","cnt":64191.0},{"name":"max-rss","cnt":392204.0},{"name":"task-clock","cnt":992.861506},{"name":"cycles:u","cnt":3443852246.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":434008.0},{"name":"wall-time","cnt":7.956754296},{"name":"cycles:u","cnt":148126153722.0},{"name":"cpu-clock","cnt":39142.140348},{"name":"task-clock","cnt":39142.104826},{"name":"faults","cnt":86544.0},{"name":"instructions:u","cnt":120453755887.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":108165.0},{"name":"max-rss","cnt":501028.0},{"name":"cycles:u","cnt":162167617697.0},{"name":"task-clock","cnt":42980.899386},{"name":"wall-time","cnt":8.260380553},{"name":"cpu-clock","cnt":42981.035255},{"name":"instructions:u","cnt":128426526564.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":64627.0},{"name":"task-clock","cnt":937.003856},{"name":"cpu-clock","cnt":936.92203},{"name":"cycles:u","cnt":3282682950.0},{"name":"wall-time","cnt":0.89291995},{"name":"instructions:u","cnt":4043094137.0},{"name":"max-rss","cnt":362200.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":380440.0},{"name":"cycles:u","cnt":5178361922.0},{"name":"faults","cnt":67349.0},{"name":"cpu-clock","cnt":1419.298436},{"name":"wall-time","cnt":1.297134508},{"name":"task-clock","cnt":1419.391782},{"name":"instructions:u","cnt":6245870684.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":922.173167},{"name":"instructions:u","cnt":3958840871.0},{"name":"max-rss","cnt":170240.0},{"name":"wall-time","cnt":0.951552352},{"name":"task-clock","cnt":922.173712},{"name":"cycles:u","cnt":3557385442.0},{"name":"faults","cnt":19019.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.255033772},{"name":"cycles:u","cnt":4533649277.0},{"name":"faults","cnt":29896.0},{"name":"max-rss","cnt":215116.0},{"name":"task-clock","cnt":1181.559193},{"name":"cpu-clock","cnt":1181.557775},{"name":"instructions:u","cnt":5068057072.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":324.598335},{"name":"wall-time","cnt":0.323182065},{"name":"cycles:u","cnt":1137675899.0},{"name":"max-rss","cnt":193772.0},{"name":"instructions:u","cnt":1501228726.0},{"name":"faults","cnt":26299.0},{"name":"cpu-clock","cnt":324.597317}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.529721955},{"name":"task-clock","cnt":507.412124},{"name":"cycles:u","cnt":1856033715.0},{"name":"instructions:u","cnt":2254469829.0},{"name":"cpu-clock","cnt":507.410863},{"name":"faults","cnt":29982.0},{"name":"max-rss","cnt":215844.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"task-clock","cnt":338.38809},{"name":"wall-time","cnt":0.336433301},{"name":"cycles:u","cnt":1180088979.0},{"name":"instructions:u","cnt":1553095150.0},{"name":"cpu-clock","cnt":338.386959},{"name":"faults","cnt":26745.0},{"name":"max-rss","cnt":202664.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cpu-clock","cnt":348.492985},{"name":"task-clock","cnt":348.493346},{"name":"wall-time","cnt":0.366441974},{"name":"max-rss","cnt":204344.0},{"name":"instructions:u","cnt":1600316189.0},{"name":"faults","cnt":27063.0},{"name":"cycles:u","cnt":1223585109.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"max-rss","cnt":215892.0},{"name":"cpu-clock","cnt":511.986176},{"name":"task-clock","cnt":511.987514},{"name":"faults","cnt":29991.0},{"name":"wall-time","cnt":0.512354986},{"name":"instructions:u","cnt":2275736889.0},{"name":"cycles:u","cnt":1870232390.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":2274553829.0},{"name":"wall-time","cnt":0.531484544},{"name":"faults","cnt":29991.0},{"name":"cpu-clock","cnt":511.824677},{"name":"cycles:u","cnt":1860975162.0},{"name":"task-clock","cnt":511.826143},{"name":"max-rss","cnt":215996.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cycles:u","cnt":1154712093.0},{"name":"cpu-clock","cnt":330.339526},{"name":"wall-time","cnt":0.330858245},{"name":"faults","cnt":26731.0},{"name":"task-clock","cnt":330.341025},{"name":"max-rss","cnt":202016.0},{"name":"instructions:u","cnt":1538349147.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"task-clock","cnt":442.509418},{"name":"cpu-clock","cnt":442.524057},{"name":"wall-time","cnt":0.47713355},{"name":"cycles:u","cnt":1594694163.0},{"name":"faults","cnt":29530.0},{"name":"instructions:u","cnt":1981017756.0},{"name":"max-rss","cnt":213792.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"wall-time","cnt":0.383968585},{"name":"cpu-clock","cnt":384.10558},{"name":"max-rss","cnt":204856.0},{"name":"task-clock","cnt":384.105741},{"name":"faults","cnt":27254.0},{"name":"cycles:u","cnt":1364360529.0},{"name":"instructions:u","cnt":1724465884.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cpu-clock","cnt":397.33162},{"name":"task-clock","cnt":397.332498},{"name":"cycles:u","cnt":1420012265.0},{"name":"instructions:u","cnt":1774932343.0},{"name":"max-rss","cnt":213304.0},{"name":"wall-time","cnt":0.432133068},{"name":"faults","cnt":29425.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"task-clock","cnt":7266.638862},{"name":"max-rss","cnt":401344.0},{"name":"cycles:u","cnt":27186067857.0},{"name":"wall-time","cnt":2.206847283},{"name":"instructions:u","cnt":22842152916.0},{"name":"cpu-clock","cnt":7266.651026},{"name":"faults","cnt":76365.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7786.02186},{"name":"cpu-clock","cnt":7786.079108},{"name":"cycles:u","cnt":29145770590.0},{"name":"faults","cnt":78342.0},{"name":"wall-time","cnt":2.638299963},{"name":"instructions:u","cnt":25706974773.0},{"name":"max-rss","cnt":414448.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":41717.0},{"name":"cycles:u","cnt":1854159540.0},{"name":"cpu-clock","cnt":552.908223},{"name":"wall-time","cnt":0.528712576},{"name":"instructions:u","cnt":2258150358.0},{"name":"task-clock","cnt":552.952816},{"name":"max-rss","cnt":275316.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":6863558644.0},{"name":"task-clock","cnt":1724.031242},{"name":"cycles:u","cnt":6264515052.0},{"name":"wall-time","cnt":0.982183834},{"name":"faults","cnt":55708.0},{"name":"max-rss","cnt":333708.0},{"name":"cpu-clock","cnt":1723.976837}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"instructions:u","cnt":2343331151.0},{"name":"max-rss","cnt":283556.0},{"name":"cpu-clock","cnt":568.120435},{"name":"cycles:u","cnt":1901898788.0},{"name":"faults","cnt":42093.0},{"name":"task-clock","cnt":568.224535},{"name":"wall-time","cnt":0.531974161}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cycles:u","cnt":2565930092.0},{"name":"cpu-clock","cnt":740.970241},{"name":"faults","cnt":45006.0},{"name":"wall-time","cnt":0.634801038},{"name":"max-rss","cnt":294492.0},{"name":"task-clock","cnt":741.032502},{"name":"instructions:u","cnt":3075428618.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"instructions:u","cnt":6897255838.0},{"name":"max-rss","cnt":333328.0},{"name":"faults","cnt":55505.0},{"name":"cpu-clock","cnt":1712.868331},{"name":"task-clock","cnt":1712.922093},{"name":"cycles:u","cnt":6241963355.0},{"name":"wall-time","cnt":0.988588631}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"max-rss","cnt":336232.0},{"name":"cpu-clock","cnt":1720.938695},{"name":"instructions:u","cnt":6892577984.0},{"name":"wall-time","cnt":0.975447519},{"name":"cycles:u","cnt":6262840872.0},{"name":"task-clock","cnt":1720.992182},{"name":"faults","cnt":56377.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"cpu-clock","cnt":548.30542},{"name":"max-rss","cnt":278320.0},{"name":"cycles:u","cnt":1840313641.0},{"name":"wall-time","cnt":0.523463034},{"name":"task-clock","cnt":548.40314},{"name":"faults","cnt":41995.0},{"name":"instructions:u","cnt":2286503431.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"cycles:u","cnt":20273192483.0},{"name":"faults","cnt":81683.0},{"name":"task-clock","cnt":5482.067584},{"name":"instructions:u","cnt":17600827556.0},{"name":"max-rss","cnt":430696.0},{"name":"cpu-clock","cnt":5482.056782},{"name":"wall-time","cnt":1.502525278}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"max-rss","cnt":429320.0},{"name":"cycles:u","cnt":19394389204.0},{"name":"faults","cnt":81621.0},{"name":"instructions:u","cnt":16939668545.0},{"name":"task-clock","cnt":5247.295723},{"name":"cpu-clock","cnt":5247.305171},{"name":"wall-time","cnt":1.409280318}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":47798.0},{"name":"max-rss","cnt":306020.0},{"name":"cpu-clock","cnt":866.863665},{"name":"task-clock","cnt":866.948068},{"name":"instructions:u","cnt":3687034544.0},{"name":"cycles:u","cnt":3033071117.0},{"name":"wall-time","cnt":0.661303059}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"max-rss","cnt":349704.0},{"name":"wall-time","cnt":4.532336063},{"name":"task-clock","cnt":21999.032374},{"name":"cpu-clock","cnt":21999.065507},{"name":"faults","cnt":63510.0},{"name":"instructions:u","cnt":66231198687.0},{"name":"cycles:u","cnt":83151996324.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":75220.0},{"name":"task-clock","cnt":24275.611295},{"name":"cycles:u","cnt":91571785765.0},{"name":"max-rss","cnt":394312.0},{"name":"wall-time","cnt":4.94994523},{"name":"instructions:u","cnt":71787294472.0},{"name":"cpu-clock","cnt":24275.671762}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.506236179},{"name":"cpu-clock","cnt":536.456585},{"name":"faults","cnt":41262.0},{"name":"task-clock","cnt":536.509305},{"name":"instructions:u","cnt":2285687750.0},{"name":"max-rss","cnt":261452.0},{"name":"cycles:u","cnt":1835795150.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":51982328356.0},{"name":"cpu-clock","cnt":13821.471176},{"name":"instructions:u","cnt":41866479545.0},{"name":"task-clock","cnt":13821.443854},{"name":"max-rss","cnt":393988.0},{"name":"faults","cnt":74846.0},{"name":"wall-time","cnt":2.962138956}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"cpu-clock","cnt":603.893171},{"name":"wall-time","cnt":0.522376694},{"name":"task-clock","cnt":603.955217},{"name":"faults","cnt":42263.0},{"name":"cycles:u","cnt":2083879446.0},{"name":"max-rss","cnt":274200.0},{"name":"instructions:u","cnt":2572487007.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cpu-clock","cnt":619.254462},{"name":"max-rss","cnt":274500.0},{"name":"faults","cnt":42338.0},{"name":"instructions:u","cnt":2614461919.0},{"name":"wall-time","cnt":0.55817423},{"name":"cycles:u","cnt":2146416380.0},{"name":"task-clock","cnt":619.31673}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"task-clock","cnt":13836.73382},{"name":"wall-time","cnt":2.953085873},{"name":"instructions:u","cnt":41904605473.0},{"name":"cycles:u","cnt":52006811474.0},{"name":"cpu-clock","cnt":13836.772732},{"name":"max-rss","cnt":394172.0},{"name":"faults","cnt":74739.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"cpu-clock","cnt":13869.289788},{"name":"max-rss","cnt":394284.0},{"name":"faults","cnt":74986.0},{"name":"task-clock","cnt":13869.258019},{"name":"instructions:u","cnt":41898748109.0},{"name":"cycles:u","cnt":52189812675.0},{"name":"wall-time","cnt":2.969037765}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"task-clock","cnt":541.57907},{"name":"instructions:u","cnt":2310522418.0},{"name":"cycles:u","cnt":1859813166.0},{"name":"faults","cnt":41491.0},{"name":"cpu-clock","cnt":541.546206},{"name":"wall-time","cnt":0.510668043},{"name":"max-rss","cnt":264440.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"cpu-clock","cnt":18980.250525},{"name":"faults","cnt":77101.0},{"name":"task-clock","cnt":18980.181384},{"name":"max-rss","cnt":404648.0},{"name":"instructions:u","cnt":58106048143.0},{"name":"cycles:u","cnt":71470958133.0},{"name":"wall-time","cnt":3.572344622}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"cpu-clock","cnt":19054.871054},{"name":"wall-time","cnt":3.504401945},{"name":"cycles:u","cnt":71709579034.0},{"name":"task-clock","cnt":19054.832625},{"name":"faults","cnt":76714.0},{"name":"instructions:u","cnt":57869974320.0},{"name":"max-rss","cnt":404440.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"max-rss","cnt":328968.0},{"name":"task-clock","cnt":2566.525581},{"name":"instructions:u","cnt":12849830600.0},{"name":"cycles:u","cnt":9730087368.0},{"name":"cpu-clock","cnt":2566.479536},{"name":"faults","cnt":56605.0},{"name":"wall-time","cnt":1.907466661}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.256850121},{"name":"faults","cnt":8030.0},{"name":"task-clock","cnt":238.691001},{"name":"instructions:u","cnt":1222060088.0},{"name":"max-rss","cnt":126448.0},{"name":"cycles:u","cnt":885540640.0},{"name":"cpu-clock","cnt":238.689474}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1101513429.0},{"name":"wall-time","cnt":0.31465574},{"name":"instructions:u","cnt":1489590725.0},{"name":"faults","cnt":11210.0},{"name":"cpu-clock","cnt":296.649417},{"name":"task-clock","cnt":296.651117},{"name":"max-rss","cnt":139732.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":86.925237},{"name":"max-rss","cnt":122984.0},{"name":"faults","cnt":10674.0},{"name":"instructions:u","cnt":398964707.0},{"name":"cpu-clock","cnt":86.922978},{"name":"cycles:u","cnt":268690228.0},{"name":"wall-time","cnt":0.101011543}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":514605874.0},{"name":"cycles:u","cnt":364392412.0},{"name":"max-rss","cnt":140204.0},{"name":"cpu-clock","cnt":112.654776},{"name":"task-clock","cnt":112.656855},{"name":"wall-time","cnt":0.12633128},{"name":"faults","cnt":11322.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7612866461.0},{"name":"cpu-clock","cnt":1894.042369},{"name":"faults","cnt":27743.0},{"name":"task-clock","cnt":1894.038972},{"name":"max-rss","cnt":213384.0},{"name":"wall-time","cnt":0.873301173},{"name":"cycles:u","cnt":7091218020.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":8489696437.0},{"name":"cpu-clock","cnt":2072.885085},{"name":"wall-time","cnt":1.016048518},{"name":"task-clock","cnt":2072.876742},{"name":"faults","cnt":32554.0},{"name":"max-rss","cnt":233300.0},{"name":"cycles:u","cnt":7737772847.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":17451.0},{"name":"cycles:u","cnt":657302433.0},{"name":"cpu-clock","cnt":204.303549},{"name":"instructions:u","cnt":852201444.0},{"name":"task-clock","cnt":204.314787},{"name":"max-rss","cnt":167396.0},{"name":"wall-time","cnt":0.226260117}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":189344.0},{"name":"instructions:u","cnt":1060031934.0},{"name":"wall-time","cnt":0.239948624},{"name":"cpu-clock","cnt":254.637247},{"name":"task-clock","cnt":254.652208},{"name":"faults","cnt":19663.0},{"name":"cycles:u","cnt":838002905.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":26219332200.0},{"name":"faults","cnt":28716.0},{"name":"wall-time","cnt":2.63680346},{"name":"instructions:u","cnt":24651320950.0},{"name":"cpu-clock","cnt":6877.055122},{"name":"max-rss","cnt":214184.0},{"name":"task-clock","cnt":6877.013855}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":25809744804.0},{"name":"wall-time","cnt":2.742747279},{"name":"cycles:u","cnt":27859851789.0},{"name":"faults","cnt":34928.0},{"name":"max-rss","cnt":234588.0},{"name":"cpu-clock","cnt":7320.997192},{"name":"task-clock","cnt":7320.997353}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":673320501.0},{"name":"task-clock","cnt":205.989376},{"name":"faults","cnt":18583.0},{"name":"max-rss","cnt":164064.0},{"name":"instructions:u","cnt":858337488.0},{"name":"wall-time","cnt":0.22174698},{"name":"cpu-clock","cnt":205.962293}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":9926904110.0},{"name":"task-clock","cnt":2473.149719},{"name":"max-rss","cnt":222300.0},{"name":"wall-time","cnt":1.376098208},{"name":"cycles:u","cnt":9391047337.0},{"name":"cpu-clock","cnt":2473.126588},{"name":"faults","cnt":30221.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":759.76632},{"name":"faults","cnt":17527.0},{"name":"cpu-clock","cnt":759.764589},{"name":"wall-time","cnt":0.797329163},{"name":"max-rss","cnt":166588.0},{"name":"cycles:u","cnt":2915847202.0},{"name":"instructions:u","cnt":3473177612.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":982.837345},{"name":"cpu-clock","cnt":982.835952},{"name":"faults","cnt":27004.0},{"name":"max-rss","cnt":206448.0},{"name":"cycles:u","cnt":3758321384.0},{"name":"instructions:u","cnt":4459946699.0},{"name":"wall-time","cnt":1.020645572}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":243.022851},{"name":"task-clock","cnt":243.02458},{"name":"faults","cnt":23695.0},{"name":"instructions:u","cnt":1159859356.0},{"name":"wall-time","cnt":0.24439201},{"name":"max-rss","cnt":184928.0},{"name":"cycles:u","cnt":820574141.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":979094000.0},{"name":"task-clock","cnt":282.785044},{"name":"faults","cnt":25076.0},{"name":"wall-time","cnt":0.312277128},{"name":"max-rss","cnt":198872.0},{"name":"instructions:u","cnt":1346919455.0},{"name":"cpu-clock","cnt":282.782865}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.070687862},{"name":"task-clock","cnt":5407.767454},{"name":"cpu-clock","cnt":5407.770401},{"name":"max-rss","cnt":331668.0},{"name":"faults","cnt":105172.0},{"name":"cycles:u","cnt":19721170091.0},{"name":"instructions:u","cnt":21145180643.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":6245.419177},{"name":"instructions:u","cnt":24678208092.0},{"name":"max-rss","cnt":373516.0},{"name":"cpu-clock","cnt":6245.460271},{"name":"wall-time","cnt":3.548849011},{"name":"cycles:u","cnt":22702524292.0},{"name":"faults","cnt":118441.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":283188.0},{"name":"cycles:u","cnt":5061775612.0},{"name":"wall-time","cnt":1.585892116},{"name":"instructions:u","cnt":6430351558.0},{"name":"cpu-clock","cnt":1617.140349},{"name":"faults","cnt":92963.0},{"name":"task-clock","cnt":1617.213276}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":6606023610.0},{"name":"faults","cnt":93469.0},{"name":"max-rss","cnt":290124.0},{"name":"cycles:u","cnt":5317815356.0},{"name":"task-clock","cnt":1670.023459},{"name":"wall-time","cnt":1.627424136},{"name":"cpu-clock","cnt":1669.959668}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":7.862582629},{"name":"cpu-clock","cnt":41311.061953},{"name":"instructions:u","cnt":122474444727.0},{"name":"max-rss","cnt":640236.0},{"name":"faults","cnt":184213.0},{"name":"task-clock","cnt":41311.007757},{"name":"cycles:u","cnt":155166146157.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":186236.0},{"name":"wall-time","cnt":8.289587697},{"name":"cycles:u","cnt":170448190331.0},{"name":"task-clock","cnt":45466.463011},{"name":"instructions:u","cnt":133297690744.0},{"name":"cpu-clock","cnt":45466.531895},{"name":"max-rss","cnt":635212.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":90780.0},{"name":"cpu-clock","cnt":1327.524586},{"name":"task-clock","cnt":1327.630745},{"name":"wall-time","cnt":1.274358676},{"name":"max-rss","cnt":302312.0},{"name":"instructions:u","cnt":6780431170.0},{"name":"cycles:u","cnt":4337767033.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":7304754971.0},{"name":"cpu-clock","cnt":2108.603144},{"name":"faults","cnt":99427.0},{"name":"wall-time","cnt":1.775730776},{"name":"task-clock","cnt":2108.720934},{"name":"max-rss","cnt":355100.0},{"name":"instructions:u","cnt":10307993642.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":189536360860.0},{"name":"max-rss","cnt":2428252.0},{"name":"cycles:u","cnt":172062671962.0},{"name":"wall-time","cnt":44.473692095},{"name":"cpu-clock","cnt":44432.484122},{"name":"faults","cnt":708585.0},{"name":"task-clock","cnt":44432.458084}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":3887544.0},{"name":"cpu-clock","cnt":56051.162164},{"name":"faults","cnt":1115162.0},{"name":"task-clock","cnt":56051.11966},{"name":"instructions:u","cnt":245485260397.0},{"name":"cycles:u","cnt":216056171609.0},{"name":"wall-time","cnt":56.093890311}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":19.92427795},{"name":"instructions:u","cnt":88583521045.0},{"name":"faults","cnt":1054793.0},{"name":"max-rss","cnt":4232144.0},{"name":"cpu-clock","cnt":20646.996369},{"name":"cycles:u","cnt":75591123871.0},{"name":"task-clock","cnt":20646.994077}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":88767220786.0},{"name":"wall-time","cnt":19.918156876},{"name":"faults","cnt":1055071.0},{"name":"task-clock","cnt":20661.284696},{"name":"max-rss","cnt":4170452.0},{"name":"cpu-clock","cnt":20661.287728},{"name":"cycles:u","cnt":77289361752.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"wall-time","cnt":21.685456997},{"name":"cpu-clock","cnt":20999.402657},{"name":"max-rss","cnt":4229876.0},{"name":"faults","cnt":1056150.0},{"name":"cycles:u","cnt":78716963194.0},{"name":"task-clock","cnt":20999.405496},{"name":"instructions:u","cnt":91550315404.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"max-rss","cnt":4805088.0},{"name":"cpu-clock","cnt":44062.355226},{"name":"wall-time","cnt":43.317192061},{"name":"cycles:u","cnt":166945594739.0},{"name":"task-clock","cnt":44062.356648},{"name":"instructions:u","cnt":188013202007.0},{"name":"faults","cnt":1326203.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"wall-time","cnt":90.831251494},{"name":"cycles:u","cnt":809890186327.0},{"name":"task-clock","cnt":214348.026803},{"name":"faults","cnt":2150534.0},{"name":"cpu-clock","cnt":214348.18886},{"name":"instructions:u","cnt":773041832633.0},{"name":"max-rss","cnt":6395840.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1495888587604.0},{"name":"cpu-clock","cnt":394971.303618},{"name":"instructions:u","cnt":1699789029716.0},{"name":"max-rss","cnt":8573464.0},{"name":"wall-time","cnt":190.859185205},{"name":"faults","cnt":3046353.0},{"name":"task-clock","cnt":394970.388662}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":104319792119.0},{"name":"max-rss","cnt":9130160.0},{"name":"cpu-clock","cnt":30412.865869},{"name":"wall-time","cnt":42.701733428},{"name":"task-clock","cnt":30414.945644},{"name":"instructions:u","cnt":119567772538.0},{"name":"faults","cnt":1505590.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":122372091647.0},{"name":"wall-time","cnt":42.187572144},{"name":"instructions:u","cnt":138952275092.0},{"name":"task-clock","cnt":35260.655194},{"name":"faults","cnt":1535764.0},{"name":"max-rss","cnt":8966776.0},{"name":"cpu-clock","cnt":35259.275286}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"cpu-clock","cnt":31906.714404},{"name":"faults","cnt":1497162.0},{"name":"cycles:u","cnt":112059430187.0},{"name":"max-rss","cnt":8200636.0},{"name":"task-clock","cnt":31909.189642},{"name":"instructions:u","cnt":126699097203.0},{"name":"wall-time","cnt":44.747303922}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":1499470144683.0},{"name":"cpu-clock","cnt":343189.984219},{"name":"faults","cnt":3165363.0},{"name":"cycles:u","cnt":1291365119110.0},{"name":"max-rss","cnt":9461060.0},{"name":"task-clock","cnt":343189.783369},{"name":"wall-time","cnt":161.451694658}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"cpu-clock","cnt":787873.001908},{"name":"instructions:u","cnt":2244402503476.0},{"name":"cycles:u","cnt":2976003646206.0},{"name":"task-clock","cnt":787872.650281},{"name":"max-rss","cnt":4263352.0},{"name":"wall-time","cnt":184.121306042},{"name":"faults","cnt":2550256.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":213.138085606},{"name":"instructions:u","cnt":3223993753175.0},{"name":"cpu-clock","cnt":1108053.748058},{"name":"faults","cnt":3309090.0},{"name":"max-rss","cnt":5412304.0},{"name":"cycles:u","cnt":4166339682895.0},{"name":"task-clock","cnt":1108052.148454}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":28185.42877},{"name":"task-clock","cnt":28186.365756},{"name":"max-rss","cnt":5794600.0},{"name":"faults","cnt":1415121.0},{"name":"wall-time","cnt":26.193505654},{"name":"cycles:u","cnt":101895048135.0},{"name":"instructions:u","cnt":113451923928.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":85.043999961},{"name":"cycles:u","cnt":1493015291450.0},{"name":"max-rss","cnt":7261576.0},{"name":"cpu-clock","cnt":398330.652005},{"name":"instructions:u","cnt":1148648293219.0},{"name":"task-clock","cnt":398330.563255},{"name":"faults","cnt":2197179.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"task-clock","cnt":109370.612187},{"name":"instructions:u","cnt":420371323211.0},{"name":"cpu-clock","cnt":109370.119882},{"name":"faults","cnt":1758776.0},{"name":"max-rss","cnt":6599536.0},{"name":"cycles:u","cnt":415053916293.0},{"name":"wall-time","cnt":68.225861918}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"max-rss","cnt":6665372.0},{"name":"instructions:u","cnt":3117304730352.0},{"name":"faults","cnt":3518597.0},{"name":"task-clock","cnt":1082588.82053},{"name":"cycles:u","cnt":4065202798564.0},{"name":"wall-time","cnt":197.271050608},{"name":"cpu-clock","cnt":1082590.761013}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":2335.156858},{"name":"instructions:u","cnt":11384503493.0},{"name":"max-rss","cnt":250028.0},{"name":"task-clock","cnt":2335.157729},{"name":"wall-time","cnt":2.353230195},{"name":"faults","cnt":35140.0},{"name":"cycles:u","cnt":9106886992.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":53999.0},{"name":"instructions:u","cnt":14367314294.0},{"name":"cpu-clock","cnt":2901.356974},{"name":"task-clock","cnt":2901.358162},{"name":"wall-time","cnt":2.91976174},{"name":"max-rss","cnt":325788.0},{"name":"cycles:u","cnt":11265738492.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.70780795},{"name":"task-clock","cnt":722.538817},{"name":"max-rss","cnt":296072.0},{"name":"instructions:u","cnt":3603073010.0},{"name":"cycles:u","cnt":2608605690.0},{"name":"cpu-clock","cnt":722.540007},{"name":"faults","cnt":47818.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":904.218253},{"name":"max-rss","cnt":312760.0},{"name":"faults","cnt":50215.0},{"name":"wall-time","cnt":0.890016627},{"name":"cpu-clock","cnt":904.21803},{"name":"instructions:u","cnt":4307232586.0},{"name":"cycles:u","cnt":3329634640.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":334587.0},{"name":"cpu-clock","cnt":14233.955664},{"name":"max-rss","cnt":955536.0},{"name":"wall-time","cnt":10.442374689},{"name":"instructions:u","cnt":61390345755.0},{"name":"cycles:u","cnt":53197685889.0},{"name":"task-clock","cnt":14233.982128}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":18788.908732},{"name":"wall-time","cnt":9.602602425},{"name":"cycles:u","cnt":69126184669.0},{"name":"faults","cnt":291725.0},{"name":"instructions:u","cnt":71412652089.0},{"name":"task-clock","cnt":18788.846366},{"name":"max-rss","cnt":711756.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":3.763403482},{"name":"cycles:u","cnt":12672638492.0},{"name":"instructions:u","cnt":14458982423.0},{"name":"cpu-clock","cnt":3840.443823},{"name":"faults","cnt":220803.0},{"name":"max-rss","cnt":497056.0},{"name":"task-clock","cnt":3840.595373}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5232.249156},{"name":"max-rss","cnt":597768.0},{"name":"instructions:u","cnt":19558212190.0},{"name":"cpu-clock","cnt":5232.110016},{"name":"wall-time","cnt":4.357488486},{"name":"cycles:u","cnt":17815368479.0},{"name":"faults","cnt":246833.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":290245778319.0},{"name":"max-rss","cnt":773992.0},{"name":"wall-time","cnt":19.384790003},{"name":"cpu-clock","cnt":94355.024813},{"name":"task-clock","cnt":94354.976947},{"name":"cycles:u","cnt":356738062869.0},{"name":"faults","cnt":240170.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":105909.458594},{"name":"faults","cnt":243423.0},{"name":"cpu-clock","cnt":105909.645872},{"name":"instructions:u","cnt":315889316963.0},{"name":"wall-time","cnt":20.881799141},{"name":"max-rss","cnt":756572.0},{"name":"cycles:u","cnt":399481417480.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":153480.0},{"name":"max-rss","cnt":515076.0},{"name":"task-clock","cnt":2349.146462},{"name":"cpu-clock","cnt":2348.955177},{"name":"instructions:u","cnt":8956008824.0},{"name":"cycles:u","cnt":8020328265.0},{"name":"wall-time","cnt":2.222671935}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":226360.0},{"name":"instructions:u","cnt":174417086709.0},{"name":"cpu-clock","cnt":58615.282529},{"name":"wall-time","cnt":11.600330417},{"name":"cycles:u","cnt":220430541199.0},{"name":"task-clock","cnt":58615.192177},{"name":"max-rss","cnt":717068.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":255728.0},{"name":"wall-time","cnt":5.031500055},{"name":"task-clock","cnt":4999.538107},{"name":"cpu-clock","cnt":4999.548439},{"name":"instructions:u","cnt":29577844036.0},{"name":"cycles:u","cnt":19717455250.0},{"name":"faults","cnt":41518.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":65381.0},{"name":"max-rss","cnt":351768.0},{"name":"task-clock","cnt":5819.145187},{"name":"instructions:u","cnt":33432021279.0},{"name":"wall-time","cnt":5.853467318},{"name":"cycles:u","cnt":22854886307.0},{"name":"cpu-clock","cnt":5819.145191}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":334100.0},{"name":"task-clock","cnt":924.936011},{"name":"wall-time","cnt":0.912131216},{"name":"cycles:u","cnt":3366578355.0},{"name":"faults","cnt":63886.0},{"name":"cpu-clock","cnt":924.935096},{"name":"instructions:u","cnt":4217245945.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":32417187552.0},{"name":"cycles:u","cnt":21759395474.0},{"name":"task-clock","cnt":5536.030054},{"name":"wall-time","cnt":5.432799279},{"name":"cpu-clock","cnt":5536.026977},{"name":"max-rss","cnt":299924.0},{"name":"faults","cnt":50039.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":37315304788.0},{"name":"faults","cnt":78580.0},{"name":"cpu-clock","cnt":6564.294829},{"name":"wall-time","cnt":6.43150294},{"name":"cycles:u","cnt":25668694769.0},{"name":"task-clock","cnt":6564.262378},{"name":"max-rss","cnt":412028.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":73097.0},{"name":"task-clock","cnt":1081.405853},{"name":"max-rss","cnt":380712.0},{"name":"instructions:u","cnt":5143627916.0},{"name":"wall-time","cnt":1.061347806},{"name":"cycles:u","cnt":3859241281.0},{"name":"cpu-clock","cnt":1081.382969}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":5.443418015},{"name":"task-clock","cnt":5894.479441},{"name":"cycles:u","cnt":23066747025.0},{"name":"instructions:u","cnt":33327454256.0},{"name":"cpu-clock","cnt":5894.45232},{"name":"max-rss","cnt":305440.0},{"name":"faults","cnt":51281.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":6955.007524},{"name":"max-rss","cnt":418600.0},{"name":"task-clock","cnt":6955.009422},{"name":"wall-time","cnt":6.455012365},{"name":"cycles:u","cnt":27131889961.0},{"name":"instructions:u","cnt":38239002479.0},{"name":"faults","cnt":79937.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3846185437.0},{"name":"wall-time","cnt":1.048342109},{"name":"instructions:u","cnt":5135774057.0},{"name":"faults","cnt":72239.0},{"name":"cpu-clock","cnt":1067.930185},{"name":"max-rss","cnt":376996.0},{"name":"task-clock","cnt":1067.941701}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":27224.476171},{"name":"max-rss","cnt":1373140.0},{"name":"faults","cnt":330858.0},{"name":"task-clock","cnt":27224.488126},{"name":"cycles:u","cnt":107078376159.0},{"name":"instructions:u","cnt":121573369369.0},{"name":"wall-time","cnt":27.260886558}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":33678.323141},{"name":"cycles:u","cnt":131585681083.0},{"name":"wall-time","cnt":33.731537227},{"name":"task-clock","cnt":33678.315736},{"name":"instructions:u","cnt":152815753359.0},{"name":"faults","cnt":593862.0},{"name":"max-rss","cnt":2246784.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":47766481395.0},{"name":"max-rss","cnt":2123168.0},{"name":"cycles:u","cnt":39767075216.0},{"name":"wall-time","cnt":10.29273099},{"name":"task-clock","cnt":10663.863761},{"name":"faults","cnt":512220.0},{"name":"cpu-clock","cnt":10663.86697}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":20571.989723},{"name":"max-rss","cnt":2354536.0},{"name":"instructions:u","cnt":92460681991.0},{"name":"task-clock","cnt":20572.008818},{"name":"faults","cnt":575802.0},{"name":"cycles:u","cnt":78228311548.0},{"name":"wall-time","cnt":20.190359248}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":83986769586.0},{"name":"task-clock","cnt":21819.702676},{"name":"wall-time","cnt":21.424238439},{"name":"cpu-clock","cnt":21819.715392},{"name":"max-rss","cnt":2451152.0},{"name":"faults","cnt":592984.0},{"name":"instructions:u","cnt":95297497155.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"wall-time","cnt":41.745901293},{"name":"instructions:u","cnt":296977787512.0},{"name":"cpu-clock","cnt":73302.632956},{"name":"cycles:u","cnt":279463314462.0},{"name":"task-clock","cnt":73302.579881},{"name":"faults","cnt":746525.0},{"name":"max-rss","cnt":2728716.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":116438.585764},{"name":"cpu-clock","cnt":116439.416528},{"name":"wall-time","cnt":66.784503272},{"name":"cycles:u","cnt":441415313212.0},{"name":"max-rss","cnt":3364548.0},{"name":"instructions:u","cnt":531608063224.0},{"name":"faults","cnt":1058120.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":3620800.0},{"name":"cycles:u","cnt":51306167094.0},{"name":"task-clock","cnt":14594.847246},{"name":"wall-time","cnt":17.088344746},{"name":"instructions:u","cnt":62217532954.0},{"name":"faults","cnt":698063.0},{"name":"cpu-clock","cnt":14594.324829}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":300606179718.0},{"name":"max-rss","cnt":3936568.0},{"name":"task-clock","cnt":66992.383544},{"name":"wall-time","cnt":40.152604637},{"name":"faults","cnt":1016553.0},{"name":"cpu-clock","cnt":66992.226036},{"name":"cycles:u","cnt":250305719821.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":4052796.0},{"name":"faults","cnt":1144096.0},{"name":"instructions:u","cnt":423607867602.0},{"name":"task-clock","cnt":92884.248572},{"name":"cycles:u","cnt":349400852894.0},{"name":"wall-time","cnt":50.669903525},{"name":"cpu-clock","cnt":92884.162271}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"max-rss","cnt":2393672.0},{"name":"task-clock","cnt":257389.035392},{"name":"cycles:u","cnt":974234891281.0},{"name":"cpu-clock","cnt":257389.206237},{"name":"instructions:u","cnt":796781712149.0},{"name":"faults","cnt":728082.0},{"name":"wall-time","cnt":61.466958093}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1494850784971.0},{"name":"instructions:u","cnt":1252204415652.0},{"name":"max-rss","cnt":3010008.0},{"name":"task-clock","cnt":396865.078541},{"name":"wall-time","cnt":82.995147134},{"name":"cpu-clock","cnt":396865.623088},{"name":"faults","cnt":1061308.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":11.880969552},{"name":"task-clock","cnt":12797.314615},{"name":"max-rss","cnt":2791600.0},{"name":"faults","cnt":672265.0},{"name":"cpu-clock","cnt":12796.661608},{"name":"cycles:u","cnt":46789792107.0},{"name":"instructions:u","cnt":53979667862.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1057544570936.0},{"name":"cycles:u","cnt":1258456004230.0},{"name":"task-clock","cnt":335192.998169},{"name":"wall-time","cnt":61.869943249},{"name":"faults","cnt":1134184.0},{"name":"cpu-clock","cnt":335193.443379},{"name":"max-rss","cnt":3500148.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":1145601.0},{"name":"max-rss","cnt":3550216.0},{"name":"wall-time","cnt":66.730802103},{"name":"cpu-clock","cnt":362498.628104},{"name":"cycles:u","cnt":1361822948963.0},{"name":"task-clock","cnt":362497.966551},{"name":"instructions:u","cnt":1128593837503.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":691.572743},{"name":"instructions:u","cnt":3229478482.0},{"name":"cycles:u","cnt":2647094104.0},{"name":"max-rss","cnt":151964.0},{"name":"wall-time","cnt":0.709398059},{"name":"cpu-clock","cnt":691.572016},{"name":"faults","cnt":14872.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":22875.0},{"name":"task-clock","cnt":877.261075},{"name":"cycles:u","cnt":3344824638.0},{"name":"max-rss","cnt":184212.0},{"name":"instructions:u","cnt":4081948197.0},{"name":"cpu-clock","cnt":877.259089},{"name":"wall-time","cnt":0.895443835}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":968097094.0},{"name":"task-clock","cnt":278.145274},{"name":"max-rss","cnt":165424.0},{"name":"instructions:u","cnt":1325463806.0},{"name":"faults","cnt":21437.0},{"name":"wall-time","cnt":0.283469422},{"name":"cpu-clock","cnt":278.14312}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":22722.0},{"name":"cycles:u","cnt":1152777358.0},{"name":"wall-time","cnt":0.336246507},{"name":"cpu-clock","cnt":331.19747},{"name":"task-clock","cnt":331.199205},{"name":"instructions:u","cnt":1535999772.0},{"name":"max-rss","cnt":184836.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":10795798635.0},{"name":"cpu-clock","cnt":2857.414226},{"name":"max-rss","cnt":243996.0},{"name":"wall-time","cnt":1.476330901},{"name":"instructions:u","cnt":11895600866.0},{"name":"task-clock","cnt":2857.43718},{"name":"faults","cnt":36305.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.749571867},{"name":"cycles:u","cnt":13026839317.0},{"name":"max-rss","cnt":291516.0},{"name":"instructions:u","cnt":14461231155.0},{"name":"cpu-clock","cnt":3473.285951},{"name":"task-clock","cnt":3473.271585},{"name":"faults","cnt":47903.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1907571438.0},{"name":"cycles:u","cnt":1452445929.0},{"name":"max-rss","cnt":227332.0},{"name":"faults","cnt":32746.0},{"name":"task-clock","cnt":432.392747},{"name":"cpu-clock","cnt":432.324183},{"name":"wall-time","cnt":0.419822866}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":623.48833},{"name":"instructions:u","cnt":2687346525.0},{"name":"faults","cnt":37175.0},{"name":"max-rss","cnt":257976.0},{"name":"cpu-clock","cnt":623.44674},{"name":"wall-time","cnt":0.515074542},{"name":"cycles:u","cnt":2152495491.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":262756.0},{"name":"wall-time","cnt":2.946644978},{"name":"task-clock","cnt":14583.382961},{"name":"faults","cnt":42010.0},{"name":"instructions:u","cnt":44831899867.0},{"name":"cycles:u","cnt":55129412332.0},{"name":"cpu-clock","cnt":14583.399229}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":52851.0},{"name":"cpu-clock","cnt":16085.069792},{"name":"instructions:u","cnt":48385866552.0},{"name":"max-rss","cnt":303916.0},{"name":"cycles:u","cnt":60656187990.0},{"name":"task-clock","cnt":16085.044546},{"name":"wall-time","cnt":3.252977749}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":431.5302},{"name":"faults","cnt":33156.0},{"name":"instructions:u","cnt":1924654004.0},{"name":"task-clock","cnt":431.580622},{"name":"wall-time","cnt":0.414560288},{"name":"cycles:u","cnt":1475306615.0},{"name":"max-rss","cnt":219724.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":50615.0},{"name":"max-rss","cnt":298336.0},{"name":"cycles:u","cnt":30838698914.0},{"name":"wall-time","cnt":1.667229056},{"name":"task-clock","cnt":8225.183034},{"name":"instructions:u","cnt":24469779251.0},{"name":"cpu-clock","cnt":8225.195249}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":1756559403.0},{"name":"cycles:u","cnt":1284967778.0},{"name":"faults","cnt":11286.0},{"name":"max-rss","cnt":146728.0},{"name":"cpu-clock","cnt":343.816273},{"name":"wall-time","cnt":0.36446732},{"name":"task-clock","cnt":343.802947}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":2266506052.0},{"name":"max-rss","cnt":173356.0},{"name":"wall-time","cnt":0.469368621},{"name":"task-clock","cnt":451.462053},{"name":"cpu-clock","cnt":451.460546},{"name":"faults","cnt":17396.0},{"name":"cycles:u","cnt":1681000903.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":635199831.0},{"name":"faults","cnt":16177.0},{"name":"wall-time","cnt":0.145625988},{"name":"cpu-clock","cnt":135.424137},{"name":"cycles:u","cnt":433130969.0},{"name":"task-clock","cnt":135.43573},{"name":"max-rss","cnt":148704.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":308.811509},{"name":"instructions:u","cnt":1451411726.0},{"name":"cycles:u","cnt":1103784447.0},{"name":"wall-time","cnt":0.318573543},{"name":"faults","cnt":19573.0},{"name":"max-rss","cnt":182332.0},{"name":"task-clock","cnt":308.813085}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":296.412362},{"name":"instructions:u","cnt":1382491611.0},{"name":"max-rss","cnt":183564.0},{"name":"cycles:u","cnt":1052181541.0},{"name":"task-clock","cnt":296.4144},{"name":"wall-time","cnt":0.306425161},{"name":"faults","cnt":19777.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"instructions:u","cnt":17572899772.0},{"name":"wall-time","cnt":2.430463145},{"name":"max-rss","cnt":298868.0},{"name":"faults","cnt":91360.0},{"name":"cycles:u","cnt":15377433242.0},{"name":"task-clock","cnt":4212.782414},{"name":"cpu-clock","cnt":4212.777318}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.842350384},{"name":"cycles:u","cnt":18614660606.0},{"name":"task-clock","cnt":5126.906925},{"name":"faults","cnt":104374.0},{"name":"max-rss","cnt":343176.0},{"name":"cpu-clock","cnt":5126.981403},{"name":"instructions:u","cnt":20898350168.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.335206594},{"name":"faults","cnt":85518.0},{"name":"instructions:u","cnt":5201226647.0},{"name":"cpu-clock","cnt":1345.270761},{"name":"task-clock","cnt":1345.356649},{"name":"cycles:u","cnt":4206907856.0},{"name":"max-rss","cnt":271956.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":361600.0},{"name":"cycles:u","cnt":17319206270.0},{"name":"faults","cnt":108820.0},{"name":"cpu-clock","cnt":4837.213342},{"name":"instructions:u","cnt":19389622589.0},{"name":"task-clock","cnt":4837.061413},{"name":"wall-time","cnt":2.572259872}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":367836.0},{"name":"wall-time","cnt":2.546265946},{"name":"instructions:u","cnt":19382169426.0},{"name":"cycles:u","cnt":17721806394.0},{"name":"faults","cnt":110468.0},{"name":"cpu-clock","cnt":4915.771168},{"name":"task-clock","cnt":4915.662631}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cpu-clock","cnt":22872.64843},{"name":"instructions:u","cnt":68109297445.0},{"name":"faults","cnt":78852.0},{"name":"task-clock","cnt":22872.59899},{"name":"max-rss","cnt":339240.0},{"name":"cycles:u","cnt":86083896941.0},{"name":"wall-time","cnt":4.172168161}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":101886737058.0},{"name":"instructions:u","cnt":78353621053.0},{"name":"task-clock","cnt":27133.206962},{"name":"faults","cnt":87152.0},{"name":"cpu-clock","cnt":27133.257447},{"name":"max-rss","cnt":368608.0},{"name":"wall-time","cnt":4.605995917}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2741295965.0},{"name":"task-clock","cnt":713.347625},{"name":"wall-time","cnt":0.691265268},{"name":"cpu-clock","cnt":713.218151},{"name":"faults","cnt":59478.0},{"name":"max-rss","cnt":258608.0},{"name":"cycles:u","cnt":2279423748.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":26826.515171},{"name":"faults","cnt":89727.0},{"name":"wall-time","cnt":4.285244147},{"name":"task-clock","cnt":26826.464701},{"name":"max-rss","cnt":378372.0},{"name":"cycles:u","cnt":100622373764.0},{"name":"instructions:u","cnt":76770803204.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.349486926},{"name":"task-clock","cnt":18092.545632},{"name":"cpu-clock","cnt":18092.521566},{"name":"max-rss","cnt":377540.0},{"name":"faults","cnt":87883.0},{"name":"cycles:u","cnt":67799055899.0},{"name":"instructions:u","cnt":53416186057.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":89249.0},{"name":"instructions:u","cnt":18203714641.0},{"name":"task-clock","cnt":3251.388592},{"name":"wall-time","cnt":3.322667085},{"name":"cpu-clock","cnt":3251.388773},{"name":"cycles:u","cnt":12604397004.0},{"name":"max-rss","cnt":430760.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":3890.126336},{"name":"wall-time","cnt":3.926931133},{"name":"cycles:u","cnt":15078740211.0},{"name":"faults","cnt":97131.0},{"name":"task-clock","cnt":3890.13493},{"name":"instructions:u","cnt":23519907599.0},{"name":"max-rss","cnt":464128.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1058.741751},{"name":"instructions:u","cnt":6910200052.0},{"name":"cpu-clock","cnt":1058.731522},{"name":"cycles:u","cnt":3857706734.0},{"name":"faults","cnt":74693.0},{"name":"max-rss","cnt":364744.0},{"name":"wall-time","cnt":1.095751519}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":498420.0},{"name":"task-clock","cnt":3900.841952},{"name":"faults","cnt":105838.0},{"name":"cpu-clock","cnt":3900.832252},{"name":"cycles:u","cnt":15068381353.0},{"name":"wall-time","cnt":3.937276763},{"name":"instructions:u","cnt":23558422290.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"task-clock","cnt":3356.00693},{"name":"instructions:u","cnt":18731458975.0},{"name":"faults","cnt":100383.0},{"name":"cycles:u","cnt":12851652038.0},{"name":"max-rss","cnt":458788.0},{"name":"cpu-clock","cnt":3355.999815},{"name":"wall-time","cnt":3.365883297}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.012484283},{"name":"max-rss","cnt":499672.0},{"name":"task-clock","cnt":4018.965011},{"name":"faults","cnt":110499.0},{"name":"cycles:u","cnt":15409050696.0},{"name":"instructions:u","cnt":24078056287.0},{"name":"cpu-clock","cnt":4018.954175}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":4092577357.0},{"name":"faults","cnt":83637.0},{"name":"max-rss","cnt":385972.0},{"name":"cpu-clock","cnt":1150.629946},{"name":"task-clock","cnt":1150.63392},{"name":"wall-time","cnt":1.182294472},{"name":"instructions:u","cnt":7294424158.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":524844.0},{"name":"task-clock","cnt":3984.155667},{"name":"instructions:u","cnt":24073602313.0},{"name":"wall-time","cnt":3.979086915},{"name":"faults","cnt":116261.0},{"name":"cycles:u","cnt":15233561633.0},{"name":"cpu-clock","cnt":3984.146684}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"instructions:u","cnt":18698572252.0},{"name":"max-rss","cnt":452740.0},{"name":"faults","cnt":97138.0},{"name":"task-clock","cnt":3324.348675},{"name":"cpu-clock","cnt":3324.343047},{"name":"cycles:u","cnt":12762196415.0},{"name":"wall-time","cnt":3.341122862}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4012.753941},{"name":"max-rss","cnt":492384.0},{"name":"cycles:u","cnt":15420856577.0},{"name":"wall-time","cnt":4.005559751},{"name":"cpu-clock","cnt":4012.750464},{"name":"instructions:u","cnt":24118635042.0},{"name":"faults","cnt":106949.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1175.891123},{"name":"max-rss","cnt":387496.0},{"name":"cycles:u","cnt":4158354436.0},{"name":"wall-time","cnt":1.206920173},{"name":"instructions:u","cnt":7238496404.0},{"name":"faults","cnt":82485.0},{"name":"task-clock","cnt":1175.898655}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":115198.0},{"name":"max-rss","cnt":525048.0},{"name":"instructions:u","cnt":24011964875.0},{"name":"task-clock","cnt":4013.794622},{"name":"cpu-clock","cnt":4013.789795},{"name":"wall-time","cnt":4.007025882},{"name":"cycles:u","cnt":15365041700.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":34555504240.0},{"name":"cpu-clock","cnt":5142.91736},{"name":"max-rss","cnt":533016.0},{"name":"wall-time","cnt":5.202298612},{"name":"faults","cnt":113851.0},{"name":"task-clock","cnt":5142.915678},{"name":"cycles:u","cnt":20007716245.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.150218443},{"name":"instructions:u","cnt":44279819500.0},{"name":"max-rss","cnt":583324.0},{"name":"task-clock","cnt":6114.294568},{"name":"faults","cnt":126664.0},{"name":"cycles:u","cnt":23762891675.0},{"name":"cpu-clock","cnt":6114.286011}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1744.159412},{"name":"instructions:u","cnt":12305237819.0},{"name":"cycles:u","cnt":6261521187.0},{"name":"faults","cnt":125423.0},{"name":"max-rss","cnt":569056.0},{"name":"task-clock","cnt":1744.159139},{"name":"wall-time","cnt":1.772116272}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5800.045095},{"name":"max-rss","cnt":631020.0},{"name":"faults","cnt":132860.0},{"name":"wall-time","cnt":5.447893644},{"name":"cpu-clock","cnt":5800.051238},{"name":"cycles:u","cnt":22363816454.0},{"name":"instructions:u","cnt":37670395178.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":47519962712.0},{"name":"cycles:u","cnt":26224206296.0},{"name":"task-clock","cnt":6798.07589},{"name":"max-rss","cnt":678580.0},{"name":"wall-time","cnt":6.338935528},{"name":"faults","cnt":144616.0},{"name":"cpu-clock","cnt":6798.057293}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":6359160356.0},{"name":"faults","cnt":127323.0},{"name":"cpu-clock","cnt":1769.042951},{"name":"task-clock","cnt":1769.06705},{"name":"wall-time","cnt":1.7922137},{"name":"instructions:u","cnt":12517571544.0},{"name":"max-rss","cnt":607532.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":6964.533055},{"name":"task-clock","cnt":6964.557837},{"name":"wall-time","cnt":5.801317974},{"name":"max-rss","cnt":644136.0},{"name":"cycles:u","cnt":26754400900.0},{"name":"faults","cnt":141148.0},{"name":"instructions:u","cnt":42578435344.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":8114.237853},{"name":"task-clock","cnt":8114.270229},{"name":"max-rss","cnt":701896.0},{"name":"faults","cnt":151906.0},{"name":"cycles:u","cnt":31116427309.0},{"name":"wall-time","cnt":6.448712823},{"name":"instructions:u","cnt":52157223339.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1791.935174},{"name":"wall-time","cnt":1.795200511},{"name":"cycles:u","cnt":6424582556.0},{"name":"instructions:u","cnt":12544239211.0},{"name":"faults","cnt":128998.0},{"name":"cpu-clock","cnt":1791.917667},{"name":"max-rss","cnt":613804.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":3.726624266},{"name":"cycles:u","cnt":14582103565.0},{"name":"task-clock","cnt":3689.545634},{"name":"max-rss","cnt":185112.0},{"name":"instructions:u","cnt":31014474849.0},{"name":"cpu-clock","cnt":3689.544499},{"name":"faults","cnt":25463.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":193356.0},{"name":"cpu-clock","cnt":3949.612519},{"name":"instructions:u","cnt":34969587582.0},{"name":"wall-time","cnt":3.985076647},{"name":"task-clock","cnt":3949.593619},{"name":"faults","cnt":25702.0},{"name":"cycles:u","cnt":15614801205.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":15673.0},{"name":"task-clock","cnt":196.305009},{"name":"wall-time","cnt":0.228768755},{"name":"instructions:u","cnt":1217829439.0},{"name":"max-rss","cnt":149412.0},{"name":"cycles:u","cnt":682875396.0},{"name":"cpu-clock","cnt":196.303776}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":26541.0},{"name":"task-clock","cnt":3652.311732},{"name":"instructions:u","cnt":32270304605.0},{"name":"wall-time","cnt":3.666834113},{"name":"cycles:u","cnt":14422748939.0},{"name":"cpu-clock","cnt":3652.31333},{"name":"max-rss","cnt":197324.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":15260227886.0},{"name":"cpu-clock","cnt":3877.106398},{"name":"wall-time","cnt":3.882540827},{"name":"faults","cnt":34816.0},{"name":"max-rss","cnt":228520.0},{"name":"instructions:u","cnt":32318245355.0},{"name":"task-clock","cnt":3877.111408}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":16704824244.0},{"name":"cpu-clock","cnt":4243.28069},{"name":"max-rss","cnt":235120.0},{"name":"instructions:u","cnt":36648699556.0},{"name":"faults","cnt":34555.0},{"name":"wall-time","cnt":4.220231828},{"name":"task-clock","cnt":4243.294945}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":254.737272},{"name":"max-rss","cnt":177992.0},{"name":"faults","cnt":21256.0},{"name":"instructions:u","cnt":1701274474.0},{"name":"wall-time","cnt":0.287316777},{"name":"cycles:u","cnt":869523384.0},{"name":"task-clock","cnt":254.755555}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":14965502021.0},{"name":"cpu-clock","cnt":3801.576623},{"name":"wall-time","cnt":3.814308967},{"name":"task-clock","cnt":3801.59768},{"name":"instructions:u","cnt":33554154380.0},{"name":"max-rss","cnt":223532.0},{"name":"faults","cnt":32555.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":35943.0},{"name":"wall-time","cnt":3.994166942},{"name":"cpu-clock","cnt":3989.947995},{"name":"instructions:u","cnt":33510402525.0},{"name":"task-clock","cnt":3989.94038},{"name":"max-rss","cnt":234752.0},{"name":"cycles:u","cnt":15716675716.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.316958668},{"name":"max-rss","cnt":241576.0},{"name":"cycles:u","cnt":17081736926.0},{"name":"instructions:u","cnt":37835382106.0},{"name":"task-clock","cnt":4336.953521},{"name":"cpu-clock","cnt":4336.939398},{"name":"faults","cnt":35677.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":256.733751},{"name":"cpu-clock","cnt":256.7392},{"name":"wall-time","cnt":0.288958475},{"name":"cycles:u","cnt":879388972.0},{"name":"max-rss","cnt":178308.0},{"name":"instructions:u","cnt":1698411121.0},{"name":"faults","cnt":21276.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":33559563561.0},{"name":"max-rss","cnt":222384.0},{"name":"cpu-clock","cnt":3797.811699},{"name":"cycles:u","cnt":14950848641.0},{"name":"wall-time","cnt":3.811402088},{"name":"faults","cnt":32155.0},{"name":"task-clock","cnt":3797.814042}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":103632.0},{"name":"cycles:u","cnt":227358578.0},{"name":"faults","cnt":5399.0},{"name":"instructions:u","cnt":346202966.0},{"name":"wall-time","cnt":0.08867061},{"name":"task-clock","cnt":70.7377},{"name":"cpu-clock","cnt":70.73596}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":82.766405},{"name":"wall-time","cnt":0.100768209},{"name":"instructions:u","cnt":391608067.0},{"name":"faults","cnt":6739.0},{"name":"cycles:u","cnt":270223910.0},{"name":"max-rss","cnt":109248.0},{"name":"cpu-clock","cnt":82.76455}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":122458858.0},{"name":"task-clock","cnt":43.551489},{"name":"instructions:u","cnt":177639300.0},{"name":"max-rss","cnt":91516.0},{"name":"cpu-clock","cnt":43.548849},{"name":"wall-time","cnt":0.060838575},{"name":"faults","cnt":5870.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":53.843597},{"name":"task-clock","cnt":53.846571},{"name":"cycles:u","cnt":155016940.0},{"name":"wall-time","cnt":0.071613919},{"name":"faults","cnt":6638.0},{"name":"max-rss","cnt":107764.0},{"name":"instructions:u","cnt":228091134.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"wall-time","cnt":0.166687461},{"name":"task-clock","cnt":166.956378},{"name":"faults","cnt":13185.0},{"name":"cpu-clock","cnt":166.938036},{"name":"instructions:u","cnt":747643224.0},{"name":"max-rss","cnt":124108.0},{"name":"cycles:u","cnt":518278162.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":184.555088},{"name":"wall-time","cnt":0.180911709},{"name":"cycles:u","cnt":576641917.0},{"name":"instructions:u","cnt":823638158.0},{"name":"max-rss","cnt":131756.0},{"name":"cpu-clock","cnt":184.55317},{"name":"faults","cnt":14910.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":344350628.0},{"name":"faults","cnt":13465.0},{"name":"max-rss","cnt":113724.0},{"name":"instructions:u","cnt":515773380.0},{"name":"wall-time","cnt":0.134811691},{"name":"cpu-clock","cnt":121.559717},{"name":"task-clock","cnt":121.563975}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":156.35936},{"name":"max-rss","cnt":131412.0},{"name":"faults","cnt":14823.0},{"name":"cpu-clock","cnt":156.332508},{"name":"wall-time","cnt":0.152900218},{"name":"instructions:u","cnt":640909842.0},{"name":"cycles:u","cnt":462840530.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":12313.0},{"name":"cpu-clock","cnt":159.416031},{"name":"cycles:u","cnt":501407212.0},{"name":"max-rss","cnt":123208.0},{"name":"instructions:u","cnt":751651613.0},{"name":"task-clock","cnt":159.41122},{"name":"wall-time","cnt":0.166909458}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":183.018833},{"name":"wall-time","cnt":0.183285876},{"name":"max-rss","cnt":131404.0},{"name":"instructions:u","cnt":841206907.0},{"name":"faults","cnt":14313.0},{"name":"task-clock","cnt":183.03515},{"name":"cycles:u","cnt":580871850.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":505747609.0},{"name":"cycles:u","cnt":338820582.0},{"name":"faults","cnt":13240.0},{"name":"max-rss","cnt":113304.0},{"name":"task-clock","cnt":119.022655},{"name":"cpu-clock","cnt":119.017913},{"name":"wall-time","cnt":0.133778889}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":120544.0},{"name":"faults","cnt":13654.0},{"name":"task-clock","cnt":126.963291},{"name":"cpu-clock","cnt":126.947096},{"name":"instructions:u","cnt":541396473.0},{"name":"cycles:u","cnt":367082906.0},{"name":"wall-time","cnt":0.138901418}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":1802773158.0},{"name":"wall-time","cnt":0.509878476},{"name":"max-rss","cnt":208296.0},{"name":"cpu-clock","cnt":491.748379},{"name":"faults","cnt":33904.0},{"name":"task-clock","cnt":491.748516},{"name":"instructions:u","cnt":2454397271.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":3415507222.0},{"name":"task-clock","cnt":731.885009},{"name":"wall-time","cnt":0.749963511},{"name":"faults","cnt":58416.0},{"name":"cycles:u","cnt":2654353153.0},{"name":"max-rss","cnt":307876.0},{"name":"cpu-clock","cnt":731.883012}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2278804836.0},{"name":"instructions:u","cnt":2917575551.0},{"name":"max-rss","cnt":322024.0},{"name":"cpu-clock","cnt":651.704259},{"name":"task-clock","cnt":651.705098},{"name":"wall-time","cnt":0.627786471},{"name":"faults","cnt":64578.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":336028.0},{"name":"task-clock","cnt":728.564569},{"name":"instructions:u","cnt":3125772557.0},{"name":"faults","cnt":64910.0},{"name":"cpu-clock","cnt":728.564122},{"name":"wall-time","cnt":0.704363495},{"name":"cycles:u","cnt":2533672184.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"task-clock","cnt":574.675272},{"name":"wall-time","cnt":0.583142715},{"name":"cpu-clock","cnt":574.660213},{"name":"faults","cnt":41775.0},{"name":"cycles:u","cnt":2030531389.0},{"name":"instructions:u","cnt":2786485791.0},{"name":"max-rss","cnt":233980.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":3779631920.0},{"name":"max-rss","cnt":329232.0},{"name":"task-clock","cnt":829.693892},{"name":"cycles:u","cnt":2936239928.0},{"name":"wall-time","cnt":0.838288604},{"name":"faults","cnt":65605.0},{"name":"cpu-clock","cnt":829.687535}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":732.435548},{"name":"cycles:u","cnt":2512879670.0},{"name":"wall-time","cnt":0.707297309},{"name":"faults","cnt":71801.0},{"name":"max-rss","cnt":341040.0},{"name":"instructions:u","cnt":3236075425.0},{"name":"task-clock","cnt":732.457118}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2803102509.0},{"name":"task-clock","cnt":808.25539},{"name":"faults","cnt":72387.0},{"name":"cpu-clock","cnt":808.250639},{"name":"instructions:u","cnt":3472252998.0},{"name":"wall-time","cnt":0.77801239},{"name":"max-rss","cnt":357236.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":2814140037.0},{"name":"max-rss","cnt":232480.0},{"name":"cycles:u","cnt":2066464026.0},{"name":"task-clock","cnt":580.537755},{"name":"cpu-clock","cnt":580.536609},{"name":"faults","cnt":40621.0},{"name":"wall-time","cnt":0.583372208}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.825753901},{"name":"faults","cnt":64741.0},{"name":"max-rss","cnt":329420.0},{"name":"task-clock","cnt":824.041548},{"name":"instructions:u","cnt":3802145771.0},{"name":"cpu-clock","cnt":824.008777},{"name":"cycles:u","cnt":2917619452.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":71562.0},{"name":"wall-time","cnt":0.706197834},{"name":"max-rss","cnt":340888.0},{"name":"cpu-clock","cnt":732.851313},{"name":"instructions:u","cnt":3232753948.0},{"name":"task-clock","cnt":732.862679},{"name":"cycles:u","cnt":2519400499.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2799818949.0},{"name":"faults","cnt":71861.0},{"name":"task-clock","cnt":804.930337},{"name":"cpu-clock","cnt":804.928525},{"name":"instructions:u","cnt":3440355161.0},{"name":"max-rss","cnt":347164.0},{"name":"wall-time","cnt":0.773095843}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":3275.427489},{"name":"faults","cnt":48974.0},{"name":"cycles:u","cnt":12735758452.0},{"name":"cpu-clock","cnt":3275.427338},{"name":"max-rss","cnt":303192.0},{"name":"wall-time","cnt":3.335151729},{"name":"instructions:u","cnt":14055668868.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":4169.256232},{"name":"instructions:u","cnt":18455801554.0},{"name":"faults","cnt":76476.0},{"name":"wall-time","cnt":4.237542574},{"name":"cycles:u","cnt":16227256338.0},{"name":"task-clock","cnt":4169.256294},{"name":"max-rss","cnt":412052.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":395544.0},{"name":"instructions:u","cnt":4824379508.0},{"name":"wall-time","cnt":1.102986513},{"name":"cpu-clock","cnt":1091.662432},{"name":"cycles:u","cnt":3964840326.0},{"name":"faults","cnt":73534.0},{"name":"task-clock","cnt":1091.672766}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.337549807},{"name":"task-clock","cnt":1332.13753},{"name":"instructions:u","cnt":5749304757.0},{"name":"faults","cnt":75726.0},{"name":"cpu-clock","cnt":1332.126943},{"name":"max-rss","cnt":411232.0},{"name":"cycles:u","cnt":4915066876.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":98920508834.0},{"name":"cpu-clock","cnt":25840.419877},{"name":"wall-time","cnt":9.682193836},{"name":"task-clock","cnt":25840.433932},{"name":"faults","cnt":250375.0},{"name":"cycles:u","cnt":97440411434.0},{"name":"max-rss","cnt":1055188.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":115488292948.0},{"name":"cpu-clock","cnt":29123.535222},{"name":"cycles:u","cnt":109777040269.0},{"name":"max-rss","cnt":1080592.0},{"name":"wall-time","cnt":11.625376024},{"name":"task-clock","cnt":29123.445873},{"name":"faults","cnt":262773.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":7575196313.0},{"name":"cpu-clock","cnt":2156.397091},{"name":"faults","cnt":133663.0},{"name":"task-clock","cnt":2156.550053},{"name":"max-rss","cnt":749880.0},{"name":"wall-time","cnt":2.09105177},{"name":"instructions:u","cnt":9171838042.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.361978375},{"name":"cycles:u","cnt":8716226435.0},{"name":"task-clock","cnt":2482.04184},{"name":"cpu-clock","cnt":2481.864999},{"name":"instructions:u","cnt":10387560157.0},{"name":"max-rss","cnt":762836.0},{"name":"faults","cnt":135023.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":105836.174121},{"name":"faults","cnt":337714.0},{"name":"wall-time","cnt":20.405126601},{"name":"task-clock","cnt":105836.136706},{"name":"max-rss","cnt":1350980.0},{"name":"instructions:u","cnt":315525578454.0},{"name":"cycles:u","cnt":398656438775.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":450717235255.0},{"name":"cpu-clock","cnt":119787.855739},{"name":"instructions:u","cnt":355909624471.0},{"name":"faults","cnt":345917.0},{"name":"task-clock","cnt":119787.698319},{"name":"max-rss","cnt":1243852.0},{"name":"wall-time","cnt":22.474563274}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.049503107},{"name":"faults","cnt":136784.0},{"name":"max-rss","cnt":761380.0},{"name":"task-clock","cnt":2167.969499},{"name":"cycles:u","cnt":7614964644.0},{"name":"cpu-clock","cnt":2167.84689},{"name":"instructions:u","cnt":9043273189.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":10214.05213},{"name":"instructions:u","cnt":40706894611.0},{"name":"wall-time","cnt":4.205390921},{"name":"max-rss","cnt":947816.0},{"name":"cycles:u","cnt":37692884724.0},{"name":"task-clock","cnt":10214.090644},{"name":"faults","cnt":201910.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":24352.0},{"name":"max-rss","cnt":182296.0},{"name":"cpu-clock","cnt":2255.961906},{"name":"instructions:u","cnt":14219603915.0},{"name":"cycles:u","cnt":8858708923.0},{"name":"wall-time","cnt":2.307282409},{"name":"task-clock","cnt":2255.962777}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.526101258},{"name":"cycles:u","cnt":9767944103.0},{"name":"cpu-clock","cnt":2489.544185},{"name":"faults","cnt":26549.0},{"name":"task-clock","cnt":2489.554133},{"name":"instructions:u","cnt":15637103914.0},{"name":"max-rss","cnt":191648.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.243394215},{"name":"task-clock","cnt":216.832042},{"name":"faults","cnt":19042.0},{"name":"instructions:u","cnt":1203819677.0},{"name":"cpu-clock","cnt":216.831113},{"name":"max-rss","cnt":157576.0},{"name":"cycles:u","cnt":744585246.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":9113334033.0},{"name":"wall-time","cnt":2.372855372},{"name":"max-rss","cnt":205324.0},{"name":"cpu-clock","cnt":2322.681007},{"name":"instructions:u","cnt":14743123639.0},{"name":"faults","cnt":25782.0},{"name":"task-clock","cnt":2322.703903}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2612.311979},{"name":"cycles:u","cnt":10238182499.0},{"name":"cpu-clock","cnt":2612.298627},{"name":"wall-time","cnt":2.626115389},{"name":"max-rss","cnt":216212.0},{"name":"faults","cnt":28474.0},{"name":"instructions:u","cnt":16255183167.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1370327653.0},{"name":"max-rss","cnt":178896.0},{"name":"task-clock","cnt":245.833037},{"name":"cpu-clock","cnt":245.828635},{"name":"cycles:u","cnt":834781692.0},{"name":"faults","cnt":22547.0},{"name":"wall-time","cnt":0.273065068}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2426.0293},{"name":"faults","cnt":27797.0},{"name":"task-clock","cnt":2426.04607},{"name":"wall-time","cnt":2.434324669},{"name":"max-rss","cnt":213740.0},{"name":"cycles:u","cnt":9496237814.0},{"name":"instructions:u","cnt":15298411986.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":16861645661.0},{"name":"cycles:u","cnt":10528622893.0},{"name":"wall-time","cnt":2.641914348},{"name":"max-rss","cnt":222668.0},{"name":"faults","cnt":30072.0},{"name":"task-clock","cnt":2693.215156},{"name":"cpu-clock","cnt":2693.198975}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":22700.0},{"name":"cycles:u","cnt":850525045.0},{"name":"wall-time","cnt":0.271994759},{"name":"max-rss","cnt":180112.0},{"name":"task-clock","cnt":250.469238},{"name":"instructions:u","cnt":1387348626.0},{"name":"cpu-clock","cnt":250.485343}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}