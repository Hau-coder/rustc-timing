{"commit":{"sha":"0066869dc09d9c63c5d90bb55884f0150f84c3af","date":"2017-03-12T16:50:00+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":19380436055.0},{"name":"cycles:u","cnt":15898376628.0},{"name":"task-clock","cnt":3883.925019},{"name":"cpu-clock","cnt":4068.440193},{"name":"faults","cnt":20350.0},{"name":"max-rss","cnt":223156.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1087503695.0},{"name":"cycles:u","cnt":651202180.0},{"name":"task-clock","cnt":147.075106},{"name":"cpu-clock","cnt":192.763052},{"name":"faults","cnt":11505.0},{"name":"max-rss","cnt":93844.0}]}]}]},"html5ever-2016-08-25":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=    Updating registry `https://github.com/rust-lang/crates.io-index`\\n   Compiling mac v0.1.1\\n   Compiling lazy_static v0.2.8\\n   Compiling log v0.3.8\\n   Compiling serde v0.8.23\\n   Compiling rustc-serialize v0.3.24\\n   Compiling matches v0.1.6\\n   Compiling siphasher v0.2.2\\n   Compiling void v1.0.2\\n   Compiling unreachable v0.1.1\\n   Compiling libc v0.2.31\\n   Compiling utf-8 v0.6.0\\n   Compiling encoding_index_tests v0.1.4\\n   Compiling debug_unreachable v0.1.1\\n   Compiling encoding-index-singlebyte v1.20141219.5\\n   Compiling phf_shared v0.7.21\\n   Compiling futf v0.1.3\\n   Compiling encoding-index-korean v1.20141219.5\\n   Compiling encoding-index-simpchinese v1.20141219.5\\n   Compiling encoding-index-japanese v1.20141219.5\\n   Compiling encoding-index-tradchinese v1.20141219.5\\n   Compiling phf v0.7.21\\n   Compiling rand v0.3.16\\n   Compiling encoding v0.2.33\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling string_cache v0.2.29\\n   Compiling tendril v0.2.4\\n   Compiling html5ever v0.5.4 (file:///tmp/rustc-benchmark-html5ever-2016-08-25.ROGoXTBFNbAG)\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nthread \\'rustc\\' panicked at \\'called `Option::unwrap()` on a `None` value\\', /checkout/src/libcore/option.rs:323\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\n\\nerror: Could not compile `string_cache`.\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item: use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nerror: build failed\\nmake: *** [all] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/0066869dc09d9c63c5d90bb55884f0150f84c3af/cargo/bin/cargo rustc  -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:4: recipe for target \\'all\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x563674e83b6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x563674e83bae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x563674d79786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x563674d79848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x563674d602d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x563674d680f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x563674d690f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x563674d70962 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x563674d74837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x563674ffc59c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x563674ff5c1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f3fc2fe482f - __libc_start_main\n  12:     0x563674d38d08 - _start\n  13:                0x0 - <unknown>) })"},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24060720900.0},{"name":"cycles:u","cnt":19754807659.0},{"name":"task-clock","cnt":5020.545429},{"name":"cpu-clock","cnt":5020.546477},{"name":"faults","cnt":26316.0},{"name":"max-rss","cnt":249420.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":24843501536.0},{"name":"cycles:u","cnt":13598838542.0},{"name":"task-clock","cnt":3464.909747},{"name":"cpu-clock","cnt":3464.911713},{"name":"faults","cnt":30854.0},{"name":"max-rss","cnt":250316.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":178408108635.0},{"name":"cycles:u","cnt":247053727374.0},{"name":"task-clock","cnt":65946.101175},{"name":"cpu-clock","cnt":65947.642804},{"name":"faults","cnt":4988619.0},{"name":"max-rss","cnt":1178884.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":11050441148.0},{"name":"cycles:u","cnt":8740781175.0},{"name":"task-clock","cnt":2231.585111},{"name":"cpu-clock","cnt":2231.58688},{"name":"faults","cnt":10525.0},{"name":"max-rss","cnt":168680.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":1431904833.0},{"name":"cycles:u","cnt":860578549.0},{"name":"task-clock","cnt":206.884734},{"name":"cpu-clock","cnt":245.653321},{"name":"faults","cnt":11592.0},{"name":"max-rss","cnt":97600.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":9255555810.0},{"name":"cycles:u","cnt":6197456390.0},{"name":"task-clock","cnt":1660.691638},{"name":"cpu-clock","cnt":1662.010123},{"name":"faults","cnt":36868.0},{"name":"max-rss","cnt":382100.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":22256436064.0},{"name":"cycles:u","cnt":8362455395.0},{"name":"task-clock","cnt":2117.094918},{"name":"cpu-clock","cnt":2137.398629},{"name":"faults","cnt":18398.0},{"name":"max-rss","cnt":137324.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":6278727431.0},{"name":"cycles:u","cnt":4656774585.0},{"name":"task-clock","cnt":1097.60315},{"name":"cpu-clock","cnt":1209.524145},{"name":"faults","cnt":14196.0},{"name":"max-rss","cnt":125484.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52919955824.0},{"name":"cycles:u","cnt":42491779918.0},{"name":"task-clock","cnt":10793.008028},{"name":"cpu-clock","cnt":10793.015622},{"name":"faults","cnt":37206.0},{"name":"max-rss","cnt":397004.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":31536240070.0},{"name":"cycles:u","cnt":24985084856.0},{"name":"task-clock","cnt":6342.800822},{"name":"cpu-clock","cnt":6342.801794},{"name":"faults","cnt":36299.0},{"name":"max-rss","cnt":281296.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":43483109903.0},{"name":"cycles:u","cnt":46210245101.0},{"name":"task-clock","cnt":12231.309356},{"name":"cpu-clock","cnt":12231.235854},{"name":"faults","cnt":48551.0},{"name":"max-rss","cnt":421848.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":43412428765.0},{"name":"cycles:u","cnt":45951258462.0},{"name":"task-clock","cnt":12184.640951},{"name":"cpu-clock","cnt":12184.559475},{"name":"faults","cnt":51206.0},{"name":"max-rss","cnt":427464.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":39953086387.0},{"name":"cycles:u","cnt":42223642054.0},{"name":"task-clock","cnt":11195.126199},{"name":"cpu-clock","cnt":11195.054951},{"name":"faults","cnt":57031.0},{"name":"max-rss","cnt":395028.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":39958875383.0},{"name":"cycles:u","cnt":41668707439.0},{"name":"task-clock","cnt":11089.164931},{"name":"cpu-clock","cnt":11088.995704},{"name":"faults","cnt":54135.0},{"name":"max-rss","cnt":392348.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":43387485079.0},{"name":"cycles:u","cnt":45945383621.0},{"name":"task-clock","cnt":12189.553945},{"name":"cpu-clock","cnt":12189.45595},{"name":"faults","cnt":50871.0},{"name":"max-rss","cnt":419500.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":11219912701.0},{"name":"cycles:u","cnt":7831485954.0},{"name":"task-clock","cnt":2045.211558},{"name":"cpu-clock","cnt":2045.152233},{"name":"faults","cnt":17755.0},{"name":"max-rss","cnt":243352.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":43565248904.0},{"name":"cycles:u","cnt":46727493943.0},{"name":"task-clock","cnt":12378.7386},{"name":"cpu-clock","cnt":12378.639263},{"name":"faults","cnt":53157.0},{"name":"max-rss","cnt":427772.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":43759228868.0},{"name":"cycles:u","cnt":46545968001.0},{"name":"task-clock","cnt":12339.690536},{"name":"cpu-clock","cnt":12339.572339},{"name":"faults","cnt":53555.0},{"name":"max-rss","cnt":427288.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":10707920813.0},{"name":"cycles:u","cnt":7358959194.0},{"name":"task-clock","cnt":1914.987768},{"name":"cpu-clock","cnt":1914.922001},{"name":"faults","cnt":15261.0},{"name":"max-rss","cnt":240860.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":12779014306.0},{"name":"cycles:u","cnt":9461909507.0},{"name":"task-clock","cnt":2411.590322},{"name":"cpu-clock","cnt":2411.590574},{"name":"faults","cnt":18742.0},{"name":"max-rss","cnt":184104.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9414694132.0},{"name":"cycles:u","cnt":7016439278.0},{"name":"task-clock","cnt":1793.432815},{"name":"cpu-clock","cnt":1793.449052},{"name":"faults","cnt":13151.0},{"name":"max-rss","cnt":171120.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling heapsize v0.4.1\\n   Compiling void v1.0.2\\n   Compiling libc v0.2.28\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling pdqsort v0.1.2\\n   Compiling bitflags v0.7.0\\n   Compiling byteorder v1.1.0\\n   Compiling unicode-xid v0.0.4\\n   Compiling precomputed-hash v0.1.0\\n   Compiling smallvec v0.4.1\\n   Compiling same-file v0.1.3\\n   Compiling scopeguard v0.3.2\\n   Compiling rayon-core v1.2.1\\n   Compiling either v1.1.0\\n   Compiling odds v0.2.25\\n   Compiling log v0.3.8\\n   Compiling walkdir v1.0.7\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling rustc-serialize v0.3.24\\n   Compiling coco v0.1.1\\n   Compiling lazy_static v0.2.8\\n   Compiling synom v0.11.3\\n   Compiling num-traits v0.1.40\\n   Compiling nodrop v0.1.9\\n   Compiling matches v0.1.6\\n   Compiling rand v0.3.15\\n   Compiling arrayvec v0.3.23\\n   Compiling num_cpus v1.6.2\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.IA73dIoWrimW/components/style)\\n   Compiling time v0.1.38\\n   Compiling cfg-if v0.1.2\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.IA73dIoWrimW/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling quote v0.3.15\\n   Compiling futures v0.1.14\\n   Compiling num-integer v0.1.35\\n   Compiling unreachable v0.1.1\\n   Compiling ordered-float v0.4.0\\n   Compiling syn v0.11.11\\n   Compiling thread-id v3.2.0\\n   Compiling siphasher v0.2.2\\n   Compiling serde v1.0.10\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.IA73dIoWrimW/components/servo_arc)\\nerror: use of unstable library feature \\'process_abort\\' (see issue #37838)\\n   --> components/servo_arc/lib.rs:277:13\\n    |\\n277 |             process::abort();\\n    |             ^^^^^^^^^^^^^^\\n    |\\n    = help: add #![feature(process_abort)] to the crate attributes to enable\\n\\n   Compiling phf_shared v0.7.21\\nerror: aborting due to previous error\\n\\nerror: Could not compile `servo_arc`.\\nerror: build failed\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/0066869dc09d9c63c5d90bb55884f0150f84c3af/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\nBuild failed, waiting for other jobs to finish...\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: Some(stack backtrace:\n   0:     0x563674e83b6e - backtrace::backtrace::libunwind::trace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace<closure>\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/backtrace/mod.rs:42\n   1:     0x563674e83bae - backtrace::capture::{{impl}}::new_unresolved\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:88\n                         - backtrace::capture::{{impl}}::new\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.3/src/capture.rs:63\n   2:     0x563674d79786 - error_chain::make_backtrace\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:529\n   3:     0x563674d79848 - error_chain::{{impl}}::default\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/error-chain-0.11.0-rc.2/src/lib.rs:622\n   4:     0x563674d602d0 - collector::errors::{{impl}}::from_kind\n                        at /home/alex/code/rustc-perf/<error_chain_processed macros>:53\n                         - collector::errors::{{impl}}::from\n                        at collector/src/bin/rustc-perf-collector/main.rs:19\n                         - core::convert::{{impl}}::into<alloc::string::String,collector::errors::Error>\n                        at /checkout/src/libcore/convert.rs:398\n                         - collector::execute::{{impl}}::run\n                        at collector/src/bin/rustc-perf-collector/execute.rs:88\n   5:     0x563674d680f6 - collector::bench_commit::{{closure}}\n                        at collector/src/bin/rustc-perf-collector/main.rs:76\n                         - core::ops::function::impls::{{impl}}::call_once<(&collector::execute::Benchmark),closure>\n                        at /checkout/src/libcore/ops/function.rs:271\n                         - core::option::{{impl}}::map<&collector::execute::Benchmark,(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),&mut closure>\n                        at /checkout/src/libcore/option.rs:398\n                         - core::iter::{{impl}}::next<(alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>),core::slice::Iter<collector::execute::Benchmark>,closure>\n                        at /checkout/src/libcore/iter/mod.rs:1073\n                         - alloc::btree::map::{{impl}}::extend<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1681\n                         - alloc::btree::map::{{impl}}::from_iter<alloc::string::String,core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>,core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>>\n                        at /checkout/src/liballoc/btree/map.rs:1672\n                         - core::iter::iterator::Iterator::collect<core::iter::Map<core::slice::Iter<collector::execute::Benchmark>, closure>,alloc::btree::map::BTreeMap<alloc::string::String, core::result::Result<alloc::vec::Vec<collector::Patch>, alloc::string::String>>>\n                        at /checkout/src/libcore/iter/iterator.rs:1302\n                         - collector::bench_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:67\n   6:     0x563674d690f6 - collector::process_commit\n                        at collector/src/bin/rustc-perf-collector/main.rs:141\n   7:     0x563674d70962 - collector::process_commits\n                        at collector/src/bin/rustc-perf-collector/main.rs:172\n                         - collector::run\n                        at collector/src/bin/rustc-perf-collector/main.rs:227\n   8:     0x563674d74837 - collector::main\n                        at /home/alex/code/rustc-perf/<quick_main macros>:4\n   9:     0x563674ffc59c - panic_unwind::__rust_maybe_catch_panic\n                        at /checkout/src/libpanic_unwind/lib.rs:98\n  10:     0x563674ff5c1b - std::panicking::try<(),closure>\n                        at /checkout/src/libstd/panicking.rs:459\n                         - std::panic::catch_unwind<closure,()>\n                        at /checkout/src/libstd/panic.rs:361\n                         - std::rt::lang_start\n                        at /checkout/src/libstd/rt.rs:61\n  11:     0x7f3fc2fe482f - __libc_start_main\n  12:     0x563674d38d08 - _start\n  13:                0x0 - <unknown>) })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":146211792707.0},{"name":"cycles:u","cnt":116386579391.0},{"name":"task-clock","cnt":29435.528575},{"name":"cpu-clock","cnt":29435.552695},{"name":"faults","cnt":100187.0},{"name":"max-rss","cnt":779508.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":220584765301.0},{"name":"cycles:u","cnt":224459176499.0},{"name":"task-clock","cnt":58913.630545},{"name":"cpu-clock","cnt":58913.001763},{"name":"faults","cnt":144198.0},{"name":"max-rss","cnt":1417724.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":74685541113.0},{"name":"cycles:u","cnt":51242389020.0},{"name":"task-clock","cnt":13213.208039},{"name":"cpu-clock","cnt":13212.613705},{"name":"faults","cnt":58911.0},{"name":"max-rss","cnt":849488.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28518906285.0},{"name":"cycles:u","cnt":23659108950.0},{"name":"task-clock","cnt":5481.096484},{"name":"cpu-clock","cnt":6101.16988},{"name":"faults","cnt":43078.0},{"name":"max-rss","cnt":307112.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":42122997375.0},{"name":"cycles:u","cnt":46046792573.0},{"name":"task-clock","cnt":11853.332619},{"name":"cpu-clock","cnt":12245.668904},{"name":"faults","cnt":47509.0},{"name":"max-rss","cnt":477724.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9994935949.0},{"name":"cycles:u","cnt":6805144566.0},{"name":"task-clock","cnt":1156.964195},{"name":"cpu-clock","cnt":1903.590569},{"name":"faults","cnt":49406.0},{"name":"max-rss","cnt":241176.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":42569241887.0},{"name":"cycles:u","cnt":46477749126.0},{"name":"task-clock","cnt":12332.740929},{"name":"cpu-clock","cnt":12355.818012},{"name":"faults","cnt":49794.0},{"name":"max-rss","cnt":488016.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":21618379766.0},{"name":"cycles:u","cnt":16476940887.0},{"name":"task-clock","cnt":4165.191762},{"name":"cpu-clock","cnt":4232.448412},{"name":"faults","cnt":59196.0},{"name":"max-rss","cnt":471156.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}