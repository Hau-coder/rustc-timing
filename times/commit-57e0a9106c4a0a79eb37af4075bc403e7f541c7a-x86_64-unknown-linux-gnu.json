{"commit":{"sha":"57e0a9106c4a0a79eb37af4075bc403e7f541c7a","date":"2000-01-01T00:00:00+00:00"},"benchmarks":{"cargo":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking crates-io v0.17.0 (/tmp/.tmpa9YdB7/src/crates-io)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `crates-io`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"clap-rs":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: profile `doc` is deprecated and has no effect\\n    Checking clap v2.29.0 (/tmp/.tmpcZu2CY)\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/app/settings.rs:3:5\\n  |\\n3 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/app/validator.rs:4:5\\n  |\\n4 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/args/settings.rs:3:5\\n  |\\n3 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/completions/zsh.rs:4:5\\n  |\\n4 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/completions/shell.rs:2:5\\n  |\\n2 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C codegen-units=4 -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `clap`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=2324277685;;instructions:u;452032992;100.00;1.47;insn per cycle\\n1580030527;;cycles:u;452032992;100.00;3.495;GHz\\n452.037140;;task-clock;452037140;100.00;1.035;CPUs utilized\\n452.039061;;cpu-clock;452037140;100.00;1.035;CPUs utilized\\n49549;;faults;452037140;100.00;0.110;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"coercions":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-32278-big-array-of-strings v0.1.0 (/tmp/.tmpdlU8SQ)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-32278-big-array-of-strings`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=1147623468;;instructions:u;158817948;100.00;2.06;insn per cycle\\n556771039;;cycles:u;158817948;100.00;3.506;GHz\\n158.804609;;task-clock;158804609;100.00;0.891;CPUs utilized\\n158.803733;;cpu-clock;158804609;100.00;0.891;CPUs utilized\\n15318;;faults;158804609;100.00;0.096;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"cranelift-codegen":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling cranelift-entity v0.30.0 (/tmp/.tmpHOWK5p/cranelift-entity)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `cranelift-entity`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: Could not compile `cranelift-entity`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"crates.io":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cargo-registry-s3 v0.2.0 (/tmp/.tmpyQqmYv/src/s3)\\n   Compiling cargo-registry v0.2.1 (/tmp/.tmpyQqmYv)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `cargo-registry-s3`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `cargo-registry`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"ctfe-stress-2":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking ctfe-stress-2 v0.1.0 (/tmp/.tmpsC1svb)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `ctfe-stress-2`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=210416402;;instructions:u;94031033;100.00;1.48;insn per cycle\\n141914381;;cycles:u;94031033;100.00;1.509;GHz\\n94.020331;;task-clock;94020331;100.00;0.855;CPUs utilized\\n94.033277;;cpu-clock;94020331;100.00;0.855;CPUs utilized\\n44411;;faults;94020331;100.00;0.472;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"deep-vector":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-20936-deep-vector v0.1.0 (/tmp/.tmpkIU5iP)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-20936-deep-vector`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=2370359619;;instructions:u;336458248;100.00;1.95;insn per cycle\\n1215600276;;cycles:u;336458248;100.00;3.613;GHz\\n336.446166;;task-clock;336446166;100.00;0.955;CPUs utilized\\n336.445468;;cpu-clock;336446166;100.00;0.955;CPUs utilized\\n33455;;faults;336446166;100.00;0.099;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"deeply-nested":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking deeply-nested v0.1.0 (/tmp/.tmpNvrwhz)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `deeply-nested`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=165234188;;instructions:u;39486528;100.00;1.41;insn per cycle\\n116866337;;cycles:u;39486528;100.00;2.962;GHz\\n39.457518;;task-clock;39457518;100.00;1.017;CPUs utilized\\n39.456865;;cpu-clock;39457518;100.00;1.017;CPUs utilized\\n5592;;faults;39457518;100.00;0.142;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"encoding":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking encoding_index_tests v0.1.5 (/tmp/.tmpFGvA2r/src/index/tests)\\n    Checking encoding-types v0.2.0 (/tmp/.tmpFGvA2r/src/types)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `encoding_index_tests`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `encoding-types`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"futures":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: package replacement is not used: https://github.com/rust-lang/crates.io-index#openssl:0.7.14\\n    Checking futures v0.1.0 (/tmp/.tmp0dQZNO)\\nwarning: unused `#[macro_use]` import\\n  --> src/lib.rs:17:1\\n   |\\n17 | #[macro_use]\\n   | ^^^^^^^^^^^^\\n   |\\n   = note: #[warn(unused_imports)] on by default\\n\\nwarning: unused imports: `ATOMIC_USIZE_INIT`, `AtomicUsize`\\n  --> src/task.rs:54:25\\n   |\\n54 | use std::sync::atomic::{AtomicUsize, AtomicBool, ATOMIC_USIZE_INIT, Ordering};\\n   |                         ^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^\\n\\nwarning: unused imports: `TryRecvError`, `channel`\\n --> src/all/mod.rs:1:23\\n  |\\n1 | use std::sync::mpsc::{channel, TryRecvError};\\n  |                       ^^^^^^^  ^^^^^^^^^^^^\\n\\nwarning: unused import: `*`\\n --> src/all/mod.rs:3:5\\n  |\\n3 | use *;\\n  |     ^\\n\\nwarning: unused import: `self::support::*`\\n --> src/all/mod.rs:6:5\\n  |\\n6 | use self::support::*;\\n  |     ^^^^^^^^^^^^^^^^\\n\\nwarning: use of deprecated item \\'std::sync::atomic::ATOMIC_USIZE_INIT\\': the `new` function is now preferred\\n  --> src/task.rs:54:50\\n   |\\n54 | use std::sync::atomic::{AtomicUsize, AtomicBool, ATOMIC_USIZE_INIT, Ordering};\\n   |                                                  ^^^^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `futures`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=609537012;;instructions:u;122813206;100.00;1.47;insn per cycle\\n415368912;;cycles:u;122813206;100.00;3.383;GHz\\n122.792570;;task-clock;122792570;100.00;0.956;CPUs utilized\\n122.791645;;cpu-clock;122792570;100.00;0.956;CPUs utilized\\n14310;;faults;122792570;100.00;0.117;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"helloworld":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking helloworld v0.1.0 (/tmp/.tmpw2vpIF)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `helloworld`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=161356860;;instructions:u;38233791;100.00;1.42;insn per cycle\\n113944237;;cycles:u;38233791;100.00;2.982;GHz\\n38.213355;;task-clock;38213355;100.00;1.001;CPUs utilized\\n38.211933;;cpu-clock;38213355;100.00;1.001;CPUs utilized\\n5392;;faults;38213355;100.00;0.141;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"html5ever":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling html5ever v0.5.4 (/tmp/.tmpespZAV)\\nwarning: use of deprecated item \\'std::hash::SipHasher\\': use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item \\'std::hash::SipHasher\\': use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:72:35\\n   |\\n72 |     use std::hash::{Hash, Hasher, SipHasher};\\n   |                                   ^^^^^^^^^\\n\\nwarning: use of deprecated item \\'std::hash::SipHasher::new\\': use `std::collections::hash_map::DefaultHasher` instead\\n  --> build.rs:78:22\\n   |\\n78 |     let mut hasher = SipHasher::new();\\n   |                      ^^^^^^^^^^^^^^\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `html5ever`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"hyper":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking hyper v0.5.0 (/tmp/.tmpUoWkHd)\\nwarning: unused macro definition\\n   --> src/lib.rs:164:1\\n    |\\n164 | / macro_rules! inspect(\\n165 | |     ($name:expr, $value:expr) => ({\\n166 | |         let v = $value;\\n167 | |         trace!(\\\"inspect: {:?} = {:?}\\\", $name, v);\\n168 | |         v\\n169 | |     })\\n170 | | );\\n    | |__^\\n    |\\n    = note: #[warn(unused_macros)] on by default\\n\\nwarning: unused macro definition\\n  --> src/server/mod.rs:68:1\\n   |\\n68 | / macro_rules! try_option(\\n69 | |     ($e:expr) => {{\\n70 | |         match $e {\\n71 | |             Some(v) => v,\\n...  |\\n74 | |     }}\\n75 | | );\\n   | |__^\\n\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/header/common/pragma.rs:2:5\\n  |\\n2 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: #[warn(deprecated)] on by default\\n\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/header/shared/charset.rs:3:5\\n  |\\n3 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `hyper`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=1247165759;;instructions:u;262223963;100.00;1.35;insn per cycle\\n923851991;;cycles:u;262223963;100.00;3.523;GHz\\n262.212923;;task-clock;262212923;100.00;1.020;CPUs utilized\\n262.212867;;cpu-clock;262212923;100.00;1.020;CPUs utilized\\n24144;;faults;262212923;100.00;0.092;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"inflate":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking inflate v0.1.0 (/tmp/.tmpwCFOnP)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `inflate`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=669108945;;instructions:u;126786662;100.00;1.51;insn per cycle\\n442926661;;cycles:u;126786662;100.00;3.494;GHz\\n126.761553;;task-clock;126761553;100.00;0.906;CPUs utilized\\n126.771315;;cpu-clock;126761553;100.00;0.906;CPUs utilized\\n11271;;faults;126761553;100.00;0.089;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"issue-46449":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-46649-byte-filling-slowing-down-sroa v0.1.0 (/tmp/.tmphuN288)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-46649-byte-filling-slowing-down-sroa`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=173083724;;instructions:u;40400430;100.00;1.43;insn per cycle\\n120822626;;cycles:u;40400430;100.00;2.992;GHz\\n40.387395;;task-clock;40387395;100.00;1.022;CPUs utilized\\n40.386514;;cpu-clock;40387395;100.00;1.022;CPUs utilized\\n5992;;faults;40387395;100.00;0.148;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"keccak":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking keccak v0.1.0 (/tmp/.tmpHM8Heq)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `keccak`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=1396979953;;instructions:u;322341380;100.00;1.20;insn per cycle\\n1168315285;;cycles:u;322341380;100.00;3.625;GHz\\n322.330268;;task-clock;322330268;100.00;0.999;CPUs utilized\\n322.339980;;cpu-clock;322330268;100.00;0.999;CPUs utilized\\n27726;;faults;322330268;100.00;0.086;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking packed_simd v0.3.0 (/tmp/.tmpW5sGCW)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=13651614719;;instructions:u;2784639527;100.00;1.31;insn per cycle\\n10398118167;;cycles:u;2784639527;100.00;3.734;GHz\\n2784.624750;;task-clock;2784624750;100.00;1.164;CPUs utilized\\n2784.642996;;cpu-clock;2784624750;100.00;1.164;CPUs utilized\\n172631;;faults;2784624750;100.00;0.062;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking image v0.10.3 (/tmp/.tmpDHT04V)\\nwarning: use of deprecated item \\'std::ascii::AsciiExt\\': use inherent methods instead\\n --> src/dynimage.rs:6:5\\n  |\\n6 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: #[warn(deprecated)] on by default\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `image`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=1432776486;;instructions:u;290660569;100.00;1.39;insn per cycle\\n1030866500;;cycles:u;290660569;100.00;3.547;GHz\\n290.642548;;task-clock;290642548;100.00;1.033;CPUs utilized\\n290.644143;;cpu-clock;290642548;100.00;1.033;CPUs utilized\\n26422;;faults;290642548;100.00;0.091;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"regex":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking regex-syntax v0.3.9 (/tmp/.tmpR4r7Qc/regex-syntax)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `regex-syntax`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"regression-31157":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking parser v0.1.0 (/tmp/.tmp45RHF1)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `parser`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=262687574;;instructions:u;57948851;100.00;1.44;insn per cycle\\n182468358;;cycles:u;57948851;100.00;3.149;GHz\\n57.937732;;task-clock;57937732;100.00;1.078;CPUs utilized\\n57.936441;;cpu-clock;57937732;100.00;1.078;CPUs utilized\\n7996;;faults;57937732;100.00;0.138;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"ripgrep":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: /tmp/.tmpfofxKw/Cargo.toml: An explicit [[test]] section is specified in Cargo.toml which currently\\ndisables Cargo from automatically inferring other test targets.\\nThis inference behavior will change in the Rust 2018 edition and the following\\nfiles will be included as a test target:\\n\\n* /tmp/.tmpfofxKw/tests/hay.rs\\n* /tmp/.tmpfofxKw/tests/workdir.rs\\n\\nThis is likely to break cargo build or cargo test as these files may not be\\nready to be compiled as a test target today. You can future-proof yourself\\nand disable this warning by adding `autotests = false` to your [package]\\nsection. You may also move the files to a location where Cargo would not\\nautomatically infer them to be a target, such as in subfolders.\\n\\nFor more information on this warning you can consult\\nhttps://github.com/rust-lang/cargo/issues/5330\\nwarning: Pattern matching for Cargo\\'s include/exclude fields is changing and file `HomebrewFormula/ripgrep-bin.rb` WILL be excluded in a future Cargo version.\\nSee https://github.com/rust-lang/cargo/issues/4268 for more info\\n    Checking termcolor v0.3.6 (/tmp/.tmpfofxKw/termcolor)\\n   Compiling ripgrep v0.8.1 (/tmp/.tmpfofxKw)\\n    Checking globset v0.4.0 (/tmp/.tmpfofxKw/globset)\\n    Checking grep v0.1.8 (/tmp/.tmpfofxKw/grep)\\nwarning: use of deprecated item \\'std::error::Error::cause\\': replaced by Error::source, which can support downcasting\\n  --> grep/src/lib.rs:56:42\\n   |\\n56 |             Error::Regex(ref err) => err.cause(),\\n   |                                          ^^^^^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `termcolor`.\\nwarning: build failed, waiting for other jobs to finish...\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `grep`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `ripgrep`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `globset`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"script-servo":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling dom_struct v0.0.1 (/tmp/.tmpypzT50/components/dom_struct)\\n   Compiling script_plugins v0.0.1 (/tmp/.tmpypzT50/components/script_plugins)\\n    Checking hashglobe v0.1.0 (/tmp/.tmpypzT50/components/hashglobe)\\n    Checking servo_allocator v0.0.1 (/tmp/.tmpypzT50/components/allocator)\\n    Checking servo_arc v0.0.1 (/tmp/.tmpypzT50/components/servo_arc)\\n    Checking servo_rand v0.0.1 (/tmp/.tmpypzT50/components/rand)\\n   Compiling style v0.0.1 (/tmp/.tmpypzT50/components/style)\\n    Checking lru_cache v0.0.1 (/tmp/.tmpypzT50/components/lru_cache)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `servo_allocator`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `style`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `servo_rand`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: Could not compile `lru_cache`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C prefer-dynamic -C debuginfo=2 -C incremental --crate-type proc-macro\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `dom_struct`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: Could not compile `servo_arc`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `hashglobe`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C prefer-dynamic -C debuginfo=2 -C incremental --crate-type dylib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `script_plugins`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"sentry-cli":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling sentry-cli v1.21.0 (/tmp/.tmpIX8RBL)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C codegen-units=2 -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `sentry-cli`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"serde":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking serde v1.0.37 (/tmp/.tmpNvCHla/serde)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `serde`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=2924488507;;instructions:u;566462475;100.00;1.41;insn per cycle\\n2073348998;;cycles:u;566462475;100.00;3.660;GHz\\n566.468543;;task-clock;566468543;100.00;1.055;CPUs utilized\\n566.469548;;cpu-clock;566468543;100.00;1.055;CPUs utilized\\n43828;;faults;566468543;100.00;0.077;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"style-servo":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking nsstring_vendor v0.1.0 (/tmp/.tmpfLKzoP/components/style/gecko_bindings/nsstring_vendor)\\n    Checking servo_arc v0.0.1 (/tmp/.tmpfLKzoP/components/servo_arc)\\n   Compiling style v0.0.1 (/tmp/.tmpfLKzoP/components/style)\\n    Checking hashglobe v0.1.0 (/tmp/.tmpfLKzoP/components/hashglobe)\\n    Checking lru_cache v0.0.1 (/tmp/.tmpfLKzoP/components/lru_cache)\\n   Compiling selectors v0.19.0 (/tmp/.tmpfLKzoP/components/selectors)\\n   Compiling malloc_size_of_derive v0.0.1 (/tmp/.tmpfLKzoP/components/malloc_size_of_derive)\\n   Compiling style_derive v0.0.1 (/tmp/.tmpfLKzoP/components/style_derive)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C prefer-dynamic -C debuginfo=2 -C incremental --crate-type proc-macro\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `malloc_size_of_derive`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `lru_cache`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\n\\nerror: Could not compile `selectors`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `servo_arc`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: Could not compile `style`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `nsstring_vendor`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nwarning: use of deprecated item \\'core::str::<impl str>::trim_right_matches\\': superseded by `trim_end_matches`\\n   --> components/style_derive/to_css.rs:100:29\\n    |\\n100 |     camel_case = camel_case.trim_right_matches(\\'_\\');\\n    |                             ^^^^^^^^^^^^^^^^^^ help: replace the use of the deprecated item: `trim_end_matches`\\n    |\\n    = note: #[warn(deprecated)] on by default\\n\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C prefer-dynamic -C debuginfo=2 -C incremental --crate-type proc-macro\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `hashglobe`.\\nwarning: build failed, waiting for other jobs to finish...\\nerror: Could not compile `style_derive`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"syn":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking synom v0.11.3 (/tmp/.tmpj82xVA/synom)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `synom`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"tokio-webpush-simple":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking webpush-server v0.1.0 (/tmp/.tmpZFLHqA)\\nwarning: use of deprecated item \\'std::error::Error::cause\\': replaced by Error::source, which can support downcasting\\n  --> src/main.rs:43:5\\n   |\\n43 | /     error_chain! {\\n44 | |         foreign_links {\\n45 | |             Ws(tungstenite::Error);\\n46 | |             Io(io::Error);\\n47 | |             Json(serde_json::Error);\\n48 | |         }\\n49 | |     }\\n   | |_____^\\n   |\\n   = note: #[warn(deprecated)] on by default\\n   = note: this warning originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\\n\\nwarning: use of deprecated item \\'std::error::Error::cause\\': replaced by Error::source, which can support downcasting\\n  --> src/main.rs:43:5\\n   |\\n43 | /     error_chain! {\\n44 | |         foreign_links {\\n45 | |             Ws(tungstenite::Error);\\n46 | |             Io(io::Error);\\n47 | |             Json(serde_json::Error);\\n48 | |         }\\n49 | |     }\\n   | |_____^\\n   |\\n   = note: this warning originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\\n\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `webpush-server`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=554010609;;instructions:u;120520913;100.00;1.39;insn per cycle\\n397636492;;cycles:u;120520913;100.00;3.300;GHz\\n120.509484;;task-clock;120509484;100.00;1.089;CPUs utilized\\n120.508622;;cpu-clock;120509484;100.00;1.089;CPUs utilized\\n13886;;faults;120509484;100.00;0.115;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"tuple-stress":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking tuple-stress v0.1.0 (/tmp/.tmp6ZUAPO)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `tuple-stress`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=4541087164;;instructions:u;756643771;100.00;1.62;insn per cycle\\n2798563847;;cycles:u;756643771;100.00;3.699;GHz\\n756.645957;;task-clock;756645957;100.00;0.979;CPUs utilized\\n756.645308;;cpu-clock;756645957;100.00;0.979;CPUs utilized\\n54537;;faults;756645957;100.00;0.072;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"ucd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking ucd v0.1.1 (/tmp/.tmpE3f9sr)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `ucd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=6586284299;;instructions:u;1025293401;100.00;1.73;insn per cycle\\n3807845272;;cycles:u;1025293401;100.00;3.714;GHz\\n1025.282079;;task-clock;1025282079;100.00;0.992;CPUs utilized\\n1025.281947;;cpu-clock;1025282079;100.00;0.992;CPUs utilized\\n75314;;faults;1025282079;100.00;0.073;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"unicode_normalization":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking unicode-normalization v0.1.7 (/tmp/.tmp1GkpGT)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<rustc::ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&rustc::ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `unicode-normalization`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=965180220;;instructions:u;156507980;100.00;1.75;insn per cycle\\n550322754;;cycles:u;156507980;100.00;3.516;GHz\\n156.512595;;task-clock;156512595;100.00;0.919;CPUs utilized\\n156.511409;;cpu-clock;156512595;100.00;0.919;CPUs utilized\\n14401;;faults;156512595;100.00;0.092;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"unify-linearly":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-32062-equality-relations-complexity v0.1.0 (/tmp/.tmpeYBH2h)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-32062-equality-relations-complexity`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=167366606;;instructions:u;40900625;100.00;1.39;insn per cycle\\n120618341;;cycles:u;40900625;100.00;2.951;GHz\\n40.879974;;task-clock;40879974;100.00;1.006;CPUs utilized\\n40.879013;;cpu-clock;40879974;100.00;1.006;CPUs utilized\\n5617;;faults;40879974;100.00;0.137;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"unused-warnings":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-43572-unused-uses v0.1.0 (/tmp/.tmpUH4wBa)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-43572-unused-uses`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=2176273449;;instructions:u;473841875;100.00;1.31;insn per cycle\\n1664147409;;cycles:u;473841875;100.00;3.512;GHz\\n473.824545;;task-clock;473824545;100.00;1.097;CPUs utilized\\n473.824392;;cpu-clock;473824545;100.00;1.097;CPUs utilized\\n54579;;faults;473824545;100.00;0.115;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"webrender":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: /tmp/.tmpAYd2cA/Cargo.toml: unused manifest key: patch.crates-io.serde_derive.feature\\nwarning: /tmp/.tmpAYd2cA/Cargo.toml: unused manifest key: workspace.license\\n   Compiling webrender v0.57.2 (/tmp/.tmpAYd2cA/webrender)\\n    Checking webrender_api v0.57.2 (/tmp/.tmpAYd2cA/webrender_api)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `webrender`.\\nwarning: build failed, waiting for other jobs to finish...\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nerror: Could not compile `webrender_api`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"},"wg-grammar":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking rust-grammar v0.1.0 (/tmp/.tmpyLy0x0)\\nthread \\'rustc\\' panicked at \\'missing specialization: `<ty::query::on_disk_cache::CacheDecoder as SpecializedDecoder<&ty::GenericPredicates>>::specialized_decode` not overridden\\', src/libserialize/serialize.rs:838:9\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\n\\nerror: internal compiler error: unexpected panic\\n\\nnote: the compiler unexpectedly panicked. this is a bug.\\n\\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\\n\\nnote: rustc 1.36.0-nightly (57e0a9106 2019-04-23) running on x86_64-unknown-linux-gnu\\n\\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\\n\\nnote: some of the compiler flags provided by cargo are hidden\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:33:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `rust-grammar`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=764287543;;instructions:u;133736407;100.00;1.66;insn per cycle\\n461545656;;cycles:u;133736407;100.00;3.451;GHz\\n133.737182;;task-clock;133737182;100.00;0.945;CPUs utilized\\n133.736406;;cpu-clock;133737182;100.00;0.945;CPUs utilized\\n12798;;faults;133737182;100.00;0.096;M/sec\\n\" }\n\nstack backtrace:\n   0:     0x563215afc3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x563215afc552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x563215afb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x563215a97470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x563215785afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x56321578ddd9 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:737\n   6:     0x56321579f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x5632157aea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x5632157a496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x563215758e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x563215b230d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x563215b2dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x563215b23c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x5632157b2d57 - main\n  14:     0x7f4657a9582f - __libc_start_main\n  15:     0x56321574e518 - _start\n  16:                0x0 - <unknown>"}},"triple":"x86_64-unknown-linux-gnu"}