{"commit":{"sha":"3c3d3c1777041200bb7ed7a65b6562d62899778c","date":"2019-04-17T19:18:51+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":79780.0},{"name":"task-clock","cnt":7183.115005},{"name":"wall-time","cnt":7.228952844},{"name":"max-rss","cnt":425460.0},{"name":"cycles:u","cnt":28141521994.0},{"name":"cpu-clock","cnt":7183.106784},{"name":"instructions:u","cnt":33902236766.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":8.743379969},{"name":"instructions:u","cnt":41404396783.0},{"name":"faults","cnt":117879.0},{"name":"cpu-clock","cnt":8724.7931},{"name":"cycles:u","cnt":34105092321.0},{"name":"max-rss","cnt":576256.0},{"name":"task-clock","cnt":8724.791204}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":109474.0},{"name":"max-rss","cnt":537924.0},{"name":"instructions:u","cnt":11704032518.0},{"name":"cpu-clock","cnt":2409.316664},{"name":"cycles:u","cnt":9027275847.0},{"name":"task-clock","cnt":2409.328588},{"name":"wall-time","cnt":2.345050683}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":13195810709.0},{"name":"max-rss","cnt":551992.0},{"name":"task-clock","cnt":2808.182226},{"name":"faults","cnt":111167.0},{"name":"cpu-clock","cnt":2808.169848},{"name":"cycles:u","cnt":10621932220.0},{"name":"wall-time","cnt":2.74426257}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":45837.334624},{"name":"max-rss","cnt":1570488.0},{"name":"wall-time","cnt":18.813238819},{"name":"cycles:u","cnt":173391997637.0},{"name":"instructions:u","cnt":180713579588.0},{"name":"cpu-clock","cnt":45837.359688},{"name":"faults","cnt":403185.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":52952.385782},{"name":"cpu-clock","cnt":52952.443099},{"name":"max-rss","cnt":1529024.0},{"name":"wall-time","cnt":22.013007363},{"name":"instructions:u","cnt":206276207815.0},{"name":"faults","cnt":435292.0},{"name":"cycles:u","cnt":199893641605.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":15598243516.0},{"name":"max-rss","cnt":1156844.0},{"name":"faults","cnt":213230.0},{"name":"instructions:u","cnt":19022393681.0},{"name":"task-clock","cnt":4321.072813},{"name":"wall-time","cnt":4.220030644},{"name":"cpu-clock","cnt":4320.848191}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.749927969},{"name":"instructions:u","cnt":59651608884.0},{"name":"cpu-clock","cnt":14867.901923},{"name":"cycles:u","cnt":55252063412.0},{"name":"max-rss","cnt":1563776.0},{"name":"task-clock","cnt":14867.98457},{"name":"faults","cnt":333623.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":630282241083.0},{"name":"wall-time","cnt":38.641967552},{"name":"cycles:u","cnt":808466285137.0},{"name":"task-clock","cnt":214130.837825},{"name":"max-rss","cnt":1335452.0},{"name":"cpu-clock","cnt":214130.895262},{"name":"faults","cnt":429659.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":448631.0},{"name":"wall-time","cnt":43.405326653},{"name":"cpu-clock","cnt":259571.559067},{"name":"instructions:u","cnt":752870698330.0},{"name":"max-rss","cnt":1324392.0},{"name":"task-clock","cnt":259571.12287},{"name":"cycles:u","cnt":978612477987.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":3609.730485},{"name":"wall-time","cnt":3.303455579},{"name":"cpu-clock","cnt":3609.507616},{"name":"instructions:u","cnt":14856285602.0},{"name":"cycles:u","cnt":13016886815.0},{"name":"faults","cnt":215769.0},{"name":"max-rss","cnt":1001500.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":386540.0},{"name":"wall-time","cnt":24.617114131},{"name":"instructions:u","cnt":456353204055.0},{"name":"cpu-clock","cnt":153264.369867},{"name":"max-rss","cnt":1333200.0},{"name":"cycles:u","cnt":576932841503.0},{"name":"task-clock","cnt":153264.149551}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":3666.188801},{"name":"cycles:u","cnt":14393692938.0},{"name":"faults","cnt":47375.0},{"name":"wall-time","cnt":3.703281978},{"name":"instructions:u","cnt":18754636424.0},{"name":"max-rss","cnt":256324.0},{"name":"cpu-clock","cnt":3666.180533}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":100499.0},{"name":"max-rss","cnt":447632.0},{"name":"cycles:u","cnt":24507021087.0},{"name":"cpu-clock","cnt":6284.43997},{"name":"wall-time","cnt":6.321492026},{"name":"task-clock","cnt":6284.428635},{"name":"instructions:u","cnt":39437206865.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":6223408030.0},{"name":"faults","cnt":182059.0},{"name":"wall-time","cnt":1.781959173},{"name":"instructions:u","cnt":10233785815.0},{"name":"cpu-clock","cnt":1779.636916},{"name":"task-clock","cnt":1779.638059},{"name":"max-rss","cnt":812016.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":13988468065.0},{"name":"cycles:u","cnt":9396851505.0},{"name":"cpu-clock","cnt":2580.293131},{"name":"faults","cnt":183930.0},{"name":"max-rss","cnt":825400.0},{"name":"wall-time","cnt":2.579394901},{"name":"task-clock","cnt":2580.292281}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":71449742812.0},{"name":"wall-time","cnt":9.240952325},{"name":"task-clock","cnt":15361.640928},{"name":"cycles:u","cnt":58604661359.0},{"name":"max-rss","cnt":982280.0},{"name":"faults","cnt":245475.0},{"name":"cpu-clock","cnt":15361.647081}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":79978578528.0},{"name":"task-clock","cnt":20965.290115},{"name":"cpu-clock","cnt":20965.360207},{"name":"max-rss","cnt":959756.0},{"name":"instructions:u","cnt":96383791049.0},{"name":"wall-time","cnt":12.01120969},{"name":"faults","cnt":238355.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2414.737393},{"name":"faults","cnt":205656.0},{"name":"wall-time","cnt":2.369974876},{"name":"cycles:u","cnt":8424695357.0},{"name":"cpu-clock","cnt":2414.641815},{"name":"instructions:u","cnt":12896055746.0},{"name":"max-rss","cnt":944472.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":11270.61813},{"name":"cpu-clock","cnt":11270.576482},{"name":"max-rss","cnt":1418024.0},{"name":"faults","cnt":340525.0},{"name":"cycles:u","cnt":42294376533.0},{"name":"wall-time","cnt":7.549822848},{"name":"instructions:u","cnt":51019615668.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":54433.81724},{"name":"faults","cnt":146838.0},{"name":"cpu-clock","cnt":54433.878494},{"name":"max-rss","cnt":481356.0},{"name":"cycles:u","cnt":209428314680.0},{"name":"wall-time","cnt":25.872805295},{"name":"instructions:u","cnt":202798699614.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":656268.0},{"name":"cpu-clock","cnt":63090.065716},{"name":"cycles:u","cnt":241446637932.0},{"name":"task-clock","cnt":63089.941974},{"name":"instructions:u","cnt":232448713239.0},{"name":"faults","cnt":198399.0},{"name":"wall-time","cnt":26.794088873}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2362.774236},{"name":"faults","cnt":205397.0},{"name":"cycles:u","cnt":8294917080.0},{"name":"task-clock","cnt":2362.851419},{"name":"wall-time","cnt":2.311295507},{"name":"max-rss","cnt":915104.0},{"name":"instructions:u","cnt":12742204073.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":34534.996027},{"name":"cpu-clock","cnt":34535.038996},{"name":"wall-time","cnt":13.310348255},{"name":"faults","cnt":275249.0},{"name":"max-rss","cnt":1171572.0},{"name":"cycles:u","cnt":130884080168.0},{"name":"instructions:u","cnt":126377494719.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.802286041},{"name":"task-clock","cnt":771.726982},{"name":"max-rss","cnt":186156.0},{"name":"cycles:u","cnt":2926907251.0},{"name":"faults","cnt":27430.0},{"name":"cpu-clock","cnt":771.725696},{"name":"instructions:u","cnt":5404662235.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":193076.0},{"name":"task-clock","cnt":986.616621},{"name":"faults","cnt":28901.0},{"name":"instructions:u","cnt":7131669760.0},{"name":"wall-time","cnt":1.004628451},{"name":"cpu-clock","cnt":986.606562},{"name":"cycles:u","cnt":3780909451.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":23498.0},{"name":"instructions:u","cnt":1731119303.0},{"name":"cpu-clock","cnt":256.855983},{"name":"cycles:u","cnt":884450973.0},{"name":"task-clock","cnt":256.857353},{"name":"max-rss","cnt":160268.0},{"name":"wall-time","cnt":0.29078149}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1891878788.0},{"name":"max-rss","cnt":175780.0},{"name":"task-clock","cnt":287.517591},{"name":"cpu-clock","cnt":287.506735},{"name":"wall-time","cnt":0.305684179},{"name":"cycles:u","cnt":1001271569.0},{"name":"faults","cnt":23778.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":31313.0},{"name":"max-rss","cnt":204600.0},{"name":"instructions:u","cnt":7160616807.0},{"name":"task-clock","cnt":997.951525},{"name":"cpu-clock","cnt":997.950223},{"name":"cycles:u","cnt":3810830034.0},{"name":"wall-time","cnt":1.016237485}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1118.147273},{"name":"instructions:u","cnt":7229331078.0},{"name":"max-rss","cnt":279248.0},{"name":"faults","cnt":56708.0},{"name":"wall-time","cnt":1.144742137},{"name":"task-clock","cnt":1118.150832},{"name":"cycles:u","cnt":4090465762.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":290712.0},{"name":"cycles:u","cnt":4993312184.0},{"name":"faults","cnt":59181.0},{"name":"cpu-clock","cnt":1361.519777},{"name":"wall-time","cnt":1.338931557},{"name":"instructions:u","cnt":8973292613.0},{"name":"task-clock","cnt":1361.516069}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":32981.0},{"name":"max-rss","cnt":178280.0},{"name":"cycles:u","cnt":1245199212.0},{"name":"instructions:u","cnt":2234044266.0},{"name":"task-clock","cnt":384.225891},{"name":"cpu-clock","cnt":384.201878},{"name":"wall-time","cnt":0.416437333}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":655.023689},{"name":"max-rss","cnt":276792.0},{"name":"cycles:u","cnt":2216284144.0},{"name":"task-clock","cnt":655.001331},{"name":"faults","cnt":55090.0},{"name":"instructions:u","cnt":3703575735.0},{"name":"wall-time","cnt":0.587069187}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1373.847881},{"name":"max-rss","cnt":290556.0},{"name":"wall-time","cnt":1.324201048},{"name":"instructions:u","cnt":8960955280.0},{"name":"faults","cnt":61723.0},{"name":"cycles:u","cnt":5056164937.0},{"name":"task-clock","cnt":1373.860864}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"wall-time","cnt":0.953379896},{"name":"faults","cnt":35614.0},{"name":"max-rss","cnt":210056.0},{"name":"task-clock","cnt":930.254107},{"name":"instructions:u","cnt":6181563827.0},{"name":"cpu-clock","cnt":930.250523},{"name":"cycles:u","cnt":3483439604.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":217064.0},{"name":"cpu-clock","cnt":1145.821817},{"name":"instructions:u","cnt":7894372395.0},{"name":"task-clock","cnt":1145.836063},{"name":"cycles:u","cnt":4310658102.0},{"name":"wall-time","cnt":1.138569669},{"name":"faults","cnt":37193.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1092410537.0},{"name":"task-clock","cnt":329.410651},{"name":"instructions:u","cnt":2043238467.0},{"name":"wall-time","cnt":0.36116575},{"name":"faults","cnt":30273.0},{"name":"max-rss","cnt":178212.0},{"name":"cpu-clock","cnt":329.406046}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":443.503706},{"name":"wall-time","cnt":0.434998013},{"name":"cpu-clock","cnt":443.500033},{"name":"max-rss","cnt":200460.0},{"name":"faults","cnt":32334.0},{"name":"instructions:u","cnt":2642603842.0},{"name":"cycles:u","cnt":1529171397.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":4239061650.0},{"name":"task-clock","cnt":1135.473203},{"name":"faults","cnt":39791.0},{"name":"instructions:u","cnt":7890603021.0},{"name":"cpu-clock","cnt":1135.49054},{"name":"max-rss","cnt":220092.0},{"name":"wall-time","cnt":1.125838308}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":514280.0},{"name":"wall-time","cnt":6.069755938},{"name":"instructions:u","cnt":30050462889.0},{"name":"faults","cnt":105845.0},{"name":"cpu-clock","cnt":6034.361375},{"name":"task-clock","cnt":6034.359703},{"name":"cycles:u","cnt":23462081871.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":36392015267.0},{"name":"faults","cnt":129932.0},{"name":"cycles:u","cnt":28082514710.0},{"name":"cpu-clock","cnt":7208.123606},{"name":"task-clock","cnt":7208.11138},{"name":"wall-time","cnt":7.240173893},{"name":"max-rss","cnt":609304.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":86836.0},{"name":"cycles:u","cnt":5411398089.0},{"name":"wall-time","cnt":1.474138156},{"name":"task-clock","cnt":1495.63995},{"name":"max-rss","cnt":436324.0},{"name":"instructions:u","cnt":6999169445.0},{"name":"cpu-clock","cnt":1495.638018}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":15635.464207},{"name":"max-rss","cnt":765792.0},{"name":"instructions:u","cnt":69185492116.0},{"name":"task-clock","cnt":15635.436294},{"name":"cycles:u","cnt":59810675682.0},{"name":"faults","cnt":175179.0},{"name":"wall-time","cnt":9.21469929}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":11.313938237},{"name":"max-rss","cnt":833016.0},{"name":"task-clock","cnt":18898.881472},{"name":"instructions:u","cnt":85828051665.0},{"name":"cycles:u","cnt":72085373614.0},{"name":"cpu-clock","cnt":18898.933175},{"name":"faults","cnt":188884.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12014117084.0},{"name":"faults","cnt":150630.0},{"name":"max-rss","cnt":735264.0},{"name":"cpu-clock","cnt":2453.530259},{"name":"wall-time","cnt":2.356851417},{"name":"cycles:u","cnt":8651232587.0},{"name":"task-clock","cnt":2453.655023}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":70315.94256},{"name":"faults","cnt":284658.0},{"name":"cpu-clock","cnt":70316.00835},{"name":"cycles:u","cnt":266650827877.0},{"name":"wall-time","cnt":20.298475682},{"name":"max-rss","cnt":1146312.0},{"name":"instructions:u","cnt":226612590597.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":84857.01575},{"name":"wall-time","cnt":20.756738762},{"name":"cycles:u","cnt":319889436508.0},{"name":"faults","cnt":290577.0},{"name":"cpu-clock","cnt":84857.247674},{"name":"max-rss","cnt":1071152.0},{"name":"instructions:u","cnt":261733177552.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":728016.0},{"name":"instructions:u","cnt":11879405173.0},{"name":"faults","cnt":144779.0},{"name":"cycles:u","cnt":8631502875.0},{"name":"cpu-clock","cnt":2438.783178},{"name":"task-clock","cnt":2438.935519},{"name":"wall-time","cnt":2.318275945}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":383096.0},{"name":"cpu-clock","cnt":6287.438636},{"name":"cycles:u","cnt":24609969084.0},{"name":"wall-time","cnt":6.325591751},{"name":"instructions:u","cnt":32301181107.0},{"name":"task-clock","cnt":6287.445141},{"name":"faults","cnt":66000.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":7.714809782},{"name":"cycles:u","cnt":29923117828.0},{"name":"faults","cnt":104925.0},{"name":"instructions:u","cnt":38705229416.0},{"name":"cpu-clock","cnt":7652.850016},{"name":"max-rss","cnt":536704.0},{"name":"task-clock","cnt":7652.848731}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":7203054977.0},{"name":"wall-time","cnt":1.87654959},{"name":"task-clock","cnt":1942.053961},{"name":"cpu-clock","cnt":1942.051802},{"name":"faults","cnt":104689.0},{"name":"max-rss","cnt":531080.0},{"name":"instructions:u","cnt":9023238155.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":7895149410.0},{"name":"instructions:u","cnt":9984550617.0},{"name":"wall-time","cnt":2.047467622},{"name":"cpu-clock","cnt":2122.59964},{"name":"task-clock","cnt":2122.602604},{"name":"faults","cnt":104644.0},{"name":"max-rss","cnt":539160.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":1105464.0},{"name":"wall-time","cnt":13.03235672},{"name":"instructions:u","cnt":116207177058.0},{"name":"cpu-clock","cnt":27401.833394},{"name":"faults","cnt":242976.0},{"name":"task-clock","cnt":27401.811544},{"name":"cycles:u","cnt":103953550721.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":120547169709.0},{"name":"task-clock","cnt":31841.647874},{"name":"faults","cnt":268415.0},{"name":"instructions:u","cnt":130671331958.0},{"name":"cpu-clock","cnt":31841.69089},{"name":"max-rss","cnt":1190584.0},{"name":"wall-time","cnt":15.477310383}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3196.681806},{"name":"max-rss","cnt":927776.0},{"name":"cycles:u","cnt":11479347236.0},{"name":"faults","cnt":165333.0},{"name":"wall-time","cnt":3.075642889},{"name":"instructions:u","cnt":14046698430.0},{"name":"task-clock","cnt":3196.88375}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4414.46374},{"name":"wall-time","cnt":3.834450986},{"name":"task-clock","cnt":4414.632137},{"name":"cycles:u","cnt":16032871925.0},{"name":"faults","cnt":181574.0},{"name":"instructions:u","cnt":19302819122.0},{"name":"max-rss","cnt":990912.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":436202175479.0},{"name":"cpu-clock","cnt":115310.092094},{"name":"max-rss","cnt":968700.0},{"name":"faults","cnt":238634.0},{"name":"wall-time","cnt":23.997170574},{"name":"instructions:u","cnt":350228469156.0},{"name":"task-clock","cnt":115309.961727}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":394367783618.0},{"name":"task-clock","cnt":131656.757626},{"name":"faults","cnt":270817.0},{"name":"wall-time","cnt":25.49337211},{"name":"cpu-clock","cnt":131657.090184},{"name":"cycles:u","cnt":496978129932.0},{"name":"max-rss","cnt":1067724.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.883243524},{"name":"task-clock","cnt":3106.138656},{"name":"cycles:u","cnt":11262438996.0},{"name":"faults","cnt":164275.0},{"name":"instructions:u","cnt":13704523575.0},{"name":"cpu-clock","cnt":3105.922222},{"name":"max-rss","cnt":818368.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":15512.161276},{"name":"wall-time","cnt":6.155591511},{"name":"instructions:u","cnt":58710884708.0},{"name":"faults","cnt":202407.0},{"name":"cycles:u","cnt":58282164397.0},{"name":"cpu-clock","cnt":15512.012129},{"name":"max-rss","cnt":956916.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":7868.304993},{"name":"cycles:u","cnt":31186720288.0},{"name":"wall-time","cnt":7.932985959},{"name":"cpu-clock","cnt":7868.293594},{"name":"max-rss","cnt":253756.0},{"name":"instructions:u","cnt":67843760451.0},{"name":"faults","cnt":42980.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":38944907358.0},{"name":"faults","cnt":107191.0},{"name":"wall-time","cnt":9.961961133},{"name":"instructions:u","cnt":92069683497.0},{"name":"task-clock","cnt":9926.626884},{"name":"max-rss","cnt":502716.0},{"name":"cpu-clock","cnt":9926.636915}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":863.962261},{"name":"cpu-clock","cnt":863.961729},{"name":"instructions:u","cnt":5652994519.0},{"name":"faults","cnt":121452.0},{"name":"cycles:u","cnt":2583871405.0},{"name":"wall-time","cnt":0.898128171},{"name":"max-rss","cnt":554124.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":43291.0},{"name":"cycles:u","cnt":31359224183.0},{"name":"instructions:u","cnt":68256359828.0},{"name":"wall-time","cnt":7.972284887},{"name":"cpu-clock","cnt":7910.367302},{"name":"max-rss","cnt":258552.0},{"name":"task-clock","cnt":7910.349949}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":10.783237666},{"name":"faults","cnt":175604.0},{"name":"cpu-clock","cnt":10750.584773},{"name":"max-rss","cnt":761528.0},{"name":"cycles:u","cnt":41912522697.0},{"name":"instructions:u","cnt":100845873718.0},{"name":"task-clock","cnt":10750.57697}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1354.029026},{"name":"wall-time","cnt":1.387928382},{"name":"cycles:u","cnt":3972341156.0},{"name":"faults","cnt":233212.0},{"name":"instructions:u","cnt":8397793130.0},{"name":"cpu-clock","cnt":1354.026153},{"name":"max-rss","cnt":979724.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":43423.0},{"name":"instructions:u","cnt":55156453801.0},{"name":"cycles:u","cnt":25761579343.0},{"name":"task-clock","cnt":6513.273412},{"name":"wall-time","cnt":6.57345187},{"name":"max-rss","cnt":260700.0},{"name":"cpu-clock","cnt":6513.272216}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":87066501608.0},{"name":"cpu-clock","cnt":9446.453177},{"name":"cycles:u","cnt":36599174999.0},{"name":"task-clock","cnt":9446.456645},{"name":"wall-time","cnt":9.479063872},{"name":"faults","cnt":189330.0},{"name":"max-rss","cnt":740324.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1359.494046},{"name":"max-rss","cnt":977576.0},{"name":"task-clock","cnt":1359.495988},{"name":"instructions:u","cnt":8396533080.0},{"name":"faults","cnt":233154.0},{"name":"cycles:u","cnt":3985553284.0},{"name":"wall-time","cnt":1.39409153}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":289916.0},{"name":"wall-time","cnt":1.129801113},{"name":"cpu-clock","cnt":1093.141062},{"name":"faults","cnt":52460.0},{"name":"instructions:u","cnt":6994871894.0},{"name":"task-clock","cnt":1093.151164},{"name":"cycles:u","cnt":4128968127.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":289784.0},{"name":"wall-time","cnt":1.242869242},{"name":"cycles:u","cnt":4566529572.0},{"name":"faults","cnt":52324.0},{"name":"cpu-clock","cnt":1205.748817},{"name":"task-clock","cnt":1205.7501},{"name":"instructions:u","cnt":7999219259.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2508976027.0},{"name":"cpu-clock","cnt":357.49088},{"name":"wall-time","cnt":0.391403266},{"name":"task-clock","cnt":357.492221},{"name":"faults","cnt":33600.0},{"name":"cycles:u","cnt":1269706340.0},{"name":"max-rss","cnt":199796.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1200.161026},{"name":"cycles:u","cnt":4566616384.0},{"name":"max-rss","cnt":274772.0},{"name":"cpu-clock","cnt":1200.159812},{"name":"wall-time","cnt":1.217606052},{"name":"instructions:u","cnt":8004941938.0},{"name":"faults","cnt":47853.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":4564196536.0},{"name":"wall-time","cnt":1.241124171},{"name":"max-rss","cnt":288500.0},{"name":"faults","cnt":51363.0},{"name":"task-clock","cnt":1207.300779},{"name":"cpu-clock","cnt":1207.312061},{"name":"instructions:u","cnt":7983644608.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1691.545241},{"name":"max-rss","cnt":382972.0},{"name":"task-clock","cnt":1691.540972},{"name":"instructions:u","cnt":10134125633.0},{"name":"faults","cnt":80939.0},{"name":"cycles:u","cnt":6235424035.0},{"name":"wall-time","cnt":1.692308573}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1842.411065},{"name":"cycles:u","cnt":6868660544.0},{"name":"cpu-clock","cnt":1842.441104},{"name":"faults","cnt":86604.0},{"name":"max-rss","cnt":398448.0},{"name":"instructions:u","cnt":11528901674.0},{"name":"wall-time","cnt":1.822101061}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":3202371300.0},{"name":"cpu-clock","cnt":478.59891},{"name":"task-clock","cnt":478.614725},{"name":"faults","cnt":42903.0},{"name":"max-rss","cnt":225728.0},{"name":"cycles:u","cnt":1622417147.0},{"name":"wall-time","cnt":0.506198985}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":388072.0},{"name":"wall-time","cnt":1.820259652},{"name":"faults","cnt":82201.0},{"name":"cpu-clock","cnt":1864.120416},{"name":"cycles:u","cnt":6905493632.0},{"name":"instructions:u","cnt":11578653786.0},{"name":"task-clock","cnt":1864.128973}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1832.714785},{"name":"wall-time","cnt":1.806944159},{"name":"faults","cnt":83539.0},{"name":"cpu-clock","cnt":1832.703966},{"name":"max-rss","cnt":392348.0},{"name":"cycles:u","cnt":6826453786.0},{"name":"instructions:u","cnt":11571048023.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"task-clock","cnt":3138.377404},{"name":"max-rss","cnt":594828.0},{"name":"cpu-clock","cnt":3138.381651},{"name":"faults","cnt":140751.0},{"name":"cycles:u","cnt":11790987155.0},{"name":"wall-time","cnt":3.153188538},{"name":"instructions:u","cnt":17155528656.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":3251.348364},{"name":"cycles:u","cnt":12277226428.0},{"name":"max-rss","cnt":602300.0},{"name":"wall-time","cnt":3.21852437},{"name":"faults","cnt":142752.0},{"name":"task-clock","cnt":3251.314804},{"name":"instructions:u","cnt":18652985586.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1589469430.0},{"name":"cpu-clock","cnt":466.556689},{"name":"task-clock","cnt":466.550141},{"name":"wall-time","cnt":0.498973648},{"name":"faults","cnt":42304.0},{"name":"max-rss","cnt":225328.0},{"name":"instructions:u","cnt":3160584626.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":142093.0},{"name":"task-clock","cnt":3281.27294},{"name":"instructions:u","cnt":18722416254.0},{"name":"max-rss","cnt":601408.0},{"name":"wall-time","cnt":3.228912478},{"name":"cpu-clock","cnt":3281.26601},{"name":"cycles:u","cnt":12342130643.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":3241.087365},{"name":"faults","cnt":143870.0},{"name":"cycles:u","cnt":12057581823.0},{"name":"max-rss","cnt":606272.0},{"name":"cpu-clock","cnt":3241.08181},{"name":"wall-time","cnt":3.206532516},{"name":"instructions:u","cnt":18509917456.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":5755.0},{"name":"wall-time","cnt":0.099795772},{"name":"instructions:u","cnt":428630747.0},{"name":"task-clock","cnt":81.904713},{"name":"max-rss","cnt":110100.0},{"name":"cycles:u","cnt":271749759.0},{"name":"cpu-clock","cnt":81.903098}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":120404.0},{"name":"wall-time","cnt":0.112584512},{"name":"instructions:u","cnt":487287524.0},{"name":"task-clock","cnt":94.547489},{"name":"cycles:u","cnt":314172600.0},{"name":"faults","cnt":7304.0},{"name":"cpu-clock","cnt":94.557346}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":6030.0},{"name":"wall-time","cnt":0.061012499},{"name":"cpu-clock","cnt":43.487542},{"name":"cycles:u","cnt":119936346.0},{"name":"task-clock","cnt":43.489946},{"name":"max-rss","cnt":91744.0},{"name":"instructions:u","cnt":179228043.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":576549443.0},{"name":"cpu-clock","cnt":167.399654},{"name":"task-clock","cnt":167.408565},{"name":"max-rss","cnt":130136.0},{"name":"faults","cnt":8633.0},{"name":"wall-time","cnt":0.156584554},{"name":"instructions:u","cnt":776320545.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":184.196473},{"name":"instructions:u","cnt":849604975.0},{"name":"cpu-clock","cnt":184.182631},{"name":"faults","cnt":10277.0},{"name":"cycles:u","cnt":630821194.0},{"name":"wall-time","cnt":0.171085085},{"name":"max-rss","cnt":137784.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":7487.0},{"name":"instructions:u","cnt":270154980.0},{"name":"wall-time","cnt":0.079144041},{"name":"max-rss","cnt":111916.0},{"name":"cpu-clock","cnt":63.782302},{"name":"task-clock","cnt":63.777626},{"name":"cycles:u","cnt":183435970.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":246.974123},{"name":"faults","cnt":7738.0},{"name":"wall-time","cnt":0.204490103},{"name":"cycles:u","cnt":903555177.0},{"name":"task-clock","cnt":246.976173},{"name":"max-rss","cnt":128272.0},{"name":"instructions:u","cnt":1277061856.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":1349283166.0},{"name":"task-clock","cnt":264.039543},{"name":"faults","cnt":9400.0},{"name":"max-rss","cnt":135548.0},{"name":"cycles:u","cnt":959157279.0},{"name":"wall-time","cnt":0.219478754},{"name":"cpu-clock","cnt":264.044384}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":7353.0},{"name":"task-clock","cnt":62.269981},{"name":"max-rss","cnt":111464.0},{"name":"wall-time","cnt":0.07860887},{"name":"cycles:u","cnt":183086394.0},{"name":"instructions:u","cnt":267815071.0},{"name":"cpu-clock","cnt":62.275991}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.443019811},{"name":"task-clock","cnt":424.291095},{"name":"instructions:u","cnt":1909170011.0},{"name":"max-rss","cnt":144548.0},{"name":"cpu-clock","cnt":424.291152},{"name":"cycles:u","cnt":1601718600.0},{"name":"faults","cnt":12254.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":544.180073},{"name":"max-rss","cnt":171428.0},{"name":"cycles:u","cnt":2048671519.0},{"name":"wall-time","cnt":0.562107732},{"name":"faults","cnt":18748.0},{"name":"instructions:u","cnt":2446029811.0},{"name":"task-clock","cnt":544.168499}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":182.425732},{"name":"max-rss","cnt":162840.0},{"name":"cycles:u","cnt":609388686.0},{"name":"wall-time","cnt":0.191653908},{"name":"task-clock","cnt":182.411633},{"name":"faults","cnt":18301.0},{"name":"instructions:u","cnt":858836659.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":197.139701},{"name":"wall-time","cnt":0.206284342},{"name":"faults","cnt":18263.0},{"name":"cpu-clock","cnt":197.126281},{"name":"max-rss","cnt":169148.0},{"name":"cycles:u","cnt":664477649.0},{"name":"instructions:u","cnt":925618343.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":227784.0},{"name":"instructions:u","cnt":7704943375.0},{"name":"faults","cnt":30969.0},{"name":"wall-time","cnt":0.922385163},{"name":"task-clock","cnt":1823.801533},{"name":"cycles:u","cnt":6839905223.0},{"name":"cpu-clock","cnt":1823.806661}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":37271.0},{"name":"max-rss","cnt":250804.0},{"name":"wall-time","cnt":1.127720555},{"name":"cycles:u","cnt":8659901794.0},{"name":"instructions:u","cnt":9457145978.0},{"name":"cpu-clock","cnt":2337.326778},{"name":"task-clock","cnt":2337.327152}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.264615503},{"name":"faults","cnt":22930.0},{"name":"max-rss","cnt":188644.0},{"name":"instructions:u","cnt":1181947177.0},{"name":"cpu-clock","cnt":273.574979},{"name":"task-clock","cnt":273.650282},{"name":"cycles:u","cnt":865569870.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1288739211.0},{"name":"task-clock","cnt":298.822631},{"name":"faults","cnt":23571.0},{"name":"cpu-clock","cnt":298.754816},{"name":"max-rss","cnt":196080.0},{"name":"wall-time","cnt":0.30118643},{"name":"cycles:u","cnt":956419880.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":5307.641523},{"name":"max-rss","cnt":238916.0},{"name":"faults","cnt":33828.0},{"name":"wall-time","cnt":1.423585604},{"name":"cycles:u","cnt":19993189121.0},{"name":"instructions:u","cnt":18135919031.0},{"name":"task-clock","cnt":5307.650607}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":39648.0},{"name":"wall-time","cnt":1.620937858},{"name":"instructions:u","cnt":20211378383.0},{"name":"cpu-clock","cnt":5947.165857},{"name":"max-rss","cnt":259728.0},{"name":"cycles:u","cnt":22309503421.0},{"name":"task-clock","cnt":5947.154738}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":877803662.0},{"name":"task-clock","cnt":268.824788},{"name":"cpu-clock","cnt":268.817209},{"name":"max-rss","cnt":187736.0},{"name":"faults","cnt":22966.0},{"name":"instructions:u","cnt":1193878078.0},{"name":"wall-time","cnt":0.261544014}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":383.395371},{"name":"instructions:u","cnt":1691281325.0},{"name":"task-clock","cnt":383.438671},{"name":"max-rss","cnt":201000.0},{"name":"cycles:u","cnt":1320301400.0},{"name":"faults","cnt":24286.0},{"name":"wall-time","cnt":0.364136395}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":756.137351},{"name":"max-rss","cnt":140240.0},{"name":"instructions:u","cnt":3995848436.0},{"name":"cycles:u","cnt":2926837299.0},{"name":"faults","cnt":11844.0},{"name":"cpu-clock","cnt":756.136868},{"name":"wall-time","cnt":0.774159898}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3554272654.0},{"name":"max-rss","cnt":170600.0},{"name":"task-clock","cnt":923.270016},{"name":"instructions:u","cnt":4691383870.0},{"name":"faults","cnt":19124.0},{"name":"cpu-clock","cnt":923.268833},{"name":"wall-time","cnt":0.941246479}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":664875999.0},{"name":"max-rss","cnt":161976.0},{"name":"instructions:u","cnt":937786848.0},{"name":"task-clock","cnt":197.709727},{"name":"faults","cnt":18679.0},{"name":"cpu-clock","cnt":197.707987},{"name":"wall-time","cnt":0.205647032}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":948201462.0},{"name":"cycles:u","cnt":694618681.0},{"name":"task-clock","cnt":204.778539},{"name":"max-rss","cnt":162340.0},{"name":"wall-time","cnt":0.212422411},{"name":"faults","cnt":18676.0},{"name":"cpu-clock","cnt":204.777062}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1075.596544},{"name":"max-rss","cnt":164888.0},{"name":"cycles:u","cnt":4112288593.0},{"name":"instructions:u","cnt":5242110369.0},{"name":"task-clock","cnt":1075.591968},{"name":"faults","cnt":15857.0},{"name":"wall-time","cnt":0.913874658}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":6230701679.0},{"name":"cpu-clock","cnt":1341.528455},{"name":"cycles:u","cnt":5087199165.0},{"name":"task-clock","cnt":1341.530458},{"name":"faults","cnt":23836.0},{"name":"wall-time","cnt":1.129950894},{"name":"max-rss","cnt":195444.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":830566082.0},{"name":"faults","cnt":21732.0},{"name":"cpu-clock","cnt":251.371382},{"name":"instructions:u","cnt":1113808442.0},{"name":"task-clock","cnt":251.402794},{"name":"max-rss","cnt":180664.0},{"name":"wall-time","cnt":0.268219606}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":180956.0},{"name":"cycles:u","cnt":834901009.0},{"name":"faults","cnt":21752.0},{"name":"task-clock","cnt":252.596735},{"name":"cpu-clock","cnt":252.559158},{"name":"instructions:u","cnt":1126500288.0},{"name":"wall-time","cnt":0.250801182}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1629.336679},{"name":"wall-time","cnt":0.985236093},{"name":"cycles:u","cnt":6175998127.0},{"name":"max-rss","cnt":172976.0},{"name":"faults","cnt":17949.0},{"name":"task-clock","cnt":1629.340181},{"name":"instructions:u","cnt":6603163732.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":7658258042.0},{"name":"cpu-clock","cnt":1912.944074},{"name":"wall-time","cnt":1.183491559},{"name":"max-rss","cnt":202140.0},{"name":"task-clock","cnt":1912.953032},{"name":"faults","cnt":25287.0},{"name":"cycles:u","cnt":7220225214.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":247.00447},{"name":"cycles:u","cnt":819904749.0},{"name":"instructions:u","cnt":1106766252.0},{"name":"cpu-clock","cnt":246.98556},{"name":"faults","cnt":21702.0},{"name":"max-rss","cnt":179756.0},{"name":"wall-time","cnt":0.262795221}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1119086712.0},{"name":"cpu-clock","cnt":248.092294},{"name":"faults","cnt":21754.0},{"name":"cycles:u","cnt":830982948.0},{"name":"wall-time","cnt":0.247978186},{"name":"max-rss","cnt":180284.0},{"name":"task-clock","cnt":248.116919}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":191767141.0},{"name":"wall-time","cnt":0.062672496},{"name":"cycles:u","cnt":127667163.0},{"name":"max-rss","cnt":100060.0},{"name":"faults","cnt":4939.0},{"name":"task-clock","cnt":44.403358},{"name":"cpu-clock","cnt":44.401894}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":216424901.0},{"name":"wall-time","cnt":0.069082892},{"name":"max-rss","cnt":104988.0},{"name":"faults","cnt":6133.0},{"name":"task-clock","cnt":51.218725},{"name":"cpu-clock","cnt":51.215365},{"name":"cycles:u","cnt":148357471.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":40.897009},{"name":"task-clock","cnt":40.899662},{"name":"instructions:u","cnt":169151345.0},{"name":"cycles:u","cnt":113242191.0},{"name":"wall-time","cnt":0.058797924},{"name":"max-rss","cnt":89992.0},{"name":"faults","cnt":5564.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.069724838},{"name":"cpu-clock","cnt":51.969057},{"name":"task-clock","cnt":51.952726},{"name":"faults","cnt":6227.0},{"name":"cycles:u","cnt":150420777.0},{"name":"instructions:u","cnt":209999189.0},{"name":"max-rss","cnt":105756.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":12049.0},{"name":"cycles:u","cnt":358443699.0},{"name":"instructions:u","cnt":523285073.0},{"name":"task-clock","cnt":124.24226},{"name":"cpu-clock","cnt":124.227483},{"name":"max-rss","cnt":119088.0},{"name":"wall-time","cnt":0.132753296}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":571200222.0},{"name":"task-clock","cnt":135.694923},{"name":"cycles:u","cnt":394952560.0},{"name":"max-rss","cnt":124528.0},{"name":"cpu-clock","cnt":135.68634},{"name":"faults","cnt":13472.0},{"name":"wall-time","cnt":0.142858164}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":112.495374},{"name":"wall-time","cnt":0.126261763},{"name":"instructions:u","cnt":473863316.0},{"name":"faults","cnt":12750.0},{"name":"max-rss","cnt":108724.0},{"name":"cycles:u","cnt":309807128.0},{"name":"task-clock","cnt":112.499854}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":13755.0},{"name":"instructions:u","cnt":550432999.0},{"name":"max-rss","cnt":126316.0},{"name":"wall-time","cnt":0.139050114},{"name":"cpu-clock","cnt":132.054563},{"name":"cycles:u","cnt":379976671.0},{"name":"task-clock","cnt":132.061148}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.135084095},{"name":"instructions:u","cnt":549591623.0},{"name":"task-clock","cnt":127.598178},{"name":"cpu-clock","cnt":127.594078},{"name":"faults","cnt":11928.0},{"name":"max-rss","cnt":121560.0},{"name":"cycles:u","cnt":372423081.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.144401401},{"name":"instructions:u","cnt":596830004.0},{"name":"cycles:u","cnt":406135220.0},{"name":"cpu-clock","cnt":137.609812},{"name":"faults","cnt":13361.0},{"name":"task-clock","cnt":137.604062},{"name":"max-rss","cnt":127168.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":471283813.0},{"name":"task-clock","cnt":109.751671},{"name":"cpu-clock","cnt":109.746533},{"name":"faults","cnt":12486.0},{"name":"wall-time","cnt":0.124470428},{"name":"cycles:u","cnt":307471099.0},{"name":"max-rss","cnt":108292.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":577307199.0},{"name":"max-rss","cnt":128804.0},{"name":"wall-time","cnt":0.141748066},{"name":"task-clock","cnt":135.981005},{"name":"cpu-clock","cnt":135.966931},{"name":"faults","cnt":13634.0},{"name":"cycles:u","cnt":398723357.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1629.597918},{"name":"faults","cnt":35946.0},{"name":"cycles:u","cnt":6315080748.0},{"name":"task-clock","cnt":1629.597475},{"name":"wall-time","cnt":1.685976127},{"name":"instructions:u","cnt":9336615520.0},{"name":"max-rss","cnt":230128.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.082880058},{"name":"task-clock","cnt":2011.275094},{"name":"instructions:u","cnt":11829322688.0},{"name":"cycles:u","cnt":7766268290.0},{"name":"max-rss","cnt":258768.0},{"name":"cpu-clock","cnt":2011.273679},{"name":"faults","cnt":42240.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":37143.0},{"name":"cycles:u","cnt":2265515908.0},{"name":"max-rss","cnt":237936.0},{"name":"instructions:u","cnt":3968583274.0},{"name":"cpu-clock","cnt":621.82252},{"name":"wall-time","cnt":0.623884699},{"name":"task-clock","cnt":621.821897}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.743108318},{"name":"instructions:u","cnt":4497246743.0},{"name":"cycles:u","cnt":2732626597.0},{"name":"cpu-clock","cnt":740.657329},{"name":"max-rss","cnt":248500.0},{"name":"faults","cnt":38376.0},{"name":"task-clock","cnt":740.657438}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":2641.430402},{"name":"cycles:u","cnt":10081074340.0},{"name":"faults","cnt":49795.0},{"name":"cpu-clock","cnt":2641.440686},{"name":"max-rss","cnt":296228.0},{"name":"instructions:u","cnt":13420876040.0},{"name":"wall-time","cnt":2.10409957}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":16672772721.0},{"name":"cycles:u","cnt":11959235314.0},{"name":"max-rss","cnt":342392.0},{"name":"task-clock","cnt":3150.937642},{"name":"faults","cnt":61744.0},{"name":"wall-time","cnt":2.541929216},{"name":"cpu-clock","cnt":3150.969497}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":295884.0},{"name":"cycles:u","cnt":2703265906.0},{"name":"instructions:u","cnt":4506936494.0},{"name":"cpu-clock","cnt":769.422633},{"name":"faults","cnt":48335.0},{"name":"wall-time","cnt":0.75223596},{"name":"task-clock","cnt":769.478448}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":49599.0},{"name":"task-clock","cnt":878.994899},{"name":"max-rss","cnt":306260.0},{"name":"cycles:u","cnt":3148209341.0},{"name":"instructions:u","cnt":5069747813.0},{"name":"cpu-clock","cnt":878.93461},{"name":"wall-time","cnt":0.861642677}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":7201.437047},{"name":"wall-time","cnt":2.778820794},{"name":"instructions:u","cnt":27062063234.0},{"name":"faults","cnt":78851.0},{"name":"max-rss","cnt":384972.0},{"name":"task-clock","cnt":7201.444751},{"name":"cycles:u","cnt":27154351419.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7395.334871},{"name":"instructions:u","cnt":28202989568.0},{"name":"faults","cnt":70008.0},{"name":"max-rss","cnt":371360.0},{"name":"wall-time","cnt":3.048431252},{"name":"cycles:u","cnt":27915352575.0},{"name":"cpu-clock","cnt":7395.342233}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":301600.0},{"name":"task-clock","cnt":779.872996},{"name":"cpu-clock","cnt":779.836192},{"name":"instructions:u","cnt":4622487672.0},{"name":"cycles:u","cnt":2773436874.0},{"name":"faults","cnt":50580.0},{"name":"wall-time","cnt":0.750475234}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":52271.0},{"name":"wall-time","cnt":0.872543038},{"name":"cpu-clock","cnt":938.378379},{"name":"cycles:u","cnt":3362174239.0},{"name":"task-clock","cnt":938.45448},{"name":"instructions:u","cnt":5296829675.0},{"name":"max-rss","cnt":316228.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":4735309938.0},{"name":"cycles:u","cnt":4305297791.0},{"name":"cpu-clock","cnt":1114.123406},{"name":"max-rss","cnt":180332.0},{"name":"wall-time","cnt":1.132307569},{"name":"faults","cnt":21334.0},{"name":"task-clock","cnt":1114.123853}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":5497760748.0},{"name":"max-rss","cnt":233580.0},{"name":"instructions:u","cnt":6061690674.0},{"name":"task-clock","cnt":1430.969131},{"name":"wall-time","cnt":1.466498331},{"name":"cpu-clock","cnt":1430.977093},{"name":"faults","cnt":34596.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":33391.0},{"name":"max-rss","cnt":222444.0},{"name":"wall-time","cnt":0.447241712},{"name":"task-clock","cnt":435.064372},{"name":"cpu-clock","cnt":435.054829},{"name":"cycles:u","cnt":1521059530.0},{"name":"instructions:u","cnt":1914322924.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":34101.0},{"name":"max-rss","cnt":231960.0},{"name":"cpu-clock","cnt":451.012853},{"name":"instructions:u","cnt":2002242177.0},{"name":"wall-time","cnt":0.446300988},{"name":"cycles:u","cnt":1607503152.0},{"name":"task-clock","cnt":451.014058}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":2.257711717},{"name":"task-clock","cnt":4306.900261},{"name":"cpu-clock","cnt":4306.894915},{"name":"max-rss","cnt":308800.0},{"name":"faults","cnt":49894.0},{"name":"cycles:u","cnt":16367798206.0},{"name":"instructions:u","cnt":17254789417.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":20155409837.0},{"name":"max-rss","cnt":364796.0},{"name":"wall-time","cnt":2.760050945},{"name":"task-clock","cnt":5370.102814},{"name":"faults","cnt":64017.0},{"name":"cpu-clock","cnt":5370.160502},{"name":"instructions:u","cnt":20589692880.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":298916.0},{"name":"instructions:u","cnt":2871482726.0},{"name":"cpu-clock","cnt":707.925299},{"name":"faults","cnt":46367.0},{"name":"task-clock","cnt":708.04583},{"name":"cycles:u","cnt":2402639741.0},{"name":"wall-time","cnt":0.682409877}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2996702842.0},{"name":"cpu-clock","cnt":747.978562},{"name":"task-clock","cnt":748.085424},{"name":"faults","cnt":47314.0},{"name":"wall-time","cnt":0.693537137},{"name":"max-rss","cnt":308660.0},{"name":"cycles:u","cnt":2543206783.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":59484674855.0},{"name":"instructions:u","cnt":47106434218.0},{"name":"task-clock","cnt":15721.033153},{"name":"wall-time","cnt":3.502336053},{"name":"max-rss","cnt":298108.0},{"name":"faults","cnt":49412.0},{"name":"cpu-clock","cnt":15721.071044}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.081332618},{"name":"cpu-clock","cnt":18402.128629},{"name":"max-rss","cnt":343668.0},{"name":"instructions:u","cnt":55076722715.0},{"name":"faults","cnt":63027.0},{"name":"task-clock","cnt":18402.06475},{"name":"cycles:u","cnt":69227502987.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2443850284.0},{"name":"faults","cnt":48145.0},{"name":"wall-time","cnt":0.680698225},{"name":"max-rss","cnt":289460.0},{"name":"instructions:u","cnt":2936338542.0},{"name":"cpu-clock","cnt":716.552652},{"name":"task-clock","cnt":716.648967}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1786.299},{"name":"faults","cnt":54680.0},{"name":"cpu-clock","cnt":1786.220133},{"name":"instructions:u","cnt":6928974887.0},{"name":"wall-time","cnt":1.205821748},{"name":"max-rss","cnt":321764.0},{"name":"cycles:u","cnt":6527693674.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":12107353612.0},{"name":"wall-time","cnt":1.591513891},{"name":"cycles:u","cnt":6048208380.0},{"name":"task-clock","cnt":1552.489517},{"name":"max-rss","cnt":181868.0},{"name":"cpu-clock","cnt":1552.489163},{"name":"faults","cnt":28750.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":12846300423.0},{"name":"cpu-clock","cnt":1652.289112},{"name":"faults","cnt":31280.0},{"name":"wall-time","cnt":1.687894565},{"name":"task-clock","cnt":1652.290708},{"name":"max-rss","cnt":191580.0},{"name":"cycles:u","cnt":6434210174.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":13354.0},{"name":"task-clock","cnt":160.483732},{"name":"cpu-clock","cnt":160.482982},{"name":"instructions:u","cnt":828528943.0},{"name":"cycles:u","cnt":546238422.0},{"name":"wall-time","cnt":0.191520145},{"name":"max-rss","cnt":133044.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":12703900645.0},{"name":"cpu-clock","cnt":1642.832758},{"name":"faults","cnt":33571.0},{"name":"task-clock","cnt":1642.83266},{"name":"max-rss","cnt":200376.0},{"name":"cycles:u","cnt":6383735735.0},{"name":"wall-time","cnt":1.656643575}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":9899687550.0},{"name":"faults","cnt":58087.0},{"name":"wall-time","cnt":2.389619794},{"name":"instructions:u","cnt":16650130748.0},{"name":"task-clock","cnt":2567.88045},{"name":"max-rss","cnt":301156.0},{"name":"cpu-clock","cnt":2567.886287}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":60722.0},{"name":"wall-time","cnt":2.508149299},{"name":"max-rss","cnt":288352.0},{"name":"cycles:u","cnt":10691549718.0},{"name":"instructions:u","cnt":17846330875.0},{"name":"cpu-clock","cnt":2784.332248},{"name":"task-clock","cnt":2784.363242}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1150774410.0},{"name":"wall-time","cnt":0.243767261},{"name":"max-rss","cnt":159844.0},{"name":"cpu-clock","cnt":221.656271},{"name":"cycles:u","cnt":731506889.0},{"name":"task-clock","cnt":221.664124},{"name":"faults","cnt":18296.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.452439553},{"name":"cycles:u","cnt":10509807320.0},{"name":"instructions:u","cnt":17615532693.0},{"name":"max-rss","cnt":319120.0},{"name":"faults","cnt":62365.0},{"name":"task-clock","cnt":2741.125511},{"name":"cpu-clock","cnt":2741.12889}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":7.920642059},{"name":"cpu-clock","cnt":8167.716348},{"name":"task-clock","cnt":8167.737281},{"name":"faults","cnt":71275.0},{"name":"max-rss","cnt":326024.0},{"name":"instructions:u","cnt":51826685872.0},{"name":"cycles:u","cnt":31985688534.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":8.068212143},{"name":"instructions:u","cnt":52926099622.0},{"name":"cpu-clock","cnt":8353.531093},{"name":"task-clock","cnt":8353.54285},{"name":"max-rss","cnt":338412.0},{"name":"cycles:u","cnt":32841130337.0},{"name":"faults","cnt":74196.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":212.667726},{"name":"cycles:u","cnt":714554917.0},{"name":"task-clock","cnt":212.68461},{"name":"wall-time","cnt":0.236953247},{"name":"instructions:u","cnt":1122127429.0},{"name":"faults","cnt":17491.0},{"name":"max-rss","cnt":156296.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":7910.09717},{"name":"cycles:u","cnt":31141148092.0},{"name":"task-clock","cnt":7910.14073},{"name":"wall-time","cnt":7.88989845},{"name":"faults","cnt":75311.0},{"name":"instructions:u","cnt":50505950181.0},{"name":"max-rss","cnt":344936.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":115428.0},{"name":"instructions:u","cnt":346297918.0},{"name":"cycles:u","cnt":234167505.0},{"name":"cpu-clock","cnt":73.132379},{"name":"wall-time","cnt":0.091114192},{"name":"task-clock","cnt":73.13363},{"name":"faults","cnt":6133.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.107250185},{"name":"cycles:u","cnt":287541094.0},{"name":"task-clock","cnt":89.187262},{"name":"instructions:u","cnt":418661461.0},{"name":"max-rss","cnt":124108.0},{"name":"faults","cnt":7919.0},{"name":"cpu-clock","cnt":89.195452}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":59.220826},{"name":"instructions:u","cnt":257810204.0},{"name":"max-rss","cnt":109680.0},{"name":"faults","cnt":7578.0},{"name":"cpu-clock","cnt":59.230498},{"name":"wall-time","cnt":0.076172255},{"name":"cycles:u","cnt":171865235.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":84.756998},{"name":"max-rss","cnt":125712.0},{"name":"cycles:u","cnt":269236330.0},{"name":"instructions:u","cnt":382505552.0},{"name":"wall-time","cnt":0.101975296},{"name":"faults","cnt":8217.0},{"name":"task-clock","cnt":84.759445}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"faults","cnt":8204.0},{"name":"cycles:u","cnt":261632842.0},{"name":"cpu-clock","cnt":82.935303},{"name":"instructions:u","cnt":381167018.0},{"name":"wall-time","cnt":0.09981448},{"name":"max-rss","cnt":125908.0},{"name":"task-clock","cnt":82.937406}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":343947849.0},{"name":"max-rss","cnt":125532.0},{"name":"cycles:u","cnt":236745320.0},{"name":"cpu-clock","cnt":76.850845},{"name":"faults","cnt":8207.0},{"name":"wall-time","cnt":0.093888849},{"name":"task-clock","cnt":76.853635}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"faults","cnt":8210.0},{"name":"task-clock","cnt":84.694832},{"name":"cpu-clock","cnt":84.69295},{"name":"cycles:u","cnt":266939433.0},{"name":"instructions:u","cnt":381680233.0},{"name":"max-rss","cnt":125996.0},{"name":"wall-time","cnt":0.101546676}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"wall-time","cnt":0.102380428},{"name":"cycles:u","cnt":267717991.0},{"name":"task-clock","cnt":85.006103},{"name":"instructions:u","cnt":383266971.0},{"name":"max-rss","cnt":126080.0},{"name":"cpu-clock","cnt":85.013315},{"name":"faults","cnt":8216.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"cpu-clock","cnt":239.643067},{"name":"max-rss","cnt":139520.0},{"name":"wall-time","cnt":0.149451117},{"name":"instructions:u","cnt":957448115.0},{"name":"cycles:u","cnt":826110718.0},{"name":"task-clock","cnt":239.669452},{"name":"faults","cnt":10126.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":270.797694},{"name":"cycles:u","cnt":934362555.0},{"name":"wall-time","cnt":0.172842916},{"name":"max-rss","cnt":146692.0},{"name":"faults","cnt":11843.0},{"name":"instructions:u","cnt":1086317625.0},{"name":"task-clock","cnt":270.793356}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":122344.0},{"name":"faults","cnt":8750.0},{"name":"task-clock","cnt":80.280932},{"name":"cpu-clock","cnt":80.259739},{"name":"wall-time","cnt":0.092541626},{"name":"instructions:u","cnt":320503288.0},{"name":"cycles:u","cnt":228635748.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":890548057.0},{"name":"faults","cnt":12424.0},{"name":"task-clock","cnt":260.998278},{"name":"wall-time","cnt":0.159539018},{"name":"cpu-clock","cnt":260.994725},{"name":"instructions:u","cnt":1028568016.0},{"name":"max-rss","cnt":149912.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"cycles:u","cnt":819342842.0},{"name":"cpu-clock","cnt":241.999879},{"name":"faults","cnt":12220.0},{"name":"wall-time","cnt":0.151932499},{"name":"max-rss","cnt":148644.0},{"name":"instructions:u","cnt":957464798.0},{"name":"task-clock","cnt":242.007969}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"faults","cnt":11712.0},{"name":"task-clock","cnt":227.083853},{"name":"instructions:u","cnt":909765936.0},{"name":"wall-time","cnt":0.143581182},{"name":"cycles:u","cnt":767494715.0},{"name":"max-rss","cnt":146732.0},{"name":"cpu-clock","cnt":227.125743}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":959870793.0},{"name":"wall-time","cnt":0.153982151},{"name":"cpu-clock","cnt":245.542601},{"name":"faults","cnt":12175.0},{"name":"task-clock","cnt":245.554006},{"name":"max-rss","cnt":148672.0},{"name":"cycles:u","cnt":831258144.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":148960.0},{"name":"faults","cnt":12219.0},{"name":"task-clock","cnt":245.629995},{"name":"cpu-clock","cnt":245.642078},{"name":"instructions:u","cnt":965990991.0},{"name":"cycles:u","cnt":837957709.0},{"name":"wall-time","cnt":0.154543707}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"faults","cnt":11669.0},{"name":"max-rss","cnt":146312.0},{"name":"cpu-clock","cnt":641.035792},{"name":"wall-time","cnt":0.272563638},{"name":"instructions:u","cnt":2297362390.0},{"name":"cycles:u","cnt":2349490545.0},{"name":"task-clock","cnt":641.022028}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":687.133238},{"name":"cycles:u","cnt":2512110622.0},{"name":"cpu-clock","cnt":687.11814},{"name":"max-rss","cnt":154856.0},{"name":"faults","cnt":13768.0},{"name":"instructions:u","cnt":2432917094.0},{"name":"wall-time","cnt":0.295442666}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":322424597.0},{"name":"cycles:u","cnt":233093399.0},{"name":"max-rss","cnt":121252.0},{"name":"faults","cnt":8741.0},{"name":"cpu-clock","cnt":79.15274},{"name":"wall-time","cnt":0.092165676},{"name":"task-clock","cnt":79.176718}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2362270178.0},{"name":"cycles:u","cnt":2352973467.0},{"name":"cpu-clock","cnt":644.606589},{"name":"max-rss","cnt":156192.0},{"name":"task-clock","cnt":644.613598},{"name":"wall-time","cnt":0.295474932},{"name":"faults","cnt":13979.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":152912.0},{"name":"wall-time","cnt":0.191586496},{"name":"cpu-clock","cnt":407.677042},{"name":"faults","cnt":13201.0},{"name":"cycles:u","cnt":1440309809.0},{"name":"task-clock","cnt":407.685776},{"name":"instructions:u","cnt":1426603168.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1325278972.0},{"name":"faults","cnt":13017.0},{"name":"max-rss","cnt":151708.0},{"name":"cpu-clock","cnt":367.903638},{"name":"cycles:u","cnt":1293647763.0},{"name":"wall-time","cnt":0.18189247},{"name":"task-clock","cnt":367.923235}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":1357570174.0},{"name":"faults","cnt":12997.0},{"name":"task-clock","cnt":374.954496},{"name":"cycles:u","cnt":1319620222.0},{"name":"wall-time","cnt":0.193143689},{"name":"cpu-clock","cnt":374.93},{"name":"max-rss","cnt":152316.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":377.555872},{"name":"instructions:u","cnt":1366609534.0},{"name":"cpu-clock","cnt":377.515684},{"name":"faults","cnt":13008.0},{"name":"max-rss","cnt":151944.0},{"name":"wall-time","cnt":0.188790925},{"name":"cycles:u","cnt":1327263897.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":5316.747973},{"name":"wall-time","cnt":5.335031852},{"name":"instructions:u","cnt":40655269799.0},{"name":"max-rss","cnt":499848.0},{"name":"cpu-clock","cnt":5316.75022},{"name":"cycles:u","cnt":20680265476.0},{"name":"faults","cnt":140816.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":5698.656241},{"name":"instructions:u","cnt":43103451183.0},{"name":"wall-time","cnt":5.736081895},{"name":"task-clock","cnt":5698.655545},{"name":"cycles:u","cnt":22154792028.0},{"name":"faults","cnt":147788.0},{"name":"max-rss","cnt":524100.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":465.645655},{"name":"wall-time","cnt":0.482445558},{"name":"instructions:u","cnt":2009964087.0},{"name":"faults","cnt":34029.0},{"name":"cycles:u","cnt":1675823677.0},{"name":"task-clock","cnt":465.646106},{"name":"max-rss","cnt":201612.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":51507603392.0},{"name":"task-clock","cnt":7491.010381},{"name":"faults","cnt":337912.0},{"name":"max-rss","cnt":1247600.0},{"name":"wall-time","cnt":7.483599527},{"name":"cycles:u","cnt":28689047691.0},{"name":"cpu-clock","cnt":7490.998405}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":8001.609366},{"name":"task-clock","cnt":8001.607158},{"name":"wall-time","cnt":7.96119726},{"name":"cycles:u","cnt":30526076598.0},{"name":"instructions:u","cnt":54756212321.0},{"name":"max-rss","cnt":1244736.0},{"name":"faults","cnt":336667.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":42455.0},{"name":"instructions:u","cnt":2717982795.0},{"name":"cycles:u","cnt":2018210243.0},{"name":"task-clock","cnt":565.361786},{"name":"max-rss","cnt":239420.0},{"name":"cpu-clock","cnt":565.358034},{"name":"wall-time","cnt":0.582319385}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":6790.626175},{"name":"faults","cnt":282013.0},{"name":"wall-time","cnt":6.798511273},{"name":"cpu-clock","cnt":6790.625785},{"name":"instructions:u","cnt":51884518481.0},{"name":"max-rss","cnt":1012776.0},{"name":"cycles:u","cnt":26043887751.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":283849.0},{"name":"cycles:u","cnt":27825020019.0},{"name":"task-clock","cnt":7243.191253},{"name":"cpu-clock","cnt":7243.18127},{"name":"max-rss","cnt":1037072.0},{"name":"instructions:u","cnt":55026538205.0},{"name":"wall-time","cnt":7.212074116}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.572173929},{"name":"cycles:u","cnt":1990518233.0},{"name":"max-rss","cnt":243040.0},{"name":"instructions:u","cnt":2659274642.0},{"name":"cpu-clock","cnt":557.118354},{"name":"faults","cnt":43601.0},{"name":"task-clock","cnt":557.119717}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmpJLChT3)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x561c75dec3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x561c75dec552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x561c75deb86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x561c75d87470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x561c75a75afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x561c75a7d722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x561c75a8f541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x561c75a9ea1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x561c75a9496e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x561c75a48e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x561c75e130d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x561c75e1dd39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x561c75e13c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x561c75aa2d57 - main\n  14:     0x7ff844b6582f - __libc_start_main\n  15:     0x561c75a3e518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":1.894977599},{"name":"faults","cnt":26809.0},{"name":"cycles:u","cnt":7195863478.0},{"name":"cpu-clock","cnt":1843.967013},{"name":"max-rss","cnt":202916.0},{"name":"instructions:u","cnt":8656254264.0},{"name":"task-clock","cnt":1843.950838}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2262.2234},{"name":"cpu-clock","cnt":2262.222152},{"name":"wall-time","cnt":2.29837371},{"name":"max-rss","cnt":258792.0},{"name":"instructions:u","cnt":10654432035.0},{"name":"faults","cnt":40519.0},{"name":"cycles:u","cnt":8789529309.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":468.878369},{"name":"task-clock","cnt":468.879303},{"name":"max-rss","cnt":238144.0},{"name":"faults","cnt":37143.0},{"name":"instructions:u","cnt":2177892269.0},{"name":"wall-time","cnt":0.478061669},{"name":"cycles:u","cnt":1667610904.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":247088.0},{"name":"cycles:u","cnt":1795953414.0},{"name":"instructions:u","cnt":2268247673.0},{"name":"task-clock","cnt":503.218163},{"name":"wall-time","cnt":0.492032027},{"name":"faults","cnt":37502.0},{"name":"cpu-clock","cnt":503.218718}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":4.011155802},{"name":"task-clock","cnt":9184.974806},{"name":"max-rss","cnt":468052.0},{"name":"cycles:u","cnt":34729367378.0},{"name":"faults","cnt":93286.0},{"name":"instructions:u","cnt":36600978530.0},{"name":"cpu-clock","cnt":9184.974641}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":505360.0},{"name":"faults","cnt":100526.0},{"name":"wall-time","cnt":4.780381294},{"name":"instructions:u","cnt":41009430893.0},{"name":"cpu-clock","cnt":10461.204577},{"name":"task-clock","cnt":10461.178731},{"name":"cycles:u","cnt":39517106169.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3163425205.0},{"name":"wall-time","cnt":0.887927164},{"name":"task-clock","cnt":920.133101},{"name":"max-rss","cnt":381476.0},{"name":"faults","cnt":63158.0},{"name":"instructions:u","cnt":3947269590.0},{"name":"cpu-clock","cnt":920.028785}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":1017.076405},{"name":"cycles:u","cnt":3492117847.0},{"name":"wall-time","cnt":0.949881898},{"name":"faults","cnt":64250.0},{"name":"max-rss","cnt":392324.0},{"name":"instructions:u","cnt":4247833142.0},{"name":"task-clock","cnt":1017.16854}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":39192.668981},{"name":"instructions:u","cnt":120424412378.0},{"name":"cpu-clock","cnt":39192.708623},{"name":"faults","cnt":86818.0},{"name":"max-rss","cnt":433648.0},{"name":"wall-time","cnt":7.982958856},{"name":"cycles:u","cnt":148273888305.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":498908.0},{"name":"faults","cnt":105697.0},{"name":"cpu-clock","cnt":43185.871359},{"name":"instructions:u","cnt":128455961642.0},{"name":"wall-time","cnt":8.278175959},{"name":"task-clock","cnt":43185.77665},{"name":"cycles:u","cnt":162943281306.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3307202441.0},{"name":"faults","cnt":64802.0},{"name":"max-rss","cnt":362512.0},{"name":"instructions:u","cnt":4040919016.0},{"name":"wall-time","cnt":0.902007598},{"name":"task-clock","cnt":942.801573},{"name":"cpu-clock","cnt":942.721061}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":379864.0},{"name":"wall-time","cnt":1.316265213},{"name":"instructions:u","cnt":6247299530.0},{"name":"cycles:u","cnt":5236498176.0},{"name":"faults","cnt":66914.0},{"name":"task-clock","cnt":1442.082019},{"name":"cpu-clock","cnt":1441.993815}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":927.80692},{"name":"cycles:u","cnt":3580828261.0},{"name":"cpu-clock","cnt":927.805644},{"name":"wall-time","cnt":0.946133357},{"name":"max-rss","cnt":170720.0},{"name":"instructions:u","cnt":3960063682.0},{"name":"faults","cnt":19068.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":214588.0},{"name":"wall-time","cnt":1.254426196},{"name":"instructions:u","cnt":5071168810.0},{"name":"faults","cnt":29880.0},{"name":"cycles:u","cnt":4596739393.0},{"name":"cpu-clock","cnt":1197.95514},{"name":"task-clock","cnt":1197.956447}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":193716.0},{"name":"task-clock","cnt":339.398508},{"name":"cycles:u","cnt":1195948988.0},{"name":"instructions:u","cnt":1502684034.0},{"name":"faults","cnt":26317.0},{"name":"cpu-clock","cnt":339.387548},{"name":"wall-time","cnt":0.339602896}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2257430887.0},{"name":"cycles:u","cnt":1859312846.0},{"name":"cpu-clock","cnt":511.03164},{"name":"max-rss","cnt":215540.0},{"name":"wall-time","cnt":0.540110565},{"name":"faults","cnt":29949.0},{"name":"task-clock","cnt":511.031166}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"instructions:u","cnt":1553975321.0},{"name":"task-clock","cnt":340.149808},{"name":"max-rss","cnt":202668.0},{"name":"cpu-clock","cnt":340.149753},{"name":"cycles:u","cnt":1195906368.0},{"name":"faults","cnt":26758.0},{"name":"wall-time","cnt":0.340181785}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"task-clock","cnt":351.452455},{"name":"cpu-clock","cnt":351.451936},{"name":"wall-time","cnt":0.368241783},{"name":"cycles:u","cnt":1237360741.0},{"name":"instructions:u","cnt":1601079953.0},{"name":"faults","cnt":27073.0},{"name":"max-rss","cnt":204640.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cpu-clock","cnt":514.288023},{"name":"cycles:u","cnt":1876683683.0},{"name":"task-clock","cnt":514.288683},{"name":"faults","cnt":30133.0},{"name":"wall-time","cnt":0.514971669},{"name":"max-rss","cnt":216248.0},{"name":"instructions:u","cnt":2278065686.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":2276439421.0},{"name":"cycles:u","cnt":1876902883.0},{"name":"max-rss","cnt":216696.0},{"name":"wall-time","cnt":0.534349165},{"name":"task-clock","cnt":515.511756},{"name":"faults","cnt":30151.0},{"name":"cpu-clock","cnt":515.511051}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"task-clock","cnt":329.434977},{"name":"max-rss","cnt":201736.0},{"name":"wall-time","cnt":0.329807001},{"name":"cpu-clock","cnt":329.434446},{"name":"cycles:u","cnt":1157141944.0},{"name":"faults","cnt":26656.0},{"name":"instructions:u","cnt":1539561291.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"instructions:u","cnt":1982724629.0},{"name":"cycles:u","cnt":1593340367.0},{"name":"faults","cnt":29544.0},{"name":"cpu-clock","cnt":444.109065},{"name":"max-rss","cnt":213996.0},{"name":"task-clock","cnt":444.109598},{"name":"wall-time","cnt":0.463563181}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"task-clock","cnt":379.391535},{"name":"instructions:u","cnt":1725230652.0},{"name":"cycles:u","cnt":1348237635.0},{"name":"cpu-clock","cnt":379.400156},{"name":"max-rss","cnt":204864.0},{"name":"faults","cnt":27262.0},{"name":"wall-time","cnt":0.377056209}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":29422.0},{"name":"wall-time","cnt":0.416547232},{"name":"max-rss","cnt":213092.0},{"name":"cpu-clock","cnt":403.146795},{"name":"task-clock","cnt":403.148322},{"name":"instructions:u","cnt":1776191131.0},{"name":"cycles:u","cnt":1432566773.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":27538997394.0},{"name":"max-rss","cnt":406232.0},{"name":"instructions:u","cnt":22844906075.0},{"name":"cpu-clock","cnt":7368.837197},{"name":"task-clock","cnt":7368.825081},{"name":"faults","cnt":78407.0},{"name":"wall-time","cnt":2.191050301}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.63596294},{"name":"instructions:u","cnt":25690067906.0},{"name":"task-clock","cnt":7730.659695},{"name":"cpu-clock","cnt":7730.663806},{"name":"cycles:u","cnt":28919791037.0},{"name":"faults","cnt":77830.0},{"name":"max-rss","cnt":412732.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":540.380691},{"name":"task-clock","cnt":540.437072},{"name":"faults","cnt":41728.0},{"name":"cycles:u","cnt":1811505535.0},{"name":"instructions:u","cnt":2260690255.0},{"name":"max-rss","cnt":276024.0},{"name":"wall-time","cnt":0.514889172}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":6499176350.0},{"name":"cpu-clock","cnt":1780.103264},{"name":"faults","cnt":54803.0},{"name":"instructions:u","cnt":6865260440.0},{"name":"task-clock","cnt":1780.14561},{"name":"wall-time","cnt":0.995391567},{"name":"max-rss","cnt":330560.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"cycles:u","cnt":1905718209.0},{"name":"instructions:u","cnt":2341756560.0},{"name":"max-rss","cnt":284244.0},{"name":"faults","cnt":42110.0},{"name":"cpu-clock","cnt":565.56779},{"name":"task-clock","cnt":565.637928},{"name":"wall-time","cnt":0.532413838}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cpu-clock","cnt":750.503072},{"name":"instructions:u","cnt":3073840260.0},{"name":"max-rss","cnt":295052.0},{"name":"task-clock","cnt":750.548042},{"name":"faults","cnt":44931.0},{"name":"cycles:u","cnt":2596186545.0},{"name":"wall-time","cnt":0.639262955}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"instructions:u","cnt":6895745872.0},{"name":"cpu-clock","cnt":1747.941244},{"name":"cycles:u","cnt":6356287720.0},{"name":"max-rss","cnt":333924.0},{"name":"task-clock","cnt":1747.996319},{"name":"wall-time","cnt":0.971551638},{"name":"faults","cnt":55718.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":6897262398.0},{"name":"cycles:u","cnt":6370041469.0},{"name":"faults","cnt":55194.0},{"name":"cpu-clock","cnt":1759.470299},{"name":"max-rss","cnt":332352.0},{"name":"wall-time","cnt":0.978910688},{"name":"task-clock","cnt":1759.529898}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"task-clock","cnt":547.795911},{"name":"instructions:u","cnt":2286434654.0},{"name":"cycles:u","cnt":1839250111.0},{"name":"wall-time","cnt":0.521069587},{"name":"cpu-clock","cnt":547.728817},{"name":"max-rss","cnt":278968.0},{"name":"faults","cnt":42020.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"faults","cnt":82146.0},{"name":"cycles:u","cnt":20237657060.0},{"name":"cpu-clock","cnt":5471.683078},{"name":"wall-time","cnt":1.511501805},{"name":"task-clock","cnt":5471.71552},{"name":"instructions:u","cnt":17584300148.0},{"name":"max-rss","cnt":430744.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"max-rss","cnt":431100.0},{"name":"cpu-clock","cnt":5336.079095},{"name":"cycles:u","cnt":19677456706.0},{"name":"instructions:u","cnt":16938020924.0},{"name":"task-clock","cnt":5336.099108},{"name":"faults","cnt":82024.0},{"name":"wall-time","cnt":1.413167747}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"max-rss","cnt":306216.0},{"name":"task-clock","cnt":866.267039},{"name":"cpu-clock","cnt":866.227023},{"name":"faults","cnt":47819.0},{"name":"cycles:u","cnt":3033425298.0},{"name":"wall-time","cnt":0.66127669},{"name":"instructions:u","cnt":3684129784.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":66181574172.0},{"name":"faults","cnt":63354.0},{"name":"max-rss","cnt":349932.0},{"name":"task-clock","cnt":22152.482298},{"name":"cycles:u","cnt":83746216690.0},{"name":"cpu-clock","cnt":22152.514795},{"name":"wall-time","cnt":4.544665504}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":24257.576124},{"name":"faults","cnt":74597.0},{"name":"cycles:u","cnt":91482314018.0},{"name":"wall-time","cnt":4.959624721},{"name":"task-clock","cnt":24257.521087},{"name":"instructions:u","cnt":71804663694.0},{"name":"max-rss","cnt":389544.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.512007481},{"name":"cpu-clock","cnt":542.416767},{"name":"task-clock","cnt":542.475562},{"name":"max-rss","cnt":261636.0},{"name":"instructions:u","cnt":2284854868.0},{"name":"faults","cnt":41285.0},{"name":"cycles:u","cnt":1870185372.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.99467626},{"name":"task-clock","cnt":13830.818121},{"name":"cpu-clock","cnt":13830.855811},{"name":"cycles:u","cnt":52025352645.0},{"name":"faults","cnt":74989.0},{"name":"max-rss","cnt":396012.0},{"name":"instructions:u","cnt":41843394068.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"task-clock","cnt":610.41063},{"name":"max-rss","cnt":274336.0},{"name":"wall-time","cnt":0.529706984},{"name":"cpu-clock","cnt":610.364891},{"name":"instructions:u","cnt":2570965426.0},{"name":"faults","cnt":42258.0},{"name":"cycles:u","cnt":2110651357.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cycles:u","cnt":2159865531.0},{"name":"max-rss","cnt":274820.0},{"name":"instructions:u","cnt":2613903343.0},{"name":"wall-time","cnt":0.547201978},{"name":"cpu-clock","cnt":623.824263},{"name":"faults","cnt":42319.0},{"name":"task-clock","cnt":623.878046}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cpu-clock","cnt":13829.601522},{"name":"cycles:u","cnt":52018201358.0},{"name":"task-clock","cnt":13829.546805},{"name":"faults","cnt":75042.0},{"name":"max-rss","cnt":395940.0},{"name":"instructions:u","cnt":41873450243.0},{"name":"wall-time","cnt":2.971580113}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"instructions:u","cnt":41855367922.0},{"name":"cpu-clock","cnt":13893.905728},{"name":"task-clock","cnt":13893.914632},{"name":"wall-time","cnt":2.97353195},{"name":"cycles:u","cnt":52253521856.0},{"name":"faults","cnt":74823.0},{"name":"max-rss","cnt":394452.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"instructions:u","cnt":2309090770.0},{"name":"cpu-clock","cnt":543.120492},{"name":"faults","cnt":41500.0},{"name":"max-rss","cnt":264904.0},{"name":"wall-time","cnt":0.512057224},{"name":"task-clock","cnt":543.154752},{"name":"cycles:u","cnt":1863686752.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"max-rss","cnt":406368.0},{"name":"wall-time","cnt":3.594637778},{"name":"instructions:u","cnt":58109844109.0},{"name":"cycles:u","cnt":71619362972.0},{"name":"cpu-clock","cnt":19023.748236},{"name":"faults","cnt":77046.0},{"name":"task-clock","cnt":19023.73135}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":57803120677.0},{"name":"cycles:u","cnt":71556125905.0},{"name":"faults","cnt":77634.0},{"name":"max-rss","cnt":408604.0},{"name":"wall-time","cnt":3.493770692},{"name":"task-clock","cnt":19013.096443},{"name":"cpu-clock","cnt":19013.159823}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":56661.0},{"name":"wall-time","cnt":1.921670075},{"name":"cpu-clock","cnt":2588.124658},{"name":"task-clock","cnt":2588.166313},{"name":"max-rss","cnt":329444.0},{"name":"cycles:u","cnt":9791992718.0},{"name":"instructions:u","cnt":12845150440.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.259030692},{"name":"max-rss","cnt":126464.0},{"name":"faults","cnt":8029.0},{"name":"task-clock","cnt":240.996904},{"name":"instructions:u","cnt":1221018145.0},{"name":"cpu-clock","cnt":240.995411},{"name":"cycles:u","cnt":894017740.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1105359966.0},{"name":"instructions:u","cnt":1491234549.0},{"name":"cpu-clock","cnt":298.119129},{"name":"task-clock","cnt":298.120806},{"name":"max-rss","cnt":139832.0},{"name":"faults","cnt":11220.0},{"name":"wall-time","cnt":0.316035942}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":123104.0},{"name":"wall-time","cnt":0.101768385},{"name":"cycles:u","cnt":272068387.0},{"name":"instructions:u","cnt":398549714.0},{"name":"task-clock","cnt":87.623764},{"name":"faults","cnt":10681.0},{"name":"cpu-clock","cnt":87.622217}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":514346707.0},{"name":"max-rss","cnt":140044.0},{"name":"wall-time","cnt":0.126725463},{"name":"faults","cnt":11313.0},{"name":"cycles:u","cnt":367002103.0},{"name":"task-clock","cnt":112.751528},{"name":"cpu-clock","cnt":112.749557}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7609487884.0},{"name":"cycles:u","cnt":7071055509.0},{"name":"cpu-clock","cnt":1890.050876},{"name":"faults","cnt":27900.0},{"name":"wall-time","cnt":0.874860453},{"name":"max-rss","cnt":213912.0},{"name":"task-clock","cnt":1890.034546}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":32823.0},{"name":"cycles:u","cnt":7815250520.0},{"name":"cpu-clock","cnt":2092.710273},{"name":"max-rss","cnt":234384.0},{"name":"task-clock","cnt":2092.698807},{"name":"wall-time","cnt":1.016800508},{"name":"instructions:u","cnt":8500677401.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":205.463404},{"name":"faults","cnt":17500.0},{"name":"wall-time","cnt":0.227395297},{"name":"cpu-clock","cnt":205.454186},{"name":"instructions:u","cnt":852291338.0},{"name":"cycles:u","cnt":661290228.0},{"name":"max-rss","cnt":167440.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":189728.0},{"name":"cpu-clock","cnt":251.106825},{"name":"faults","cnt":19731.0},{"name":"cycles:u","cnt":824199171.0},{"name":"instructions:u","cnt":1059630968.0},{"name":"wall-time","cnt":0.236546163},{"name":"task-clock","cnt":251.127005}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":2.63372051},{"name":"instructions:u","cnt":24677448910.0},{"name":"task-clock","cnt":6897.394849},{"name":"cycles:u","cnt":26296638756.0},{"name":"max-rss","cnt":212896.0},{"name":"cpu-clock","cnt":6897.408356},{"name":"faults","cnt":28688.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.750987887},{"name":"cycles:u","cnt":27813124402.0},{"name":"task-clock","cnt":7309.520351},{"name":"faults","cnt":35164.0},{"name":"instructions:u","cnt":25796277699.0},{"name":"cpu-clock","cnt":7309.540978},{"name":"max-rss","cnt":238616.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":676114067.0},{"name":"cpu-clock","cnt":205.230374},{"name":"task-clock","cnt":205.259247},{"name":"faults","cnt":18594.0},{"name":"instructions:u","cnt":859035567.0},{"name":"max-rss","cnt":164456.0},{"name":"wall-time","cnt":0.223152962}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":221980.0},{"name":"instructions:u","cnt":9923549043.0},{"name":"wall-time","cnt":1.370122409},{"name":"task-clock","cnt":2474.228785},{"name":"faults","cnt":30210.0},{"name":"cpu-clock","cnt":2474.215126},{"name":"cycles:u","cnt":9362179078.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":754.22109},{"name":"faults","cnt":17525.0},{"name":"cpu-clock","cnt":754.230057},{"name":"max-rss","cnt":166972.0},{"name":"wall-time","cnt":0.790526751},{"name":"instructions:u","cnt":3476102697.0},{"name":"cycles:u","cnt":2896487523.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3769403517.0},{"name":"wall-time","cnt":1.023833037},{"name":"faults","cnt":26973.0},{"name":"max-rss","cnt":205916.0},{"name":"cpu-clock","cnt":985.076016},{"name":"task-clock","cnt":985.077414},{"name":"instructions:u","cnt":4460948465.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":823467169.0},{"name":"faults","cnt":23704.0},{"name":"max-rss","cnt":185160.0},{"name":"wall-time","cnt":0.244454165},{"name":"instructions:u","cnt":1160095529.0},{"name":"task-clock","cnt":243.472356},{"name":"cpu-clock","cnt":243.471}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1347182346.0},{"name":"faults","cnt":25071.0},{"name":"cpu-clock","cnt":285.675495},{"name":"max-rss","cnt":199008.0},{"name":"cycles:u","cnt":988995076.0},{"name":"wall-time","cnt":0.309467964},{"name":"task-clock","cnt":285.676596}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":19836946781.0},{"name":"faults","cnt":105479.0},{"name":"wall-time","cnt":3.05061746},{"name":"task-clock","cnt":5450.638964},{"name":"max-rss","cnt":333224.0},{"name":"cpu-clock","cnt":5450.612682},{"name":"instructions:u","cnt":21144648120.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":24689528379.0},{"name":"task-clock","cnt":6357.984728},{"name":"faults","cnt":118069.0},{"name":"cpu-clock","cnt":6358.072391},{"name":"max-rss","cnt":363452.0},{"name":"cycles:u","cnt":23075348156.0},{"name":"wall-time","cnt":3.564583955}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.597077273},{"name":"cpu-clock","cnt":1625.313616},{"name":"cycles:u","cnt":5142771930.0},{"name":"instructions:u","cnt":6427165987.0},{"name":"task-clock","cnt":1625.382759},{"name":"faults","cnt":93007.0},{"name":"max-rss","cnt":283960.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1729.631931},{"name":"wall-time","cnt":1.683959969},{"name":"cycles:u","cnt":5538240691.0},{"name":"cpu-clock","cnt":1729.574617},{"name":"max-rss","cnt":290392.0},{"name":"instructions:u","cnt":6603690007.0},{"name":"faults","cnt":93453.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":40945.544994},{"name":"cycles:u","cnt":153917017537.0},{"name":"task-clock","cnt":40945.487253},{"name":"faults","cnt":182814.0},{"name":"max-rss","cnt":632456.0},{"name":"wall-time","cnt":7.799905848},{"name":"instructions:u","cnt":122441023215.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":133208675517.0},{"name":"max-rss","cnt":639380.0},{"name":"faults","cnt":186967.0},{"name":"cpu-clock","cnt":45655.374677},{"name":"task-clock","cnt":45655.312503},{"name":"wall-time","cnt":8.279557947},{"name":"cycles:u","cnt":171123243661.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1334.973098},{"name":"wall-time","cnt":1.276683456},{"name":"cycles:u","cnt":4360495815.0},{"name":"faults","cnt":90553.0},{"name":"instructions:u","cnt":6795488021.0},{"name":"task-clock","cnt":1335.071477},{"name":"max-rss","cnt":302528.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":355724.0},{"name":"cycles:u","cnt":7353732297.0},{"name":"faults","cnt":99265.0},{"name":"instructions:u","cnt":10324111273.0},{"name":"task-clock","cnt":2111.307306},{"name":"wall-time","cnt":1.77817375},{"name":"cpu-clock","cnt":2111.221873}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":2425612.0},{"name":"instructions:u","cnt":189545453675.0},{"name":"wall-time","cnt":44.680180719},{"name":"cycles:u","cnt":174418423941.0},{"name":"faults","cnt":717775.0},{"name":"cpu-clock","cnt":44624.186624},{"name":"task-clock","cnt":44624.149859}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":1167202.0},{"name":"cycles:u","cnt":216266105783.0},{"name":"instructions:u","cnt":245839412197.0},{"name":"task-clock","cnt":56162.744001},{"name":"wall-time","cnt":56.212775044},{"name":"max-rss","cnt":3844568.0},{"name":"cpu-clock","cnt":56162.753322}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":20394.704436},{"name":"max-rss","cnt":4167144.0},{"name":"faults","cnt":1040895.0},{"name":"wall-time","cnt":19.641870905},{"name":"instructions:u","cnt":88518434993.0},{"name":"cpu-clock","cnt":20394.724716},{"name":"cycles:u","cnt":76108848020.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":88793119471.0},{"name":"cycles:u","cnt":75585093890.0},{"name":"max-rss","cnt":4173736.0},{"name":"cpu-clock","cnt":20664.437285},{"name":"faults","cnt":1063039.0},{"name":"task-clock","cnt":20664.454007},{"name":"wall-time","cnt":19.930596573}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"faults","cnt":1065086.0},{"name":"cycles:u","cnt":78356167294.0},{"name":"cpu-clock","cnt":20898.919036},{"name":"instructions:u","cnt":91545578993.0},{"name":"max-rss","cnt":4187440.0},{"name":"task-clock","cnt":20898.914271},{"name":"wall-time","cnt":20.157859916}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"wall-time","cnt":43.596282539},{"name":"max-rss","cnt":4827436.0},{"name":"faults","cnt":1316892.0},{"name":"cycles:u","cnt":168240983958.0},{"name":"task-clock","cnt":44331.850411},{"name":"instructions:u","cnt":188050343846.0},{"name":"cpu-clock","cnt":44331.867651}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"instructions:u","cnt":772390324180.0},{"name":"cycles:u","cnt":758802479031.0},{"name":"cpu-clock","cnt":200465.163257},{"name":"max-rss","cnt":5448116.0},{"name":"faults","cnt":1937956.0},{"name":"task-clock","cnt":200465.05429},{"name":"wall-time","cnt":93.08006133}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":1695800881275.0},{"name":"max-rss","cnt":8597220.0},{"name":"wall-time","cnt":191.667216803},{"name":"cpu-clock","cnt":393789.144869},{"name":"task-clock","cnt":393788.169017},{"name":"faults","cnt":3081938.0},{"name":"cycles:u","cnt":1490536882064.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":119625820774.0},{"name":"faults","cnt":1501889.0},{"name":"cycles:u","cnt":104729757120.0},{"name":"max-rss","cnt":9189056.0},{"name":"cpu-clock","cnt":30522.680129},{"name":"wall-time","cnt":40.536192515},{"name":"task-clock","cnt":30524.426671}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":34893.291191},{"name":"wall-time","cnt":45.531031204},{"name":"cycles:u","cnt":123473336523.0},{"name":"task-clock","cnt":34895.532845},{"name":"max-rss","cnt":9377668.0},{"name":"instructions:u","cnt":139035723855.0},{"name":"faults","cnt":1568825.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"max-rss","cnt":9136340.0},{"name":"faults","cnt":1499006.0},{"name":"cpu-clock","cnt":31729.220585},{"name":"instructions:u","cnt":126650451436.0},{"name":"task-clock","cnt":31731.583526},{"name":"cycles:u","cnt":111400007044.0},{"name":"wall-time","cnt":43.32755615}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":1312761198796.0},{"name":"faults","cnt":3173992.0},{"name":"wall-time","cnt":163.478144036},{"name":"cpu-clock","cnt":348751.458002},{"name":"instructions:u","cnt":1500069269863.0},{"name":"max-rss","cnt":9470412.0},{"name":"task-clock","cnt":348750.781518}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"max-rss","cnt":4302808.0},{"name":"cycles:u","cnt":2984706953918.0},{"name":"cpu-clock","cnt":790226.989467},{"name":"faults","cnt":2567558.0},{"name":"instructions:u","cnt":2246362090940.0},{"name":"wall-time","cnt":185.245055718},{"name":"task-clock","cnt":790226.505439}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1110465.855004},{"name":"cycles:u","cnt":4175483719851.0},{"name":"cpu-clock","cnt":1110468.959203},{"name":"instructions:u","cnt":3220360191783.0},{"name":"wall-time","cnt":213.751125278},{"name":"faults","cnt":3329705.0},{"name":"max-rss","cnt":5468976.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":113529102251.0},{"name":"task-clock","cnt":28105.975151},{"name":"cpu-clock","cnt":28105.052333},{"name":"wall-time","cnt":26.190535028},{"name":"cycles:u","cnt":104082413371.0},{"name":"max-rss","cnt":5758296.0},{"name":"faults","cnt":1431142.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":7257420.0},{"name":"cpu-clock","cnt":398653.060097},{"name":"task-clock","cnt":398652.810305},{"name":"instructions:u","cnt":1148749836949.0},{"name":"cycles:u","cnt":1495528733460.0},{"name":"wall-time","cnt":85.357639138},{"name":"faults","cnt":2154282.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"cycles:u","cnt":414299194778.0},{"name":"wall-time","cnt":68.316733929},{"name":"instructions:u","cnt":420076297790.0},{"name":"cpu-clock","cnt":108900.595362},{"name":"max-rss","cnt":6651740.0},{"name":"faults","cnt":1747846.0},{"name":"task-clock","cnt":108901.159838}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"faults","cnt":3553807.0},{"name":"instructions:u","cnt":3113609782830.0},{"name":"cycles:u","cnt":4055058930330.0},{"name":"task-clock","cnt":1079916.870349},{"name":"wall-time","cnt":196.810965781},{"name":"cpu-clock","cnt":1079919.814407},{"name":"max-rss","cnt":6695008.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":2329.00411},{"name":"instructions:u","cnt":11384330239.0},{"name":"cpu-clock","cnt":2328.979312},{"name":"faults","cnt":35106.0},{"name":"max-rss","cnt":250532.0},{"name":"wall-time","cnt":2.349634075},{"name":"cycles:u","cnt":9075150307.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.913660373},{"name":"cycles:u","cnt":11247723864.0},{"name":"task-clock","cnt":2895.261416},{"name":"max-rss","cnt":325592.0},{"name":"faults","cnt":53822.0},{"name":"cpu-clock","cnt":2895.26014},{"name":"instructions:u","cnt":14363958937.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":716.096526},{"name":"cycles:u","cnt":2594203763.0},{"name":"task-clock","cnt":716.08567},{"name":"max-rss","cnt":295708.0},{"name":"instructions:u","cnt":3603103165.0},{"name":"faults","cnt":47811.0},{"name":"wall-time","cnt":0.702144087}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":4306869120.0},{"name":"cpu-clock","cnt":904.30012},{"name":"task-clock","cnt":904.300331},{"name":"cycles:u","cnt":3332423103.0},{"name":"faults","cnt":50195.0},{"name":"max-rss","cnt":312444.0},{"name":"wall-time","cnt":0.88681733}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":10.489630479},{"name":"instructions:u","cnt":61416373455.0},{"name":"cycles:u","cnt":53652583632.0},{"name":"task-clock","cnt":14283.689673},{"name":"cpu-clock","cnt":14283.717704},{"name":"faults","cnt":343743.0},{"name":"max-rss","cnt":955732.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":71359749078.0},{"name":"cycles:u","cnt":69003175726.0},{"name":"wall-time","cnt":9.544021511},{"name":"cpu-clock","cnt":18666.831613},{"name":"max-rss","cnt":715232.0},{"name":"task-clock","cnt":18666.618704},{"name":"faults","cnt":281312.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":500056.0},{"name":"instructions:u","cnt":14449890419.0},{"name":"wall-time","cnt":3.773430475},{"name":"faults","cnt":211658.0},{"name":"task-clock","cnt":3849.690719},{"name":"cycles:u","cnt":12604036792.0},{"name":"cpu-clock","cnt":3849.580489}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":234904.0},{"name":"wall-time","cnt":4.381250318},{"name":"instructions:u","cnt":19560030600.0},{"name":"cycles:u","cnt":17882920314.0},{"name":"cpu-clock","cnt":5243.839792},{"name":"max-rss","cnt":591152.0},{"name":"task-clock","cnt":5243.974119}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":770060.0},{"name":"task-clock","cnt":94556.749831},{"name":"cpu-clock","cnt":94556.796252},{"name":"cycles:u","cnt":357496851635.0},{"name":"wall-time","cnt":19.365126214},{"name":"faults","cnt":240171.0},{"name":"instructions:u","cnt":290368144000.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":105948.182748},{"name":"instructions:u","cnt":315905616982.0},{"name":"task-clock","cnt":105947.915021},{"name":"faults","cnt":250563.0},{"name":"cycles:u","cnt":399766900062.0},{"name":"wall-time","cnt":20.994760305},{"name":"max-rss","cnt":752720.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":8958455787.0},{"name":"task-clock","cnt":2357.736218},{"name":"cycles:u","cnt":8055820593.0},{"name":"wall-time","cnt":2.228476499},{"name":"faults","cnt":159734.0},{"name":"cpu-clock","cnt":2357.564392},{"name":"max-rss","cnt":515760.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":717776.0},{"name":"faults","cnt":233101.0},{"name":"cpu-clock","cnt":58934.842069},{"name":"wall-time","cnt":11.641769193},{"name":"cycles:u","cnt":221624040813.0},{"name":"task-clock","cnt":58934.732553},{"name":"instructions:u","cnt":174492290486.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":19721084733.0},{"name":"max-rss","cnt":256100.0},{"name":"instructions:u","cnt":29574048487.0},{"name":"cpu-clock","cnt":5001.968777},{"name":"wall-time","cnt":5.041320142},{"name":"faults","cnt":41552.0},{"name":"task-clock","cnt":5001.968279}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":22822399201.0},{"name":"task-clock","cnt":5810.522957},{"name":"faults","cnt":65350.0},{"name":"max-rss","cnt":351312.0},{"name":"instructions:u","cnt":33450051890.0},{"name":"cpu-clock","cnt":5810.524323},{"name":"wall-time","cnt":5.847470769}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":916.376917},{"name":"cycles:u","cnt":3305047158.0},{"name":"faults","cnt":63879.0},{"name":"wall-time","cnt":0.907805978},{"name":"task-clock","cnt":916.377068},{"name":"instructions:u","cnt":4217949333.0},{"name":"max-rss","cnt":333980.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":49816.0},{"name":"cycles:u","cnt":21879041496.0},{"name":"task-clock","cnt":5575.664374},{"name":"max-rss","cnt":299912.0},{"name":"cpu-clock","cnt":5575.641643},{"name":"instructions:u","cnt":32440674279.0},{"name":"wall-time","cnt":5.472249863}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.465981207},{"name":"max-rss","cnt":411012.0},{"name":"cycles:u","cnt":25734691533.0},{"name":"faults","cnt":78547.0},{"name":"cpu-clock","cnt":6587.790753},{"name":"task-clock","cnt":6587.735683},{"name":"instructions:u","cnt":37318664773.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1078.511464},{"name":"faults","cnt":73083.0},{"name":"task-clock","cnt":1078.519419},{"name":"max-rss","cnt":380664.0},{"name":"cycles:u","cnt":3878131123.0},{"name":"wall-time","cnt":1.057507917},{"name":"instructions:u","cnt":5144582825.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":33333930032.0},{"name":"task-clock","cnt":5906.748703},{"name":"faults","cnt":51429.0},{"name":"max-rss","cnt":306992.0},{"name":"wall-time","cnt":5.466314558},{"name":"cycles:u","cnt":23126531352.0},{"name":"cpu-clock","cnt":5906.750477}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":79145.0},{"name":"wall-time","cnt":6.458140876},{"name":"cpu-clock","cnt":6963.737262},{"name":"cycles:u","cnt":27156804254.0},{"name":"instructions:u","cnt":38270289124.0},{"name":"max-rss","cnt":415340.0},{"name":"task-clock","cnt":6963.740978}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":376788.0},{"name":"instructions:u","cnt":5139580926.0},{"name":"task-clock","cnt":1080.114284},{"name":"wall-time","cnt":1.058729001},{"name":"cpu-clock","cnt":1080.094563},{"name":"faults","cnt":72228.0},{"name":"cycles:u","cnt":3890420065.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":27197.747619},{"name":"task-clock","cnt":27197.738274},{"name":"cycles:u","cnt":106963452663.0},{"name":"faults","cnt":335330.0},{"name":"instructions:u","cnt":121547311899.0},{"name":"max-rss","cnt":1372148.0},{"name":"wall-time","cnt":27.241681909}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":34093.03612},{"name":"wall-time","cnt":34.148180526},{"name":"cpu-clock","cnt":34093.049998},{"name":"cycles:u","cnt":133118421633.0},{"name":"faults","cnt":597526.0},{"name":"max-rss","cnt":2217584.0},{"name":"instructions:u","cnt":152645959265.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":10696.81208},{"name":"faults","cnt":508345.0},{"name":"cycles:u","cnt":40209698106.0},{"name":"instructions:u","cnt":47773071070.0},{"name":"wall-time","cnt":10.319743098},{"name":"max-rss","cnt":2123780.0},{"name":"cpu-clock","cnt":10696.826296}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":20330.395539},{"name":"instructions:u","cnt":92452249429.0},{"name":"max-rss","cnt":2355344.0},{"name":"cycles:u","cnt":78267484540.0},{"name":"faults","cnt":575159.0},{"name":"wall-time","cnt":19.942233764},{"name":"task-clock","cnt":20330.378398}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":95309127750.0},{"name":"wall-time","cnt":21.247654349},{"name":"cycles:u","cnt":83331386618.0},{"name":"faults","cnt":592404.0},{"name":"task-clock","cnt":21625.558629},{"name":"max-rss","cnt":2448292.0},{"name":"cpu-clock","cnt":21625.568972}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"cycles:u","cnt":277337296348.0},{"name":"wall-time","cnt":41.960119946},{"name":"cpu-clock","cnt":72469.394279},{"name":"max-rss","cnt":2740540.0},{"name":"instructions:u","cnt":296848885162.0},{"name":"faults","cnt":734400.0},{"name":"task-clock","cnt":72469.327964}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":531799742987.0},{"name":"cycles:u","cnt":441612001654.0},{"name":"max-rss","cnt":3379144.0},{"name":"wall-time","cnt":66.039841294},{"name":"faults","cnt":1056777.0},{"name":"task-clock","cnt":116247.683969},{"name":"cpu-clock","cnt":116248.501956}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":3430944.0},{"name":"wall-time","cnt":16.026007491},{"name":"task-clock","cnt":14462.944993},{"name":"cpu-clock","cnt":14462.365027},{"name":"faults","cnt":695722.0},{"name":"cycles:u","cnt":51619758101.0},{"name":"instructions:u","cnt":62194677846.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":67615.555251},{"name":"max-rss","cnt":3977712.0},{"name":"cycles:u","cnt":253011018882.0},{"name":"faults","cnt":1026471.0},{"name":"instructions:u","cnt":300332976070.0},{"name":"cpu-clock","cnt":67615.717638},{"name":"wall-time","cnt":40.373391914}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":1136875.0},{"name":"task-clock","cnt":93485.638771},{"name":"cpu-clock","cnt":93485.784494},{"name":"wall-time","cnt":49.260124118},{"name":"max-rss","cnt":4038916.0},{"name":"instructions:u","cnt":423149640211.0},{"name":"cycles:u","cnt":350997686916.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"cpu-clock","cnt":257660.637744},{"name":"wall-time","cnt":61.482131763},{"name":"cycles:u","cnt":975490436087.0},{"name":"faults","cnt":730049.0},{"name":"max-rss","cnt":2405588.0},{"name":"instructions:u","cnt":799145213480.0},{"name":"task-clock","cnt":257660.46191}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":397472.465871},{"name":"faults","cnt":1060184.0},{"name":"wall-time","cnt":83.590275279},{"name":"task-clock","cnt":397472.236324},{"name":"instructions:u","cnt":1252809483834.0},{"name":"cycles:u","cnt":1496662792668.0},{"name":"max-rss","cnt":3021060.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":11.994088207},{"name":"task-clock","cnt":12902.902046},{"name":"instructions:u","cnt":53973059946.0},{"name":"max-rss","cnt":2792744.0},{"name":"cpu-clock","cnt":12902.24011},{"name":"faults","cnt":669175.0},{"name":"cycles:u","cnt":46177492005.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":336289.325782},{"name":"cpu-clock","cnt":336289.94393},{"name":"max-rss","cnt":3494932.0},{"name":"wall-time","cnt":62.650629578},{"name":"instructions:u","cnt":1058464777933.0},{"name":"cycles:u","cnt":1262930714543.0},{"name":"faults","cnt":1125043.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":363090.457421},{"name":"max-rss","cnt":3552480.0},{"name":"wall-time","cnt":67.158051431},{"name":"cycles:u","cnt":1363319762106.0},{"name":"task-clock","cnt":363089.780645},{"name":"faults","cnt":1143062.0},{"name":"instructions:u","cnt":1129978529894.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3227688689.0},{"name":"max-rss","cnt":151480.0},{"name":"cycles:u","cnt":2661572206.0},{"name":"wall-time","cnt":0.728044237},{"name":"cpu-clock","cnt":700.056282},{"name":"faults","cnt":14877.0},{"name":"task-clock","cnt":700.056816}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":889.08909},{"name":"instructions:u","cnt":4083657456.0},{"name":"max-rss","cnt":184220.0},{"name":"faults","cnt":22877.0},{"name":"wall-time","cnt":0.907414705},{"name":"cycles:u","cnt":3392433164.0},{"name":"cpu-clock","cnt":889.086586}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1325081008.0},{"name":"task-clock","cnt":278.586303},{"name":"max-rss","cnt":165300.0},{"name":"cpu-clock","cnt":278.584151},{"name":"wall-time","cnt":0.282844982},{"name":"faults","cnt":21432.0},{"name":"cycles:u","cnt":972883412.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":330.12359},{"name":"wall-time","cnt":0.334318614},{"name":"cycles:u","cnt":1173657471.0},{"name":"task-clock","cnt":330.125007},{"name":"max-rss","cnt":184616.0},{"name":"instructions:u","cnt":1535787886.0},{"name":"faults","cnt":22720.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":36145.0},{"name":"cpu-clock","cnt":2848.361326},{"name":"wall-time","cnt":1.487573486},{"name":"instructions:u","cnt":11887472112.0},{"name":"cycles:u","cnt":10781321713.0},{"name":"task-clock","cnt":2848.367094},{"name":"max-rss","cnt":243904.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":14455105423.0},{"name":"wall-time","cnt":1.750577615},{"name":"task-clock","cnt":3507.27702},{"name":"cycles:u","cnt":13164133395.0},{"name":"faults","cnt":48049.0},{"name":"cpu-clock","cnt":3507.335011},{"name":"max-rss","cnt":291964.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":430.185541},{"name":"task-clock","cnt":430.218771},{"name":"instructions:u","cnt":1905617116.0},{"name":"wall-time","cnt":0.416407694},{"name":"cycles:u","cnt":1446225635.0},{"name":"faults","cnt":32741.0},{"name":"max-rss","cnt":227496.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":636.042469},{"name":"faults","cnt":37185.0},{"name":"instructions:u","cnt":2687100588.0},{"name":"cycles:u","cnt":2200704603.0},{"name":"cpu-clock","cnt":635.968563},{"name":"max-rss","cnt":258348.0},{"name":"wall-time","cnt":0.526112452}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":55004896693.0},{"name":"instructions:u","cnt":44594727284.0},{"name":"max-rss","cnt":262692.0},{"name":"faults","cnt":41704.0},{"name":"cpu-clock","cnt":14582.580653},{"name":"task-clock","cnt":14582.559551},{"name":"wall-time","cnt":2.94574712}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":3.250730131},{"name":"cycles:u","cnt":60706236398.0},{"name":"faults","cnt":52030.0},{"name":"cpu-clock","cnt":16128.522932},{"name":"max-rss","cnt":300256.0},{"name":"task-clock","cnt":16128.544139},{"name":"instructions:u","cnt":48138181563.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.409577699},{"name":"max-rss","cnt":218856.0},{"name":"cycles:u","cnt":1463849373.0},{"name":"cpu-clock","cnt":426.62108},{"name":"task-clock","cnt":426.662538},{"name":"instructions:u","cnt":1925419582.0},{"name":"faults","cnt":32951.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":8305.937651},{"name":"faults","cnt":50458.0},{"name":"task-clock","cnt":8305.948898},{"name":"wall-time","cnt":1.658403971},{"name":"max-rss","cnt":298484.0},{"name":"cycles:u","cnt":31162118834.0},{"name":"instructions:u","cnt":24380254629.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":11279.0},{"name":"cycles:u","cnt":1297534233.0},{"name":"task-clock","cnt":347.177619},{"name":"cpu-clock","cnt":347.176117},{"name":"wall-time","cnt":0.3661212},{"name":"instructions:u","cnt":1757768448.0},{"name":"max-rss","cnt":148012.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":2265370007.0},{"name":"cycles:u","cnt":1686728014.0},{"name":"wall-time","cnt":0.470814433},{"name":"cpu-clock","cnt":452.601232},{"name":"task-clock","cnt":452.613123},{"name":"faults","cnt":17396.0},{"name":"max-rss","cnt":173104.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":135.454618},{"name":"faults","cnt":16194.0},{"name":"max-rss","cnt":149080.0},{"name":"instructions:u","cnt":634813049.0},{"name":"cpu-clock","cnt":135.442633},{"name":"wall-time","cnt":0.145392612},{"name":"cycles:u","cnt":435928828.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1114010316.0},{"name":"wall-time","cnt":0.321730983},{"name":"task-clock","cnt":311.582941},{"name":"cpu-clock","cnt":311.580721},{"name":"instructions:u","cnt":1451253826.0},{"name":"faults","cnt":19574.0},{"name":"max-rss","cnt":182348.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":19757.0},{"name":"instructions:u","cnt":1382735635.0},{"name":"cpu-clock","cnt":295.790079},{"name":"wall-time","cnt":0.306075639},{"name":"max-rss","cnt":183132.0},{"name":"task-clock","cnt":295.778349},{"name":"cycles:u","cnt":1050140696.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cycles:u","cnt":15547879729.0},{"name":"instructions:u","cnt":17579545933.0},{"name":"cpu-clock","cnt":4262.664867},{"name":"task-clock","cnt":4262.683977},{"name":"wall-time","cnt":2.458294348},{"name":"max-rss","cnt":295860.0},{"name":"faults","cnt":92286.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":339540.0},{"name":"task-clock","cnt":5135.153475},{"name":"cpu-clock","cnt":5135.226339},{"name":"wall-time","cnt":2.865148267},{"name":"cycles:u","cnt":18535756266.0},{"name":"faults","cnt":103384.0},{"name":"instructions:u","cnt":20895918197.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.3419842},{"name":"max-rss","cnt":271860.0},{"name":"cycles:u","cnt":4205687191.0},{"name":"faults","cnt":85435.0},{"name":"instructions:u","cnt":5185791407.0},{"name":"task-clock","cnt":1350.306168},{"name":"cpu-clock","cnt":1350.226523}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.557401409},{"name":"instructions:u","cnt":19414013206.0},{"name":"cycles:u","cnt":17568767947.0},{"name":"faults","cnt":110174.0},{"name":"task-clock","cnt":4883.229673},{"name":"max-rss","cnt":368012.0},{"name":"cpu-clock","cnt":4883.281687}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":4886.138635},{"name":"faults","cnt":110175.0},{"name":"cycles:u","cnt":17617383088.0},{"name":"max-rss","cnt":368036.0},{"name":"cpu-clock","cnt":4886.173777},{"name":"instructions:u","cnt":19400534447.0},{"name":"wall-time","cnt":2.557385124}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"faults","cnt":79268.0},{"name":"wall-time","cnt":4.122444298},{"name":"cycles:u","cnt":85978219426.0},{"name":"task-clock","cnt":22850.021579},{"name":"max-rss","cnt":339532.0},{"name":"instructions:u","cnt":68084727181.0},{"name":"cpu-clock","cnt":22850.031472}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":367552.0},{"name":"wall-time","cnt":4.618346317},{"name":"instructions:u","cnt":78313119604.0},{"name":"cycles:u","cnt":101783232824.0},{"name":"faults","cnt":87301.0},{"name":"cpu-clock","cnt":27110.656068},{"name":"task-clock","cnt":27110.546861}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":258476.0},{"name":"task-clock","cnt":714.689027},{"name":"wall-time","cnt":0.692002974},{"name":"cycles:u","cnt":2285356686.0},{"name":"cpu-clock","cnt":714.568123},{"name":"instructions:u","cnt":2743411024.0},{"name":"faults","cnt":59485.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":26916.131742},{"name":"faults","cnt":89812.0},{"name":"instructions:u","cnt":76752157860.0},{"name":"task-clock","cnt":26916.042785},{"name":"wall-time","cnt":4.315284512},{"name":"max-rss","cnt":380756.0},{"name":"cycles:u","cnt":100946755089.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":377492.0},{"name":"task-clock","cnt":18148.80972},{"name":"wall-time","cnt":3.359552317},{"name":"cycles:u","cnt":67991396662.0},{"name":"faults","cnt":87863.0},{"name":"cpu-clock","cnt":18148.84266},{"name":"instructions:u","cnt":53399136006.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":89453.0},{"name":"cycles:u","cnt":12547421581.0},{"name":"task-clock","cnt":3235.940032},{"name":"instructions:u","cnt":18214470756.0},{"name":"cpu-clock","cnt":3235.950513},{"name":"max-rss","cnt":432060.0},{"name":"wall-time","cnt":3.304714712}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3894.730275},{"name":"faults","cnt":100051.0},{"name":"wall-time","cnt":3.929385742},{"name":"cpu-clock","cnt":3894.732921},{"name":"instructions:u","cnt":23571450793.0},{"name":"cycles:u","cnt":15108314030.0},{"name":"max-rss","cnt":475356.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":74696.0},{"name":"task-clock","cnt":1088.571456},{"name":"max-rss","cnt":365496.0},{"name":"instructions:u","cnt":6922798536.0},{"name":"cycles:u","cnt":3940064010.0},{"name":"wall-time","cnt":1.124921278},{"name":"cpu-clock","cnt":1088.557992}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4007.00244},{"name":"max-rss","cnt":498100.0},{"name":"instructions:u","cnt":23581702149.0},{"name":"wall-time","cnt":4.042862338},{"name":"cycles:u","cnt":15501141963.0},{"name":"task-clock","cnt":4007.001835},{"name":"faults","cnt":105783.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"faults","cnt":100048.0},{"name":"instructions:u","cnt":18736418145.0},{"name":"task-clock","cnt":3388.18665},{"name":"max-rss","cnt":457816.0},{"name":"cycles:u","cnt":12732993200.0},{"name":"wall-time","cnt":3.415441546},{"name":"cpu-clock","cnt":3388.17312}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":110519.0},{"name":"max-rss","cnt":499772.0},{"name":"task-clock","cnt":4048.932941},{"name":"wall-time","cnt":4.04329174},{"name":"cycles:u","cnt":15516953048.0},{"name":"instructions:u","cnt":24087837486.0},{"name":"cpu-clock","cnt":4048.896917}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":386684.0},{"name":"task-clock","cnt":1154.608549},{"name":"cycles:u","cnt":4106163744.0},{"name":"instructions:u","cnt":7304751066.0},{"name":"faults","cnt":83665.0},{"name":"cpu-clock","cnt":1154.587712},{"name":"wall-time","cnt":1.185422883}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4072.636087},{"name":"task-clock","cnt":4072.676264},{"name":"wall-time","cnt":4.062888657},{"name":"max-rss","cnt":533152.0},{"name":"instructions:u","cnt":24051368691.0},{"name":"cycles:u","cnt":15569227542.0},{"name":"faults","cnt":119371.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"wall-time","cnt":3.442510967},{"name":"faults","cnt":97865.0},{"name":"cpu-clock","cnt":3419.60873},{"name":"max-rss","cnt":455668.0},{"name":"instructions:u","cnt":18682457096.0},{"name":"cycles:u","cnt":12881211750.0},{"name":"task-clock","cnt":3419.616863}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":24063271593.0},{"name":"wall-time","cnt":3.981804035},{"name":"faults","cnt":107293.0},{"name":"task-clock","cnt":3990.20283},{"name":"max-rss","cnt":493752.0},{"name":"cpu-clock","cnt":3990.196119},{"name":"cycles:u","cnt":15334388017.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":4085999768.0},{"name":"instructions:u","cnt":7251631743.0},{"name":"wall-time","cnt":1.181475563},{"name":"max-rss","cnt":384008.0},{"name":"cpu-clock","cnt":1148.197834},{"name":"faults","cnt":82143.0},{"name":"task-clock","cnt":1148.203752}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4009.982461},{"name":"wall-time","cnt":4.00182723},{"name":"task-clock","cnt":4009.997898},{"name":"faults","cnt":115698.0},{"name":"max-rss","cnt":529804.0},{"name":"instructions:u","cnt":24035951194.0},{"name":"cycles:u","cnt":15358364580.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":5220.264036},{"name":"instructions:u","cnt":34664127789.0},{"name":"faults","cnt":113957.0},{"name":"wall-time","cnt":5.274903703},{"name":"max-rss","cnt":534984.0},{"name":"cycles:u","cnt":20321087747.0},{"name":"task-clock","cnt":5220.26315}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.23861784},{"name":"cpu-clock","cnt":6201.626373},{"name":"max-rss","cnt":577764.0},{"name":"cycles:u","cnt":23981845468.0},{"name":"faults","cnt":125104.0},{"name":"task-clock","cnt":6201.60234},{"name":"instructions:u","cnt":44174600644.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":568588.0},{"name":"wall-time","cnt":1.752877714},{"name":"instructions:u","cnt":12288815046.0},{"name":"cycles:u","cnt":6255056257.0},{"name":"task-clock","cnt":1725.835707},{"name":"faults","cnt":125433.0},{"name":"cpu-clock","cnt":1725.835919}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":132380.0},{"name":"task-clock","cnt":5788.69933},{"name":"max-rss","cnt":629020.0},{"name":"cpu-clock","cnt":5788.714009},{"name":"wall-time","cnt":5.451859303},{"name":"cycles:u","cnt":22329130297.0},{"name":"instructions:u","cnt":37708642222.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":6893.318685},{"name":"faults","cnt":144237.0},{"name":"cycles:u","cnt":26592225887.0},{"name":"max-rss","cnt":676252.0},{"name":"wall-time","cnt":6.43575246},{"name":"task-clock","cnt":6893.308835},{"name":"instructions:u","cnt":47506205224.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1765.91174},{"name":"faults","cnt":127321.0},{"name":"max-rss","cnt":608116.0},{"name":"instructions:u","cnt":12484049729.0},{"name":"task-clock","cnt":1765.899347},{"name":"cycles:u","cnt":6335268221.0},{"name":"wall-time","cnt":1.788318148}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":26641002197.0},{"name":"cpu-clock","cnt":6940.949691},{"name":"wall-time","cnt":5.715626398},{"name":"task-clock","cnt":6940.965615},{"name":"instructions:u","cnt":42564037679.0},{"name":"max-rss","cnt":668192.0},{"name":"faults","cnt":142833.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":52123894077.0},{"name":"wall-time","cnt":6.556581549},{"name":"faults","cnt":154108.0},{"name":"cpu-clock","cnt":8194.198274},{"name":"max-rss","cnt":710608.0},{"name":"task-clock","cnt":8194.190546},{"name":"cycles:u","cnt":31279928326.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.794153001},{"name":"task-clock","cnt":1790.979872},{"name":"faults","cnt":129228.0},{"name":"instructions:u","cnt":12558129550.0},{"name":"cpu-clock","cnt":1791.011712},{"name":"max-rss","cnt":614544.0},{"name":"cycles:u","cnt":6433670169.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":31026496262.0},{"name":"cpu-clock","cnt":3655.027018},{"name":"wall-time","cnt":3.69105504},{"name":"max-rss","cnt":185300.0},{"name":"cycles:u","cnt":14439648589.0},{"name":"task-clock","cnt":3655.036797},{"name":"faults","cnt":25554.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":34983444468.0},{"name":"task-clock","cnt":3971.398904},{"name":"faults","cnt":26306.0},{"name":"cycles:u","cnt":15695668807.0},{"name":"cpu-clock","cnt":3971.406755},{"name":"max-rss","cnt":194940.0},{"name":"wall-time","cnt":4.007465651}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":15661.0},{"name":"max-rss","cnt":149328.0},{"name":"cpu-clock","cnt":191.196227},{"name":"wall-time","cnt":0.222499097},{"name":"cycles:u","cnt":665121749.0},{"name":"instructions:u","cnt":1217052183.0},{"name":"task-clock","cnt":191.197625}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3629.515635},{"name":"cycles:u","cnt":14333008255.0},{"name":"task-clock","cnt":3629.516598},{"name":"instructions:u","cnt":32289407975.0},{"name":"wall-time","cnt":3.644309174},{"name":"faults","cnt":26389.0},{"name":"max-rss","cnt":196368.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":15162374579.0},{"name":"task-clock","cnt":3851.586207},{"name":"cpu-clock","cnt":3851.589535},{"name":"instructions:u","cnt":32322740958.0},{"name":"wall-time","cnt":3.8538654},{"name":"faults","cnt":34227.0},{"name":"max-rss","cnt":226596.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":36426.0},{"name":"wall-time","cnt":4.198605266},{"name":"max-rss","cnt":235412.0},{"name":"cpu-clock","cnt":4222.720667},{"name":"instructions:u","cnt":36670217750.0},{"name":"task-clock","cnt":4222.723095},{"name":"cycles:u","cnt":16616200714.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":255.593339},{"name":"instructions:u","cnt":1702983687.0},{"name":"cpu-clock","cnt":255.591613},{"name":"faults","cnt":21198.0},{"name":"cycles:u","cnt":872932353.0},{"name":"wall-time","cnt":0.286419703},{"name":"max-rss","cnt":178412.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":3815.600918},{"name":"cycles:u","cnt":15021157840.0},{"name":"max-rss","cnt":222208.0},{"name":"faults","cnt":32020.0},{"name":"cpu-clock","cnt":3815.569551},{"name":"instructions:u","cnt":33579940421.0},{"name":"wall-time","cnt":3.827532535}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":33503058215.0},{"name":"faults","cnt":35225.0},{"name":"max-rss","cnt":232332.0},{"name":"task-clock","cnt":3973.832723},{"name":"cycles:u","cnt":15650978842.0},{"name":"cpu-clock","cnt":3973.841777},{"name":"wall-time","cnt":3.978063419}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":16988937074.0},{"name":"faults","cnt":37003.0},{"name":"max-rss","cnt":239536.0},{"name":"wall-time","cnt":4.295340458},{"name":"instructions:u","cnt":37847663085.0},{"name":"task-clock","cnt":4314.317955},{"name":"cpu-clock","cnt":4314.312935}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":21329.0},{"name":"max-rss","cnt":178692.0},{"name":"cpu-clock","cnt":260.749559},{"name":"wall-time","cnt":0.293460914},{"name":"instructions:u","cnt":1699888238.0},{"name":"task-clock","cnt":260.753719},{"name":"cycles:u","cnt":898660705.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":33581570601.0},{"name":"cpu-clock","cnt":3810.531679},{"name":"max-rss","cnt":220292.0},{"name":"cycles:u","cnt":14993197250.0},{"name":"wall-time","cnt":3.824106114},{"name":"task-clock","cnt":3810.515199},{"name":"faults","cnt":31556.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":226525210.0},{"name":"wall-time","cnt":0.087685415},{"name":"instructions:u","cnt":345920310.0},{"name":"max-rss","cnt":103260.0},{"name":"task-clock","cnt":69.723788},{"name":"faults","cnt":5416.0},{"name":"cpu-clock","cnt":69.741718}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":80.978838},{"name":"task-clock","cnt":80.971053},{"name":"instructions:u","cnt":391688680.0},{"name":"max-rss","cnt":108384.0},{"name":"faults","cnt":6763.0},{"name":"cycles:u","cnt":263668611.0},{"name":"wall-time","cnt":0.099006502}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":91356.0},{"name":"task-clock","cnt":43.653009},{"name":"cpu-clock","cnt":43.6499},{"name":"cycles:u","cnt":121164132.0},{"name":"faults","cnt":5874.0},{"name":"instructions:u","cnt":177639560.0},{"name":"wall-time","cnt":0.061686011}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":53.243982},{"name":"faults","cnt":6630.0},{"name":"cycles:u","cnt":154167583.0},{"name":"cpu-clock","cnt":53.251102},{"name":"wall-time","cnt":0.07070216},{"name":"instructions:u","cnt":228120980.0},{"name":"max-rss","cnt":107860.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":13098.0},{"name":"max-rss","cnt":124332.0},{"name":"cpu-clock","cnt":166.032281},{"name":"task-clock","cnt":166.048283},{"name":"instructions:u","cnt":748425981.0},{"name":"wall-time","cnt":0.166345139},{"name":"cycles:u","cnt":513126846.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":585950426.0},{"name":"faults","cnt":15056.0},{"name":"task-clock","cnt":187.887872},{"name":"cpu-clock","cnt":187.878765},{"name":"max-rss","cnt":131800.0},{"name":"wall-time","cnt":0.183194417},{"name":"instructions:u","cnt":823778207.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":13502.0},{"name":"instructions:u","cnt":515881862.0},{"name":"max-rss","cnt":113764.0},{"name":"cycles:u","cnt":338583123.0},{"name":"wall-time","cnt":0.134703384},{"name":"task-clock","cnt":121.216603},{"name":"cpu-clock","cnt":121.204865}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":14834.0},{"name":"instructions:u","cnt":640997762.0},{"name":"task-clock","cnt":154.284997},{"name":"cycles:u","cnt":455395989.0},{"name":"wall-time","cnt":0.150888863},{"name":"cpu-clock","cnt":154.275715},{"name":"max-rss","cnt":132056.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"task-clock","cnt":161.938065},{"name":"faults","cnt":12344.0},{"name":"cpu-clock","cnt":161.925305},{"name":"instructions:u","cnt":751890061.0},{"name":"cycles:u","cnt":508737261.0},{"name":"max-rss","cnt":123900.0},{"name":"wall-time","cnt":0.169452257}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":574161649.0},{"name":"cpu-clock","cnt":181.526422},{"name":"max-rss","cnt":131220.0},{"name":"task-clock","cnt":181.5197},{"name":"instructions:u","cnt":841511258.0},{"name":"faults","cnt":14323.0},{"name":"wall-time","cnt":0.183664235}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":505960252.0},{"name":"faults","cnt":13237.0},{"name":"wall-time","cnt":0.133967921},{"name":"max-rss","cnt":113928.0},{"name":"task-clock","cnt":120.15275},{"name":"cycles:u","cnt":342644400.0},{"name":"cpu-clock","cnt":120.145986}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":541561843.0},{"name":"faults","cnt":13642.0},{"name":"cpu-clock","cnt":130.384215},{"name":"wall-time","cnt":0.142213972},{"name":"max-rss","cnt":120344.0},{"name":"task-clock","cnt":130.390282},{"name":"cycles:u","cnt":376459036.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":491.94006},{"name":"instructions:u","cnt":2456805257.0},{"name":"faults","cnt":34650.0},{"name":"max-rss","cnt":214080.0},{"name":"wall-time","cnt":0.510192642},{"name":"cycles:u","cnt":1807749221.0},{"name":"cpu-clock","cnt":491.929783}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":58404.0},{"name":"wall-time","cnt":0.747932713},{"name":"cpu-clock","cnt":729.996455},{"name":"task-clock","cnt":729.987468},{"name":"max-rss","cnt":309240.0},{"name":"instructions:u","cnt":3416985494.0},{"name":"cycles:u","cnt":2655131317.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":643.189925},{"name":"cycles:u","cnt":2263962672.0},{"name":"instructions:u","cnt":2919800393.0},{"name":"cpu-clock","cnt":643.198522},{"name":"wall-time","cnt":0.621930446},{"name":"faults","cnt":64730.0},{"name":"max-rss","cnt":323820.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":718.256541},{"name":"cycles:u","cnt":2560374264.0},{"name":"instructions:u","cnt":3128999185.0},{"name":"faults","cnt":64899.0},{"name":"wall-time","cnt":0.693313965},{"name":"cpu-clock","cnt":718.265234},{"name":"max-rss","cnt":336148.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":41639.0},{"name":"task-clock","cnt":572.292159},{"name":"max-rss","cnt":234536.0},{"name":"cycles:u","cnt":2027598131.0},{"name":"instructions:u","cnt":2786953056.0},{"name":"wall-time","cnt":0.58008469},{"name":"cpu-clock","cnt":572.285846}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":867.850365},{"name":"instructions:u","cnt":3782135399.0},{"name":"cpu-clock","cnt":867.845144},{"name":"max-rss","cnt":328968.0},{"name":"faults","cnt":65724.0},{"name":"cycles:u","cnt":3097694953.0},{"name":"wall-time","cnt":0.876584367}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":2481280934.0},{"name":"wall-time","cnt":0.70099924},{"name":"cpu-clock","cnt":726.741521},{"name":"instructions:u","cnt":3237372354.0},{"name":"max-rss","cnt":340984.0},{"name":"faults","cnt":71632.0},{"name":"task-clock","cnt":726.751928}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":808.107312},{"name":"faults","cnt":72244.0},{"name":"cycles:u","cnt":2793787409.0},{"name":"instructions:u","cnt":3473300416.0},{"name":"wall-time","cnt":0.774236865},{"name":"max-rss","cnt":356932.0},{"name":"task-clock","cnt":808.10198}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":2815622253.0},{"name":"max-rss","cnt":233156.0},{"name":"faults","cnt":41495.0},{"name":"task-clock","cnt":584.091594},{"name":"wall-time","cnt":0.587804181},{"name":"cpu-clock","cnt":584.07021},{"name":"cycles:u","cnt":2078817974.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":3807266203.0},{"name":"faults","cnt":65586.0},{"name":"wall-time","cnt":0.827962019},{"name":"cpu-clock","cnt":826.022429},{"name":"max-rss","cnt":330732.0},{"name":"task-clock","cnt":826.02137},{"name":"cycles:u","cnt":2917866057.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":340860.0},{"name":"task-clock","cnt":735.943294},{"name":"cycles:u","cnt":2528820070.0},{"name":"instructions:u","cnt":3234491260.0},{"name":"faults","cnt":71549.0},{"name":"wall-time","cnt":0.707820129},{"name":"cpu-clock","cnt":735.94108}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":347420.0},{"name":"task-clock","cnt":798.038774},{"name":"instructions:u","cnt":3441080820.0},{"name":"faults","cnt":71989.0},{"name":"cpu-clock","cnt":798.044256},{"name":"cycles:u","cnt":2780188476.0},{"name":"wall-time","cnt":0.765972867}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":3259.726193},{"name":"wall-time","cnt":3.315220631},{"name":"instructions:u","cnt":14058375823.0},{"name":"faults","cnt":49001.0},{"name":"max-rss","cnt":301600.0},{"name":"cpu-clock","cnt":3259.726129},{"name":"cycles:u","cnt":12742675981.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4183.552999},{"name":"cpu-clock","cnt":4183.553489},{"name":"instructions:u","cnt":18481574854.0},{"name":"wall-time","cnt":4.252768339},{"name":"faults","cnt":76480.0},{"name":"max-rss","cnt":412564.0},{"name":"cycles:u","cnt":16283933173.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.084322742},{"name":"task-clock","cnt":1098.12571},{"name":"cpu-clock","cnt":1098.125673},{"name":"cycles:u","cnt":3994369269.0},{"name":"max-rss","cnt":395824.0},{"name":"faults","cnt":73552.0},{"name":"instructions:u","cnt":4825926450.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":5751222287.0},{"name":"wall-time","cnt":1.336152969},{"name":"cycles:u","cnt":4945952620.0},{"name":"cpu-clock","cnt":1334.960901},{"name":"faults","cnt":75441.0},{"name":"task-clock","cnt":1334.961599},{"name":"max-rss","cnt":409568.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":25712.694755},{"name":"cycles:u","cnt":97061744544.0},{"name":"faults","cnt":234354.0},{"name":"task-clock","cnt":25712.661262},{"name":"instructions:u","cnt":98945054480.0},{"name":"max-rss","cnt":987296.0},{"name":"wall-time","cnt":9.89318081}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":28938.333533},{"name":"instructions:u","cnt":115409916495.0},{"name":"faults","cnt":260997.0},{"name":"cycles:u","cnt":109106040697.0},{"name":"wall-time","cnt":11.782175701},{"name":"cpu-clock","cnt":28938.282965},{"name":"max-rss","cnt":1048696.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2139.847786},{"name":"faults","cnt":134186.0},{"name":"instructions:u","cnt":9183211289.0},{"name":"max-rss","cnt":752060.0},{"name":"wall-time","cnt":2.066768551},{"name":"cycles:u","cnt":7504980726.0},{"name":"cpu-clock","cnt":2139.724205}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":2.370997104},{"name":"max-rss","cnt":767740.0},{"name":"cpu-clock","cnt":2483.213016},{"name":"faults","cnt":136253.0},{"name":"task-clock","cnt":2483.363294},{"name":"instructions:u","cnt":10373088717.0},{"name":"cycles:u","cnt":8826125987.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":316332954332.0},{"name":"task-clock","cnt":106173.120818},{"name":"max-rss","cnt":1377016.0},{"name":"cycles:u","cnt":400065370586.0},{"name":"faults","cnt":344341.0},{"name":"wall-time","cnt":20.620685297},{"name":"cpu-clock","cnt":106173.158644}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":119831.592143},{"name":"cycles:u","cnt":450919362448.0},{"name":"instructions:u","cnt":355271663276.0},{"name":"wall-time","cnt":22.325037557},{"name":"max-rss","cnt":1255528.0},{"name":"faults","cnt":339107.0},{"name":"task-clock","cnt":119831.26112}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.056949831},{"name":"cycles:u","cnt":7659443811.0},{"name":"cpu-clock","cnt":2186.25815},{"name":"task-clock","cnt":2186.390689},{"name":"instructions:u","cnt":9043474638.0},{"name":"faults","cnt":136917.0},{"name":"max-rss","cnt":761752.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":4.146098491},{"name":"cpu-clock","cnt":10175.826148},{"name":"faults","cnt":201490.0},{"name":"max-rss","cnt":1005424.0},{"name":"instructions:u","cnt":40675483271.0},{"name":"task-clock","cnt":10175.887635},{"name":"cycles:u","cnt":37703819153.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":2.314139098},{"name":"max-rss","cnt":182372.0},{"name":"faults","cnt":24350.0},{"name":"cpu-clock","cnt":2260.807832},{"name":"task-clock","cnt":2260.819363},{"name":"instructions:u","cnt":14208246095.0},{"name":"cycles:u","cnt":8875943095.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":191756.0},{"name":"cpu-clock","cnt":2489.463949},{"name":"cycles:u","cnt":9766994696.0},{"name":"wall-time","cnt":2.523871898},{"name":"faults","cnt":26542.0},{"name":"task-clock","cnt":2489.474288},{"name":"instructions:u","cnt":15603706476.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":221.474504},{"name":"cycles:u","cnt":758452921.0},{"name":"wall-time","cnt":0.247734505},{"name":"max-rss","cnt":157588.0},{"name":"instructions:u","cnt":1203672427.0},{"name":"faults","cnt":19047.0},{"name":"cpu-clock","cnt":221.46295}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":9174855531.0},{"name":"cpu-clock","cnt":2339.116143},{"name":"max-rss","cnt":200760.0},{"name":"task-clock","cnt":2339.127563},{"name":"faults","cnt":26250.0},{"name":"wall-time","cnt":2.384821392},{"name":"instructions:u","cnt":14704503087.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":2606.755066},{"name":"task-clock","cnt":2606.766437},{"name":"max-rss","cnt":217032.0},{"name":"wall-time","cnt":2.619780281},{"name":"faults","cnt":28712.0},{"name":"instructions:u","cnt":16287223764.0},{"name":"cycles:u","cnt":10215332745.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":846978560.0},{"name":"faults","cnt":22555.0},{"name":"cpu-clock","cnt":249.691222},{"name":"max-rss","cnt":179088.0},{"name":"instructions:u","cnt":1371256029.0},{"name":"wall-time","cnt":0.275402458},{"name":"task-clock","cnt":249.695979}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":208328.0},{"name":"task-clock","cnt":2453.707857},{"name":"cycles:u","cnt":9602208654.0},{"name":"wall-time","cnt":2.454427942},{"name":"faults","cnt":27861.0},{"name":"cpu-clock","cnt":2453.705065},{"name":"instructions:u","cnt":15353605032.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":10693320932.0},{"name":"max-rss","cnt":223084.0},{"name":"wall-time","cnt":2.684817128},{"name":"task-clock","cnt":2735.526177},{"name":"cpu-clock","cnt":2735.51819},{"name":"instructions:u","cnt":16868229614.0},{"name":"faults","cnt":30041.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":252.880535},{"name":"max-rss","cnt":180304.0},{"name":"wall-time","cnt":0.276534963},{"name":"instructions:u","cnt":1387181679.0},{"name":"faults","cnt":22697.0},{"name":"cycles:u","cnt":853462843.0},{"name":"cpu-clock","cnt":252.875653}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}