{"commit":{"sha":"2daa404e9a151a2e8262cbd6d8c209fd067aca16","date":"2019-10-02T18:28:11+00:00"},"benchmarks":{"cargo":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking serde v1.0.59\\n    Checking libz-sys v1.0.18\\n    Checking openssl-sys v0.9.31\\n   Compiling curl-sys v0.4.5\\n    Checking num-traits v0.2.4\\n    Checking backtrace-sys v0.1.19\\n    Checking regex v0.2.11\\n    Checking miniz-sys v0.1.10\\n    Checking regex v1.0.0\\n    Checking backtrace v0.3.8\\n    Checking flate2 v1.0.1\\n    Checking failure v0.1.1\\n    Checking libssh2-sys v0.2.7\\n    Checking openssl v0.10.8\\n    Checking globset v0.4.0\\n    Checking env_logger v0.5.10\\n    Checking ignore v0.4.2\\n    Checking crypto-hash v0.3.1\\n    Checking serde_json v1.0.17\\n    Checking serde_ignored v0.0.4\\n    Checking semver v0.9.0\\n    Checking toml v0.4.6\\n   Compiling libgit2-sys v0.7.1\\n    Checking curl v0.4.12\\n    Checking crates-io v0.17.0 (/tmp/.tmpngrZek/src/crates-io)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/crates-io/lib.rs:292:41\\n  |\\n29| fn handle(handle: &mut Easy, read: &mut FnMut(&mut [u8]) -> usize) -> Result<String> {\\n  |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&mut [u8]) -> usize`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\n    Checking git2 v0.7.1\\n    Checking git2-curl v0.8.1\\n    Checking cargo v0.29.0 (/tmp/.tmpngrZek)\\nwarning: unused doc comment\\n --> src/cargo/core/features.rs:149:1\\n  |\\n14| / /// A listing of all features in Cargo\\n15| | ///\\n15| | /// \\\"look here\\\"\\n15| | ///\\n... |\\n15| | /// character is translated to `-` when specified in the `cargo-features`\\n15| | /// manifest entry in `Cargo.toml`.\\n  | |___________________________________^\\n16| / features! {\\n16| |     pub struct Features {\\n16| |\\n16| |         // A dummy feature that doesn\\'t actually gate anything, but it\\'s used in\\n... |\\n18| |     }\\n18| | }\\n  | |_- rustdoc does not generate documentation for macro expansions\\n  |\\n  = note: `#[warn(unused_doc_comments)]` on by default\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/cargo/core/compiler/context/mod.rs:141:20\\n  |\\n14|         exec: &Arc<Executor>,\\n  |                    ^^^^^^^^ help: use `dyn`: `dyn Executor`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/compiler/job.rs:14:16\\n   |\\n14 |     inner: Box<for<\\'a, \\'b> FnBox<&\\'a JobState<\\'b>, CargoResult<()>> + Send>,\\n   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn for<\\'a, \\'b> FnBox<&\\'a JobState<\\'b>, CargoResult<()>> + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/compiler/mod.rs:74:29\\n   |\\n74 |         handle_stdout: &mut FnMut(&str) -> CargoResult<()>,\\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&str) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/compiler/mod.rs:75:29\\n   |\\n75 |         handle_stderr: &mut FnMut(&str) -> CargoResult<()>,\\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&str) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/compiler/mod.rs:100:16\\n    |\\n100 |     exec: &Arc<Executor>,\\n    |                ^^^^^^^^ help: use `dyn`: `dyn Executor`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/compiler/mod.rs:159:16\\n    |\\n159 |     exec: &Arc<Executor>,\\n    |                ^^^^^^^^ help: use `dyn`: `dyn Executor`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/package.rs:237:45\\n    |\\n237 |     pub fn package_ids<\\'a>(&\\'a self) -> Box<Iterator<Item = &\\'a PackageId> + \\'a> {\\n    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Iterator<Item = &\\'a PackageId> + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/registry.rs:17:51\\n   |\\n17 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()>;\\n   |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/registry.rs:143:49\\n    |\\n143 |     pub fn add_preloaded(&mut self, source: Box<Source + \\'cfg>) {\\n    |                                                 ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/registry.rs:147:42\\n    |\\n147 |     fn add_source(&mut self, source: Box<Source + \\'cfg>, kind: Kind) {\\n    |                                          ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/registry.rs:153:48\\n    |\\n153 |     pub fn add_override(&mut self, source: Box<Source + \\'cfg>) {\\n    |                                                ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/registry.rs:397:51\\n    |\\n397 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()> {\\n    |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/resolver/types.rs:11:28\\n   |\\n11 |     pub registry: &\\'a mut (Registry + \\'a),\\n   |                            ^^^^^^^^^^^^^ help: use `dyn`: `dyn Registry + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/resolver/types.rs:24:27\\n   |\\n24 |         registry: &\\'a mut Registry,\\n   |                           ^^^^^^^^ help: use `dyn`: `dyn Registry`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/resolver/mod.rs:111:20\\n    |\\n111 |     registry: &mut Registry,\\n    |                    ^^^^^^^^ help: use `dyn`: `dyn Registry`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/resolver/mod.rs:863:20\\n    |\\n863 |     registry: &mut Registry,\\n    |                    ^^^^^^^^ help: use `dyn`: `dyn Registry`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/shell.rs:45:15\\n   |\\n45 |     Write(Box<Write>),\\n   |               ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/shell.rs:80:32\\n   |\\n80 |     pub fn from_write(out: Box<Write>) -> Shell {\\n   |                                ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/shell.rs:91:18\\n   |\\n91 |         status: &fmt::Display,\\n   |                  ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/shell.rs:92:26\\n   |\\n92 |         message: Option<&fmt::Display>,\\n   |                          ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/shell.rs:119:35\\n    |\\n119 |     pub fn err(&mut self) -> &mut Write {\\n    |                                   ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/shell.rs:247:18\\n    |\\n247 |         status: &fmt::Display,\\n    |                  ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/shell.rs:248:26\\n    |\\n248 |         message: Option<&fmt::Display>,\\n    |                          ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/shell.rs:283:36\\n    |\\n283 |     fn as_write(&mut self) -> &mut Write {\\n    |                                    ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/source_id.rs:243:67\\n    |\\n243 |     pub fn load<\\'a>(&self, config: &\\'a Config) -> CargoResult<Box<super::Source + \\'a>> {\\n    |                                                                   ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn super::Source + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/source/mod.rs:26:51\\n   |\\n26 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()>;\\n   |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/core/source/mod.rs:78:51\\n   |\\n78 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()> {\\n   |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:111:32\\n    |\\n111 |     map: HashMap<SourceId, Box<Source + \\'src>>,\\n    |                                ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:123:55\\n    |\\n123 | pub type Sources<\\'a, \\'src> = Values<\\'a, SourceId, Box<Source + \\'src>>;\\n    |                                                       ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:127:38\\n    |\\n127 |     inner: IterMut<\\'a, SourceId, Box<Source + \\'src>>,\\n    |                                      ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:144:50\\n    |\\n144 |     pub fn get(&self, id: &SourceId) -> Option<&(Source + \\'src)> {\\n    |                                                  ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:148:22\\n    |\\n148 |             let s: &(Source + \\'src) = &**s;\\n    |                      ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:154:62\\n    |\\n154 |     pub fn get_mut(&mut self, id: &SourceId) -> Option<&mut (Source + \\'src)> {\\n    |                                                              ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:156:26\\n    |\\n156 |             let s: &mut (Source + \\'src) = &mut **s;\\n    |                          ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:163:69\\n    |\\n163 |     pub fn get_by_package_id(&self, pkg_id: &PackageId) -> Option<&(Source + \\'src)> {\\n    |                                                                     ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:168:42\\n    |\\n168 |     pub fn insert(&mut self, source: Box<Source + \\'src>) {\\n    |                                          ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:197:41\\n    |\\n197 |     type Item = (&\\'a SourceId, &\\'a mut (Source + \\'src));\\n    |                                         ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/core/source/mod.rs:198:58\\n    |\\n198 |     fn next(&mut self) -> Option<(&\\'a SourceId, &\\'a mut (Source + \\'src))> {\\n    |                                                          ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'src`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/ops/cargo_compile.rs:178:15\\n    |\\n178 |     exec: Arc<Executor>,\\n    |               ^^^^^^^^ help: use `dyn`: `dyn Executor`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/ops/cargo_compile.rs:199:24\\n    |\\n199 |     source: Option<Box<Source + \\'a>>,\\n    |                        ^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/ops/cargo_compile.rs:201:15\\n    |\\n201 |     exec: Arc<Executor>,\\n    |               ^^^^^^^^ help: use `dyn`: `dyn Executor`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/ops/cargo_install.rs:414:20\\n    |\\n414 |     list_all: &mut FnMut(&mut T) -> CargoResult<Vec<Package>>,\\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&mut T) -> CargoResult<Vec<Package>>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/ops/cargo_install.rs:415:32\\n    |\\n415 | ) -> CargoResult<(Package, Box<Source + \\'a>)>\\n    |                                ^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/ops/cargo_read_manifest.rs:99:37\\n   |\\n99 | fn walk(path: &Path, callback: &mut FnMut(&Path) -> CargoResult<bool>) -> CargoResult<()> {\\n   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&Path) -> CargoResult<bool>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/ops/resolve.rs:27:24\\n   |\\n27 |     source: Option<Box<Source + \\'a>>,\\n   |                        ^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/ops/resolve.rs:49:24\\n   |\\n49 |     source: Option<Box<Source + \\'a>>,\\n   |                        ^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/ops/resolve.rs:392:12\\n    |\\n392 |     keep: &Fn(&&\\'a PackageId) -> bool,\\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&&\\'a PackageId) -> bool`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/config.rs:75:58\\n   |\\n75 |     pub fn load(&self, id: &SourceId) -> CargoResult<Box<Source + \\'cfg>> {\\n   |                                                          ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/directory.rs:48:51\\n   |\\n48 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()> {\\n   |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/git/utils.rs:633:14\\n    |\\n633 |     cb: &mut FnMut(git2::FetchOptions) -> CargoResult<()>,\\n    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(git2::FetchOptions) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/git/source.rs:126:51\\n    |\\n126 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()> {\\n    |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/path.rs:257:22\\n    |\\n257 |         filter: &mut FnMut(&Path) -> CargoResult<bool>,\\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&Path) -> CargoResult<bool>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/path.rs:300:22\\n    |\\n300 |         filter: &mut FnMut(&Path) -> CargoResult<bool>,\\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&Path) -> CargoResult<bool>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/path.rs:420:22\\n    |\\n420 |         filter: &mut FnMut(&Path) -> CargoResult<bool>,\\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&Path) -> CargoResult<bool>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/path.rs:431:22\\n    |\\n431 |         filter: &mut FnMut(&Path) -> CargoResult<bool>,\\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&Path) -> CargoResult<bool>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/path.rs:479:51\\n    |\\n479 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()> {\\n    |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/registry/mod.rs:188:14\\n    |\\n188 |     ops: Box<RegistryData + \\'cfg>,\\n    |              ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn RegistryData + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/registry/mod.rs:303:20\\n    |\\n303 |         data: &mut FnMut(&[u8]) -> CargoResult<()>,\\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&[u8]) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/registry/index.rs:41:56\\n   |\\n41 |     pub fn hash(&mut self, pkg: &PackageId, load: &mut RegistryData) -> CargoResult<String> {\\n   |                                                        ^^^^^^^^^^^^ help: use `dyn`: `dyn RegistryData`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/registry/index.rs:63:20\\n   |\\n63 |         load: &mut RegistryData,\\n   |                    ^^^^^^^^^^^^ help: use `dyn`: `dyn RegistryData`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/registry/index.rs:76:20\\n   |\\n76 |         load: &mut RegistryData,\\n   |                    ^^^^^^^^^^^^ help: use `dyn`: `dyn RegistryData`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/registry/index.rs:178:20\\n    |\\n178 |         load: &mut RegistryData,\\n    |                    ^^^^^^^^^^^^ help: use `dyn`: `dyn RegistryData`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/registry/index.rs:179:17\\n    |\\n179 |         f: &mut FnMut(Summary),\\n    |                 ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/registry/remote.rs:126:20\\n    |\\n126 |         data: &mut FnMut(&[u8]) -> CargoResult<()>,\\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&[u8]) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/registry/local.rs:40:20\\n   |\\n40 |         data: &mut FnMut(&[u8]) -> CargoResult<()>,\\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&[u8]) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/registry/mod.rs:341:18\\n    |\\n341 |         ops: Box<RegistryData + \\'cfg>,\\n    |                  ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn RegistryData + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/sources/registry/mod.rs:424:51\\n    |\\n424 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()> {\\n    |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/cargo/sources/replaced.rs:7:16\\n  |\\n7 |     inner: Box<Source + \\'cfg>,\\n  |                ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/replaced.rs:14:18\\n   |\\n14 |         src: Box<Source + \\'cfg>,\\n   |                  ^^^^^^^^^^^^^ help: use `dyn`: `dyn Source + \\'cfg`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/sources/replaced.rs:25:51\\n   |\\n25 |     fn query(&mut self, dep: &Dependency, f: &mut FnMut(Summary)) -> CargoResult<()> {\\n   |                                                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Summary)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/util/errors.rs:55:32\\n   |\\n55 |     fn cause(&self) -> Option<&Fail> {\\n   |                                ^^^^ help: use `dyn`: `dyn Fail`\\n\\nwarning: the item `libc` is imported redundantly\\n --> src/cargo/util/errors.rs:244:13\\n  |\\n24|         use libc;\\n  |             ^^^^\\n  | \\n ::: src/cargo/lib.rs:28:1\\n  |\\n28| extern crate libc;\\n  | ------------------ the item `libc` is already imported here\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/util/errors.rs:281:22\\n    |\\n281 | fn _internal(error: &fmt::Display) -> CargoError {\\n    |                      ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: the item `OsStr` is imported redundantly\\n   --> src/cargo/util/paths.rs:181:9\\n    |\\n2   | use std::ffi::{OsStr, OsString};\\n    |                ----- the item `OsStr` is already imported here\\n...\\n181 |     use std::ffi::OsStr;\\n    |         ^^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/util/process_builder.rs:216:30\\n    |\\n216 |         on_stdout_line: &mut FnMut(&str) -> CargoResult<()>,\\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&str) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/util/process_builder.rs:217:30\\n    |\\n217 |         on_stderr_line: &mut FnMut(&str) -> CargoResult<()>,\\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&str) -> CargoResult<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/util/toml/targets.rs:457:23\\n    |\\n457 |     legacy_path: &mut FnMut(&TomlTarget) -> Option<PathBuf>,\\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&TomlTarget) -> Option<PathBuf>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/util/toml/targets.rs:706:23\\n    |\\n706 |     legacy_path: &mut FnMut(&TomlTarget) -> Option<PathBuf>,\\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&TomlTarget) -> Option<PathBuf>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/util/flock.rs:273:11\\n    |\\n273 |     try: &Fn() -> io::Result<()>,\\n    |           ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn() -> io::Result<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/cargo/util/flock.rs:274:13\\n    |\\n274 |     block: &Fn() -> io::Result<()>,\\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn() -> io::Result<()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/cargo/util/read2.rs:15:20\\n   |\\n15 |         data: &mut FnMut(bool, &mut Vec<u8>, bool),\\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(bool, &mut Vec<u8>, bool)`\\n\\nwarning: variable does not need to be mutable\\n --> src/cargo/ops/cargo_compile.rs:294:13\\n  |\\n29|         let mut cx = Context::new(config, &bcx)?;\\n  |             ----^^\\n  |             |\\n  |             help: remove this `mut`\\n  |\\n  = note: `#[warn(unused_mut)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpngrZek/self-profile-output\\\"; prefix is \\\"cargo-18000\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `cargo`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=31733341714;;instructions:u;6954612575;100.00;1.16;insn per cycle\\n27252410187;;cycles:u;6954612575;100.00;3.919;GHz\\n6954.608728;;task-clock;6954608728;100.00;1.000;CPUs utilized\\n6954.609932;;cpu-clock;6954608728;100.00;1.000;CPUs utilized\\n83997;;faults;6954608728;100.00;0.012;M/sec\\n440216;;max-rss;3;100.00\\n7.014254342;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"clap-rs":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: profile `doc` is deprecated and has no effect\\n    Checking clap v2.29.0 (/tmp/.tmpGHpDkZ)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/app/parser.rs:1975:55\\n  |\\n19|     pub fn find_any_arg(&self, name: &str) -> Option<&AnyArg> {\\n  |                                                       ^^^^^^ help: use `dyn`: `dyn AnyArg`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/app/help.rs:43:27\\n   |\\n43 |     fn as_base(&self) -> &ArgWithDisplay<\\'b, \\'c>;\\n   |                           ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/app/help.rs:49:27\\n   |\\n49 |     fn as_base(&self) -> &ArgWithDisplay<\\'b, \\'c> { self }\\n   |                           ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/app/help.rs:52:61\\n   |\\n52 | fn as_arg_trait<\\'a, \\'b, T: ArgWithOrder<\\'a, \\'b>>(x: &T) -> &ArgWithOrder<\\'a, \\'b> { x }\\n   |                                                             ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithOrder<\\'a, \\'b>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/app/help.rs:79:21\\n   |\\n79 |     writer: &\\'a mut Write,\\n   |                     ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/app/help.rs:95:20\\n   |\\n95 |         w: &\\'a mut Write,\\n   |                    ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:133:38\\n    |\\n133 |     pub fn write_app_help(w: &\\'a mut Write, app: &App, use_long: bool) -> ClapResult<()> {\\n    |                                      ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:140:41\\n    |\\n140 |     pub fn write_parser_help(w: &\\'a mut Write, parser: &Parser, use_long: bool) -> ClapResult<()> {\\n    |                                         ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:148:51\\n    |\\n148 |     pub fn write_parser_help_to_stderr(w: &\\'a mut Write, parser: &Parser) -> ClapResult<()> {\\n    |                                                   ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:155:20\\n    |\\n155 |         w: &\\'a mut Write,\\n    |                    ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:199:32\\n    |\\n199 |         I: Iterator<Item = &\\'d ArgWithOrder<\\'b, \\'c>>,\\n    |                                ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithOrder<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:228:32\\n    |\\n228 |         I: Iterator<Item = &\\'d ArgWithOrder<\\'b, \\'c>>,\\n    |                                ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithOrder<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:264:43\\n    |\\n264 |     fn write_arg<\\'b, \\'c>(&mut self, arg: &ArgWithDisplay<\\'b, \\'c>) -> io::Result<()> {\\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:274:39\\n    |\\n274 |     fn short<\\'b, \\'c>(&mut self, arg: &ArgWithDisplay<\\'b, \\'c>) -> io::Result<()> {\\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:287:38\\n    |\\n287 |     fn long<\\'b, \\'c>(&mut self, arg: &ArgWithDisplay<\\'b, \\'c>) -> io::Result<()> {\\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:316:37\\n    |\\n316 |     fn val<\\'b, \\'c>(&mut self, arg: &ArgWithDisplay<\\'b, \\'c>) -> Result<String, io::Error> {\\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:443:38\\n    |\\n443 |     fn help<\\'b, \\'c>(&mut self, arg: &ArgWithDisplay<\\'b, \\'c>, spec_vals: &str) -> io::Result<()> {\\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<\\'b, \\'c>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app/help.rs:499:29\\n    |\\n499 |     fn spec_vals(&self, a: &ArgWithDisplay) -> String {\\n    |                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/app/mod.rs:1809:39\\n     |\\n1809 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> { None }\\n     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/app/mod.rs:1810:42\\n     |\\n1810 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> { None }\\n     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/args/any_arg.rs:25:39\\n   |\\n25 |     fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>>;\\n   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> Result<(), String>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/args/any_arg.rs:26:42\\n   |\\n26 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>>;\\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> Result<(), OsString>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/args/arg_builder/flag.rs:79:39\\n   |\\n79 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> { None }\\n   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/args/arg_builder/flag.rs:80:42\\n   |\\n80 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> { None }\\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/args/arg_builder/positional.rs:150:39\\n    |\\n150 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {\\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/args/arg_builder/positional.rs:153:42\\n    |\\n153 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {\\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/args/arg_builder/option.rs:132:39\\n    |\\n132 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {\\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/args/arg_builder/option.rs:135:42\\n    |\\n135 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {\\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/args/arg_builder/valued.rs:19:30\\n   |\\n19 |     pub validator: Option<Rc<Fn(String) -> Result<(), String>>>,\\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> Result<(), String>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/args/arg_builder/valued.rs:20:33\\n   |\\n20 |     pub validator_os: Option<Rc<Fn(&OsStr) -> Result<(), OsString>>>,\\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> Result<(), OsString>`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpGHpDkZ/self-profile-output\\\"; prefix is \\\"clap-18085\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `clap`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=17038046208;;instructions:u;3618028851;100.00;1.20;insn per cycle\\n14148443920;;cycles:u;3618028851;100.00;3.911;GHz\\n3618.031325;;task-clock;3618031325;100.00;0.995;CPUs utilized\\n3618.030794;;cpu-clock;3618031325;100.00;0.995;CPUs utilized\\n51177;;faults;3618031325;100.00;0.014;M/sec\\n292612;;max-rss;3;100.00\\n3.681860804;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"coercions":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-32278-big-array-of-strings v0.1.0 (/tmp/.tmpjTgG2m)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpjTgG2m/self-profile-output\\\"; prefix is \\\"issue_32278_big_array_of_strings-18129\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-32278-big-array-of-strings`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=5523187888;;instructions:u;822331851;100.00;1.75;insn per cycle\\n3164713387;;cycles:u;822331851;100.00;3.849;GHz\\n822.287231;;task-clock;822287231;100.00;0.999;CPUs utilized\\n822.285934;;cpu-clock;822287231;100.00;0.999;CPUs utilized\\n25438;;faults;822287231;100.00;0.031;M/sec\\n177992;;max-rss;3;100.00\\n0.880678495;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"cranelift-codegen":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling cranelift-entity v0.30.0 (/tmp/.tmpa60klo/cranelift-entity)\\n   Compiling proc-macro2 v0.4.27\\n   Compiling ryu v0.2.7\\n   Compiling serde v1.0.90\\n    Checking cranelift-bforest v0.30.0 (/tmp/.tmpa60klo/cranelift-bforest)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> cranelift-bforest/src/path.rs:52:16\\n  |\\n52|         comp: &Comparator<F::Key>,\\n  |                ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Comparator<F::Key>`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\n   Compiling cranelift-codegen-meta v0.30.0 (/tmp/.tmpa60klo/cranelift-codegen/meta)\\nwarning: unnecessary trailing semicolon\\n --> cranelift-codegen/meta/src/cdsl/typevar.rs:551:1\\n  |\\n55| ;\\n  | ^ help: remove this semicolon\\n  |\\n  = note: `#[warn(redundant_semicolon)]` on by default\\n\\nwarning: unnecessary trailing semicolon\\n  --> cranelift-codegen/meta/src/shared/formats.rs:71:69\\n   |\\n71 |     registry.insert(Builder::new(\\\"FloatCond\\\").imm(floatcc).value());;\\n   |                                                                     ^ help: remove this semicolon\\n\\n   Compiling quote v0.6.12\\n   Compiling syn v0.15.30\\n   Compiling cranelift-codegen v0.30.0 (/tmp/.tmpa60klo/cranelift-codegen)\\n   Compiling synstructure v0.10.1\\n   Compiling serde_json v1.0.39\\n   Compiling failure_derive v0.1.5\\n    Checking failure v0.1.5\\n   Compiling target-lexicon v0.4.0\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> cranelift-codegen/src/binemit/memorysink.rs:37:21\\n  |\\n37|     relocs: &\\'a mut RelocSink,\\n  |                     ^^^^^^^^^ help: use `dyn`: `dyn RelocSink`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/binemit/memorysink.rs:38:20\\n   |\\n38 |     traps: &\\'a mut TrapSink,\\n   |                    ^^^^^^^^ help: use `dyn`: `dyn TrapSink`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/binemit/memorysink.rs:46:54\\n   |\\n46 |     pub unsafe fn new(data: *mut u8, relocs: &\\'a mut RelocSink, traps: &\\'a mut TrapSink) -> Self {\\n   |                                                      ^^^^^^^^^ help: use `dyn`: `dyn RelocSink`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/binemit/memorysink.rs:46:80\\n   |\\n46 |     pub unsafe fn new(data: *mut u8, relocs: &\\'a mut RelocSink, traps: &\\'a mut TrapSink) -> Self {\\n   |                                                                                ^^^^^^^^ help: use `dyn`: `dyn TrapSink`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/binemit/relaxation.rs:43:50\\n   |\\n43 | pub fn relax_branches(func: &mut Function, isa: &TargetIsa) -> CodegenResult<CodeOffset> {\\n   |                                                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/binemit/relaxation.rs:162:11\\n    |\\n162 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/binemit/shrink.rs:16:55\\n   |\\n16 | pub fn shrink_instructions(func: &mut Function, isa: &TargetIsa) {\\n   |                                                       ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/cfg_printer.rs:26:33\\n   |\\n26 |     pub fn write(&self, w: &mut Write) -> Result {\\n   |                                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/cfg_printer.rs:33:30\\n   |\\n33 |     fn header(&self, w: &mut Write) -> Result {\\n   |                              ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/cfg_printer.rs:41:33\\n   |\\n41 |     fn ebb_nodes(&self, w: &mut Write) -> Result {\\n   |                                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/cfg_printer.rs:65:39\\n   |\\n65 |     fn cfg_connections(&self, w: &mut Write) -> Result {\\n   |                                       ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/cursor.rs:660:18\\n    |\\n660 |     pub isa: &\\'f TargetIsa,\\n    |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/cursor.rs:665:53\\n    |\\n665 |     pub fn new(func: &\\'f mut ir::Function, isa: &\\'f TargetIsa) -> Self {\\n    |                                                     ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/dfg.rs:413:48\\n    |\\n413 |     pub fn display_inst<\\'a, I: Into<Option<&\\'a TargetIsa>>>(\\n    |                                                ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/dfg.rs:896:58\\n    |\\n896 | pub struct DisplayInst<\\'a>(&\\'a DataFlowGraph, Option<&\\'a TargetIsa>, Inst);\\n    |                                                          ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/entities.rs:241:19\\n    |\\n241 |         (self as &fmt::Display).fmt(f)\\n    |                   ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/function.rs:157:43\\n    |\\n157 |     pub fn display<\\'a, I: Into<Option<&\\'a TargetIsa>>>(&\\'a self, isa: I) -> DisplayFunction<\\'a> {\\n    |                                           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/function.rs:196:61\\n    |\\n196 |     pub fn update_encoding(&mut self, inst: ir::Inst, isa: &TargetIsa) -> Result<(), Legalize> {\\n    |                                                             ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/function.rs:202:48\\n    |\\n202 |     pub fn encode(&self, inst: ir::Inst, isa: &TargetIsa) -> Result<Encoding, Legalize> {\\n    |                                                ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/function.rs:208:57\\n    |\\n208 | pub struct DisplayFunction<\\'a>(&\\'a Function, Option<&\\'a TargetIsa>);\\n    |                                                         ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/ir/globalvalue.rs:79:37\\n   |\\n79 |     pub fn global_type(&self, isa: &TargetIsa) -> Type {\\n   |                                     ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/libcall.rs:110:11\\n    |\\n110 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/libcall.rs:122:11\\n    |\\n122 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/libcall.rs:150:11\\n    |\\n150 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/libcall.rs:166:11\\n    |\\n166 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/ir/libcall.rs:180:78\\n    |\\n180 | fn make_funcref(libcall: LibCall, func: &mut Function, sig: Signature, isa: &TargetIsa) -> FuncRef {\\n    |                                                                              ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/isa/riscv/mod.rs:43:10\\n   |\\n43 | ) -> Box<TargetIsa> {\\n   |          ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/abi.rs:202:28\\n    |\\n202 | fn callee_saved_gprs(isa: &TargetIsa, call_conv: CallConv) -> &\\'static [RU] {\\n    |                            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/abi.rs:230:33\\n    |\\n230 | fn callee_saved_gprs_used(isa: &TargetIsa, func: &ir::Function) -> RegisterSet {\\n    |                                 ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/abi.rs:272:57\\n    |\\n272 | pub fn prologue_epilogue(func: &mut ir::Function, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                                         ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/abi.rs:284:63\\n    |\\n284 | fn baldrdash_prologue_epilogue(func: &mut ir::Function, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                                               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/abi.rs:305:62\\n    |\\n305 | fn fastcall_prologue_epilogue(func: &mut ir::Function, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                                              ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/abi.rs:377:62\\n    |\\n377 | fn system_v_prologue_epilogue(func: &mut ir::Function, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                                              ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/abi.rs:438:11\\n    |\\n438 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> /tmp/.tmpa60klo/target/debug/build/cranelift-codegen-19b83c0234789e0d/out/legalize-x86.rs:7:11\\n  |\\n7 |     isa: &crate::isa::TargetIsa,\\n  |           ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn crate::isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/isa/x86/enc_tables.rs:99:11\\n   |\\n99 |     isa: &isa::TargetIsa,\\n   |           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:186:11\\n    |\\n186 |     isa: &isa::TargetIsa,\\n    |           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:229:12\\n    |\\n229 |     _isa: &isa::TargetIsa,\\n    |            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:323:12\\n    |\\n323 |     _isa: &isa::TargetIsa,\\n    |            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: the item `IntCC` is imported redundantly\\n --> cranelift-codegen/src/isa/x86/enc_tables.rs:325:9\\n  |\\n7 | use crate::ir::condcodes::IntCC;\\n  |     --------------------------- the item `IntCC` is already imported here\\n...\\n32|     use crate::ir::condcodes::IntCC;\\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:396:12\\n    |\\n396 |     _isa: &isa::TargetIsa,\\n    |            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: the item `IntCC` is imported redundantly\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:398:41\\n    |\\n7   | use crate::ir::condcodes::IntCC;\\n    |     --------------------------- the item `IntCC` is already imported here\\n...\\n398 |     use crate::ir::condcodes::{FloatCC, IntCC};\\n    |                                         ^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:492:12\\n    |\\n492 |     _isa: &isa::TargetIsa,\\n    |            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: the item `IntCC` is imported redundantly\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:494:41\\n    |\\n7   | use crate::ir::condcodes::IntCC;\\n    |     --------------------------- the item `IntCC` is already imported here\\n...\\n494 |     use crate::ir::condcodes::{FloatCC, IntCC};\\n    |                                         ^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:612:12\\n    |\\n612 |     _isa: &isa::TargetIsa,\\n    |            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: the item `IntCC` is imported redundantly\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:614:41\\n    |\\n7   | use crate::ir::condcodes::IntCC;\\n    |     --------------------------- the item `IntCC` is already imported here\\n...\\n614 |     use crate::ir::condcodes::{FloatCC, IntCC};\\n    |                                         ^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:694:12\\n    |\\n694 |     _isa: &isa::TargetIsa,\\n    |            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: the item `IntCC` is imported redundantly\\n   --> cranelift-codegen/src/isa/x86/enc_tables.rs:696:41\\n    |\\n7   | use crate::ir::condcodes::IntCC;\\n    |     --------------------------- the item `IntCC` is already imported here\\n...\\n696 |     use crate::ir::condcodes::{FloatCC, IntCC};\\n    |                                         ^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/isa/x86/mod.rs:45:10\\n   |\\n45 | ) -> Box<TargetIsa> {\\n   |          ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/isa/arm32/mod.rs:43:10\\n   |\\n43 | ) -> Box<TargetIsa> {\\n   |          ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/isa/arm64/mod.rs:42:10\\n   |\\n42 | ) -> Box<TargetIsa> {\\n   |          ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/mod.rs:144:72\\n    |\\n144 |     constructor: fn(Triple, settings::Flags, settings::Builder) -> Box<TargetIsa>,\\n    |                                                                        ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/mod.rs:150:63\\n    |\\n150 |     pub fn finish(self, shared_flags: settings::Flags) -> Box<TargetIsa> {\\n    |                                                               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/isa/mod.rs:170:72\\n    |\\n170 |     fn(ir::Inst, &mut ir::Function, &mut flowgraph::ControlFlowGraph, &TargetIsa) -> bool;\\n    |                                                                        ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:20:18\\n   |\\n20 |     isa: Option<&TargetIsa>,\\n   |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:21:24\\n   |\\n21 |     func_w: Option<Box<FuncWriter + \\'a>>,\\n   |                        ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FuncWriter + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:47:36\\n   |\\n47 | struct PrettyVerifierError<\\'a>(Box<FuncWriter + \\'a>, &\\'a mut Vec<VerifierError>);\\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FuncWriter + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:52:17\\n   |\\n52 |         w: &mut Write,\\n   |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:54:22\\n   |\\n54 |         isa: Option<&TargetIsa>,\\n   |                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:63:17\\n   |\\n63 |         w: &mut Write,\\n   |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:66:22\\n   |\\n66 |         isa: Option<&TargetIsa>,\\n   |                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:75:17\\n   |\\n75 |         w: &mut Write,\\n   |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:78:17\\n   |\\n78 |         value: &fmt::Display,\\n   |                 ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:86:13\\n   |\\n86 |     w: &mut Write,\\n   |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:88:18\\n   |\\n88 |     isa: Option<&TargetIsa>,\\n   |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/print_errors.rs:91:18\\n   |\\n91 |     func_w: &mut FuncWriter,\\n   |                  ^^^^^^^^^^ help: use `dyn`: `dyn FuncWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:124:13\\n    |\\n124 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:127:18\\n    |\\n127 |     isa: Option<&TargetIsa>,\\n    |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:130:18\\n    |\\n130 |     func_w: &mut FuncWriter,\\n    |                  ^^^^^^^^^^ help: use `dyn`: `dyn FuncWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:162:13\\n    |\\n162 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:165:13\\n    |\\n165 |     value: &fmt::Display,\\n    |             ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:166:18\\n    |\\n166 |     func_w: &mut FuncWriter,\\n    |                  ^^^^^^^^^^ help: use `dyn`: `dyn FuncWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:198:24\\n    |\\n198 | fn print_arrow(w: &mut Write, entity: &str) -> fmt::Result {\\n    |                        ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:215:24\\n    |\\n215 | fn print_error(w: &mut Write, err: VerifierError) -> fmt::Result {\\n    |                        ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/print_errors.rs:221:55\\n    |\\n221 | pub fn pretty_error(func: &ir::Function, isa: Option<&TargetIsa>, err: CodegenError) -> String {\\n    |                                                       ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/settings.rs:349:25\\n    |\\n349 |     pub isa: Option<&\\'a TargetIsa>,\\n    |                         ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/settings.rs:358:19\\n    |\\n358 | impl<\\'a> From<&\\'a TargetIsa> for FlagsOrIsa<\\'a> {\\n    |                   ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/settings.rs:359:22\\n    |\\n359 |     fn from(isa: &\\'a TargetIsa) -> FlagsOrIsa {\\n    |                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/verifier/flags.rs:27:18\\n   |\\n27 |     isa: Option<&isa::TargetIsa>,\\n   |                  ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/verifier/liveness.rs:26:11\\n   |\\n26 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/verifier/liveness.rs:45:14\\n   |\\n45 |     isa: &\\'a TargetIsa,\\n   |              ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/verifier/locations.rs:22:11\\n   |\\n22 |     isa: &isa::TargetIsa,\\n   |           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/verifier/locations.rs:40:14\\n   |\\n40 |     isa: &\\'a isa::TargetIsa,\\n   |              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/verifier/mod.rs:269:21\\n    |\\n269 |     isa: Option<&\\'a TargetIsa>,\\n    |                     ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/write.rs:20:17\\n   |\\n20 |         w: &mut Write,\\n   |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/write.rs:22:22\\n   |\\n22 |         isa: Option<&TargetIsa>,\\n   |                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/write.rs:30:17\\n   |\\n30 |         w: &mut Write,\\n   |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/write.rs:33:22\\n   |\\n33 |         isa: Option<&TargetIsa>,\\n   |                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/write.rs:41:17\\n   |\\n41 |         w: &mut Write,\\n   |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/write.rs:51:17\\n   |\\n51 |         w: &mut Write,\\n   |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:106:17\\n    |\\n106 |         w: &mut Write,\\n    |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:109:17\\n    |\\n109 |         value: &fmt::Display,\\n    |                 ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:118:17\\n    |\\n118 |         w: &mut Write,\\n    |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:121:17\\n    |\\n121 |         value: &fmt::Display,\\n    |                 ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:133:17\\n    |\\n133 |         w: &mut Write,\\n    |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:136:22\\n    |\\n136 |         isa: Option<&TargetIsa>,\\n    |                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:145:17\\n    |\\n145 |         w: &mut Write,\\n    |                 ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:147:22\\n    |\\n147 |         isa: Option<&TargetIsa>,\\n    |                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:157:31\\n    |\\n157 | pub fn write_function(w: &mut Write, func: &Function, isa: Option<&TargetIsa>) -> fmt::Result {\\n    |                               ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:157:68\\n    |\\n157 | pub fn write_function(w: &mut Write, func: &Function, isa: Option<&TargetIsa>) -> fmt::Result {\\n    |                                                                    ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:178:13\\n    |\\n178 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:180:18\\n    |\\n180 |     isa: Option<&TargetIsa>,\\n    |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:204:23\\n    |\\n204 | fn write_spec(w: &mut Write, func: &Function, regs: Option<&RegInfo>) -> fmt::Result {\\n    |                       ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:212:22\\n    |\\n212 | fn write_arg(w: &mut Write, func: &Function, regs: Option<&RegInfo>, arg: Value) -> fmt::Result {\\n    |                      ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:229:13\\n    |\\n229 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:231:18\\n    |\\n231 |     isa: Option<&TargetIsa>,\\n    |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:259:13\\n    |\\n259 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:262:18\\n    |\\n262 |     isa: Option<&TargetIsa>,\\n    |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:323:13\\n    |\\n323 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:340:13\\n    |\\n340 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:343:18\\n    |\\n343 |     isa: Option<&TargetIsa>,\\n    |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:410:13\\n    |\\n410 |     w: &mut Write,\\n    |             ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:412:18\\n    |\\n412 |     isa: Option<&TargetIsa>,\\n    |                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/write.rs:625:27\\n    |\\n625 | fn write_ebb_args(w: &mut Write, args: &[Value]) -> fmt::Result {\\n    |                           ^^^^^ help: use `dyn`: `dyn Write`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/context.rs:98:15\\n   |\\n98 |         isa: &TargetIsa,\\n   |               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:100:22\\n    |\\n100 |         relocs: &mut RelocSink,\\n    |                      ^^^^^^^^^ help: use `dyn`: `dyn RelocSink`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:101:21\\n    |\\n101 |         traps: &mut TrapSink,\\n    |                     ^^^^^^^^ help: use `dyn`: `dyn TrapSink`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:118:37\\n    |\\n118 |     pub fn compile(&mut self, isa: &TargetIsa) -> CodegenResult<CodeOffset> {\\n    |                                     ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:165:15\\n    |\\n165 |         isa: &TargetIsa,\\n    |               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:167:22\\n    |\\n167 |         relocs: &mut RelocSink,\\n    |                      ^^^^^^^^^ help: use `dyn`: `dyn RelocSink`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:168:21\\n    |\\n168 |         traps: &mut TrapSink,\\n    |                     ^^^^^^^^ help: use `dyn`: `dyn TrapSink`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:200:42\\n    |\\n200 |     pub fn verify_locations(&self, isa: &TargetIsa) -> VerifierResult<()> {\\n    |                                          ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:212:45\\n    |\\n212 |     pub fn verify_locations_if(&self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                             ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:227:36\\n    |\\n227 |     pub fn preopt(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                    ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:234:47\\n    |\\n234 |     pub fn canonicalize_nans(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:240:38\\n    |\\n240 |     pub fn legalize(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:250:37\\n    |\\n250 |     pub fn postopt(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                     ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:285:34\\n    |\\n285 |     pub fn licm(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                  ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:306:38\\n    |\\n306 |     pub fn regalloc(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:312:47\\n    |\\n312 |     pub fn prologue_epilogue(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:320:49\\n    |\\n320 |     pub fn shrink_instructions(&mut self, isa: &TargetIsa) -> CodegenResult<()> {\\n    |                                                 ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/context.rs:328:44\\n    |\\n328 |     pub fn relax_branches(&mut self, isa: &TargetIsa) -> CodegenResult<CodeOffset> {\\n    |                                            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/boundary.rs:38:55\\n   |\\n38 | pub fn legalize_signatures(func: &mut Function, isa: &TargetIsa) {\\n   |                                                       ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/boundary.rs:52:68\\n   |\\n52 | pub fn legalize_libcall_signature(signature: &mut Signature, isa: &TargetIsa) {\\n   |                                                                    ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/boundary.rs:59:71\\n   |\\n59 | fn legalize_signature(signature: &mut Signature, current: bool, isa: &TargetIsa) {\\n   |                                                                       ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/call.rs:17:11\\n   |\\n17 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/globalvalue.rs:16:11\\n   |\\n16 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/globalvalue.rs:93:11\\n   |\\n93 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/globalvalue.rs:126:79\\n    |\\n126 | fn symbol(inst: ir::Inst, func: &mut ir::Function, gv: ir::GlobalValue, isa: &TargetIsa) {\\n    |                                                                               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/heap.rs:17:12\\n   |\\n17 |     _isa: &TargetIsa,\\n   |            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/libcall.rs:10:73\\n   |\\n10 | pub fn expand_as_libcall(inst: ir::Inst, func: &mut ir::Function, isa: &TargetIsa) -> bool {\\n   |                                                                         ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/table.rs:18:12\\n   |\\n18 |     _isa: &TargetIsa,\\n   |            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/mod.rs:44:11\\n   |\\n44 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/legalizer/mod.rs:86:85\\n   |\\n86 | pub fn legalize_function(func: &mut ir::Function, cfg: &mut ControlFlowGraph, isa: &TargetIsa) {\\n   |                                                                                     ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> /tmp/.tmpa60klo/target/debug/build/cranelift-codegen-19b83c0234789e0d/out/legalizer.rs:7:11\\n  |\\n7 |     isa: &crate::isa::TargetIsa,\\n  |           ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn crate::isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> /tmp/.tmpa60klo/target/debug/build/cranelift-codegen-19b83c0234789e0d/out/legalizer.rs:1095:11\\n     |\\n1095 |     isa: &crate::isa::TargetIsa,\\n     |           ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn crate::isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> /tmp/.tmpa60klo/target/debug/build/cranelift-codegen-19b83c0234789e0d/out/legalizer.rs:1172:11\\n     |\\n1172 |     isa: &crate::isa::TargetIsa,\\n     |           ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn crate::isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> /tmp/.tmpa60klo/target/debug/build/cranelift-codegen-19b83c0234789e0d/out/legalizer.rs:1403:11\\n     |\\n1403 |     isa: &crate::isa::TargetIsa,\\n     |           ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn crate::isa::TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:132:12\\n    |\\n132 |     _isa: &TargetIsa,\\n    |            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:182:11\\n    |\\n182 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:196:11\\n    |\\n196 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:242:12\\n    |\\n242 |     _isa: &TargetIsa,\\n    |            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:283:12\\n    |\\n283 |     _isa: &TargetIsa,\\n    |            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:318:12\\n    |\\n318 |     _isa: &TargetIsa,\\n    |            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:353:12\\n    |\\n353 |     _isa: &TargetIsa,\\n    |            ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:381:11\\n    |\\n381 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/legalizer/mod.rs:413:11\\n    |\\n413 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/licm.rs:20:11\\n   |\\n20 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/licm.rs:67:11\\n   |\\n67 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/postopt.rs:48:11\\n   |\\n48 |     isa: &TargetIsa,\\n   |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/postopt.rs:182:70\\n    |\\n182 | fn optimize_complex_addresses(pos: &mut EncCursor, inst: Inst, isa: &TargetIsa) {\\n    |                                                                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/postopt.rs:360:46\\n    |\\n360 | pub fn do_postopt(func: &mut Function, isa: &TargetIsa) {\\n    |                                              ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/regalloc/coloring.rs:121:15\\n    |\\n121 |         isa: &TargetIsa,\\n    |               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/regalloc/liveness.rs:198:11\\n    |\\n198 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/regalloc/liveness.rs:387:37\\n    |\\n387 |     pub fn compute(&mut self, isa: &TargetIsa, func: &mut Function, cfg: &ControlFlowGraph) {\\n    |                                     ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/regalloc/affinity.rs:51:38\\n   |\\n51 |     pub fn abi(arg: &AbiParam, isa: &TargetIsa) -> Self {\\n   |                                      ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/regalloc/coalescing.rs:69:14\\n   |\\n69 |     isa: &\\'a TargetIsa,\\n   |              ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/regalloc/coalescing.rs:111:15\\n    |\\n111 |         isa: &TargetIsa,\\n    |               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/regalloc/context.rs:73:15\\n   |\\n73 |         isa: &TargetIsa,\\n   |               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/regalloc/reload.rs:68:15\\n   |\\n68 |         isa: &TargetIsa,\\n   |               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/regalloc/reload.rs:422:11\\n    |\\n422 |     isa: &TargetIsa,\\n    |           ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> cranelift-codegen/src/regalloc/solver.rs:409:26\\n    |\\n409 |         let as_display: &fmt::Display = self;\\n    |                          ^^^^^^^^^^^^ help: use `dyn`: `dyn fmt::Display`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> cranelift-codegen/src/regalloc/spilling.rs:94:15\\n   |\\n94 |         isa: &TargetIsa,\\n   |               ^^^^^^^^^ help: use `dyn`: `dyn TargetIsa`\\n\\nwarning: unused return value of `core::result::Result::<T, E>::is_ok` that must be used\\n --> cranelift-codegen/src/verifier/mod.rs:574:13\\n  |\\n57|             self.verify_inst_result(inst, res, errors).is_ok();\\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_must_use)]` on by default\\n  = note: if you intended to assert that this is ok, consider `.unwrap()` instead\\n\\nwarning: unused return value of `core::result::Result::<T, E>::is_ok` that must be used\\n --> cranelift-codegen/src/verifier/mod.rs:1062:9\\n  |\\n10|         self.typecheck_results(inst, ctrl_type, errors).is_ok();\\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: if you intended to assert that this is ok, consider `.unwrap()` instead\\n\\nwarning: unused return value of `core::result::Result::<T, E>::is_ok` that must be used\\n --> cranelift-codegen/src/verifier/mod.rs:1063:9\\n  |\\n10|         self.typecheck_fixed_args(inst, ctrl_type, errors).is_ok();\\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: if you intended to assert that this is ok, consider `.unwrap()` instead\\n\\nwarning: unused return value of `core::result::Result::<T, E>::is_ok` that must be used\\n --> cranelift-codegen/src/verifier/mod.rs:1064:9\\n  |\\n10|         self.typecheck_variable_args(inst, errors).is_ok();\\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: if you intended to assert that this is ok, consider `.unwrap()` instead\\n\\nwarning: unused return value of `core::result::Result::<T, E>::is_ok` that must be used\\n --> cranelift-codegen/src/verifier/mod.rs:1065:9\\n  |\\n10|         self.typecheck_return(inst, errors).is_ok();\\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: if you intended to assert that this is ok, consider `.unwrap()` instead\\n\\nwarning: unused return value of `core::result::Result::<T, E>::is_ok` that must be used\\n --> cranelift-codegen/src/verifier/mod.rs:1066:9\\n  |\\n10|         self.typecheck_special(inst, ctrl_type, errors).is_ok();\\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: if you intended to assert that this is ok, consider `.unwrap()` instead\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpa60klo/self-profile-output\\\"; prefix is \\\"cranelift_codegen-18896\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `cranelift-codegen`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=24591568809;;instructions:u;5263598590;100.00;1.21;insn per cycle\\n20322268778;;cycles:u;5263598590;100.00;3.861;GHz\\n5263.589741;;task-clock;5263589741;100.00;1.000;CPUs utilized\\n5263.578944;;cpu-clock;5263589741;100.00;1.000;CPUs utilized\\n105274;;faults;5263589741;100.00;0.020;M/sec\\n510968;;max-rss;3;100.00\\n5.303463269;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"crates.io":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling rayon-core v1.2.1\\n   Compiling pq-sys v0.4.4\\n    Checking civet-sys v0.1.4\\n    Checking kernel32-sys v0.2.2\\n   Compiling backtrace-sys v0.1.12\\n    Checking miniz-sys v0.1.9\\n    Checking openssl-sys v0.9.17\\n    Checking rust-crypto v0.2.36\\n   Compiling curl-sys v0.3.14\\n    Checking libz-sys v1.0.16\\n    Checking thread-id v2.0.0\\n    Checking backtrace v0.3.3\\n    Checking flate2 v0.2.20\\n   Compiling serde_derive v1.0.14\\n    Checking email v0.0.17\\n    Checking thread_local v0.2.7\\n    Checking diesel v0.16.0\\n    Checking error-chain v0.10.0\\n    Checking string_cache v0.6.2\\n    Checking libssh2-sys v0.2.6\\n    Checking openssl v0.9.17\\n    Checking regex v0.1.80\\n    Checking dotenv v0.10.1\\n    Checking markup5ever v0.4.0\\n   Compiling rayon v0.7.1\\n    Checking semver-parser v0.6.2\\n    Checking html5ever v0.19.0\\n    Checking semver v0.5.1\\n    Checking lettre v0.6.2\\n    Checking conduit v0.8.1\\n    Checking conduit-middleware v0.8.1\\n    Checking conduit-utils v0.8.0\\n    Checking conduit-git-http-backend v0.8.0\\n    Checking conduit-router v0.8.0\\n    Checking civet v0.9.1\\n    Checking conduit-static v0.8.1\\n   Compiling ring v0.11.0\\n    Checking conduit-log-requests v0.8.0\\n    Checking conduit-conditional-get v0.8.0\\n    Checking conduit-json-parser v0.8.0\\n    Checking ammonia v0.7.0\\n    Checking docopt v0.8.1\\n    Checking cookie v0.9.1\\n    Checking conduit-cookie v0.8.4\\n    Checking diesel_full_text_search v0.16.0\\n    Checking r2d2-diesel v0.16.0\\n   Compiling cargo-registry v0.2.1 (/tmp/.tmpWX7tBl)\\n   Compiling diesel_codegen v0.16.0\\n   Compiling libgit2-sys v0.6.14\\n    Checking curl v0.4.8\\n    Checking cargo-registry-s3 v0.2.0 (/tmp/.tmpWX7tBl/src/s3)\\n    Checking oauth2 v0.3.0\\n    Checking git2 v0.6.8\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/app.rs:122:32\\n  |\\n12|     fn before(&self, req: &mut Request) -> Result<(), Box<Error + Send>> {\\n  |                                ^^^^^^^ help: use `dyn`: `dyn Request`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app.rs:122:59\\n    |\\n122 |     fn before(&self, req: &mut Request) -> Result<(), Box<Error + Send>> {\\n    |                                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app.rs:129:19\\n    |\\n129 |         req: &mut Request,\\n    |                   ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app.rs:130:35\\n    |\\n130 |         res: Result<Response, Box<Error + Send>>,\\n    |                                   ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/app.rs:131:31\\n    |\\n131 |     ) -> Result<Response, Box<Error + Send>> {\\n    |                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: the item `select` is imported redundantly\\n --> src/category.rs:122:13\\n  |\\n4 | use diesel::*;\\n  |     --------- the item `select` is already imported here\\n...\\n12|         use diesel::select;\\n  |             ^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: the item `insert` is imported redundantly\\n   --> src/category.rs:176:13\\n    |\\n4   | use diesel::*;\\n    |     --------- the item `insert` is already imported here\\n...\\n176 |         use diesel::insert;\\n    |             ^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/category.rs:187:24\\n    |\\n187 | pub fn index(req: &mut Request) -> CargoResult<Response> {\\n    |                        ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/category.rs:216:23\\n    |\\n216 | pub fn show(req: &mut Request) -> CargoResult<Response> {\\n    |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/category.rs:248:24\\n    |\\n248 | pub fn slugs(req: &mut Request) -> CargoResult<Response> {\\n    |                        ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/crate_owner_invitation.rs:68:23\\n   |\\n68 | pub fn list(req: &mut Request) -> CargoResult<Response> {\\n   |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/crate_owner_invitation.rs:100:32\\n    |\\n100 | pub fn handle_invite(req: &mut Request) -> CargoResult<Response> {\\n    |                                ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/crate_owner_invitation.rs:120:15\\n    |\\n120 |     req: &mut Request,\\n    |               ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/crate_owner_invitation.rs:163:15\\n    |\\n163 |     req: &mut Request,\\n    |               ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/dist.rs:14:25\\n   |\\n14 |     handler: Option<Box<Handler>>,\\n   |                         ^^^^^^^ help: use `dyn`: `dyn Handler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/dist.rs:28:45\\n   |\\n28 |     fn with_handler(&mut self, handler: Box<Handler>) {\\n   |                                             ^^^^^^^ help: use `dyn`: `dyn Handler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/dist.rs:34:30\\n   |\\n34 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n   |                              ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/dist.rs:34:63\\n   |\\n34 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n   |                                                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/http.rs:63:17\\n   |\\n63 |         _: &mut Request,\\n   |                 ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/http.rs:64:39\\n   |\\n64 |         mut res: Result<Response, Box<Error + Send>>,\\n   |                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/http.rs:65:31\\n   |\\n65 |     ) -> Result<Response, Box<Error + Send>> {\\n   |                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/keyword.rs:123:24\\n    |\\n123 | pub fn index(req: &mut Request) -> CargoResult<Response> {\\n    |                        ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: the item `keywords` is imported redundantly\\n   --> src/keyword.rs:124:9\\n    |\\n12  | use schema::*;\\n    |     --------- the item `keywords` is already imported here\\n...\\n124 |     use schema::keywords;\\n    |         ^^^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/keyword.rs:162:23\\n    |\\n162 | pub fn show(req: &mut Request) -> CargoResult<Response> {\\n    |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: the item `Text` is imported redundantly\\n    --> src/krate/mod.rs:550:46\\n     |\\n550  |         use diesel::types::{BigInt, Integer, Text};\\n     |                                              ^^^^\\n...\\n1509 | use diesel::types::{Date, Text};\\n     |                           ---- the item `Text` is already imported here\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/krate/mod.rs:586:24\\n    |\\n586 | pub fn index(req: &mut Request) -> CargoResult<Response> {\\n    |                        ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/krate/mod.rs:780:26\\n    |\\n780 | pub fn summary(req: &mut Request) -> CargoResult<Response> {\\n    |                          ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/krate/mod.rs:873:23\\n    |\\n873 | pub fn show(req: &mut Request) -> CargoResult<Response> {\\n    |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/krate/mod.rs:937:22\\n    |\\n937 | pub fn new(req: &mut Request) -> CargoResult<Response> {\\n    |                      ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1091:32\\n     |\\n1091 | fn parse_new_headers(req: &mut Request) -> CargoResult<(upload::NewCrate, User)> {\\n     |                                ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1134:27\\n     |\\n1134 | pub fn download(req: &mut Request) -> CargoResult<Response> {\\n     |                           ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1166:25\\n     |\\n1166 | pub fn readme(req: &mut Request) -> CargoResult<Response> {\\n     |                         ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1187:36\\n     |\\n1187 | fn increment_download_counts(req: &Request, crate_name: &str, version: &str) -> CargoResult<()> {\\n     |                                    ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1202:28\\n     |\\n1202 | pub fn downloads(req: &mut Request) -> CargoResult<Response> {\\n     |                            ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1265:28\\n     |\\n1265 | fn follow_target(req: &mut Request) -> CargoResult<Follow> {\\n     |                            ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1277:25\\n     |\\n1277 | pub fn follow(req: &mut Request) -> CargoResult<Response> {\\n     |                         ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1291:27\\n     |\\n1291 | pub fn unfollow(req: &mut Request) -> CargoResult<Response> {\\n     |                           ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1303:28\\n     |\\n1303 | pub fn following(req: &mut Request) -> CargoResult<Response> {\\n     |                            ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1321:27\\n     |\\n1321 | pub fn versions(req: &mut Request) -> CargoResult<Response> {\\n     |                           ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1340:25\\n     |\\n1340 | pub fn owners(req: &mut Request) -> CargoResult<Response> {\\n     |                         ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1358:29\\n     |\\n1358 | pub fn owner_team(req: &mut Request) -> CargoResult<Response> {\\n     |                             ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1375:29\\n     |\\n1375 | pub fn owner_user(req: &mut Request) -> CargoResult<Response> {\\n     |                             ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1392:29\\n     |\\n1392 | pub fn add_owners(req: &mut Request) -> CargoResult<Response> {\\n     |                             ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1397:32\\n     |\\n1397 | pub fn remove_owners(req: &mut Request) -> CargoResult<Response> {\\n     |                                ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1401:28\\n     |\\n1401 | fn modify_owners(req: &mut Request, add: bool) -> CargoResult<Response> {\\n     |                            ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> src/krate/mod.rs:1468:39\\n     |\\n1468 | pub fn reverse_dependencies(req: &mut Request) -> CargoResult<Response> {\\n     |                                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: `...` range patterns are deprecated\\n --> src/owner.rs:165:20\\n  |\\n16|                 \\'a\\'...\\'z\\' | \\'A\\'...\\'Z\\' | \\'0\\'...\\'9\\' | \\'-\\' | \\'_\\' => false,\\n  |                    ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/owner.rs:165:32\\n    |\\n165 |                 \\'a\\'...\\'z\\' | \\'A\\'...\\'Z\\' | \\'0\\'...\\'9\\' | \\'-\\' | \\'_\\' => false,\\n    |                                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/owner.rs:165:44\\n    |\\n165 |                 \\'a\\'...\\'z\\' | \\'A\\'...\\'Z\\' | \\'0\\'...\\'9\\' | \\'-\\' | \\'_\\' => false,\\n    |                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/token.rs:72:23\\n   |\\n72 | pub fn list(req: &mut Request) -> CargoResult<Response> {\\n   |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/token.rs:84:22\\n   |\\n84 | pub fn new(req: &mut Request) -> CargoResult<Response> {\\n   |                      ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/token.rs:150:25\\n    |\\n150 | pub fn revoke(req: &mut Request) -> CargoResult<Response> {\\n    |                         ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/uploaders.rs:142:19\\n    |\\n142 |         req: &mut Request,\\n    |                   ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/user/middleware.rs:23:32\\n   |\\n23 |     fn before(&self, req: &mut Request) -> Result<(), Box<Error + Send>> {\\n   |                                ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/user/middleware.rs:23:59\\n   |\\n23 |     fn before(&self, req: &mut Request) -> Result<(), Box<Error + Send>> {\\n   |                                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/user/middleware.rs:66:26\\n   |\\n66 | impl<\\'a> RequestUser for Request + \\'a {\\n   |                          ^^^^^^^^^^^^ help: use `dyn`: `dyn Request + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:256:35\\n    |\\n256 | pub fn github_authorize(req: &mut Request) -> CargoResult<Response> {\\n    |                                   ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:303:38\\n    |\\n303 | pub fn github_access_token(req: &mut Request) -> CargoResult<Response> {\\n    |                                      ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:352:25\\n    |\\n352 | pub fn logout(req: &mut Request) -> CargoResult<Response> {\\n    |                         ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:358:21\\n    |\\n358 | pub fn me(req: &mut Request) -> CargoResult<Response> {\\n    |                     ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:401:23\\n    |\\n401 | pub fn show(req: &mut Request) -> CargoResult<Response> {\\n    |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:421:28\\n    |\\n421 | pub fn show_team(req: &mut Request) -> CargoResult<Response> {\\n    |                            ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:440:26\\n    |\\n440 | pub fn updates(req: &mut Request) -> CargoResult<Response> {\\n    |                          ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:480:24\\n    |\\n480 | pub fn stats(req: &mut Request) -> CargoResult<Response> {\\n    |                        ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: the item `OwnerKind` is imported redundantly\\n   --> src/user/mod.rs:482:9\\n    |\\n19  | use owner::{CrateOwner, Owner, OwnerKind};\\n    |                                --------- the item `OwnerKind` is already imported here\\n...\\n482 |     use owner::OwnerKind;\\n    |         ^^^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:508:30\\n    |\\n508 | pub fn update_user(req: &mut Request) -> CargoResult<Response> {\\n    |                              ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:594:37\\n    |\\n594 | pub fn confirm_user_email(req: &mut Request) -> CargoResult<Response> {\\n    |                                     ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/user/mod.rs:616:44\\n    |\\n616 | pub fn regenerate_token_and_send(req: &mut Request) -> CargoResult<Response> {\\n    |                                            ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/errors.rs:24:33\\n   |\\n24 |     fn cause(&self) -> Option<&(CargoError)> {\\n   |                                 ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/errors.rs:46:25\\n   |\\n46 | impl fmt::Debug for Box<CargoError> {\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/errors.rs:52:25\\n   |\\n52 | impl CargoError for Box<CargoError> {\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/errors.rs:56:32\\n   |\\n56 |     fn cause(&self) -> Option<&CargoError> {\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/errors.rs:70:32\\n   |\\n70 |     fn cause(&self) -> Option<&CargoError> {\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/errors.rs:81:41\\n   |\\n81 | pub type CargoResult<T> = Result<T, Box<CargoError>>;\\n   |                                         ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/errors.rs:95:16\\n   |\\n95 |     cause: Box<CargoError>,\\n   |                ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:121:23\\n    |\\n121 |             }) as Box<CargoError>\\n    |                       ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:143:32\\n    |\\n143 |     fn cause(&self) -> Option<&CargoError> {\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:163:55\\n    |\\n163 | impl<E: Any + Error + Send + \\'static> From<E> for Box<CargoError> {\\n    |                                                       ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:164:28\\n    |\\n164 |     fn from(err: E) -> Box<CargoError> {\\n    |                            ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:204:23\\n    |\\n204 |     cause: Option<Box<CargoError>>,\\n    |                       ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:222:32\\n    |\\n222 |     fn cause(&self) -> Option<&CargoError> {\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:310:57\\n    |\\n310 | pub fn internal_error(error: &str, detail: &str) -> Box<CargoError> {\\n    |                                                         ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:319:57\\n    |\\n319 | pub fn internal<S: ToString + ?Sized>(error: &S) -> Box<CargoError> {\\n    |                                                         ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:328:54\\n    |\\n328 | pub fn human<S: ToString + ?Sized>(error: &S) -> Box<CargoError> {\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:344:60\\n    |\\n344 | pub fn bad_request<S: ToString + ?Sized>(error: &S) -> Box<CargoError> {\\n    |                                                            ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:348:25\\n    |\\n348 | pub fn std_error(e: Box<CargoError>) -> Box<Error + Send> {\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:348:45\\n    |\\n348 | pub fn std_error(e: Box<CargoError>) -> Box<Error + Send> {\\n    |                                             ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/errors.rs:350:18\\n    |\\n350 |     struct E(Box<CargoError>);\\n    |                  ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/head.rs:13:25\\n   |\\n13 |     handler: Option<Box<Handler>>,\\n   |                         ^^^^^^^ help: use `dyn`: `dyn Handler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/head.rs:17:45\\n   |\\n17 |     fn with_handler(&mut self, handler: Box<Handler>) {\\n   |                                             ^^^^^^^ help: use `dyn`: `dyn Handler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/head.rs:23:30\\n   |\\n23 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n   |                              ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/head.rs:23:63\\n   |\\n23 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n   |                                                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/request_proxy.rs:11:25\\n   |\\n11 |     pub other: &\\'a mut (Request + \\'a),\\n   |                         ^^^^^^^^^^^^ help: use `dyn`: `dyn Request + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/request_proxy.rs:49:27\\n   |\\n49 |     fn headers(&self) -> &conduit::Headers {\\n   |                           ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn conduit::Headers`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/request_proxy.rs:52:32\\n   |\\n52 |     fn body(&mut self) -> &mut Read {\\n   |                                ^^^^ help: use `dyn`: `dyn Read`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util/mod.rs:52:27\\n   |\\n52 | impl<\\'a> RequestUtils for Request + \\'a {\\n   |                           ^^^^^^^^^^^^ help: use `dyn`: `dyn Request + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/mod.rs:104:26\\n    |\\n104 | pub struct C(pub fn(&mut Request) -> CargoResult<Response>);\\n    |                          ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/mod.rs:107:30\\n    |\\n107 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n    |                              ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/mod.rs:107:63\\n    |\\n107 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n    |                                                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/mod.rs:123:30\\n    |\\n123 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n    |                              ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/mod.rs:123:63\\n    |\\n123 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n    |                                                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/mod.rs:139:30\\n    |\\n139 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n    |                              ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util/mod.rs:139:63\\n    |\\n139 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n    |                                                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:263:24\\n    |\\n263 | pub fn index(req: &mut Request) -> CargoResult<Response> {\\n    |                        ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:294:23\\n    |\\n294 | pub fn show(req: &mut Request) -> CargoResult<Response> {\\n    |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:318:32\\n    |\\n318 | fn version_and_crate(req: &mut Request) -> CargoResult<(Version, Crate)> {\\n    |                                ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:340:31\\n    |\\n340 | pub fn dependencies(req: &mut Request) -> CargoResult<Response> {\\n    |                               ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:356:28\\n    |\\n356 | pub fn downloads(req: &mut Request) -> CargoResult<Response> {\\n    |                            ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:383:26\\n    |\\n383 | pub fn authors(req: &mut Request) -> CargoResult<Response> {\\n    |                          ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:419:23\\n    |\\n419 | pub fn yank(req: &mut Request) -> CargoResult<Response> {\\n    |                       ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:424:25\\n    |\\n424 | pub fn unyank(req: &mut Request) -> CargoResult<Response> {\\n    |                         ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:429:26\\n    |\\n429 | fn modify_yank(req: &mut Request, yanked: bool) -> CargoResult<Response> {\\n    |                          ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/version/mod.rs:439:35\\n    |\\n439 |         conn.transaction::<_, Box<CargoError>, _>(|| {\\n    |                                   ^^^^^^^^^^ help: use `dyn`: `dyn CargoError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/local_upload.rs:13:25\\n   |\\n13 |     handler: Option<Box<Handler>>,\\n   |                         ^^^^^^^ help: use `dyn`: `dyn Handler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/local_upload.rs:27:45\\n   |\\n27 |     fn with_handler(&mut self, handler: Box<Handler>) {\\n   |                                             ^^^^^^^ help: use `dyn`: `dyn Handler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/local_upload.rs:33:30\\n   |\\n33 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n   |                              ^^^^^^^ help: use `dyn`: `dyn Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/local_upload.rs:33:63\\n   |\\n33 |     fn call(&self, req: &mut Request) -> Result<Response, Box<Error + Send>> {\\n   |                                                               ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/lib.rs:269:36\\n    |\\n269 |         fn before(&self, req: &mut conduit::Request) -> Result<(), Box<Error + Send>> {\\n    |                                    ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn conduit::Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/lib.rs:269:72\\n    |\\n269 |         fn before(&self, req: &mut conduit::Request) -> Result<(), Box<Error + Send>> {\\n    |                                                                        ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/lib.rs:284:24\\n    |\\n284 |             _req: &mut conduit::Request,\\n    |                        ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn conduit::Request`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/lib.rs:285:48\\n    |\\n285 |             res: Result<conduit::Response, Box<Error + Send>>,\\n    |                                                ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/lib.rs:286:44\\n    |\\n286 |         ) -> Result<conduit::Response, Box<Error + Send>> {\\n    |                                            ^^^^^^^^^^^^ help: use `dyn`: `dyn Error + Send`\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> src/keyword.rs:1:5\\n  |\\n1 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> src/krate/mod.rs:1:5\\n  |\\n1 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpWX7tBl/self-profile-output\\\"; prefix is \\\"cargo_registry-24458\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `cargo-registry`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=29842088695;;instructions:u;5984596023;100.00;1.28;insn per cycle\\n23245172223;;cycles:u;5984596023;100.00;3.884;GHz\\n5984.599765;;task-clock;5984599765;100.00;0.997;CPUs utilized\\n5984.601509;;cpu-clock;5984599765;100.00;0.997;CPUs utilized\\n66159;;faults;5984599765;100.00;0.011;M/sec\\n378580;;max-rss;3;100.00\\n6.050996613;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"ctfe-stress-2":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking ctfe-stress-2 v0.1.0 (/tmp/.tmp3qyjpI)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/lib.rs:62:42\\n  |\\n62| expensive_static!(UNSIZE_TRAIT: &\\'static Trait = &42u32; [4 16 16 16 16 16]);\\n  |                                          ^^^^^ help: use `dyn`: `dyn Trait`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/lib.rs:62:42\\n   |\\n62 | expensive_static!(UNSIZE_TRAIT: &\\'static Trait = &42u32; [4 16 16 16 16 16]);\\n   |                                          ^^^^^ help: use `dyn`: `dyn Trait`\\n\\nwarning: constant item is never used: `FOO`\\n --> src/lib.rs:67:1\\n  |\\n67| const FOO: [i32; 1 << 24] = [0; 1 << 24];\\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(dead_code)]` on by default\\n\\nwarning: the feature `const_let` has been stable since 1.33.0 and no longer requires an attribute to enable\\n --> src/lib.rs:1:22\\n  |\\n1 | #![feature(const_fn, const_let)]\\n  |                      ^^^^^^^^^\\n  |\\n  = note: `#[warn(stable_features)]` on by default\\n\\nwarning: Constant evaluating a complex constant, this might take some time\\n  --> src/lib.rs:55:35\\n   |\\n55 | expensive_static!(CONST_FN: i32 = inc(42); [8 16 16 16 16]);\\n   |                                   ^^^^^^^\\n\\nwarning: Constant evaluating a complex constant, this might take some time\\n  --> src/lib.rs:22:14\\n   |\\n22 |         e(); e(); e(); e();\\n   |              ^^^\\n...\\n59 | expensive_static!(OPS: i32 = ((((10 >> 1) + 3) * 7) / 2 - 12) << 4; [4 16 16 16 16]);\\n   | ------------------------------------------------------------------------------------- in this macro invocation\\n\\nwarning: unused unary operation that must be used\\n --> src/lib.rs:57:38\\n  |\\n57| expensive_static!(FORCE_ALLOC: i32 = *****(&&&&&5); [8 16 16 16 16]);\\n  |                                      ^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_must_use)]` on by default\\n\\nwarning: unused unary operation that must be used\\n  --> src/lib.rs:57:38\\n   |\\n57 | expensive_static!(FORCE_ALLOC: i32 = *****(&&&&&5); [8 16 16 16 16]);\\n   |                                      ^^^^^^^^^^^^^\\n\\nwarning: unused bitwise operation that must be used\\n  --> src/lib.rs:59:30\\n   |\\n59 | expensive_static!(OPS: i32 = ((((10 >> 1) + 3) * 7) / 2 - 12) << 4; [4 16 16 16 16]);\\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp3qyjpI/self-profile-output\\\"; prefix is \\\"ctfe_stress_2-24502\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `ctfe-stress-2`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=90341141611;;instructions:u;10285784004;100.00;2.21;insn per cycle\\n40837018540;;cycles:u;10285784004;100.00;3.970;GHz\\n10285.764083;;task-clock;10285764083;100.00;0.998;CPUs utilized\\n10285.762772;;cpu-clock;10285764083;100.00;0.998;CPUs utilized\\n47335;;faults;10285764083;100.00;0.005;M/sec\\n269168;;max-rss;3;100.00\\n10.348818926;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"deep-vector":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-20936-deep-vector v0.1.0 (/tmp/.tmps6SMb8)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmps6SMb8/self-profile-output\\\"; prefix is \\\"issue_20936_deep_vector-24546\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-20936-deep-vector`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=5708891323;;instructions:u;853159452;100.00;1.77;insn per cycle\\n3234372347;;cycles:u;853159452;100.00;3.791;GHz\\n853.143835;;task-clock;853143835;100.00;1.000;CPUs utilized\\n853.143265;;cpu-clock;853143835;100.00;1.000;CPUs utilized\\n40094;;faults;853143835;100.00;0.047;M/sec\\n243964;;max-rss;3;100.00\\n0.872071531;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"deeply-nested":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking deeply-nested v0.1.0 (/tmp/.tmpf4LAO4)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/lib.rs:5:21\\n  |\\n5 | pub fn foo() -> Box<Iterator<Item = ()>> {\\n  |                     ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Iterator<Item = ()>`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpf4LAO4/self-profile-output\\\"; prefix is \\\"deeply_nested-24590\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `deeply-nested`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=352308136;;instructions:u;69214503;100.00;1.55;insn per cycle\\n227579877;;cycles:u;69214503;100.00;3.288;GHz\\n69.209055;;task-clock;69209055;100.00;1.000;CPUs utilized\\n69.208503;;cpu-clock;69209055;100.00;1.000;CPUs utilized\\n5681;;faults;69209055;100.00;0.082;M/sec\\n110752;;max-rss;3;100.00\\n0.088293926;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"encoding":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking encoding_index_tests v0.1.5 (/tmp/.tmpn3WCLR/src/index/tests)\\n    Checking encoding-types v0.2.0 (/tmp/.tmpn3WCLR/src/types)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/types/lib.rs:137:32\\n  |\\n13|     fn from_self(&self) -> Box<RawEncoder>;\\n  |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:148:54\\n    |\\n148 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>);\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:154:43\\n    |\\n154 |     fn raw_finish(&mut self, output: &mut ByteWriter) -> Option<CodecError>;\\n    |                                           ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:161:32\\n    |\\n161 |     fn from_self(&self) -> Box<RawDecoder>;\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:172:55\\n    |\\n172 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>);\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:177:43\\n    |\\n177 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError>;\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:182:34\\n    |\\n182 | pub type EncodingRef = &\\'static (Encoding + Send + Sync);\\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Encoding + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:196:34\\n    |\\n196 |     fn raw_encoder(&self) -> Box<RawEncoder>;\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:199:34\\n    |\\n199 |     fn raw_decoder(&self) -> Box<RawDecoder>;\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:211:67\\n    |\\n211 |     fn encode_to(&self, input: &str, trap: EncoderTrap, ret: &mut ByteWriter)\\n    |                                                                   ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:259:68\\n    |\\n259 |     fn decode_to(&self, input: &[u8], trap: DecoderTrap, ret: &mut StringWriter)\\n    |                                                                    ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:295:29\\n    |\\n295 | impl<\\'a> fmt::Debug for &\\'a Encoding {\\n    |                             ^^^^^^^^ help: use `dyn`: `dyn Encoding`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:306:36\\n    |\\n306 |     extern \\\"Rust\\\" fn(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool;\\n    |                                    ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:306:74\\n    |\\n306 |     extern \\\"Rust\\\" fn(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool;\\n    |                                                                          ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:310:36\\n    |\\n310 |     extern \\\"Rust\\\" fn(decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool;\\n    |                                    ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:310:75\\n    |\\n310 |     extern \\\"Rust\\\" fn(decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool;\\n    |                                                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:332:38\\n    |\\n332 |     pub fn trap(&self, decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool {\\n    |                                      ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:332:77\\n    |\\n332 |     pub fn trap(&self, decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool {\\n    |                                                                             ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:377:38\\n    |\\n377 |     pub fn trap(&self, encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool {\\n    |                                      ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:377:76\\n    |\\n377 |     pub fn trap(&self, encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool {\\n    |                                                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:378:35\\n    |\\n378 |         fn reencode(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter,\\n    |                                   ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/types/lib.rs:378:73\\n    |\\n378 |         fn reencode(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter,\\n    |                                                                         ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\n    Checking encoding-index-tradchinese v1.20141219.6 (/tmp/.tmpn3WCLR/src/index/tradchinese)\\n    Checking encoding-index-japanese v1.20141219.6 (/tmp/.tmpn3WCLR/src/index/japanese)\\n    Checking encoding-index-korean v1.20141219.6 (/tmp/.tmpn3WCLR/src/index/korean)\\n    Checking encoding-index-singlebyte v1.20160120.0 (/tmp/.tmpn3WCLR/src/index/singlebyte)\\n    Checking encoding-index-simpchinese v1.20160120.0 (/tmp/.tmpn3WCLR/src/index/simpchinese)\\nwarning: `...` range patterns are deprecated\\n --> src/index/korean/euc_kr.rs:19:14\\n  |\\n19|             0...43 => 0,\\n  |              ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/korean/euc_kr.rs:20:15\\n   |\\n20 |             44...46 => return X,\\n   |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/korean/euc_kr.rs:21:15\\n   |\\n21 |             47...71 => 3,\\n   |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/korean/euc_kr.rs:23:15\\n   |\\n23 |             73...124 => 4,\\n   |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/korean/euc_kr.rs:29:14\\n   |\\n29 |             0...25 => 0,\\n   |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/korean/euc_kr.rs:30:15\\n   |\\n30 |             26...31 => return X,\\n   |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/korean/euc_kr.rs:31:15\\n   |\\n31 |             32...57 => 6,\\n   |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/korean/euc_kr.rs:32:15\\n   |\\n32 |             58...63 => return X,\\n   |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n --> src/index/japanese/jis0208.rs:16:10\\n  |\\n16|         0...689 => code,\\n  |          ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0208.rs:17:12\\n   |\\n17 |         690...1127 => X,\\n   |            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0208.rs:18:13\\n   |\\n18 |         1128...1219 => code - 438,\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0208.rs:19:13\\n   |\\n19 |         1220...1409 => X,\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0208.rs:20:13\\n   |\\n20 |         1410...7807 => code - 628,\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0208.rs:21:13\\n   |\\n21 |         7808...8271 => X,\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0208.rs:22:13\\n   |\\n22 |         8272...8647 => code - 1092,\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0208.rs:23:13\\n   |\\n23 |         8648...10715 => X,\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0212.rs:16:10\\n   |\\n16 |         0...174 => code,\\n   |          ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0212.rs:17:12\\n   |\\n17 |         175...533 => X,\\n   |            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0212.rs:18:12\\n   |\\n18 |         534...1026 => code - 359,\\n   |            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/index/japanese/jis0212.rs:19:13\\n   |\\n19 |         1027...1409 => X,\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\n    Checking encoding v0.3.0-dev (/tmp/.tmpn3WCLR)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/util.rs:60:26\\n  |\\n60|     pub output: &\\'a mut (types::StringWriter + \\'a),\\n  |                          ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn types::StringWriter + \\'a`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/util.rs:72:48\\n   |\\n72 |     pub fn new(buf: &\\'a [u8], output: &\\'a mut (types::StringWriter + \\'a),\\n   |                                                ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn types::StringWriter + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:16:34\\n   |\\n16 |     fn raw_encoder(&self) -> Box<RawEncoder> { ErrorEncoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:17:34\\n   |\\n17 |     fn raw_decoder(&self) -> Box<RawDecoder> { ErrorDecoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:25:25\\n   |\\n25 |     pub fn new() -> Box<RawEncoder> { Box::new(ErrorEncoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:29:32\\n   |\\n29 |     fn from_self(&self) -> Box<RawEncoder> { ErrorEncoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:31:55\\n   |\\n31 |     fn raw_feed(&mut self, input: &str, _output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                       ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:40:44\\n   |\\n40 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:50:25\\n   |\\n50 |     pub fn new() -> Box<RawDecoder> { Box::new(ErrorDecoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:54:32\\n   |\\n54 |     fn from_self(&self) -> Box<RawDecoder> { ErrorDecoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:57:45\\n   |\\n57 |                 input: &[u8], _output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n   |                                             ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/error.rs:65:44\\n   |\\n65 |     fn raw_finish(&mut self, _output: &mut StringWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:22:34\\n   |\\n22 |     fn raw_encoder(&self) -> Box<RawEncoder> { ASCIIEncoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:23:34\\n   |\\n23 |     fn raw_decoder(&self) -> Box<RawDecoder> { ASCIIDecoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:31:25\\n   |\\n31 |     pub fn new() -> Box<RawEncoder> { Box::new(ASCIIEncoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:35:32\\n   |\\n35 |     fn from_self(&self) -> Box<RawEncoder> { ASCIIEncoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:38:54\\n   |\\n38 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:56:44\\n   |\\n56 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:66:25\\n   |\\n66 |     pub fn new() -> Box<RawDecoder> { Box::new(ASCIIDecoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:70:32\\n   |\\n70 |     fn from_self(&self) -> Box<RawDecoder> { ASCIIDecoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:73:55\\n   |\\n73 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n   |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:76:43\\n   |\\n76 |         fn write_ascii_bytes(output: &mut StringWriter, buf: &[u8]) {\\n   |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/ascii.rs:94:44\\n   |\\n94 |     fn raw_finish(&mut self, _output: &mut StringWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:23:34\\n   |\\n23 |     fn raw_encoder(&self) -> Box<RawEncoder> { SingleByteEncoder::new(self.index_backward) }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:24:34\\n   |\\n24 |     fn raw_decoder(&self) -> Box<RawDecoder> { SingleByteDecoder::new(self.index_forward) }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:34:68\\n   |\\n34 |     pub fn new(index_backward: extern \\\"Rust\\\" fn(u32) -> u8) -> Box<RawEncoder> {\\n   |                                                                    ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:40:32\\n   |\\n40 |     fn from_self(&self) -> Box<RawEncoder> { SingleByteEncoder::new(self.index_backward) }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:43:54\\n   |\\n43 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:64:44\\n   |\\n64 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:76:67\\n   |\\n76 |     pub fn new(index_forward: extern \\\"Rust\\\" fn(u8) -> u16) -> Box<RawDecoder> {\\n   |                                                                   ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:82:32\\n   |\\n82 |     fn from_self(&self) -> Box<RawDecoder> { SingleByteDecoder::new(self.index_forward) }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/singlebyte.rs:85:55\\n   |\\n85 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n   |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/singlebyte.rs:108:44\\n    |\\n108 |     fn raw_finish(&mut self, _output: &mut StringWriter) -> Option<CodecError> {\\n    |                                            ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_8.rs:52:34\\n   |\\n52 |     fn raw_encoder(&self) -> Box<RawEncoder> { UTF8Encoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_8.rs:53:34\\n   |\\n53 |     fn raw_decoder(&self) -> Box<RawDecoder> { UTF8Decoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_8.rs:61:25\\n   |\\n61 |     pub fn new() -> Box<RawEncoder> { Box::new(UTF8Encoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_8.rs:65:32\\n   |\\n65 |     fn from_self(&self) -> Box<RawEncoder> { UTF8Encoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_8.rs:68:54\\n   |\\n68 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_8.rs:75:44\\n   |\\n75 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_8.rs:89:25\\n   |\\n89 |     pub fn new() -> Box<RawDecoder> {\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_8.rs:142:32\\n    |\\n142 |     fn from_self(&self) -> Box<RawDecoder> { UTF8Decoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_8.rs:145:55\\n    |\\n145 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_8.rs:148:37\\n    |\\n148 |         fn write_bytes(output: &mut StringWriter, bytes: &[u8]) {\\n    |                                     ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_8.rs:197:44\\n    |\\n197 |     fn raw_finish(&mut self, _output: &mut StringWriter) -> Option<CodecError> {\\n    |                                            ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:25:34\\n   |\\n25 |     fn raw_encoder(&self) -> Box<RawEncoder> { UTF16LEEncoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:26:34\\n   |\\n26 |     fn raw_decoder(&self) -> Box<RawDecoder> { UTF16LEDecoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:43:34\\n   |\\n43 |     fn raw_encoder(&self) -> Box<RawEncoder> { UTF16BEEncoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:44:34\\n   |\\n44 |     fn raw_decoder(&self) -> Box<RawDecoder> { UTF16BEDecoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:54:30\\n   |\\n54 |             where F: Fn(&mut ByteWriter, u8, u8) {\\n   |                              ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:52:57\\n   |\\n52 |     fn raw_feed<F>(&mut self, input: &str, output: &mut ByteWriter,\\n   |                                                         ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: `...` range patterns are deprecated\\n --> src/codec/utf_16.rs:59:24\\n  |\\n59|                 \\'\\\\u{0}\\'...\\'\\\\u{d7ff}\\' | \\'\\\\u{e000}\\'...\\'\\\\u{ffff}\\' => {\\n  |                        ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/codec/utf_16.rs:59:50\\n   |\\n59 |                 \\'\\\\u{0}\\'...\\'\\\\u{d7ff}\\' | \\'\\\\u{e000}\\'...\\'\\\\u{ffff}\\' => {\\n   |                                                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/codec/utf_16.rs:63:28\\n   |\\n63 |                 \\'\\\\u{10000}\\'...\\'\\\\u{10ffff}\\' => {\\n   |                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:82:21\\n   |\\n82 |     fn new() -> Box<RawEncoder> { Box::new(UTF16LEEncoder) }\\n   |                     ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:86:32\\n   |\\n86 |     fn from_self(&self) -> Box<RawEncoder> { UTF16LEEncoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:87:54\\n   |\\n87 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:88:60\\n   |\\n88 |         UTF16Encoder.raw_feed(input, output, |output: &mut ByteWriter, msb: u8, lsb: u8| {\\n   |                                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/utf_16.rs:93:44\\n   |\\n93 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> { None }\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:101:21\\n    |\\n101 |     fn new() -> Box<RawEncoder> { Box::new(UTF16BEEncoder) }\\n    |                     ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:105:32\\n    |\\n105 |     fn from_self(&self) -> Box<RawEncoder> { UTF16BEEncoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:106:54\\n    |\\n106 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:107:60\\n    |\\n107 |         UTF16Encoder.raw_feed(input, output, |output: &mut ByteWriter, msb: u8, lsb: u8| {\\n    |                                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:112:44\\n    |\\n112 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> { None }\\n    |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:127:58\\n    |\\n127 |     fn raw_feed<F>(&mut self, input: &[u8], output: &mut StringWriter,\\n    |                                                          ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/utf_16.rs:146:27\\n    |\\n146 |                     0xdc00...0xdfff => {\\n    |                           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/utf_16.rs:159:27\\n    |\\n159 |                     0xd800...0xdbff => {\\n    |                           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/utf_16.rs:163:27\\n    |\\n163 |                     0xdc00...0xdfff => {\\n    |                           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/utf_16.rs:187:23\\n    |\\n187 |                 0xdc00...0xdfff => {\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/utf_16.rs:212:23\\n    |\\n212 |                 0xd800...0xdbff => {\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/utf_16.rs:221:31\\n    |\\n221 |                         0xdc00...0xdfff => {\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/utf_16.rs:232:23\\n    |\\n232 |                 0xdc00...0xdfff => {\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:247:44\\n    |\\n247 |     fn raw_finish(&mut self, _output: &mut StringWriter) -> Option<CodecError> {\\n    |                                            ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:267:25\\n    |\\n267 |     pub fn new() -> Box<RawDecoder> {\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:273:32\\n    |\\n273 |     fn from_self(&self) -> Box<RawDecoder> { UTF16LEDecoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:274:55\\n    |\\n274 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:277:43\\n    |\\n277 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:289:25\\n    |\\n289 |     pub fn new() -> Box<RawDecoder> {\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:295:32\\n    |\\n295 |     fn from_self(&self) -> Box<RawDecoder> { UTF16BEDecoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:296:55\\n    |\\n296 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/utf_16.rs:299:43\\n    |\\n299 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:30:34\\n   |\\n30 |     fn raw_encoder(&self) -> Box<RawEncoder> { Windows949Encoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:31:34\\n   |\\n31 |     fn raw_decoder(&self) -> Box<RawDecoder> { Windows949Decoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:39:25\\n   |\\n39 |     pub fn new() -> Box<RawEncoder> { Box::new(Windows949Encoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:43:32\\n   |\\n43 |     fn from_self(&self) -> Box<RawEncoder> { Windows949Encoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:46:54\\n   |\\n46 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:67:44\\n   |\\n67 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:79:25\\n   |\\n79 |     pub fn new() -> Box<RawDecoder> {\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:85:32\\n   |\\n85 |     fn from_self(&self) -> Box<RawDecoder> { Windows949Decoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:88:55\\n   |\\n88 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n   |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/korean.rs:94:43\\n   |\\n94 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n   |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/korean.rs:110:18\\n    |\\n110 |             (0x81...0xfe, 0x41...0xfe) => (lead - 0x81) * 190 + (trail - 0x41),\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/korean.rs:110:31\\n    |\\n110 |             (0x81...0xfe, 0x41...0xfe) => (lead - 0x81) * 190 + (trail - 0x41),\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/korean.rs:119:22\\n    |\\n119 |         case b @ 0x00...0x7f => ctx.emit(b as u32);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/korean.rs:120:22\\n    |\\n120 |         case b @ 0x81...0xfe => S1(ctx, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:232:74\\n    |\\n232 |               pub fn raw_feed<T>(mut st: State, input: &[u8], output: &mut ::types::StringWriter,\\n    |                                                                            ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/korean.rs:101:1\\n    |\\n101 | / stateful_decoder! {\\n102 | |     module windows949;\\n103 | |\\n104 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n134 | |     }\\n135 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:274:62\\n    |\\n274 |               pub fn raw_finish<T>(mut st: State, output: &mut ::types::StringWriter,\\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/korean.rs:101:1\\n    |\\n101 | / stateful_decoder! {\\n102 | |     module windows949;\\n103 | |\\n104 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n134 | |     }\\n135 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:35:34\\n   |\\n35 |     fn raw_encoder(&self) -> Box<RawEncoder> { EUCJPEncoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:36:34\\n   |\\n36 |     fn raw_decoder(&self) -> Box<RawDecoder> { EUCJP0212Decoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:44:25\\n   |\\n44 |     pub fn new() -> Box<RawEncoder> { Box::new(EUCJPEncoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:48:32\\n   |\\n48 |     fn from_self(&self) -> Box<RawEncoder> { EUCJPEncoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:51:54\\n   |\\n51 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/codec/japanese.rs:56:24\\n   |\\n56 |                 \\'\\\\u{0}\\'...\\'\\\\u{7f}\\' => { output.write_byte(ch as u8); }\\n   |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/codec/japanese.rs:59:27\\n   |\\n59 |                 \\'\\\\u{ff61}\\'...\\'\\\\u{ff9f}\\' => {\\n   |                           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:81:44\\n   |\\n81 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:93:25\\n   |\\n93 |     pub fn new() -> Box<RawDecoder> {\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/japanese.rs:99:32\\n   |\\n99 |     fn from_self(&self) -> Box<RawDecoder> { EUCJP0212Decoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:102:55\\n    |\\n102 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:108:43\\n    |\\n108 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:124:18\\n    |\\n124 |             (0xa1...0xfe, 0xa1...0xfe) => (lead - 0xa1) * 94 + trail - 0xa1,\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:124:31\\n    |\\n124 |             (0xa1...0xfe, 0xa1...0xfe) => (lead - 0xa1) * 94 + trail - 0xa1,\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:136:18\\n    |\\n136 |             (0xa1...0xfe, 0xa1...0xfe) => (lead - 0xa1) * 94 + trail - 0xa1,\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:136:31\\n    |\\n136 |             (0xa1...0xfe, 0xa1...0xfe) => (lead - 0xa1) * 94 + trail - 0xa1,\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:145:22\\n    |\\n145 |         case b @ 0x00...0x7f => ctx.emit(b as u32);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:148:22\\n    |\\n148 |         case b @ 0xa1...0xfe => S3(ctx, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:155:22\\n    |\\n155 |         case b @ 0xa1...0xdf => ctx.emit(0xff61 + b as u32 - 0xa1);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:156:18\\n    |\\n156 |         case 0xa1...0xfe => ctx.err(\\\"invalid sequence\\\");\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:163:22\\n    |\\n163 |         case b @ 0xa1...0xfe => S4(ctx, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:170:22\\n    |\\n170 |         case b @ 0xa1...0xfe => match map_two_0208_bytes(lead, b) {\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:181:22\\n    |\\n181 |         case b @ 0xa1...0xfe => match map_two_0212_bytes(lead, b) {\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:232:74\\n    |\\n232 |               pub fn raw_feed<T>(mut st: State, input: &[u8], output: &mut ::types::StringWriter,\\n    |                                                                            ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/japanese.rs:115:1\\n    |\\n115 | / stateful_decoder! {\\n116 | |     module eucjp;\\n117 | |\\n118 | |     internal pub fn map_two_0208_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n187 | |     }\\n188 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:274:62\\n    |\\n274 |               pub fn raw_finish<T>(mut st: State, output: &mut ::types::StringWriter,\\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/japanese.rs:115:1\\n    |\\n115 | / stateful_decoder! {\\n116 | |     module eucjp;\\n117 | |\\n118 | |     internal pub fn map_two_0208_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n187 | |     }\\n188 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:455:34\\n    |\\n455 |     fn raw_encoder(&self) -> Box<RawEncoder> { Windows31JEncoder::new() }\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:456:34\\n    |\\n456 |     fn raw_decoder(&self) -> Box<RawDecoder> { Windows31JDecoder::new() }\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:464:25\\n    |\\n464 |     pub fn new() -> Box<RawEncoder> { Box::new(Windows31JEncoder) }\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:468:32\\n    |\\n468 |     fn from_self(&self) -> Box<RawEncoder> { Windows31JEncoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:471:54\\n    |\\n471 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:476:24\\n    |\\n476 |                 \\'\\\\u{0}\\'...\\'\\\\u{80}\\' => { output.write_byte(ch as u8); }\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:479:27\\n    |\\n479 |                 \\'\\\\u{ff61}\\'...\\'\\\\u{ff9f}\\' => {\\n    |                           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:503:44\\n    |\\n503 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n    |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:515:25\\n    |\\n515 |     pub fn new() -> Box<RawDecoder> {\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:521:32\\n    |\\n521 |     fn from_self(&self) -> Box<RawDecoder> { Windows31JDecoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:524:55\\n    |\\n524 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:530:43\\n    |\\n530 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:548:18\\n    |\\n548 |             (0xf0...0xf9, 0x40...0x7e) | (0xf0...0xf9, 0x80...0xfc) =>\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:548:31\\n    |\\n548 |             (0xf0...0xf9, 0x40...0x7e) | (0xf0...0xf9, 0x80...0xfc) =>\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:548:47\\n    |\\n548 |             (0xf0...0xf9, 0x40...0x7e) | (0xf0...0xf9, 0x80...0xfc) =>\\n    |                                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:548:60\\n    |\\n548 |             (0xf0...0xf9, 0x40...0x7e) | (0xf0...0xf9, 0x80...0xfc) =>\\n    |                                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:550:18\\n    |\\n550 |             (0x81...0x9f, 0x40...0x7e) | (0x81...0x9f, 0x80...0xfc) |\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:550:31\\n    |\\n550 |             (0x81...0x9f, 0x40...0x7e) | (0x81...0x9f, 0x80...0xfc) |\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:550:47\\n    |\\n550 |             (0x81...0x9f, 0x40...0x7e) | (0x81...0x9f, 0x80...0xfc) |\\n    |                                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:550:60\\n    |\\n550 |             (0x81...0x9f, 0x40...0x7e) | (0x81...0x9f, 0x80...0xfc) |\\n    |                                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:551:18\\n    |\\n551 |             (0xe0...0xfc, 0x40...0x7e) | (0xe0...0xfc, 0x80...0xfc) =>\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:551:31\\n    |\\n551 |             (0xe0...0xfc, 0x40...0x7e) | (0xe0...0xfc, 0x80...0xfc) =>\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:551:47\\n    |\\n551 |             (0xe0...0xfc, 0x40...0x7e) | (0xe0...0xfc, 0x80...0xfc) =>\\n    |                                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:551:60\\n    |\\n551 |             (0xe0...0xfc, 0x40...0x7e) | (0xe0...0xfc, 0x80...0xfc) =>\\n    |                                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:561:22\\n    |\\n561 |         case b @ 0x00...0x80 => ctx.emit(b as u32);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:562:22\\n    |\\n562 |         case b @ 0xa1...0xdf => ctx.emit(0xff61 + b as u32 - 0xa1);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:563:22\\n    |\\n563 |         case b @ 0x81...0x9f, b @ 0xe0...0xfc => S1(ctx, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:563:39\\n    |\\n563 |         case b @ 0x81...0x9f, b @ 0xe0...0xfc => S1(ctx, b);\\n    |                                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:232:74\\n    |\\n232 |               pub fn raw_feed<T>(mut st: State, input: &[u8], output: &mut ::types::StringWriter,\\n    |                                                                            ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/japanese.rs:537:1\\n    |\\n537 | / stateful_decoder! {\\n538 | |     module windows31j;\\n539 | |\\n540 | |     internal pub fn map_two_0208_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n574 | |     }\\n575 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:274:62\\n    |\\n274 |               pub fn raw_finish<T>(mut st: State, output: &mut ::types::StringWriter,\\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/japanese.rs:537:1\\n    |\\n537 | / stateful_decoder! {\\n538 | |     module windows31j;\\n539 | |\\n540 | |     internal pub fn map_two_0208_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n574 | |     }\\n575 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:777:34\\n    |\\n777 |     fn raw_encoder(&self) -> Box<RawEncoder> { ISO2022JPEncoder::new() }\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:778:34\\n    |\\n778 |     fn raw_decoder(&self) -> Box<RawDecoder> { ISO2022JPDecoder::new() }\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:795:25\\n    |\\n795 |     pub fn new() -> Box<RawEncoder> { Box::new(ISO2022JPEncoder { st: ASCII }) }\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:799:32\\n    |\\n799 |     fn from_self(&self) -> Box<RawEncoder> { ISO2022JPEncoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:802:54\\n    |\\n802 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:818:24\\n    |\\n818 |                 \\'\\\\u{0}\\'...\\'\\\\u{7f}\\' => { ensure_ASCII!(); output.write_byte(ch as u8); }\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:821:27\\n    |\\n821 |                 \\'\\\\u{ff61}\\'...\\'\\\\u{ff9f}\\' => {\\n    |                           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:847:44\\n    |\\n847 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n    |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:859:25\\n    |\\n859 |     pub fn new() -> Box<RawDecoder> {\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:865:32\\n    |\\n865 |     fn from_self(&self) -> Box<RawDecoder> { ISO2022JPDecoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:868:55\\n    |\\n868 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/japanese.rs:874:43\\n    |\\n874 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:890:18\\n    |\\n890 |             (0x21...0x7e, 0x21...0x7e) => (lead - 0x21) * 94 + trail - 0x21,\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:890:31\\n    |\\n890 |             (0x21...0x7e, 0x21...0x7e) => (lead - 0x21) * 94 + trail - 0x21,\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:902:18\\n    |\\n902 |             (0x21...0x7e, 0x21...0x7e) => (lead - 0x21) * 94 + trail - 0x21,\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:902:31\\n    |\\n902 |             (0x21...0x7e, 0x21...0x7e) => (lead - 0x21) * 94 + trail - 0x21,\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:912:22\\n    |\\n912 |         case b @ 0x00...0x7f => ctx.emit(b as u32), ASCII(ctx);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/japanese.rs:937:22\\n    |\\n937 |         case b @ 0x21...0x5f => ctx.emit(0xff61 + b as u32 - 0x21), Katakana(ctx);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:232:74\\n    |\\n232 |               pub fn raw_feed<T>(mut st: State, input: &[u8], output: &mut ::types::StringWriter,\\n    |                                                                            ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/japanese.rs:881:1\\n    |\\n881 | / stateful_decoder! {\\n882 | |     module iso2022jp;\\n883 | |\\n884 | |     internal pub fn map_two_0208_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n998 | |     }\\n999 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:274:62\\n    |\\n274 |               pub fn raw_finish<T>(mut st: State, output: &mut ::types::StringWriter,\\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/japanese.rs:881:1\\n    |\\n881 | / stateful_decoder! {\\n882 | |     module iso2022jp;\\n883 | |\\n884 | |     internal pub fn map_two_0208_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n998 | |     }\\n999 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:43:34\\n   |\\n43 |     fn raw_encoder(&self) -> Box<RawEncoder> { GB18030Encoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:44:34\\n   |\\n44 |     fn raw_decoder(&self) -> Box<RawDecoder> { GB18030Decoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:52:25\\n   |\\n52 |     pub fn new() -> Box<RawEncoder> { Box::new(GB18030Encoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:56:32\\n   |\\n56 |     fn from_self(&self) -> Box<RawEncoder> { GB18030Encoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:58:54\\n   |\\n58 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:61:44\\n   |\\n61 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> { None }\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:87:34\\n   |\\n87 |     fn raw_encoder(&self) -> Box<RawEncoder> { GBKEncoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:88:34\\n   |\\n88 |     fn raw_decoder(&self) -> Box<RawDecoder> { GB18030Decoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/simpchinese.rs:96:25\\n   |\\n96 |     pub fn new() -> Box<RawEncoder> { Box::new(GBKEncoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:100:32\\n    |\\n100 |     fn from_self(&self) -> Box<RawEncoder> { GBKEncoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:102:54\\n    |\\n102 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:105:44\\n    |\\n105 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> { None }\\n    |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:113:54\\n    |\\n113 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter,\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:160:25\\n    |\\n160 |     pub fn new() -> Box<RawDecoder> {\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:166:32\\n    |\\n166 |     fn from_self(&self) -> Box<RawDecoder> { GB18030Decoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:169:55\\n    |\\n169 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:175:43\\n    |\\n175 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:191:18\\n    |\\n191 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0x80...0xfe) => {\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:191:31\\n    |\\n191 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0x80...0xfe) => {\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:191:47\\n    |\\n191 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0x80...0xfe) => {\\n    |                                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:191:60\\n    |\\n191 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0x80...0xfe) => {\\n    |                                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:212:22\\n    |\\n212 |         case b @ 0x00...0x7f => ctx.emit(b as u32);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:214:22\\n    |\\n214 |         case b @ 0x81...0xfe => S1(ctx, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:221:22\\n    |\\n221 |         case b @ 0x30...0x39 => S2(ctx, first, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:230:22\\n    |\\n230 |         case b @ 0x81...0xfe => S3(ctx, first, second, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:236:22\\n    |\\n236 |         case b @ 0x30...0x39 => match map_four_bytes(first, second, third, b) {\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:232:74\\n    |\\n232 |               pub fn raw_feed<T>(mut st: State, input: &[u8], output: &mut ::types::StringWriter,\\n    |                                                                            ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/simpchinese.rs:182:1\\n    |\\n182 | / stateful_decoder! {\\n183 | |     module gb18030;\\n184 | |\\n185 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n241 | |     }\\n242 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:274:62\\n    |\\n274 |               pub fn raw_finish<T>(mut st: State, output: &mut ::types::StringWriter,\\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/simpchinese.rs:182:1\\n    |\\n182 | / stateful_decoder! {\\n183 | |     module gb18030;\\n184 | |\\n185 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n241 | |     }\\n242 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:468:34\\n    |\\n468 |     fn raw_encoder(&self) -> Box<RawEncoder> { HZEncoder::new() }\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:469:34\\n    |\\n469 |     fn raw_decoder(&self) -> Box<RawDecoder> { HZDecoder::new() }\\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:479:25\\n    |\\n479 |     pub fn new() -> Box<RawEncoder> { Box::new(HZEncoder { escaped: false }) }\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:483:32\\n    |\\n483 |     fn from_self(&self) -> Box<RawEncoder> { HZEncoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:486:54\\n    |\\n486 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:530:44\\n    |\\n530 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n    |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:542:25\\n    |\\n542 |     pub fn new() -> Box<RawDecoder> {\\n    |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:548:32\\n    |\\n548 |     fn from_self(&self) -> Box<RawDecoder> { HZDecoder::new() }\\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:551:55\\n    |\\n551 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/simpchinese.rs:557:43\\n    |\\n557 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:573:18\\n    |\\n573 |             (0x20...0x7f, 0x21...0x7e) => (lead - 1) * 190 + (trail + 0x3f),\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:573:31\\n    |\\n573 |             (0x20...0x7f, 0x21...0x7e) => (lead - 1) * 190 + (trail + 0x3f),\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:583:22\\n    |\\n583 |         case b @ 0x00...0x7f => ctx.emit(b as u32);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/simpchinese.rs:592:22\\n    |\\n592 |         case b @ 0x20...0x7f => B2(ctx, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:232:74\\n    |\\n232 |               pub fn raw_feed<T>(mut st: State, input: &[u8], output: &mut ::types::StringWriter,\\n    |                                                                            ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/simpchinese.rs:564:1\\n    |\\n564 | / stateful_decoder! {\\n565 | |     module hz;\\n566 | |\\n567 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n629 | |     }\\n630 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:274:62\\n    |\\n274 |               pub fn raw_finish<T>(mut st: State, output: &mut ::types::StringWriter,\\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/simpchinese.rs:564:1\\n    |\\n564 | / stateful_decoder! {\\n565 | |     module hz;\\n566 | |\\n567 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n629 | |     }\\n630 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:33:34\\n   |\\n33 |     fn raw_encoder(&self) -> Box<RawEncoder> { BigFive2003Encoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:34:34\\n   |\\n34 |     fn raw_decoder(&self) -> Box<RawDecoder> { BigFive2003HKSCS2008Decoder::new() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:42:25\\n   |\\n42 |     pub fn new() -> Box<RawEncoder> { Box::new(BigFive2003Encoder) }\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:46:32\\n   |\\n46 |     fn from_self(&self) -> Box<RawEncoder> { BigFive2003Encoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:49:54\\n   |\\n49 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>) {\\n   |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:73:44\\n   |\\n73 |     fn raw_finish(&mut self, _output: &mut ByteWriter) -> Option<CodecError> {\\n   |                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:85:25\\n   |\\n85 |     pub fn new() -> Box<RawDecoder> {\\n   |                         ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:91:32\\n   |\\n91 |     fn from_self(&self) -> Box<RawDecoder> { BigFive2003HKSCS2008Decoder::new() }\\n   |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/tradchinese.rs:94:55\\n   |\\n94 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>) {\\n   |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/codec/tradchinese.rs:100:43\\n    |\\n100 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError> {\\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/tradchinese.rs:116:18\\n    |\\n116 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0xa1...0xfe) => {\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/tradchinese.rs:116:31\\n    |\\n116 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0xa1...0xfe) => {\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/tradchinese.rs:116:47\\n    |\\n116 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0xa1...0xfe) => {\\n    |                                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/tradchinese.rs:116:60\\n    |\\n116 |             (0x81...0xfe, 0x40...0x7e) | (0x81...0xfe, 0xa1...0xfe) => {\\n    |                                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/tradchinese.rs:128:22\\n    |\\n128 |         case b @ 0x00...0x7f => ctx.emit(b as u32);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/codec/tradchinese.rs:129:22\\n    |\\n129 |         case b @ 0x81...0xfe => S1(ctx, b);\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:232:74\\n    |\\n232 |               pub fn raw_feed<T>(mut st: State, input: &[u8], output: &mut ::types::StringWriter,\\n    |                                                                            ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/tradchinese.rs:107:1\\n    |\\n107 | / stateful_decoder! {\\n108 | |     module bigfive2003;\\n109 | |\\n110 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n147 | |     }\\n148 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/util.rs:274:62\\n    |\\n274 |               pub fn raw_finish<T>(mut st: State, output: &mut ::types::StringWriter,\\n    |                                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::types::StringWriter)`\\n    | \\n   ::: src/codec/tradchinese.rs:107:1\\n    |\\n107 | / stateful_decoder! {\\n108 | |     module bigfive2003;\\n109 | |\\n110 | |     internal pub fn map_two_bytes(lead: u8, trail: u8) -> u32 {\\n...   |\\n147 | |     }\\n148 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/whatwg.rs:18:34\\n   |\\n18 |     fn raw_encoder(&self) -> Box<RawEncoder> { codec::utf_8::UTF8Encoding.raw_encoder() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/codec/whatwg.rs:19:34\\n   |\\n19 |     fn raw_decoder(&self) -> Box<RawDecoder> { codec::error::ErrorEncoding.raw_decoder() }\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/label.rs:15:44\\n   |\\n15 |         label.chars().map(|c| match c { \\'A\\'...\\'Z\\' => (c as u8 + 32) as char, _ => c }).collect();\\n   |                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: unreachable pattern\\n --> src/codec/utf_16.rs:70:17\\n  |\\n70|                 _ => unreachable!() // XXX Rust issue #12483, this is redundant\\n  |                 ^\\n  |\\n  = note: `#[warn(unreachable_patterns)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpn3WCLR/self-profile-output\\\"; prefix is \\\"encoding-24704\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `encoding`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=1752206378;;instructions:u;396982772;100.00;1.22;insn per cycle\\n1433660344;;cycles:u;396982772;100.00;3.611;GHz\\n396.985905;;task-clock;396985905;100.00;1.000;CPUs utilized\\n396.984893;;cpu-clock;396985905;100.00;1.000;CPUs utilized\\n11410;;faults;396985905;100.00;0.029;M/sec\\n136244;;max-rss;3;100.00\\n0.443151388;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"futures":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: package replacement is not used: https://github.com/rust-lang/crates.io-index#openssl:0.7.14\\n    Checking futures v0.1.0 (/tmp/.tmpyehgo0)\\nwarning: unused `#[macro_use]` import\\n --> src/lib.rs:17:1\\n  |\\n17| #[macro_use]\\n  | ^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/slot.rs:63:30\\n  |\\n63|     on_full: Lock<Option<Box<FnBox<T>>>>,\\n  |                              ^^^^^^^^ help: use `dyn`: `dyn FnBox<T>`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/slot.rs:64:31\\n   |\\n64 |     on_empty: Lock<Option<Box<FnBox<T>>>>,\\n   |                               ^^^^^^^^ help: use `dyn`: `dyn FnBox<T>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/util.rs:5:14\\n  |\\n5 |     Tail(Box<Future<Item=T::Item, Error=T::Error>>),\\n  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=T::Item, Error=T::Error>`\\n\\nwarning: unused imports: `ATOMIC_USIZE_INIT`, `AtomicUsize`\\n  --> src/task.rs:54:25\\n   |\\n54 | use std::sync::atomic::{AtomicUsize, AtomicBool, ATOMIC_USIZE_INIT, Ordering};\\n   |                         ^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/task.rs:96:27\\n   |\\n96 |     slot: Slot<(Task, Box<Future<Item=(), Error=()>>)>,\\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=(), Error=()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/task.rs:225:38\\n    |\\n225 |     pub fn run(self, mut future: Box<Future<Item=(), Error=()>>) {\\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=(), Error=()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/executor.rs:30:36\\n   |\\n30 |     fn execute_boxed(&self, f: Box<ExecuteCallback>);\\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/executor.rs:37:36\\n   |\\n37 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/executor.rs:43:36\\n   |\\n43 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/executor.rs:69:36\\n   |\\n69 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/executor.rs:84:31\\n   |\\n84 |     deferred: RefCell<Vec<Box<ExecuteCallback>>>,\\n   |                               ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/executor.rs:91:36\\n   |\\n91 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/collect.rs:116:31\\n    |\\n116 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/lazy.rs:83:42\\n   |\\n83 |     fn tailcall(&mut self) -> Option<Box<Future<Item=R::Item, Error=R::Error>>> {\\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=R::Item, Error=R::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/and_then.rs:43:31\\n   |\\n43 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/flatten.rs:41:31\\n   |\\n41 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/join.rs:88:39\\n    |\\n88  |                           -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n...\\n97  | / generate! {\\n98  | |     (Join, new, <A, B>),\\n99  | |     (Join3, new3, <A, B, C>),\\n100 | |     (Join4, new4, <A, B, C, D>),\\n101 | |     (Join5, new5, <A, B, C, D, E>),\\n102 | | }\\n    | |_- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/map.rs:39:31\\n   |\\n39 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/map_err.rs:39:31\\n   |\\n39 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/or_else.rs:44:31\\n   |\\n44 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/select.rs:77:31\\n   |\\n77 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/select.rs:108:31\\n    |\\n108 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/select_all.rs:81:31\\n   |\\n81 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/select_all.rs:104:31\\n    |\\n104 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/then.rs:41:31\\n   |\\n41 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/stream/mod.rs:178:27\\n    |\\n178 |     fn boxed(self) -> Box<Stream<Item = Self::Item, Error = Self::Error>>\\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Stream<Item = Self::Item, Error = Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/chain.rs:54:35\\n   |\\n54 |                     -> Option<Box<Future<Item=B::Item, Error=B::Error>>> {\\n   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=B::Item, Error=B::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/impls.rs:5:27\\n  |\\n5 | impl<T, E> Future for Box<Future<Item=T, Error=E>>\\n  |                           ^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=T, Error=E>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/impls.rs:21:31\\n   |\\n21 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/impls.rs:42:31\\n   |\\n42 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/forget.rs:11:16\\n   |\\n11 |     inner: Box<Future<Item=T, Error=E>>,\\n   |                ^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=T, Error=E>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/forget.rs:26:42\\n   |\\n26 |     fn tailcall(&mut self) -> Option<Box<Future<Item=(), Error=()>>> {\\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=(), Error=()>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/lib.rs:263:31\\n    |\\n263 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/lib.rs:279:27\\n    |\\n279 |     fn boxed(self) -> Box<Future<Item=Self::Item, Error=Self::Error>>\\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\\n\\nwarning: unused imports: `TryRecvError`, `channel`\\n --> src/all/mod.rs:1:23\\n  |\\n1 | use std::sync::mpsc::{channel, TryRecvError};\\n  |                       ^^^^^^^  ^^^^^^^^^^^^\\n\\nwarning: unused import: `*`\\n --> src/all/mod.rs:3:5\\n  |\\n3 | use *;\\n  |     ^\\n\\nwarning: unused import: `self::support::*`\\n --> src/all/mod.rs:6:5\\n  |\\n6 | use self::support::*;\\n  |     ^^^^^^^^^^^^^^^^\\n\\nwarning: function is never used: `unselect`\\n --> src/all/mod.rs:8:1\\n  |\\n8 | fn unselect<T, U, E>(r: Result<(T, U), (E, U)>) -> Result<T, E> {\\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(dead_code)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpyehgo0/self-profile-output\\\"; prefix is \\\"futures-24753\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `futures`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=3680794952;;instructions:u;718825704;100.00;1.34;insn per cycle\\n2747475772;;cycles:u;718825704;100.00;3.822;GHz\\n718.817283;;task-clock;718817283;100.00;1.000;CPUs utilized\\n718.816558;;cpu-clock;718817283;100.00;1.000;CPUs utilized\\n11947;;faults;718817283;100.00;0.017;M/sec\\n136976;;max-rss;3;100.00\\n0.737780678;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"helloworld":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking helloworld v0.1.0 (/tmp/.tmpB9fYQX)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpB9fYQX/self-profile-output\\\"; prefix is \\\"helloworld-24797\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `helloworld`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=137647031;;instructions:u;33787187;100.00;1.48;insn per cycle\\n92713302;;cycles:u;33787187;100.00;2.746;GHz\\n33.761021;;task-clock;33761021;100.00;0.999;CPUs utilized\\n33.760440;;cpu-clock;33761021;100.00;0.999;CPUs utilized\\n4658;;faults;33761021;100.00;0.138;M/sec\\n97480;;max-rss;3;100.00\\n0.052836838;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"html5ever":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling html5ever v0.5.4 (/tmp/.tmpmbJQr0)\\n    Checking string_cache v0.2.29\\nwarning: `...` range patterns are deprecated\\n --> src/util/str.rs:26:13\\n  |\\n26|         \\'a\\' ... \\'z\\' => Some(c),\\n  |             ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/util/str.rs:27:13\\n   |\\n27 |         \\'A\\' ... \\'Z\\' => Some((c as u8 - b\\'A\\' + b\\'a\\') as char),\\n   |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/util/str.rs:34:20\\n   |\\n34 |     matches!(c, \\'0\\'...\\'9\\' | \\'a\\'...\\'z\\' | \\'A\\'...\\'Z\\')\\n   |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/util/str.rs:34:32\\n   |\\n34 |     matches!(c, \\'0\\'...\\'9\\' | \\'a\\'...\\'z\\' | \\'A\\'...\\'Z\\')\\n   |                                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/util/str.rs:34:44\\n   |\\n34 |     matches!(c, \\'0\\'...\\'9\\' | \\'a\\'...\\'z\\' | \\'A\\'...\\'Z\\')\\n   |                                            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/char_ref/mod.rs:222:26\\n    |\\n222 |             0x00 | 0xD800...0xDFFF => (\\'\\\\u{fffd}\\', true),\\n    |                          ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/char_ref/mod.rs:224:17\\n    |\\n224 |             0x80...0x9F => match data::C1_REPLACEMENTS[(self.num - 0x80) as usize] {\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/char_ref/mod.rs:229:17\\n    |\\n229 |             0x01...0x08 | 0x0B | 0x0D...0x1F | 0x7F | 0xFDD0...0xFDEF\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/char_ref/mod.rs:229:38\\n    |\\n229 |             0x01...0x08 | 0x0B | 0x0D...0x1F | 0x7F | 0xFDD0...0xFDEF\\n    |                                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/char_ref/mod.rs:229:61\\n    |\\n229 |             0x01...0x08 | 0x0B | 0x0D...0x1F | 0x7F | 0xFDD0...0xFDEF\\n    |                                                             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/mod.rs:254:17\\n    |\\n254 |             0x01...0x08 | 0x0B | 0x0E...0x1F | 0x7F...0x9F | 0xFDD0...0xFDEF => true,\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/mod.rs:254:38\\n    |\\n254 |             0x01...0x08 | 0x0B | 0x0E...0x1F | 0x7F...0x9F | 0xFDD0...0xFDEF => true,\\n    |                                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/mod.rs:254:52\\n    |\\n254 |             0x01...0x08 | 0x0B | 0x0E...0x1F | 0x7F...0x9F | 0xFDD0...0xFDEF => true,\\n    |                                                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/tokenizer/mod.rs:254:68\\n    |\\n254 |             0x01...0x08 | 0x0B | 0x0E...0x1F | 0x7F...0x9F | 0xFDD0...0xFDEF => true,\\n    |                                                                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> src/rcdom.rs:15:5\\n  |\\n15| use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpmbJQr0/self-profile-output\\\"; prefix is \\\"html5ever-25132\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `html5ever`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=9325078052;;instructions:u;1645344935;100.00;1.47;insn per cycle\\n6357332895;;cycles:u;1645344935;100.00;3.864;GHz\\n1645.330300;;task-clock;1645330300;100.00;0.990;CPUs utilized\\n1645.339736;;cpu-clock;1645330300;100.00;0.990;CPUs utilized\\n41064;;faults;1645330300;100.00;0.025;M/sec\\n253672;;max-rss;3;100.00\\n1.704063282;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"hyper":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking openssl-sys v0.6.7\\n    Checking kernel32-sys v0.2.2\\n    Checking time v0.1.35\\n    Checking openssl v0.6.7\\n    Checking cookie v0.1.21\\n    Checking hyper v0.5.0 (/tmp/.tmpzhyf8K)\\nwarning: unused macro definition\\n --> src/lib.rs:164:1\\n  |\\n16| / macro_rules! inspect(\\n16| |     ($name:expr, $value:expr) => ({\\n16| |         let v = $value;\\n16| |         trace!(\\\"inspect: {:?} = {:?}\\\", $name, v);\\n16| |         v\\n16| |     })\\n17| | );\\n  | |__^\\n  |\\n  = note: `#[warn(unused_macros)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/client/request.rs:25:36\\n  |\\n25|     body: HttpWriter<BufWriter<Box<NetworkStream + Send>>>,\\n  |                                    ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/client/request.rs:53:21\\n   |\\n53 |         S: Into<Box<NetworkStream + Send>> {\\n   |                     ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/client/response.rs:26:36\\n   |\\n26 |     body: HttpReader<BufReader<Box<NetworkStream + Send>>>,\\n   |                                    ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/client/response.rs:34:28\\n   |\\n34 |     pub fn new(stream: Box<NetworkStream + Send>) -> ::Result<Response> {\\n   |                            ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/client/response.rs:92:36\\n   |\\n92 |     pub fn into_inner(self) -> Box<NetworkStream + Send> {\\n   |                                    ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:141:23\\n    |\\n141 |     type Stream = Box<NetworkStream + Send>;\\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:144:25\\n    |\\n144 |         -> ::Result<Box<NetworkStream + Send>> {\\n    |                         ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:153:22\\n    |\\n153 | struct Connector(Box<NetworkConnector<Stream=Box<NetworkStream + Send>> + Send>);\\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkConnector<Stream=Box<NetworkStream + Send>> + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:153:50\\n    |\\n153 | struct Connector(Box<NetworkConnector<Stream=Box<NetworkStream + Send>> + Send>);\\n    |                                                  ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:156:23\\n    |\\n156 |     type Stream = Box<NetworkStream + Send>;\\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:159:25\\n    |\\n159 |         -> ::Result<Box<NetworkStream + Send>> {\\n    |                         ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:284:26\\n    |\\n284 |     ChunkedBody(&\\'a mut (Read + \\'a)),\\n    |                          ^^^^^^^^^ help: use `dyn`: `dyn Read + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/client/mod.rs:286:24\\n    |\\n286 |     SizedBody(&\\'a mut (Read + \\'a), u64),\\n    |                        ^^^^^^^^^ help: use `dyn`: `dyn Read + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/error.rs:66:32\\n   |\\n66 |     fn cause(&self) -> Option<&StdError> {\\n   |                                ^^^^^^^^ help: use `dyn`: `dyn StdError`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/internals/item.rs:15:23\\n   |\\n15 |     typed: PtrMapCell<HeaderFormat + Send + Sync>\\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/internals/item.rs:28:30\\n   |\\n28 |     pub fn new_typed(ty: Box<HeaderFormat + Send + Sync>) -> Item {\\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/internals/item.rs:88:70\\n   |\\n88 | fn parse<H: Header + HeaderFormat>(raw: &Vec<Vec<u8>>) -> Option<Box<HeaderFormat + Send + Sync>> {\\n   |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/internals/item.rs:91:20\\n   |\\n91 |         let h: Box<HeaderFormat + Send + Sync> = Box::new(h);\\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/mod.rs:65:32\\n   |\\n65 |     fn clone_box(&self) -> Box<HeaderFormat + Send + Sync>;\\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/mod.rs:70:32\\n   |\\n70 |     fn clone_box(&self) -> Box<HeaderFormat + Send + Sync> {\\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/mod.rs:75:6\\n   |\\n75 | impl HeaderFormat + Send + Sync {\\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/mod.rs:87:20\\n   |\\n87 | impl Clone for Box<HeaderFormat + Send + Sync> {\\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/header/mod.rs:89:28\\n   |\\n89 |     fn clone(&self) -> Box<HeaderFormat + Send + Sync> {\\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/header/mod.rs:314:32\\n    |\\n314 | impl<\\'a> fmt::Display for &\\'a (HeaderFormat + Send + Sync) {\\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\\n\\nwarning: `...` range patterns are deprecated\\n --> src/http.rs:162:19\\n  |\\n16|             b@b\\'0\\'...b\\'9\\' if in_chunk_size => {\\n  |                   ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/http.rs:166:19\\n    |\\n166 |             b@b\\'a\\'...b\\'f\\' if in_chunk_size => {\\n    |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/http.rs:170:19\\n    |\\n170 |             b@b\\'A\\'...b\\'F\\' if in_chunk_size => {\\n    |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/net.rs:70:27\\n   |\\n70 |     type Stream: Into<Box<NetworkStream + Send>>;\\n   |                           ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/net.rs:78:47\\n   |\\n78 | impl<T: NetworkStream + Send> From<T> for Box<NetworkStream + Send> {\\n   |                                               ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/net.rs:79:26\\n   |\\n79 |     fn from(s: T) -> Box<NetworkStream + Send> {\\n   |                          ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/net.rs:84:25\\n   |\\n84 | impl fmt::Debug for Box<NetworkStream + Send> {\\n   |                         ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/net.rs:90:6\\n   |\\n90 | impl NetworkStream + Send {\\n   |      ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/net.rs:99:56\\n   |\\n99 |     unsafe fn downcast_unchecked<T: \\'static>(self: Box<NetworkStream + Send>) -> Box<T>  {\\n   |                                                        ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/net.rs:100:23\\n    |\\n100 |         let raw: *mut NetworkStream = mem::transmute(self);\\n    |                       ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/net.rs:105:6\\n    |\\n105 | impl NetworkStream + Send {\\n    |      ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/net.rs:135:39\\n    |\\n135 |     pub fn downcast<T: Any>(self: Box<NetworkStream + Send>)\\n    |                                       ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/net.rs:136:35\\n    |\\n136 |             -> Result<Box<T>, Box<NetworkStream + Send>> {\\n    |                                   ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/net.rs:320:32\\n    |\\n320 | pub type ContextVerifier = Box<Fn(&mut SslContext) -> () + Send>;\\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&mut SslContext) -> () + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/server/request.rs:29:48\\n   |\\n29 |     body: HttpReader<&\\'a mut BufReader<&\\'b mut NetworkStream>>\\n   |                                                ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/server/request.rs:36:54\\n   |\\n36 |     pub fn new(mut stream: &\\'a mut BufReader<&\\'b mut NetworkStream>, addr: SocketAddr)\\n   |                                                      ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/server/request.rs:70:71\\n   |\\n70 | ...                   HttpReader<&\\'a mut BufReader<&\\'b mut NetworkStream>>) {\\n   |                                                            ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/server/response.rs:27:31\\n   |\\n27 |     body: HttpWriter<&\\'a mut (Write + \\'a)>,\\n   |                               ^^^^^^^^^^ help: use `dyn`: `dyn Write + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/server/response.rs:46:48\\n   |\\n46 |                      body: HttpWriter<&\\'a mut (Write + \\'a)>,\\n   |                                                ^^^^^^^^^^ help: use `dyn`: `dyn Write + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/server/response.rs:59:76\\n   |\\n59 |     pub fn deconstruct(self) -> (version::HttpVersion, HttpWriter<&\\'a mut (Write + \\'a)>,\\n   |                                                                            ^^^^^^^^^^ help: use `dyn`: `dyn Write + \\'a`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/server/response.rs:117:33\\n    |\\n117 |     pub fn new(stream: &\\'a mut (Write + \\'a), headers: &\\'a mut header::Headers) -> Response<\\'a, Fresh> {\\n    |                                 ^^^^^^^^^^ help: use `dyn`: `dyn Write + \\'a`\\n\\nwarning: unused macro definition\\n  --> src/server/mod.rs:68:1\\n   |\\n68 | / macro_rules! try_option(\\n69 | |     ($e:expr) => {{\\n70 | |         match $e {\\n71 | |             Some(v) => v,\\n...  |\\n74 | |     }}\\n75 | | );\\n   | |__^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/server/mod.rs:170:32\\n    |\\n170 |         let stream_clone: &mut NetworkStream = &mut stream.clone();\\n    |                                ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/server/mod.rs:178:65\\n    |\\n178 |     fn keep_alive_loop<W: Write>(&self, mut rdr: BufReader<&mut NetworkStream>, mut wrt: W, addr: SocketAddr) {\\n    |                                                                 ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/status.rs:443:16\\n    |\\n443 |             100...199 => StatusClass::Informational,\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/status.rs:444:16\\n    |\\n444 |             200...299 => StatusClass::Success,\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/status.rs:445:16\\n    |\\n445 |             300...399 => StatusClass::Redirection,\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/status.rs:446:16\\n    |\\n446 |             400...499 => StatusClass::ClientError,\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/status.rs:447:16\\n    |\\n447 |             500...599 => StatusClass::ServerError,\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> src/header/common/pragma.rs:2:5\\n  |\\n2 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: unused import: `typeable::Typeable`\\n --> src/header/internals/item.rs:6:5\\n  |\\n6 | use typeable::Typeable;\\n  |     ^^^^^^^^^^^^^^^^^^\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> src/header/shared/charset.rs:3:5\\n  |\\n3 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variable does not need to be mutable\\n --> src/client/mod.rs:197:17\\n  |\\n19|             let mut headers = match self.headers {\\n  |                 ----^^^^^^^\\n  |                 |\\n  |                 help: remove this `mut`\\n  |\\n  = note: `#[warn(unused_mut)]` on by default\\n\\nwarning: variable does not need to be mutable\\n   --> src/header/mod.rs:120:17\\n    |\\n120 |             let mut item = match headers.data.entry(name) {\\n    |                 ----^^^^\\n    |                 |\\n    |                 help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/header/common/authorization.rs:129:25\\n    |\\n129 |                     let mut parts = &mut text.split(\\':\\');\\n    |                         ----^^^^^\\n    |                         |\\n    |                         help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n  --> src/header/internals/cell.rs:78:13\\n   |\\n78 |         let mut map = unsafe { &mut *self.0.get() };\\n   |             ----^^^\\n   |             |\\n   |             help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n  --> src/header/internals/cell.rs:92:13\\n   |\\n92 |         let mut map = &mut *self.0.get();\\n   |             ----^^^\\n   |             |\\n   |             help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/server/mod.rs:159:36\\n    |\\n159 |     fn handle_connection<S>(&self, mut stream: &mut S) where S: NetworkStream + Clone {\\n    |                                    ----^^^^^^\\n    |                                    |\\n    |                                    help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n  --> src/server/request.rs:36:16\\n   |\\n36 |     pub fn new(mut stream: &\\'a mut BufReader<&\\'b mut NetworkStream>, addr: SocketAddr)\\n   |                ----^^^^^^\\n   |                |\\n   |                help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/server/response.rs:137:17\\n    |\\n137 |     pub fn send(mut self, body: &[u8]) -> io::Result<()> {\\n    |                 ----^^^^\\n    |                 |\\n    |                 help: remove this `mut`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpzhyf8K/self-profile-output\\\"; prefix is \\\"hyper-25427\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `hyper`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=4282719292;;instructions:u;1019290009;100.00;1.10;insn per cycle\\n3889678723;;cycles:u;1019290009;100.00;3.816;GHz\\n1019.273659;;task-clock;1019273659;100.00;1.000;CPUs utilized\\n1019.273360;;cpu-clock;1019273659;100.00;1.000;CPUs utilized\\n20939;;faults;1019273659;100.00;0.021;M/sec\\n174844;;max-rss;3;100.00\\n1.058773722;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"inflate":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking inflate v0.1.0 (/tmp/.tmpViEyDV)\\nwarning: `...` range patterns are deprecated\\n --> src/lib.rs:274:18\\n  |\\n27|                 0...15 => self.result.push(code),\\n  |                  ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:768:38\\n    |\\n768 | ...                   1...8 => len!(code, 0),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:769:38\\n    |\\n769 | ...                   9...12 => len!(code, 1),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:770:39\\n    |\\n770 | ...                   13...16 => len!(code, 2),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:771:39\\n    |\\n771 | ...                   17...20 => len!(code, 3),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:772:39\\n    |\\n772 | ...                   21...23 => len!(code, 4),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:796:39\\n    |\\n796 | ...                   25...28 => len!(code, 5),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:853:38\\n    |\\n853 | ...                   0...255 => {\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:857:40\\n    |\\n857 | ...                   256...285 => {}\\n    |                          ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:878:38\\n    |\\n878 | ...                   1...8 => len!(code, 0),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:879:38\\n    |\\n879 | ...                   9...12 => len!(code, 1),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:880:39\\n    |\\n880 | ...                   13...16 => len!(code, 2),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:881:39\\n    |\\n881 | ...                   17...20 => len!(code, 3),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:882:39\\n    |\\n882 | ...                   21...24 => len!(code, 4),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:883:39\\n    |\\n883 | ...                   25...28 => len!(code, 5),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:898:34\\n    |\\n898 | ...                   0...3 => len_dist_case!(0),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:899:34\\n    |\\n899 | ...                   4...5 => len_dist_case!(1),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:900:34\\n    |\\n900 | ...                   6...7 => len_dist_case!(2),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:901:34\\n    |\\n901 | ...                   8...9 => len_dist_case!(3),\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:902:35\\n    |\\n902 | ...                   10...11 => len_dist_case!(4),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:903:35\\n    |\\n903 | ...                   12...13 => len_dist_case!(5),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:904:35\\n    |\\n904 | ...                   14...15 => len_dist_case!(6),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:905:35\\n    |\\n905 | ...                   16...17 => len_dist_case!(7),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:906:35\\n    |\\n906 | ...                   18...19 => len_dist_case!(8),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:907:35\\n    |\\n907 | ...                   20...21 => len_dist_case!(9),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:908:35\\n    |\\n908 | ...                   22...23 => len_dist_case!(10),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:909:35\\n    |\\n909 | ...                   24...25 => len_dist_case!(11),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:910:35\\n    |\\n910 | ...                   26...27 => len_dist_case!(12),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:911:35\\n    |\\n911 | ...                   28...29 => len_dist_case!(13),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpViEyDV/self-profile-output\\\"; prefix is \\\"inflate-25471\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `inflate`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=8424259515;;instructions:u;1312274417;100.00;1.72;insn per cycle\\n4899046504;;cycles:u;1312274417;100.00;3.733;GHz\\n1312.289281;;task-clock;1312289281;100.00;0.987;CPUs utilized\\n1312.288819;;cpu-clock;1312289281;100.00;0.987;CPUs utilized\\n34011;;faults;1312289281;100.00;0.026;M/sec\\n223796;;max-rss;3;100.00\\n1.371711689;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"issue-46449":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-46649-byte-filling-slowing-down-sroa v0.1.0 (/tmp/.tmpPQRGWD)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/lib.rs:17:21\\n  |\\n17| pub fn run() -> Box<Future<Item = (), Error = Error>> {\\n  |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item = (), Error = Error>`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpPQRGWD/self-profile-output\\\"; prefix is \\\"issue_46649_byte_filling_slowing_down_sroa-25520\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-46649-byte-filling-slowing-down-sroa`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=281061941;;instructions:u;60268942;100.00;1.47;insn per cycle\\n191061485;;cycles:u;60268942;100.00;3.171;GHz\\n60.262368;;task-clock;60262368;100.00;0.998;CPUs utilized\\n60.261129;;cpu-clock;60262368;100.00;0.998;CPUs utilized\\n5882;;faults;60262368;100.00;0.098;M/sec\\n113004;;max-rss;3;100.00\\n0.115118063;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"keccak":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking keccak v0.1.0 (/tmp/.tmp6Gm9z2)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp6Gm9z2/self-profile-output\\\"; prefix is \\\"keccak-25564\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `keccak`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=35799931958;;instructions:u;5561972959;100.00;1.68;insn per cycle\\n21294906304;;cycles:u;5561972959;100.00;3.829;GHz\\n5561.968300;;task-clock;5561968300;100.00;0.997;CPUs utilized\\n5561.969088;;cpu-clock;5561968300;100.00;0.997;CPUs utilized\\n258047;;faults;5561968300;100.00;0.046;M/sec\\n1094080;;max-rss;3;100.00\\n5.630131966;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking packed_simd v0.3.0 (/tmp/.tmpocnWnl)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpocnWnl/self-profile-output\\\"; prefix is \\\"packed_simd-25613\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=102190731615;;instructions:u;17862265868;100.00;1.45;insn per cycle\\n70541224269;;cycles:u;17862265868;100.00;3.949;GHz\\n17862.227209;;task-clock;17862227209;100.00;0.999;CPUs utilized\\n17862.230672;;cpu-clock;17862227209;100.00;0.999;CPUs utilized\\n119445;;faults;17862227209;100.00;0.007;M/sec\\n517048;;max-rss;3;100.00\\n17.916515761;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"piston-image":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking rayon-core v1.3.0\\n    Checking miniz-sys v0.1.10\\n    Checking flate2 v0.2.20\\n    Checking rayon v0.8.2\\n    Checking png v0.5.2\\n    Checking jpeg-decoder v0.1.13\\n    Checking image v0.10.3 (/tmp/.tmpwSWRNX)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/imageops/sample.rs:37:21\\n  |\\n37|     pub kernel: Box<Fn(f32) -> f32 + \\'a>,\\n  |                     ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(f32) -> f32 + \\'a`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n --> src/webp/vp8.rs:1277:34\\n  |\\n12|                 literal  @ DCT_1 ... DCT_4 => literal as i16,\\n  |                                  ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/webp/vp8.rs:1279:37\\n     |\\n1279 |                 category @ DCT_CAT1 ... DCT_CAT6 => {\\n     |                                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/tiff/decoder/mod.rs:391:46\\n    |\\n391 |         let (bytes, mut reader): (usize, Box<EndianReader>) = match self.compression_method {\\n    |                                              ^^^^^^^^^^^^ help: use `dyn`: `dyn EndianReader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/tga/decoder.rs:110:28\\n    |\\n110 |     fn from_reader(r: &mut Read) -> ImageResult<Header> {\\n    |                            ^^^^ help: use `dyn`: `dyn Read`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/tga/decoder.rs:136:32\\n    |\\n136 |     pub fn from_reader(r: &mut Read,\\n    |                                ^^^^ help: use `dyn`: `dyn Read`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/image.rs:70:33\\n   |\\n70 |     fn cause (&self) -> Option<&Error> {\\n   |                                 ^^^^^ help: use `dyn`: `dyn Error`\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> src/dynimage.rs:6:5\\n  |\\n6 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: floating-point types cannot be used in patterns\\n --> src/imageops/sample.rs:311:9\\n  |\\n31|         0.0 => 1.0,\\n  |         ^^^\\n  |\\n  = note: `#[warn(illegal_floating_point_literal_pattern)]` on by default\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\\n  = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\\n\\nwarning: floating-point types cannot be used in patterns\\n --> src/imageops/sample.rs:311:9\\n  |\\n31|         0.0 => 1.0,\\n  |         ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\\n  = note: for more information, see issue #41620 <https://github.com/rust-lang/rust/issues/41620>\\n\\nwarning: variable does not need to be mutable\\n --> src/buffer.rs:596:14\\n  |\\n59|         for (mut to, from) in buffer.pixels_mut().zip(self.pixels()) {\\n  |              ----^^\\n  |              |\\n  |              help: remove this `mut`\\n  |\\n  = note: `#[warn(unused_mut)]` on by default\\n\\nwarning: field is never used: `dc_pred`\\n --> src/jpeg/encoder.rs:157:5\\n  |\\n15|     dc_pred: i32\\n  |     ^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(dead_code)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpwSWRNX/self-profile-output\\\"; prefix is \\\"image-25897\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `image`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=7565275288;;instructions:u;1656749388;100.00;1.18;insn per cycle\\n6411591164;;cycles:u;1656749388;100.00;3.870;GHz\\n1656.715416;;task-clock;1656715416;100.00;1.000;CPUs utilized\\n1656.714293;;cpu-clock;1656715416;100.00;1.000;CPUs utilized\\n27001;;faults;1656715416;100.00;0.016;M/sec\\n199572;;max-rss;3;100.00\\n1.701076596;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"regex":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking regex-syntax v0.3.9 (/tmp/.tmp9yT7YM/regex-syntax)\\n    Checking kernel32-sys v0.2.2\\n    Checking thread-id v2.0.0\\n    Checking thread_local v0.2.7\\nwarning: `...` range patterns are deprecated\\n --> regex-syntax/src/lib.rs:1670:19\\n  |\\n16|         \\'_\\' | \\'0\\' ... \\'9\\' | \\'a\\' ... \\'z\\' | \\'A\\' ... \\'Z\\'  => true,\\n  |                   ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n    --> regex-syntax/src/lib.rs:1670:33\\n     |\\n1670 |         \\'_\\' | \\'0\\' ... \\'9\\' | \\'a\\' ... \\'z\\' | \\'A\\' ... \\'Z\\'  => true,\\n     |                                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> regex-syntax/src/lib.rs:1670:47\\n     |\\n1670 |         \\'_\\' | \\'0\\' ... \\'9\\' | \\'a\\' ... \\'z\\' | \\'A\\' ... \\'Z\\'  => true,\\n     |                                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> regex-syntax/src/lib.rs:1687:21\\n     |\\n1687 |         b\\'_\\' | b\\'0\\' ... b\\'9\\' | b\\'a\\' ... b\\'z\\' | b\\'A\\' ... b\\'Z\\'  => true,\\n     |                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> regex-syntax/src/lib.rs:1687:37\\n     |\\n1687 |         b\\'_\\' | b\\'0\\' ... b\\'9\\' | b\\'a\\' ... b\\'z\\' | b\\'A\\' ... b\\'Z\\'  => true,\\n     |                                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> regex-syntax/src/lib.rs:1687:53\\n     |\\n1687 |         b\\'_\\' | b\\'0\\' ... b\\'9\\' | b\\'a\\' ... b\\'z\\' | b\\'A\\' ... b\\'Z\\'  => true,\\n     |                                                     ^^^ help: use `..=` for an inclusive range\\n\\n    Checking regex v0.1.80 (/tmp/.tmp9yT7YM)\\nwarning: `...` range patterns are deprecated\\n --> src/utf8.rs:90:21\\n  |\\n90|         0b110_00000 ... 0b110_11111 => {\\n  |                     ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/utf8.rs:98:22\\n   |\\n98 |                 0x80 ... 0x7FF => char::from_u32(cp).map(|cp| (cp, 2)),\\n   |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/utf8.rs:102:21\\n    |\\n102 |         0b1110_0000 ... 0b1110_1111 => {\\n    |                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/utf8.rs:112:23\\n    |\\n112 |                 0x800 ... 0xFFFF => char::from_u32(cp).map(|cp| (cp, 3)),\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/utf8.rs:116:21\\n    |\\n116 |         0b11110_000 ... 0b11110_111 => {\\n    |                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/utf8.rs:126:25\\n    |\\n126 |                 0x10000 ... 0x10FFFF => char::from_u32(cp).map(|cp| (cp, 4)),\\n    |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/compile.rs:348:28\\n  |\\n34|         let mut chars: Box<Iterator<Item=&char>> =\\n  |                            ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Iterator<Item=&char>`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/compile.rs:395:28\\n    |\\n395 |         let mut bytes: Box<Iterator<Item=&u8>> =\\n    |                            ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Iterator<Item=&u8>`\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/dfa.rs:1661:17\\n     |\\n1661 |             b\\'A\\'...b\\'Z\\' | b\\'a\\'...b\\'z\\' | b\\'0\\'...b\\'9\\' | b\\'_\\' => true,\\n     |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/dfa.rs:1661:31\\n     |\\n1661 |             b\\'A\\'...b\\'Z\\' | b\\'a\\'...b\\'z\\' | b\\'0\\'...b\\'9\\' | b\\'_\\' => true,\\n     |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/dfa.rs:1661:45\\n     |\\n1661 |             b\\'A\\'...b\\'Z\\' | b\\'a\\'...b\\'z\\' | b\\'0\\'...b\\'9\\' | b\\'_\\' => true,\\n     |                                             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/error.rs:49:32\\n   |\\n49 |     fn cause(&self) -> Option<&::std::error::Error> {\\n   |                                ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::std::error::Error)`\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/expand.rs:88:14\\n   |\\n88 |         b\\'0\\' ... b\\'9\\' | b\\'a\\' ... b\\'z\\' | b\\'A\\' ... b\\'Z\\' | b\\'_\\' => true,\\n   |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/expand.rs:88:30\\n   |\\n88 |         b\\'0\\' ... b\\'9\\' | b\\'a\\' ... b\\'z\\' | b\\'A\\' ... b\\'Z\\' | b\\'_\\' => true,\\n   |                              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/expand.rs:88:46\\n   |\\n88 |         b\\'0\\' ... b\\'9\\' | b\\'a\\' ... b\\'z\\' | b\\'A\\' ... b\\'Z\\' | b\\'_\\' => true,\\n   |                                              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: variable does not need to be mutable\\n --> src/backtrack.rs:103:13\\n  |\\n10|         let mut cache = &mut cache.backtrack;\\n  |             ----^^^^^\\n  |             |\\n  |             help: remove this `mut`\\n  |\\n  = note: `#[warn(unused_mut)]` on by default\\n\\nwarning: variable does not need to be mutable\\n   --> src/dfa.rs:465:13\\n    |\\n465 |         let mut cache = &mut cache.dfa;\\n    |             ----^^^^^\\n    |             |\\n    |             help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/dfa.rs:498:13\\n    |\\n498 |         let mut cache = &mut cache.dfa_reverse;\\n    |             ----^^^^^\\n    |             |\\n    |             help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/dfa.rs:532:13\\n    |\\n532 |         let mut cache = &mut cache.dfa;\\n    |             ----^^^^^\\n    |             |\\n    |             help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/pikevm.rs:112:13\\n    |\\n112 |         let mut cache = &mut cache.pikevm;\\n    |             ----^^^^^\\n    |             |\\n    |             help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/pikevm.rs:344:25\\n    |\\n344 |                     let mut t = &mut nlist.caps(ip);\\n    |                         ----^\\n    |                         |\\n    |                         help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n    --> src/re_bytes.rs:1013:9\\n     |\\n1013 |     let mut dst = &mut dst[dst_len..dst_len + src.len()];\\n     |         ----^^^\\n     |         |\\n     |         help: remove this `mut`\\n\\nwarning: type alias is never used: `InstHoleIdx`\\n --> src/compile.rs:29:1\\n  |\\n29| type InstHoleIdx = InstPtr;\\n  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(dead_code)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp9yT7YM/self-profile-output\\\"; prefix is \\\"regex-26043\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `regex`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=3627094585;;instructions:u;864776848;100.00;1.09;insn per cycle\\n3321896353;;cycles:u;864776848;100.00;3.841;GHz\\n864.780785;;task-clock;864780785;100.00;1.000;CPUs utilized\\n864.779852;;cpu-clock;864780785;100.00;1.000;CPUs utilized\\n18811;;faults;864780785;100.00;0.022;M/sec\\n166276;;max-rss;3;100.00\\n0.908615231;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"regression-31157":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking kernel32-sys v0.2.2\\n    Checking thread-id v2.0.0\\n    Checking thread_local v0.2.7\\n    Checking regex v0.1.80\\n    Checking peruse v0.3.0 (https://github.com/DanSimon/peruse.git#dbfc0054)\\n    Checking parser v0.1.0 (/tmp/.tmp0dKwJe)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/lexer.rs:11:23\\n  |\\n11| pub fn token() -> Box<Parser<I=str, O=Vec<Token>>> {\\n  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=str, O=Vec<Token>>`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/parser.rs:7:25\\n  |\\n7 | pub fn program() -> Box<Parser<I=[Token], O=Block>> {\\n  |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Block>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/parser.rs:9:28\\n  |\\n9 |     fn expression() -> Box<Parser<I=[Token], O=Expr>> {\\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Expr>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/parser.rs:84:32\\n   |\\n84 |         fn code_block() -> Box<Parser<I=[Token], O=Block>> {\\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Block>`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/parser.rs:90:29\\n   |\\n90 |         fn if_stmt() -> Box<Parser<I=[Token], O=Statement>> {\\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Statement>`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp0dKwJe/self-profile-output\\\"; prefix is \\\"parser-26204\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `parser`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=1081542535;;instructions:u;213169209;100.00;1.37;insn per cycle\\n789441212;;cycles:u;213169209;100.00;3.704;GHz\\n213.148576;;task-clock;213148576;100.00;0.999;CPUs utilized\\n213.146853;;cpu-clock;213148576;100.00;0.999;CPUs utilized\\n8061;;faults;213148576;100.00;0.038;M/sec\\n122180;;max-rss;3;100.00\\n0.249200307;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"ripgrep":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: /tmp/.tmp7QqpUt/Cargo.toml: An explicit [[test]] section is specified in Cargo.toml which currently\\ndisables Cargo from automatically inferring other test targets.\\nThis inference behavior will change in the Rust 2018 edition and the following\\nfiles will be included as a test target:\\n\\n* /tmp/.tmp7QqpUt/tests/hay.rs\\n* /tmp/.tmp7QqpUt/tests/workdir.rs\\n\\nThis is likely to break cargo build or cargo test as these files may not be\\nready to be compiled as a test target today. You can future-proof yourself\\nand disable this warning by adding `autotests = false` to your [package]\\nsection. You may also move the files to a location where Cargo would not\\nautomatically infer them to be a target, such as in subfolders.\\n\\nFor more information on this warning you can consult\\nhttps://github.com/rust-lang/cargo/issues/5330\\nwarning: Pattern matching for Cargo\\'s include/exclude fields has changed and file `HomebrewFormula/ripgrep-bin.rb` is now excluded.\\nSee <https://github.com/rust-lang/cargo/issues/4268> for more information.\\n    Checking termcolor v0.3.6 (/tmp/.tmp7QqpUt/termcolor)\\n    Checking regex v1.0.0\\n   Compiling ripgrep v0.8.1 (/tmp/.tmp7QqpUt)\\n    Checking globset v0.4.0 (/tmp/.tmp7QqpUt/globset)\\n    Checking grep v0.1.8 (/tmp/.tmp7QqpUt/grep)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> grep/src/lib.rs:54:32\\n  |\\n54|     fn cause(&self) -> Option<&error::Error> {\\n  |                                ^^^^^^^^^^^^ help: use `dyn`: `dyn error::Error`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\n    Checking ignore v0.4.2 (/tmp/.tmp7QqpUt/ignore)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> ignore/src/walk.rs:465:9\\n  |\\n46|         Fn(&OsStr, &OsStr) -> cmp::Ordering + Send + Sync + \\'static\\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr, &OsStr) -> cmp::Ordering + Send + Sync + \\'static`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> ignore/src/walk.rs:965:31\\n    |\\n965 |     ) where F: FnMut() -> Box<FnMut(Result<DirEntry, Error>) -> WalkState + Send + \\'static> {\\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Result<DirEntry, Error>) -> WalkState + Send + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> ignore/src/walk.rs:1111:12\\n     |\\n1111 |     f: Box<FnMut(Result<DirEntry, Error>) -> WalkState + Send + \\'static>,\\n     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(Result<DirEntry, Error>) -> WalkState + Send + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/config.rs:58:37\\n  |\\n58| ) -> Result<(Vec<OsString>, Vec<Box<Error>>)> {\\n  |                                     ^^^^^ help: use `dyn`: `dyn Error`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/config.rs:79:37\\n   |\\n79 | ) -> Result<(Vec<OsString>, Vec<Box<Error>>)> {\\n   |                                     ^^^^^ help: use `dyn`: `dyn Error`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/printer.rs:543:32\\n    |\\n543 |     fn cause(&self) -> Option<&error::Error> {\\n    |                                ^^^^^^^^^^^^ help: use `dyn`: `dyn error::Error`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/search_stream.rs:46:32\\n   |\\n46 |     fn cause(&self) -> Option<&StdError> {\\n   |                                ^^^^^^^^ help: use `dyn`: `dyn StdError`\\n\\nwarning: `...` range patterns are deprecated\\n --> src/unescape.rs:40:24\\n  |\\n40|                     \\'0\\'...\\'9\\' | \\'A\\'...\\'F\\' | \\'a\\'...\\'f\\' => {\\n  |                        ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/unescape.rs:40:36\\n   |\\n40 |                     \\'0\\'...\\'9\\' | \\'A\\'...\\'F\\' | \\'a\\'...\\'f\\' => {\\n   |                                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/unescape.rs:40:48\\n   |\\n40 |                     \\'0\\'...\\'9\\' | \\'A\\'...\\'F\\' | \\'a\\'...\\'f\\' => {\\n   |                                                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/unescape.rs:51:24\\n   |\\n51 |                     \\'0\\'...\\'9\\' | \\'A\\'...\\'F\\' | \\'a\\'...\\'f\\' => {\\n   |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/unescape.rs:51:36\\n   |\\n51 |                     \\'0\\'...\\'9\\' | \\'A\\'...\\'F\\' | \\'a\\'...\\'f\\' => {\\n   |                                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n  --> src/unescape.rs:51:48\\n   |\\n51 |                     \\'0\\'...\\'9\\' | \\'A\\'...\\'F\\' | \\'a\\'...\\'f\\' => {\\n   |                                                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> src/main.rs:54:44\\n   |\\n54 | pub type Result<T> = result::Result<T, Box<Error>>;\\n   |                                            ^^^^^ help: use `dyn`: `dyn Error`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp7QqpUt/self-profile-output\\\"; prefix is \\\"rg-26641\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `ripgrep`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=3089473834;;instructions:u;687504704;100.00;1.18;insn per cycle\\n2624460001;;cycles:u;687504704;100.00;3.817;GHz\\n687.504591;;task-clock;687504591;100.00;1.000;CPUs utilized\\n687.504794;;cpu-clock;687504591;100.00;1.000;CPUs utilized\\n17405;;faults;687504591;100.00;0.025;M/sec\\n164228;;max-rss;3;100.00\\n0.740519262;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"script-servo":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling dom_struct v0.0.1 (/tmp/.tmpKiipn6/components/dom_struct)\\n   Compiling script_plugins v0.0.1 (/tmp/.tmpKiipn6/components/script_plugins)\\n    Checking hashglobe v0.1.0 (/tmp/.tmpKiipn6/components/hashglobe)\\n    Checking servo_allocator v0.0.1 (/tmp/.tmpKiipn6/components/allocator)\\n   Compiling xml-rs v0.6.1\\n    Checking servo_arc v0.0.1 (/tmp/.tmpKiipn6/components/servo_arc)\\n    Checking heapsize v0.4.1\\n    Checking servo_rand v0.0.1 (/tmp/.tmpKiipn6/components/rand)\\n    Checking rayon-core v1.2.1\\n   Compiling style v0.0.1 (/tmp/.tmpKiipn6/components/style)\\n    Checking lru_cache v0.0.1 (/tmp/.tmpKiipn6/components/lru_cache)\\n   Compiling unicase v1.4.2\\n   Compiling serde_derive_internals v0.16.0\\n   Compiling cssparser v0.22.1 (/tmp/.tmpKiipn6/rust-cssparser)\\n   Compiling synstructure v0.5.2\\n   Compiling domobject_derive v0.0.1 (/tmp/.tmpKiipn6/components/domobject_derive)\\n   Compiling mozjs_sys v0.50.0 (https://github.com/servo/mozjs#9290ed09)\\n    Checking libz-sys v1.0.18\\n   Compiling fontsan v0.4.0 (https://github.com/servo/fontsan#29e879c8)\\n    Checking miniz-sys v0.1.10\\n    Checking tinyfiledialogs v2.5.9\\n    Checking rayon v0.8.2\\n   Compiling phf_shared v0.7.21\\n   Compiling darling_macro v0.2.0\\n    Checking fallible v0.0.1 (/tmp/.tmpKiipn6/components/fallible)\\n   Compiling malloc_size_of_derive v0.0.1 (/tmp/.tmpKiipn6/components/malloc_size_of_derive)\\n   Compiling deny_public_fields v0.0.1 (/tmp/.tmpKiipn6/components/deny_public_fields)\\n   Compiling jstraceable_derive v0.0.1 (/tmp/.tmpKiipn6/components/jstraceable_derive)\\n    Checking servo-freetype-sys v4.0.3\\n    Checking expat-sys v2.1.5\\n    Checking angle v0.5.0 (https://github.com/servo/angle?branch=servo#e61c04e7)\\n    Checking x11 v2.16.0\\n   Compiling phf_generator v0.7.21\\n    Checking phf v0.7.21\\n    Checking jpeg-decoder v0.1.13\\n   Compiling darling v0.2.0\\n   Compiling gl_generator v0.5.5\\n    Checking freetype v0.3.0\\n    Checking servo-fontconfig-sys v4.0.4\\n   Compiling serde_derive v1.0.17\\n   Compiling string_cache_codegen v0.4.0\\n   Compiling phf_codegen v0.7.21\\n   Compiling js v0.1.7 (https://github.com/servo/rust-mozjs#1dc8aab2)\\n   Compiling style_derive v0.0.1 (/tmp/.tmpKiipn6/components/style_derive)\\n    Checking servo-fontconfig v0.2.1\\n    Checking caseless v0.1.3\\n    Checking image v0.16.0\\n   Compiling cssparser-macros v0.3.0\\n   Compiling selectors v0.19.0 (/tmp/.tmpKiipn6/components/selectors)\\n   Compiling mime_guess v1.8.2\\n    Checking harfbuzz-sys v0.1.15\\n   Compiling string_cache v0.6.2\\n   Compiling markup5ever v0.6.2\\n   Compiling servo_atoms v0.0.1 (/tmp/.tmpKiipn6/components/atoms)\\n    Checking unicode-script v0.1.1\\n   Compiling gleam v0.4.10\\n   Compiling offscreen_gl_context v0.12.1\\n    Checking serde v1.0.17\\n    Checking bincode v0.9.2\\n    Checking uuid v0.5.1\\n    Checking unicode-bidi v0.3.4\\n    Checking euclid v0.15.4\\n    Checking app_units v0.5.6\\n    Checking nonzero v0.0.1 (/tmp/.tmpKiipn6/components/nonzero)\\n    Checking serde_bytes v0.10.2\\n    Checking rust-webvr-api v0.9.2\\n    Checking idna v0.1.4\\n    Checking ipc-channel v0.9.0\\n   Compiling serde_json v1.0.5\\n    Checking webrender_api v0.53.1 (https://github.com/servo/webrender#07405419)\\n    Checking url v1.7.2\\n    Checking xml5ever v0.11.1\\n    Checking html5ever v0.21.0\\n    Checking url_serde v0.2.0\\n    Checking hyper v0.10.13\\n   Compiling script v0.0.1 (/tmp/.tmpKiipn6/components/script)\\n    Checking hyper_serde v0.7.0\\n    Checking malloc_size_of v0.0.1 (/tmp/.tmpKiipn6/components/malloc_size_of)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/malloc_size_of/lib.rs:73:27\\n  |\\n73| type VoidPtrToBoolFnMut = FnMut(*const c_void) -> bool;\\n  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(*const c_void) -> bool`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\n    Checking servo_url v0.0.1 (/tmp/.tmpKiipn6/components/url)\\n    Checking servo_geometry v0.0.1 (/tmp/.tmpKiipn6/components/geometry)\\n    Checking range v0.0.1 (/tmp/.tmpKiipn6/components/range)\\n    Checking msg v0.0.1 (/tmp/.tmpKiipn6/components/msg)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/selectors/context.rs:114:48\\n  |\\n11|     pub pseudo_element_matching_fn: Option<&\\'a Fn(&Impl::PseudoElement) -> bool>,\\n  |                                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&Impl::PseudoElement) -> bool`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\n    Checking servo_config v0.0.1 (/tmp/.tmpKiipn6/components/config)\\n    Checking gfx_traits v0.0.1 (/tmp/.tmpKiipn6/components/gfx_traits)\\n    Checking webvr_traits v0.0.1 (/tmp/.tmpKiipn6/components/webvr_traits)\\n    Checking devtools_traits v0.0.1 (/tmp/.tmpKiipn6/components/devtools_traits)\\n    Checking net_traits v0.0.1 (/tmp/.tmpKiipn6/components/net_traits)\\n    Checking profile_traits v0.0.1 (/tmp/.tmpKiipn6/components/profile_traits)\\n    Checking canvas_traits v0.0.1 (/tmp/.tmpKiipn6/components/canvas_traits)\\n    Checking bluetooth_traits v0.0.1 (/tmp/.tmpKiipn6/components/bluetooth_traits)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/net_traits/lib.rs:525:51\\n  |\\n52|     pub fn from_ssl_error(url: &ServoUrl, error: &Error) -> Self {\\n  |                                                   ^^^^^ help: use `dyn`: `dyn Error`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\n    Checking style_traits v0.0.1 (/tmp/.tmpKiipn6/components/style_traits)\\nwarning: unused doc comment\\n --> components/style/bloom.rs:17:1\\n  |\\n17| / /// Bloom filters are large allocations, so we store them in thread-local storage\\n18| | /// such that they can be reused across style traversals. StyleBloom is responsible\\n19| | /// for ensuring that the bloom filter is zeroed when it is dropped.\\n  | |____________________________________________________________________^\\n20| / thread_local!(static BLOOM_KEY: Arc<AtomicRefCell<BloomFilter>> =\\n21| |               Arc::new(AtomicRefCell::new(BloomFilter::new())));\\n  | |________________________________________________________________- rustdoc does not generate documentation for macro expansions\\n  |\\n  = note: `#[warn(unused_doc_comments)]` on by default\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> components/style/font_face.rs:64:1\\n  |\\n64| / /// A font-display value for a @font-face rule.\\n65| | /// The font-display descriptor determines how a font face is displayed based\\n66| | /// on whether and when it is downloaded and ready to use.\\n  | |__________________________________________________________^\\n67| / define_css_keyword_enum!(FontDisplay:\\n68| |                          \\\"auto\\\" => Auto,\\n69| |                          \\\"block\\\" => Block,\\n70| |                          \\\"swap\\\" => Swap,\\n71| |                          \\\"fallback\\\" => Fallback,\\n72| |                          \\\"optional\\\" => Optional);\\n  | |_________________________________________________- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> components/style/font_face.rs:367:1\\n  |\\n36|   /// css-name rust_identifier: Type = initial_value,\\n  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n36|   #[cfg(feature = \\\"gecko\\\")]\\n36| / font_face_descriptors! {\\n37| |     mandatory descriptors = [\\n37| |         /// The name of this font face\\n37| |         \\\"font-family\\\" family / mFamily: FamilyName,\\n... |\\n40| |     ]\\n40| | }\\n  | |_- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> components/style/stylist.rs:63:1\\n  |\\n63|   /// A cache of computed user-agent data, to be shared across documents.\\n  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n64| / lazy_static! {\\n65| |     static ref UA_CASCADE_DATA_CACHE: Mutex<UserAgentCascadeDataCache> =\\n66| |         Mutex::new(UserAgentCascadeDataCache::new());\\n67| | }\\n  | |_- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> components/style/values/generics/image.rs:99:1\\n  |\\n99|   /// <https://drafts.csswg.org/css-images/#typedef-extent-keyword>\\n  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n10| / define_css_keyword_enum!(ShapeExtent:\\n10| |     \\\"closest-side\\\" => ClosestSide,\\n10| |     \\\"farthest-side\\\" => FarthestSide,\\n10| |     \\\"closest-corner\\\" => ClosestCorner,\\n... |\\n10| |     \\\"cover\\\" => Cover\\n10| | );\\n  | |__- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> components/style/values/specified/background.rs:48:1\\n  |\\n48|   /// One of the keywords for `background-repeat`.\\n  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n49| / define_css_keyword_enum! { RepeatKeyword:\\n50| |     \\\"repeat\\\" => Repeat,\\n51| |     \\\"space\\\" => Space,\\n52| |     \\\"round\\\" => Round,\\n53| |     \\\"no-repeat\\\" => NoRepeat\\n54| | }\\n  | |_- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\n    Checking script_traits v0.0.1 (/tmp/.tmpKiipn6/components/script_traits)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/script_traits/lib.rs:547:26\\n  |\\n54|     pub image_cache: Arc<ImageCache>,\\n  |                          ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script_traits/lib.rs:875:21\\n    |\\n875 | impl fmt::Debug for Painter {\\n    |                     ^^^^^^^ help: use `dyn`: `dyn Painter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/style/animation.rs:470:61\\n  |\\n47| ...                   font_metrics_provider: &FontMetricsProvider)\\n  |                                               ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/animation.rs:609:59\\n    |\\n609 | ...                   font_metrics_provider: &FontMetricsProvider) {\\n    |                                               ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: `...` range patterns are deprecated\\n --> components/style/attr.rs:508:16\\n  |\\n50|             \\'0\\'...\\'9\\' => Ok((ch as u8) - b\\'0\\'),\\n  |                ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/style/attr.rs:509:16\\n    |\\n509 |             \\'a\\'...\\'f\\' => Ok((ch as u8) - b\\'a\\' + 10),\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/style/attr.rs:510:16\\n    |\\n510 |             \\'A\\'...\\'F\\' => Ok((ch as u8) - b\\'A\\' + 10),\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/style/attr.rs:550:17\\n    |\\n550 |         Some(\\'0\\'...\\'9\\') => {},\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/style/attr.rs:565:16\\n    |\\n565 |             \\'0\\'...\\'9\\' => continue,\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/context.rs:159:46\\n    |\\n159 |     pub registered_speculative_painters: &\\'a RegisteredSpeculativePainters,\\n    |                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn RegisteredSpeculativePainters`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/context.rs:835:43\\n    |\\n835 |     fn get(&self, name: &Atom) -> Option<&RegisteredSpeculativePainter>;\\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn RegisteredSpeculativePainter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/style/encoding_support.rs:61:53\\n   |\\n61 |                          stylesheet_loader: Option<&StylesheetLoader>,\\n   |                                                     ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/style/encoding_support.rs:86:60\\n   |\\n86 | ...                   stylesheet_loader: Option<&StylesheetLoader>,\\n   |                                                  ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/matching.rs:436:53\\n    |\\n436 | ...                   font_metrics: &::font_metrics::FontMetricsProvider) {\\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn (::font_metrics::FontMetricsProvider)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylist.rs:660:24\\n    |\\n660 |         font_metrics: &FontMetricsProvider\\n    |                        ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylist.rs:688:24\\n    |\\n688 |         font_metrics: &FontMetricsProvider,\\n    |                        ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylist.rs:825:24\\n    |\\n825 |         font_metrics: &FontMetricsProvider,\\n    |                        ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylist.rs:826:30\\n    |\\n826 |         matching_fn: Option<&Fn(&PseudoElement) -> bool>,\\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&PseudoElement) -> bool`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylist.rs:859:24\\n    |\\n859 |         font_metrics: &FontMetricsProvider\\n    |                        ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylist.rs:907:24\\n    |\\n907 |         font_metrics: &FontMetricsProvider,\\n    |                        ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylist.rs:994:30\\n    |\\n994 |         matching_fn: Option<&Fn(&PseudoElement) -> bool>,\\n    |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&PseudoElement) -> bool`\\n\\nwarning: the item `ElementState` is imported redundantly\\n --> components/style/servo/selector_parser.rs:331:13\\n  |\\n13| use element_state::{DocumentState, ElementState};\\n  |                                    ------------ the item `ElementState` is already imported here\\n...\\n33|         use element_state::ElementState;\\n  |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n  --> components/style/str.rs:64:12\\n   |\\n64 |         \\'0\\'...\\'9\\' => true,\\n   |            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/style/str.rs:159:46\\n    |\\n159 |     if input.bytes().any(|c| matches!(c, b\\'A\\'...b\\'Z\\')) {\\n    |                                              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: the item `CascadeFlags` is imported redundantly\\n   --> components/style/style_adjuster.rs:499:13\\n    |\\n9   | use properties::{self, CascadeFlags, ComputedValues, StyleBuilder};\\n    |                        ------------ the item `CascadeFlags` is already imported here\\n...\\n499 |         use properties::CascadeFlags;\\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylesheets/rule_list.rs:109:36\\n    |\\n109 |                    loader: Option<&StylesheetLoader>)\\n    |                                    ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylesheets/rule_list.rs:120:36\\n    |\\n120 |                    loader: Option<&StylesheetLoader>)\\n    |                                    ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/style/stylesheets/rule_parser.rs:43:28\\n   |\\n43 |     pub loader: Option<&\\'a StylesheetLoader>,\\n   |                            ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/style/stylesheets/stylesheet.rs:77:36\\n   |\\n77 |         stylesheet_loader: Option<&StylesheetLoader>,\\n   |                                    ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylesheets/stylesheet.rs:315:58\\n    |\\n315 | ...                   stylesheet_loader: Option<&StylesheetLoader>,\\n    |                                                  ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylesheets/stylesheet.rs:353:36\\n    |\\n353 |         stylesheet_loader: Option<&StylesheetLoader>,\\n    |                                    ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylesheets/stylesheet.rs:423:36\\n    |\\n423 |         stylesheet_loader: Option<&StylesheetLoader>,\\n    |                                    ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/stylesheets/mod.rs:236:25\\n    |\\n236 |         loader: Option<&StylesheetLoader>\\n    |                         ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetLoader`\\n\\nwarning: the item `StyleResolverForElement` is imported redundantly\\n   --> components/style/traversal.rs:384:9\\n    |\\n15  | use style_resolver::{PseudoElementResolution, StyleResolverForElement};\\n    |                                               ----------------------- the item `StyleResolverForElement` is already imported here\\n...\\n384 |     use style_resolver::StyleResolverForElement;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: the item `TraversalFlags` is imported redundantly\\n   --> components/style/traversal.rs:476:9\\n    |\\n17  | use traversal_flags::TraversalFlags;\\n    |     ------------------------------- the item `TraversalFlags` is already imported here\\n...\\n476 |     use traversal_flags::TraversalFlags;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/style/values/computed/mod.rs:112:36\\n    |\\n112 |     pub font_metrics_provider: &\\'a FontMetricsProvider,\\n    |                                    ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: the item `Length` is imported redundantly\\n   --> components/style/values/specified/mod.rs:605:13\\n    |\\n43  | pub use self::length::{FontRelativeLength, Length, LengthOrNone, LengthOrNumber};\\n    |                                            ------ the item `Length` is already imported here\\n...\\n605 |         use values::specified::Length;\\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n     --> /tmp/.tmpKiipn6/target/debug/build/style-42c3024c25726764/out/properties.rs:77974:29\\n      |\\n77974 |     font_metrics_provider: &FontMetricsProvider,\\n      |                             ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n     --> /tmp/.tmpKiipn6/target/debug/build/style-42c3024c25726764/out/properties.rs:78050:29\\n      |\\n78050 |     font_metrics_provider: &FontMetricsProvider,\\n      |                             ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FontMetricsProvider`\\n\\nwarning: unused logical operation that must be used\\n --> components/style/servo/restyle_damage.rs:197:5\\n  |\\n19| /     add_if_not_equal!(old, new, damage,\\n19| |                       [ServoRestyleDamage::REPAINT, ServoRestyleDamage::REPOSITION,\\n19| |                       ServoRestyleDamage::STORE_OVERFLOW, ServoRestyleDamage::BUBBLE_ISIZES,\\n20| |                       ServoRestyleDamage::REFLOW_OUT_OF_FLOW, ServoRestyleDamage::REFLOW,\\n... |\\n28| |         get_inheritedbox.visibility\\n28| |     ]);\\n  | |______^\\n  |\\n  = note: `#[warn(unused_must_use)]` on by default\\n\\n    Checking gfx v0.0.1 (/tmp/.tmpKiipn6/components/gfx)\\nwarning: `...` range patterns are deprecated\\n --> components/gfx/text/util.rs:111:19\\n  |\\n11|         \\'\\\\u{202A}\\'...\\'\\\\u{202E}\\' => true,\\n  |                   ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/gfx/text/util.rs:112:19\\n    |\\n112 |         \\'\\\\u{2066}\\'...\\'\\\\u{2069}\\' => true,\\n    |                   ^^^ help: use `..=` for an inclusive range\\n\\n    Checking metrics v0.0.1 (/tmp/.tmpKiipn6/components/metrics)\\n    Checking script_layout_interface v0.0.1 (/tmp/.tmpKiipn6/components/script_layout_interface)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/script_layout_interface/message.rs:45:23\\n  |\\n45|     GetRPC(Sender<Box<LayoutRPC + Send>>),\\n  |                       ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn LayoutRPC + Send`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script_layout_interface/message.rs:97:40\\n   |\\n97 |     RegisterPaint(Atom, Vec<Atom>, Box<Painter>),\\n   |                                        ^^^^^^^ help: use `dyn`: `dyn Painter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script_layout_interface/message.rs:199:26\\n    |\\n199 |     pub image_cache: Arc<ImageCache>,\\n    |                          ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: unused doc comment\\n --> components/script/dom/webglrenderingcontext.rs:136:1\\n  |\\n13|   /// Set of bitflags for texture unpacking (texImage2d, etc...)\\n  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n13| / bitflags! {\\n13| |     #[derive(JSTraceable, MallocSizeOf)]\\n13| |     struct TextureUnpacking: u8 {\\n14| |         const FLIP_Y_AXIS = 0x01;\\n... |\\n14| |     }\\n14| | }\\n  | |_- rustdoc does not generate documentation for macro expansions\\n  |\\n  = note: `#[warn(unused_doc_comments)]` on by default\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/script/task.rs:64:21\\n  |\\n64| impl fmt::Debug for TaskBox {\\n  |                     ^^^^^^^ help: use `dyn`: `dyn TaskBox`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/abstractworkerglobalscope.rs:26:28\\n   |\\n26 |     fn clone(&self) -> Box<ScriptChan + Send> {\\n   |                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/abstractworkerglobalscope.rs:50:28\\n   |\\n50 |     fn clone(&self) -> Box<ScriptChan + Send> {\\n   |                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/bindings/root.rs:82:45\\n   |\\n82 |     fn stable_trace_object(&self) -> *const JSTraceable;\\n   |                                             ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/bindings/root.rs:89:52\\n   |\\n89 |     fn stable_trace_object<\\'a>(&\\'a self) -> *const JSTraceable {\\n   |                                                    ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/root.rs:202:34\\n    |\\n202 |     roots: UnsafeCell<Vec<*const JSTraceable>>,\\n    |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/root.rs:234:42\\n    |\\n234 |     unsafe fn root(&self, object: *const JSTraceable) {\\n    |                                          ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/root.rs:240:44\\n    |\\n240 |     unsafe fn unroot(&self, object: *const JSTraceable) {\\n    |                                            ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: `...` range patterns are deprecated\\n --> components/script/dom/bindings/str.rs:94:14\\n  |\\n94|             0...31 | 127 => false, // CTLs\\n  |              ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/trace.rs:344:51\\n    |\\n344 | unsafe_no_jsmanaged_fields!(Image, ImageMetadata, ImageCache, PendingImageId);\\n    |                                                   ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/trace.rs:450:33\\n    |\\n450 | unsafe impl JSTraceable for Box<LayoutRPC + Send + \\'static> {\\n    |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn LayoutRPC + Send + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/trace.rs:674:21\\n    |\\n674 |     set: Vec<*const JSTraceable>,\\n    |                     ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/trace.rs:690:40\\n    |\\n690 |     unsafe fn remove(traceable: *const JSTraceable) {\\n    |                                        ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/bindings/trace.rs:703:37\\n    |\\n703 |     unsafe fn add(traceable: *const JSTraceable) {\\n    |                                     ^^^^^^^^^^^ help: use `dyn`: `dyn JSTraceable`\\n\\nwarning: `...` range patterns are deprecated\\n  --> components/script/dom/bindings/xmlname.rs:98:16\\n   |\\n98 |             \\'A\\'...\\'Z\\' |\\n   |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:100:16\\n    |\\n100 |             \\'a\\'...\\'z\\' |\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:101:21\\n    |\\n101 |             \\'\\\\u{C0}\\'...\\'\\\\u{D6}\\' |\\n    |                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:102:21\\n    |\\n102 |             \\'\\\\u{D8}\\'...\\'\\\\u{F6}\\' |\\n    |                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:103:21\\n    |\\n103 |             \\'\\\\u{F8}\\'...\\'\\\\u{2FF}\\' |\\n    |                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:104:22\\n    |\\n104 |             \\'\\\\u{370}\\'...\\'\\\\u{37D}\\' |\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:105:22\\n    |\\n105 |             \\'\\\\u{37F}\\'...\\'\\\\u{1FFF}\\' |\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:106:23\\n    |\\n106 |             \\'\\\\u{200C}\\'...\\'\\\\u{200D}\\' |\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:107:23\\n    |\\n107 |             \\'\\\\u{2070}\\'...\\'\\\\u{218F}\\' |\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:108:23\\n    |\\n108 |             \\'\\\\u{2C00}\\'...\\'\\\\u{2FEF}\\' |\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:109:23\\n    |\\n109 |             \\'\\\\u{3001}\\'...\\'\\\\u{D7FF}\\' |\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:110:23\\n    |\\n110 |             \\'\\\\u{F900}\\'...\\'\\\\u{FDCF}\\' |\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:111:23\\n    |\\n111 |             \\'\\\\u{FDF0}\\'...\\'\\\\u{FFFD}\\' |\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:112:24\\n    |\\n112 |             \\'\\\\u{10000}\\'...\\'\\\\u{EFFFF}\\' => true,\\n    |                        ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:122:16\\n    |\\n122 |             \\'0\\'...\\'9\\' |\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:124:22\\n    |\\n124 |             \\'\\\\u{300}\\'...\\'\\\\u{36F}\\' |\\n    |                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/bindings/xmlname.rs:125:23\\n    |\\n125 |             \\'\\\\u{203F}\\'...\\'\\\\u{2040}\\' => true,\\n    |                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/canvasrenderingcontext2d.rs:72:22\\n   |\\n72 |     image_cache: Arc<ImageCache>,\\n   |                      ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/canvasrenderingcontext2d.rs:127:43\\n    |\\n127 |                          image_cache: Arc<ImageCache>,\\n    |                                           ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:48:35\\n   |\\n48 |     pub fn as_specific(&self) -> &SpecificCSSRule {\\n   |                                   ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:50:22\\n   |\\n50 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:52:22\\n   |\\n52 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:54:22\\n   |\\n54 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:56:22\\n   |\\n56 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:58:22\\n   |\\n58 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:60:22\\n   |\\n60 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:62:22\\n   |\\n62 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:64:22\\n   |\\n64 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/cssrule.rs:66:22\\n   |\\n66 |             rule as &SpecificCSSRule\\n   |                      ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SpecificCSSRule`\\n\\nwarning: unnecessary parentheses around function argument\\n --> components/script/dom/cssrulelist.rs:106:12\\n  |\\n10|         Ok((idx))\\n  |            ^^^^^ help: remove these parentheses\\n  |\\n  = note: `#[warn(unused_parens)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/dedicatedworkerglobalscope.rs:92:24\\n   |\\n92 |     parent_sender: Box<ScriptChan + Send>,\\n   |                        ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/dedicatedworkerglobalscope.rs:100:41\\n    |\\n100 |                      parent_sender: Box<ScriptChan + Send>,\\n    |                                         ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/dedicatedworkerglobalscope.rs:127:35\\n    |\\n127 |                parent_sender: Box<ScriptChan + Send>,\\n    |                                   ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/dedicatedworkerglobalscope.rs:158:48\\n    |\\n158 | ...                   parent_sender: Box<ScriptChan + Send>,\\n    |                                          ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/dedicatedworkerglobalscope.rs:262:38\\n    |\\n262 |     pub fn script_chan(&self) -> Box<ScriptChan + Send> {\\n    |                                      ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/dedicatedworkerglobalscope.rs:269:43\\n    |\\n269 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                           ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/dedicatedworkerglobalscope.rs:269:67\\n    |\\n269 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                                                   ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptPort + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2319:37\\n     |\\n2319 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n     |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2320:40\\n     |\\n2320 |         Some(self.upcast::<Node>() as &VirtualMethods)\\n     |                                        ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2675:51\\n     |\\n2675 |     pub fn as_maybe_activatable(&self) -> Option<&Activatable> {\\n     |                                                   ^^^^^^^^^^^ help: use `dyn`: `dyn Activatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2679:34\\n     |\\n2679 |                 Some(element as &Activatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Activatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2683:34\\n     |\\n2683 |                 Some(element as &Activatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Activatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2687:34\\n     |\\n2687 |                 Some(element as &Activatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Activatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2691:34\\n     |\\n2691 |                 Some(element as &Activatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Activatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2706:50\\n     |\\n2706 |     pub fn as_stylesheet_owner(&self) -> Option<&StylesheetOwner> {\\n     |                                                  ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetOwner`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2708:31\\n     |\\n2708 |             return Some(s as &StylesheetOwner)\\n     |                               ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetOwner`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2712:31\\n     |\\n2712 |             return Some(l as &StylesheetOwner)\\n     |                               ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn StylesheetOwner`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2719:51\\n     |\\n2719 |     pub fn as_maybe_validatable(&self) -> Option<&Validatable> {\\n     |                                                   ^^^^^^^^^^^ help: use `dyn`: `dyn Validatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2723:34\\n     |\\n2723 |                 Some(element as &Validatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Validatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2727:34\\n     |\\n2727 |                 Some(element as &Validatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Validatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2731:34\\n     |\\n2731 |                 Some(element as &Validatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Validatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2735:34\\n     |\\n2735 |                 Some(element as &Validatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Validatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/element.rs:2739:34\\n     |\\n2739 |                 Some(element as &Validatable)\\n     |                                  ^^^^^^^^^^^ help: use `dyn`: `dyn Validatable`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/eventtarget.rs:646:37\\n    |\\n646 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/globalscope.rs:357:38\\n    |\\n357 |     pub fn script_chan(&self) -> Box<ScriptChan + Send> {\\n    |                                      ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/globalscope.rs:510:43\\n    |\\n510 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                           ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/globalscope.rs:510:67\\n    |\\n510 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                                                   ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptPort + Send`\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/headers.rs:462:13\\n    |\\n462 |         0x21...0x7E => true,\\n    |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/headers.rs:470:13\\n    |\\n470 |         0x80...0xFF => true,\\n    |             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlanchorelement.rs:93:37\\n   |\\n93 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlanchorelement.rs:94:47\\n   |\\n94 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlappletelement.rs:52:37\\n   |\\n52 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlappletelement.rs:53:47\\n   |\\n53 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: `...` range patterns are deprecated\\n  --> components/script/dom/htmlareaelement.rs:79:25\\n   |\\n79 |                     b\\'0\\'...b\\'9\\' | b\\'.\\' | b\\'-\\' | b\\'E\\' | b\\'e\\' => break,\\n   |                         ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlareaelement.rs:262:37\\n    |\\n262 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlareaelement.rs:263:47\\n    |\\n263 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlbaseelement.rs:97:37\\n   |\\n97 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlbaseelement.rs:98:47\\n   |\\n98 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlbodyelement.rs:130:37\\n    |\\n130 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlbodyelement.rs:131:47\\n    |\\n131 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlbuttonelement.rs:180:37\\n    |\\n180 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlbuttonelement.rs:181:47\\n    |\\n181 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlcanvaselement.rs:369:37\\n    |\\n369 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlcanvaselement.rs:370:47\\n    |\\n370 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlcollection.rs:58:17\\n   |\\n58 |     filter: Box<CollectionFilter + \\'static>,\\n   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlcollection.rs:70:51\\n   |\\n70 |     pub fn new_inherited(root: &Node, filter: Box<CollectionFilter + \\'static>) -> HTMLCollection {\\n   |                                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlcollection.rs:84:58\\n   |\\n84 |     pub fn new(window: &Window, root: &Node, filter: Box<CollectionFilter + \\'static>) -> DomRoot<HTMLCollection> {\\n   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlcollection.rs:90:31\\n   |\\n90 |                   filter: Box<CollectionFilter + \\'static>) -> DomRoot<HTMLCollection> {\\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmldetailselement.rs:58:37\\n   |\\n58 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmldetailselement.rs:59:47\\n   |\\n59 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlelement.rs:554:37\\n    |\\n554 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlelement.rs:555:43\\n    |\\n555 |         Some(self.upcast::<Element>() as &VirtualMethods)\\n    |                                           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlfieldsetelement.rs:87:37\\n   |\\n87 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlfieldsetelement.rs:88:47\\n   |\\n88 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlfontelement.rs:70:37\\n   |\\n70 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlfontelement.rs:71:47\\n   |\\n71 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlformcontrolscollection.rs:26:47\\n   |\\n26 |     fn new_inherited(root: &Node, filter: Box<CollectionFilter + \\'static>) -> HTMLFormControlsCollection {\\n   |                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlformcontrolscollection.rs:32:58\\n   |\\n32 |     pub fn new(window: &Window, root: &Node, filter: Box<CollectionFilter + \\'static>)\\n   |                                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1039:37\\n     |\\n1039 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n     |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1040:47\\n     |\\n1040 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n     |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1069:58\\n     |\\n1069 |     fn as_maybe_form_control<\\'a>(&\\'a self) -> Option<&\\'a FormControl>;\\n     |                                                          ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1073:58\\n     |\\n1073 |     fn as_maybe_form_control<\\'a>(&\\'a self) -> Option<&\\'a FormControl> {\\n     |                                                          ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1078:72\\n     |\\n1078 |                 Some(self.downcast::<HTMLButtonElement>().unwrap() as &FormControl)\\n     |                                                                        ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1081:74\\n     |\\n1081 |                 Some(self.downcast::<HTMLFieldSetElement>().unwrap() as &FormControl)\\n     |                                                                          ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1084:71\\n     |\\n1084 |                 Some(self.downcast::<HTMLImageElement>().unwrap() as &FormControl)\\n     |                                                                       ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1087:71\\n     |\\n1087 |                 Some(self.downcast::<HTMLInputElement>().unwrap() as &FormControl)\\n     |                                                                       ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1090:71\\n     |\\n1090 |                 Some(self.downcast::<HTMLLabelElement>().unwrap() as &FormControl)\\n     |                                                                       ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1093:72\\n     |\\n1093 |                 Some(self.downcast::<HTMLLegendElement>().unwrap() as &FormControl)\\n     |                                                                        ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1096:72\\n     |\\n1096 |                 Some(self.downcast::<HTMLObjectElement>().unwrap() as &FormControl)\\n     |                                                                        ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1099:72\\n     |\\n1099 |                 Some(self.downcast::<HTMLOutputElement>().unwrap() as &FormControl)\\n     |                                                                        ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1102:72\\n     |\\n1102 |                 Some(self.downcast::<HTMLSelectElement>().unwrap() as &FormControl)\\n     |                                                                        ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/htmlformelement.rs:1105:74\\n     |\\n1105 |                 Some(self.downcast::<HTMLTextAreaElement>().unwrap() as &FormControl)\\n     |                                                                          ^^^^^^^^^^^ help: use `dyn`: `dyn FormControl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlheadelement.rs:71:37\\n   |\\n71 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlheadelement.rs:72:47\\n   |\\n72 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlhrelement.rs:91:37\\n   |\\n91 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlhrelement.rs:92:47\\n   |\\n92 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmliframeelement.rs:716:37\\n    |\\n716 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmliframeelement.rs:717:47\\n    |\\n717 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlimageelement.rs:139:22\\n    |\\n139 |     image_cache: Arc<ImageCache>,\\n    |                      ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/htmlimageelement.rs:168:16\\n    |\\n168 |             200...299 => Ok(()), // HTTP ok status codes\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlimageelement.rs:193:60\\n    |\\n193 |         fn add_cache_listener_for_element(image_cache: Arc<ImageCache>,\\n    |                                                            ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlimageelement.rs:961:37\\n    |\\n961 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlimageelement.rs:962:47\\n    |\\n962 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlinputelement.rs:865:37\\n    |\\n865 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlinputelement.rs:866:47\\n    |\\n866 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: unnecessary trailing semicolon\\n --> components/script/dom/htmlinputelement.rs:1239:57\\n  |\\n12|                     let group = self.radio_group_name();;\\n  |                                                         ^ help: remove this semicolon\\n  |\\n  = note: `#[warn(redundant_semicolon)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmllabelelement.rs:122:37\\n    |\\n122 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmllabelelement.rs:123:47\\n    |\\n123 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmllegendelement.rs:49:37\\n   |\\n49 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmllegendelement.rs:50:47\\n   |\\n50 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmllielement.rs:49:37\\n   |\\n49 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmllielement.rs:50:47\\n   |\\n50 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmllinkelement.rs:171:37\\n    |\\n171 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmllinkelement.rs:172:47\\n    |\\n172 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlmediaelement.rs:912:37\\n    |\\n912 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlmediaelement.rs:913:47\\n    |\\n913 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlmetaelement.rs:163:37\\n    |\\n163 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlmetaelement.rs:164:47\\n    |\\n164 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlobjectelement.rs:108:37\\n    |\\n108 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlobjectelement.rs:109:47\\n    |\\n109 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmloptgroupelement.rs:55:37\\n   |\\n55 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmloptgroupelement.rs:56:47\\n   |\\n56 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmloptionelement.rs:182:37\\n    |\\n182 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmloptionelement.rs:183:47\\n    |\\n183 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmloptionscollection.rs:31:62\\n   |\\n31 |     fn new_inherited(select: &HTMLSelectElement, filter: Box<CollectionFilter + \\'static>) -> HTMLOptionsCollection {\\n   |                                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmloptionscollection.rs:37:73\\n   |\\n37 |     pub fn new(window: &Window, select: &HTMLSelectElement, filter: Box<CollectionFilter + \\'static>)\\n   |                                                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn CollectionFilter + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmloutputelement.rs:67:47\\n   |\\n67 |     fn super_type<\\'b>(&\\'b self) -> Option<&\\'b VirtualMethods> {\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmloutputelement.rs:68:47\\n   |\\n68 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: `...` range patterns are deprecated\\n   --> components/script/dom/htmlscriptelement.rs:181:16\\n    |\\n181 |             200...299 => Ok(()), // HTTP ok status codes\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlscriptelement.rs:650:37\\n    |\\n650 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlscriptelement.rs:651:47\\n    |\\n651 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlselectelement.rs:344:37\\n    |\\n344 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlselectelement.rs:345:47\\n    |\\n345 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlsourceelement.rs:43:37\\n   |\\n43 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmlsourceelement.rs:44:47\\n   |\\n44 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlstyleelement.rs:146:37\\n    |\\n146 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmlstyleelement.rs:147:47\\n    |\\n147 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltablecellelement.rs:129:37\\n    |\\n129 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltablecellelement.rs:130:47\\n    |\\n130 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltableelement.rs:420:37\\n    |\\n420 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltableelement.rs:421:47\\n    |\\n421 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltablerowelement.rs:157:37\\n    |\\n157 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltablerowelement.rs:158:47\\n    |\\n158 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmltablesectionelement.rs:96:37\\n   |\\n96 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmltablesectionelement.rs:97:47\\n   |\\n97 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmltemplateelement.rs:59:37\\n   |\\n59 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmltemplateelement.rs:60:47\\n   |\\n60 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltextareaelement.rs:301:37\\n    |\\n301 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n    |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/htmltextareaelement.rs:302:47\\n    |\\n302 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n    |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmltitleelement.rs:53:37\\n   |\\n53 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/htmltitleelement.rs:54:47\\n   |\\n54 |         Some(self.upcast::<HTMLElement>() as &VirtualMethods)\\n   |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/node.rs:2496:37\\n     |\\n2496 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n     |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/node.rs:2497:47\\n     |\\n2497 |         Some(self.upcast::<EventTarget>() as &VirtualMethods)\\n     |                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/paintworkletglobalscope.rs:72:22\\n   |\\n72 |     image_cache: Arc<ImageCache>,\\n   |                      ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/paintworkletglobalscope.rs:121:38\\n    |\\n121 |     pub fn image_cache(&self) -> Arc<ImageCache> {\\n    |                                      ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/paintworkletglobalscope.rs:324:42\\n    |\\n324 |     fn painter(&self, name: Atom) -> Box<Painter> {\\n    |                                          ^^^^^^^ help: use `dyn`: `dyn Painter`\\n\\nwarning: unnecessary parentheses around function argument\\n   --> components/script/dom/performanceobserver.rs:109:24\\n    |\\n109 |             return Err((Error::Type(\\\"entryTypes cannot be empty\\\".to_string())));\\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/promisenativehandler.rs:21:25\\n   |\\n21 |     resolve: Option<Box<Callback>>,\\n   |                         ^^^^^^^^ help: use `dyn`: `dyn Callback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/promisenativehandler.rs:22:24\\n   |\\n22 |     reject: Option<Box<Callback>>,\\n   |                        ^^^^^^^^ help: use `dyn`: `dyn Callback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/promisenativehandler.rs:27:36\\n   |\\n27 |                resolve: Option<Box<Callback>>,\\n   |                                    ^^^^^^^^ help: use `dyn`: `dyn Callback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/promisenativehandler.rs:28:35\\n   |\\n28 |                reject: Option<Box<Callback>>)\\n   |                                   ^^^^^^^^ help: use `dyn`: `dyn Callback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/promisenativehandler.rs:37:39\\n   |\\n37 |     fn callback(callback: &Option<Box<Callback>>, cx: *mut JSContext, v: HandleValue) {\\n   |                                       ^^^^^^^^ help: use `dyn`: `dyn Callback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/serviceworkerglobalscope.rs:63:28\\n   |\\n63 |     fn clone(&self) -> Box<ScriptChan + Send> {\\n   |                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/serviceworkerglobalscope.rs:315:38\\n    |\\n315 |     pub fn script_chan(&self) -> Box<ScriptChan + Send> {\\n    |                                      ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/svgelement.rs:30:37\\n   |\\n30 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/svgelement.rs:31:43\\n   |\\n31 |         Some(self.upcast::<Element>() as &VirtualMethods)\\n   |                                           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/svggraphicselement.rs:35:37\\n   |\\n35 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/svggraphicselement.rs:36:46\\n   |\\n36 |         Some(self.upcast::<SVGElement>() as &VirtualMethods)\\n   |                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/svgsvgelement.rs:69:37\\n   |\\n69 |     fn super_type(&self) -> Option<&VirtualMethods> {\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/svgsvgelement.rs:70:54\\n   |\\n70 |         Some(self.upcast::<SVGGraphicsElement>() as &VirtualMethods)\\n   |                                                      ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/testbinding.rs:732:57\\n    |\\n732 |             fn new(callback: Rc<SimpleCallback>) -> Box<Callback> {\\n    |                                                         ^^^^^^^^ help: use `dyn`: `dyn Callback`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/virtualmethods.rs:63:37\\n   |\\n63 |     fn super_type(&self) -> Option<&VirtualMethods>;\\n   |                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:152:36\\n    |\\n152 | pub fn vtable_for(node: &Node) -> &VirtualMethods {\\n    |                                    ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:155:63\\n    |\\n155 |             node.downcast::<HTMLAnchorElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:158:63\\n    |\\n158 |             node.downcast::<HTMLAppletElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:161:61\\n    |\\n161 |             node.downcast::<HTMLAreaElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:164:61\\n    |\\n164 |             node.downcast::<HTMLBaseElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:167:61\\n    |\\n167 |             node.downcast::<HTMLBodyElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:170:63\\n    |\\n170 |             node.downcast::<HTMLButtonElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:173:63\\n    |\\n173 |             node.downcast::<HTMLCanvasElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:176:64\\n    |\\n176 |             node.downcast::<HTMLDetailsElement>().unwrap() as &VirtualMethods\\n    |                                                                ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:179:65\\n    |\\n179 |             node.downcast::<HTMLFieldSetElement>().unwrap() as &VirtualMethods\\n    |                                                                 ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:182:61\\n    |\\n182 |             node.downcast::<HTMLFontElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:185:61\\n    |\\n185 |             node.downcast::<HTMLFormElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:188:61\\n    |\\n188 |             node.downcast::<HTMLHeadElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:191:59\\n    |\\n191 |             node.downcast::<HTMLHRElement>().unwrap() as &VirtualMethods\\n    |                                                           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:194:62\\n    |\\n194 |             node.downcast::<HTMLImageElement>().unwrap() as &VirtualMethods\\n    |                                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:197:63\\n    |\\n197 |             node.downcast::<HTMLIFrameElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:200:62\\n    |\\n200 |             node.downcast::<HTMLInputElement>().unwrap() as &VirtualMethods\\n    |                                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:203:62\\n    |\\n203 |             node.downcast::<HTMLLabelElement>().unwrap() as &VirtualMethods\\n    |                                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:206:59\\n    |\\n206 |             node.downcast::<HTMLLIElement>().unwrap() as &VirtualMethods\\n    |                                                           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:209:61\\n    |\\n209 |             node.downcast::<HTMLLinkElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:212:62\\n    |\\n212 |             node.downcast::<HTMLMediaElement>().unwrap() as &VirtualMethods\\n    |                                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:215:61\\n    |\\n215 |             node.downcast::<HTMLMetaElement>().unwrap() as &VirtualMethods\\n    |                                                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:218:63\\n    |\\n218 |             node.downcast::<HTMLObjectElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:221:65\\n    |\\n221 |             node.downcast::<HTMLOptGroupElement>().unwrap() as &VirtualMethods\\n    |                                                                 ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:224:63\\n    |\\n224 |             node.downcast::<HTMLOptionElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:227:63\\n    |\\n227 |             node.downcast::<HTMLOutputElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:230:63\\n    |\\n230 |             node.downcast::<HTMLScriptElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:233:63\\n    |\\n233 |             node.downcast::<HTMLSelectElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:236:63\\n    |\\n236 |             node.downcast::<HTMLSourceElement>().unwrap() as &VirtualMethods\\n    |                                                               ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:239:62\\n    |\\n239 |             node.downcast::<HTMLStyleElement>().unwrap() as &VirtualMethods\\n    |                                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:242:62\\n    |\\n242 |             node.downcast::<HTMLTableElement>().unwrap() as &VirtualMethods\\n    |                                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:245:66\\n    |\\n245 |             node.downcast::<HTMLTableCellElement>().unwrap() as &VirtualMethods\\n    |                                                                  ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:248:65\\n    |\\n248 |             node.downcast::<HTMLTableRowElement>().unwrap() as &VirtualMethods\\n    |                                                                 ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:251:69\\n    |\\n251 |             node.downcast::<HTMLTableSectionElement>().unwrap() as &VirtualMethods\\n    |                                                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:254:65\\n    |\\n254 |             node.downcast::<HTMLTemplateElement>().unwrap() as &VirtualMethods\\n    |                                                                 ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:257:65\\n    |\\n257 |             node.downcast::<HTMLTextAreaElement>().unwrap() as &VirtualMethods\\n    |                                                                 ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:260:62\\n    |\\n260 |             node.downcast::<HTMLTitleElement>().unwrap() as &VirtualMethods\\n    |                                                              ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:265:59\\n    |\\n265 |             node.downcast::<SVGSVGElement>().unwrap() as &VirtualMethods\\n    |                                                           ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:268:53\\n    |\\n268 |             node.downcast::<Element>().unwrap() as &VirtualMethods\\n    |                                                     ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:271:57\\n    |\\n271 |             node.downcast::<HTMLElement>().unwrap() as &VirtualMethods\\n    |                                                         ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/virtualmethods.rs:274:22\\n    |\\n274 |             node as &VirtualMethods\\n    |                      ^^^^^^^^^^^^^^ help: use `dyn`: `dyn VirtualMethods`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/webgl_extensions/extensions.rs:88:48\\n   |\\n88 |     extensions: DomRefCell<HashMap<String, Box<WebGLExtensionWrapper>>>,\\n   |                                                ^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn WebGLExtensionWrapper`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/webgl_extensions/extensions.rs:248:32\\n    |\\n248 |   type WebGLQueryParameterFunc = Fn(*mut JSContext, &WebGLRenderingContext)\\n    |  ________________________________^\\n249 | |                                -> Result<JSVal, WebGLError>;\\n    | |___________________________________________________________^\\nhelp: use `dyn`\\n    |\\n248 | type WebGLQueryParameterFunc = dyn Fn(*mut JSContext, &WebGLRenderingContext)\\n249 |                                -> Result<JSVal, WebGLError>;\\n    |\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/webgl_extensions/wrapper.rs:26:26\\n   |\\n26 |     fn as_any(&self) -> &Any;\\n   |                          ^^^ help: use `dyn`: `dyn Any`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/webgl_extensions/wrapper.rs:85:36\\n   |\\n85 |     fn as_any<\\'a>(&\\'a self) -> &\\'a Any {\\n   |                                    ^^^ help: use `dyn`: `dyn Any`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/window.rs:179:22\\n    |\\n179 |     image_cache: Arc<ImageCache>,\\n    |                      ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/window.rs:220:21\\n    |\\n220 |     layout_rpc: Box<LayoutRPC + Send + \\'static>,\\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn LayoutRPC + Send + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/window.rs:332:56\\n    |\\n332 |     pub fn history_traversal_task_source(&self) -> Box<ScriptChan + Send> {\\n    |                                                        ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/window.rs:352:43\\n    |\\n352 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                           ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/window.rs:352:67\\n    |\\n352 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                                                   ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptPort + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/window.rs:357:38\\n    |\\n357 |     pub fn image_cache(&self) -> Arc<ImageCache> {\\n    |                                      ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/window.rs:1369:30\\n     |\\n1369 |     pub fn layout(&self) -> &LayoutRPC {\\n     |                              ^^^^^^^^^ help: use `dyn`: `dyn LayoutRPC`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/window.rs:1764:26\\n     |\\n1764 |         image_cache: Arc<ImageCache>,\\n     |                          ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> components/script/dom/window.rs:1786:29\\n     |\\n1786 |         let layout_rpc: Box<LayoutRPC + Send> = {\\n     |                             ^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn LayoutRPC + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/workerglobalscope.rs:358:38\\n    |\\n358 |     pub fn script_chan(&self) -> Box<ScriptChan + Send> {\\n    |                                      ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/workerglobalscope.rs:382:43\\n    |\\n382 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                           ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/workerglobalscope.rs:382:67\\n    |\\n382 |     pub fn new_script_pair(&self) -> (Box<ScriptChan + Send>, Box<ScriptPort + Send>) {\\n    |                                                                   ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptPort + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/dom/workletglobalscope.rs:99:22\\n   |\\n99 |         painter: Box<Painter>,\\n   |                      ^^^^^^^ help: use `dyn`: `dyn Painter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/dom/workletglobalscope.rs:154:26\\n    |\\n154 |     pub image_cache: Arc<ImageCache>,\\n    |                          ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: `...` range patterns are deprecated\\n    --> components/script/dom/xmlhttprequest.rs:1487:14\\n     |\\n1487 |             0...31 | 127 => false, // CTLs\\n     |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/layout_image.rs:23:16\\n   |\\n23 |     cache: Arc<ImageCache>,\\n   |                ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/layout_image.rs:52:42\\n   |\\n52 | ...                   cache: Arc<ImageCache>) {\\n   |                                  ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/script_runtime.rs:48:41\\n   |\\n48 |     Task(ScriptThreadEventCategory, Box<TaskBox>, Option<PipelineId>),\\n   |                                         ^^^^^^^ help: use `dyn`: `dyn TaskBox`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/script_runtime.rs:67:28\\n   |\\n67 |     fn clone(&self) -> Box<ScriptChan + Send>;\\n   |                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:234:22\\n    |\\n234 |         painter: Box<Painter>\\n    |                      ^^^^^^^ help: use `dyn`: `dyn Painter`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:240:44\\n    |\\n240 | impl OpaqueSender<CommonScriptMsg> for Box<ScriptChan + Send> {\\n    |                                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:293:28\\n    |\\n293 |     fn clone(&self) -> Box<ScriptChan + Send> {\\n    |                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:307:28\\n    |\\n307 |     fn clone(&self) -> Box<ScriptChan + Send> {\\n    |                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:404:22\\n    |\\n404 |     image_cache: Arc<ImageCache>,\\n    |                      ^^^^^^^^^^ help: use `dyn`: `dyn ImageCache`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:421:33\\n    |\\n421 |     networking_task_sender: Box<ScriptChan>,\\n    |                                 ^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:425:35\\n    |\\n425 |     file_reading_task_sender: Box<ScriptChan>,\\n    |                                   ^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:427:43\\n    |\\n427 |     performance_timeline_task_sender: Box<ScriptChan>,\\n    |                                           ^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> components/script/script_thread.rs:735:22\\n    |\\n735 |         painter: Box<Painter>)\\n    |                      ^^^^^^^ help: use `dyn`: `dyn Painter`\\n\\nwarning: `...` range patterns are deprecated\\n    --> components/script/script_thread.rs:1759:55\\n     |\\n1759 |                     Some(Metadata { status: Some((204 ... 205, _)), .. }) => {\\n     |                                                       ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/task_source/file_reading.rs:14:42\\n   |\\n14 | pub struct FileReadingTaskSource(pub Box<ScriptChan + Send + \\'static>, pub PipelineId);\\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/task_source/history_traversal.rs:17:28\\n   |\\n17 |     fn clone(&self) -> Box<ScriptChan + Send> {\\n   |                            ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/task_source/networking.rs:11:41\\n   |\\n11 | pub struct NetworkingTaskSource(pub Box<ScriptChan + Send + \\'static>, pub PipelineId);\\n   |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send + \\'static`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> components/script/task_source/performance_timeline.rs:19:50\\n   |\\n19 | pub struct PerformanceTimelineTaskSource(pub Box<ScriptChan + Send + \\'static>, pub PipelineId);\\n   |                                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ScriptChan + Send + \\'static`\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/interface.rs:270:107\\n  |\\n27|             HTMLElementBinding::GetConstructorObject(window.get_cx(), global_object.handle(), constructor.handle_mut());\\n  |                                                                                                           ^^^^^^^^^^\\n  |\\n  = note: `#[warn(tyvar_behind_raw_pointer)]` on by default\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/interface.rs:362:71\\n  |\\n36|         create_unscopable_object(cx, unscopable_names, unscopable_obj.handle_mut());\\n  |                                                                       ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/interface.rs:417:21\\n  |\\n41|         constructor.set(JS_GetFunctionObject(fun));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/iterable.rs:81:34\\n  |\\n81|             dict_return(cx, rval.handle_mut(), true, value.handle())\\n  |                                  ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/proxyhandler.rs:36:40\\n  |\\n36|     get_expando_object(object, expando.handle_mut());\\n  |                                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/proxyhandler.rs:77:41\\n  |\\n77|     if !GetObjectProto(cx, proxy, proto.handle_mut()) {\\n  |                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/proxyhandler.rs:99:46\\n  |\\n99|     ensure_expando_object(cx, proxy, expando.handle_mut());\\n  |                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/proxyhandler.rs:110:39\\n  |\\n11|     get_expando_object(proxy, expando.handle_mut());\\n  |                                       ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/utils.rs:138:42\\n  |\\n13|     if !JS_GetPrototype(cx, proxy, proto.handle_mut()) || proto.is_null() {\\n  |                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/bindings/utils.rs:291:42\\n  |\\n29|     if !JS_GetPrototype(cx, proxy, proto.handle_mut()) {\\n  |                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/customelementregistry.rs:444:78\\n  |\\n44|             if unsafe { !Construct1(cx, constructor.handle(), &args, element.handle_mut()) } {\\n  |                                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/customelementregistry.rs:554:87\\n  |\\n55|         if unsafe { !Construct1(cx, constructor_val.handle(), &args, construct_result.handle_mut()) } {\\n  |                                                                                       ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/eventtarget.rs:433:37\\n  |\\n43| ...                   handler.handle_mut())\\n  |                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/filereader.rs:265:84\\n  |\\n26|             assert!(ArrayBuffer::create(cx, CreateWith::Slice(bytes), array_buffer.handle_mut()).is_ok());\\n  |                                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/gamepad.rs:98:84\\n  |\\n98|             let _ = Float64Array::create(cx, CreateWith::Slice(&state.axes), array.handle_mut());\\n  |                                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/imagedata.rs:47:59\\n  |\\n47|             Uint8ClampedArray::create(cx, data, js_object.handle_mut()).unwrap();\\n  |                                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/imagedata.rs:107:74\\n  |\\n10|             Uint8ClampedArray::create(cx, CreateWith::Length(len), array.handle_mut()).unwrap();\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/paintworkletglobalscope.rs:241:83\\n  |\\n24|                 unsafe { Construct1(cx, class_constructor.handle(), &args, result.handle_mut()); }\\n  |                                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/promise.rs:77:70\\n  |\\n77|             Promise::create_js_promise(cx, HandleObject::null(), obj.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/textencoder.rs:54:79\\n  |\\n54|         assert!(Uint8Array::create(cx, CreateWith::Slice(&encoded), js_object.handle_mut()).is_ok());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/vreyeparameters.rs:48:91\\n  |\\n48|             let _ = Float32Array::create(cx, CreateWith::Slice(&parameters.offset), array.handle_mut());\\n  |                                                                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/vrframedata.rs:78:72\\n  |\\n78|         let _ = Float32Array::create(cx, CreateWith::Slice(src), array.handle_mut());\\n  |                                                                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/vrpose.rs:36:81\\n  |\\n36|                 let _ = Float32Array::create(cx, CreateWith::Slice(data), array.handle_mut());\\n  |                                                                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/vrstageparameters.rs:44:70\\n  |\\n44| ...                   array.handle_mut());\\n  |                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> components/script/dom/websocket.rs:517:70\\n  |\\n51| ...                   array_buffer.handle_mut())\\n  |                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: unreachable statement\\n --> components/script/script_thread.rs:966:9\\n  |\\n96|             panic!();\\n  |             --------- any code following this expression is unreachable\\n96|         };\\n96|         debug!(\\\"Got event.\\\");\\n  |         ^^^^^^^^^^^^^^^^^^^^^ unreachable statement\\n  |\\n  = note: `#[warn(unreachable_code)]` on by default\\n  = note: this warning originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/AttrBinding.rs:967:37\\n  |\\n96|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/AttrBinding.rs:1136:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/AttrBinding.rs:1146:21\\n  |\\n11|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/AttrBinding.rs:1157:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/AttrBinding.rs:1180:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:636:37\\n  |\\n63|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:649:24\\n  |\\n64|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:649:37\\n  |\\n64|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:764:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:774:62\\n  |\\n77|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:785:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:795:68\\n  |\\n79|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:809:51\\n  |\\n80| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:813:24\\n  |\\n81|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BeforeUnloadEventBinding.rs:813:37\\n  |\\n81|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BlobBinding.rs:739:37\\n  |\\n73|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BlobBinding.rs:935:38\\n  |\\n93|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BlobBinding.rs:945:21\\n  |\\n94|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BlobBinding.rs:956:49\\n  |\\n95| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BlobBinding.rs:979:51\\n  |\\n97| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:899:37\\n  |\\n89|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:912:24\\n  |\\n91|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:912:37\\n  |\\n91|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:1098:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:1109:62\\n  |\\n11|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:1120:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:1130:68\\n  |\\n11|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:1144:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:1148:24\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothAdvertisingEventBinding.rs:1148:37\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothBinding.rs:1046:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothBinding.rs:1180:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothBinding.rs:1191:68\\n  |\\n11|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothBinding.rs:1202:49\\n  |\\n12| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothBinding.rs:1212:74\\n  |\\n12|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothBinding.rs:1226:51\\n  |\\n12| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothCharacteristicPropertiesBinding.rs:800:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothCharacteristicPropertiesBinding.rs:959:38\\n  |\\n95|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothCharacteristicPropertiesBinding.rs:970:21\\n  |\\n97|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothCharacteristicPropertiesBinding.rs:981:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothCharacteristicPropertiesBinding.rs:1004:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothDeviceBinding.rs:783:37\\n  |\\n78|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothDeviceBinding.rs:945:38\\n  |\\n94|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothDeviceBinding.rs:956:68\\n  |\\n95|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothDeviceBinding.rs:967:49\\n  |\\n96| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothDeviceBinding.rs:977:74\\n  |\\n97|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothDeviceBinding.rs:991:51\\n  |\\n99| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothPermissionResultBinding.rs:724:37\\n  |\\n72|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothPermissionResultBinding.rs:829:38\\n  |\\n82|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothPermissionResultBinding.rs:840:73\\n  |\\n84|     PermissionStatusBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothPermissionResultBinding.rs:851:49\\n  |\\n85| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothPermissionResultBinding.rs:861:79\\n  |\\n86|     PermissionStatusBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothPermissionResultBinding.rs:875:51\\n  |\\n87| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTCharacteristicBinding.rs:952:37\\n  |\\n95|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTCharacteristicBinding.rs:1146:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTCharacteristicBinding.rs:1157:68\\n  |\\n11|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTCharacteristicBinding.rs:1168:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTCharacteristicBinding.rs:1178:74\\n  |\\n11|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTCharacteristicBinding.rs:1192:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTDescriptorBinding.rs:707:37\\n  |\\n70|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTDescriptorBinding.rs:854:38\\n  |\\n85|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTDescriptorBinding.rs:865:21\\n  |\\n86|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTDescriptorBinding.rs:876:49\\n  |\\n87| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTDescriptorBinding.rs:899:51\\n  |\\n89| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServerBinding.rs:761:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServerBinding.rs:917:38\\n  |\\n91|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServerBinding.rs:928:21\\n  |\\n92|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServerBinding.rs:939:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServerBinding.rs:962:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServiceBinding.rs:996:37\\n  |\\n99|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServiceBinding.rs:1183:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServiceBinding.rs:1194:68\\n  |\\n11|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServiceBinding.rs:1205:49\\n  |\\n12| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServiceBinding.rs:1215:74\\n  |\\n12|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothRemoteGATTServiceBinding.rs:1229:51\\n  |\\n12| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothUUIDBinding.rs:680:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothUUIDBinding.rs:803:38\\n  |\\n80|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothUUIDBinding.rs:814:21\\n  |\\n81|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothUUIDBinding.rs:825:49\\n  |\\n82| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BluetoothUUIDBinding.rs:848:51\\n  |\\n84| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BrowserElementBinding.rs:1198:67\\n  |\\n11|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/BrowserElementBinding.rs:1208:53\\n  |\\n12|         return self.Call(s.get_context(), thisObjJS.handle());\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSBinding.rs:652:38\\n  |\\n65|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSBinding.rs:662:21\\n  |\\n66|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSBinding.rs:673:49\\n  |\\n67| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSBinding.rs:696:51\\n  |\\n69| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSConditionRuleBinding.rs:652:38\\n  |\\n65|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSConditionRuleBinding.rs:662:72\\n  |\\n66|     CSSGroupingRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSConditionRuleBinding.rs:673:49\\n  |\\n67| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSConditionRuleBinding.rs:683:78\\n  |\\n68|     CSSGroupingRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSConditionRuleBinding.rs:697:51\\n  |\\n69| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSFontFaceRuleBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSFontFaceRuleBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSFontFaceRuleBinding.rs:631:64\\n  |\\n63|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSFontFaceRuleBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSFontFaceRuleBinding.rs:652:70\\n  |\\n65|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSFontFaceRuleBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSGroupingRuleBinding.rs:761:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSGroupingRuleBinding.rs:771:64\\n  |\\n77|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSGroupingRuleBinding.rs:782:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSGroupingRuleBinding.rs:792:70\\n  |\\n79|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSGroupingRuleBinding.rs:806:51\\n  |\\n80| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSImportRuleBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSImportRuleBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSImportRuleBinding.rs:631:64\\n  |\\n63|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSImportRuleBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSImportRuleBinding.rs:652:70\\n  |\\n65|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSImportRuleBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframeRuleBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframeRuleBinding.rs:674:38\\n  |\\n67|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframeRuleBinding.rs:684:64\\n  |\\n68|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframeRuleBinding.rs:695:49\\n  |\\n69| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframeRuleBinding.rs:705:70\\n  |\\n70|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframeRuleBinding.rs:719:51\\n  |\\n71| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframesRuleBinding.rs:783:37\\n  |\\n78|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframesRuleBinding.rs:932:38\\n  |\\n93|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframesRuleBinding.rs:942:64\\n  |\\n94|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframesRuleBinding.rs:953:49\\n  |\\n95| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframesRuleBinding.rs:963:70\\n  |\\n96|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSKeyframesRuleBinding.rs:977:51\\n  |\\n97| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSMediaRuleBinding.rs:605:37\\n  |\\n60|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSMediaRuleBinding.rs:708:38\\n  |\\n70|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSMediaRuleBinding.rs:718:73\\n  |\\n71|     CSSConditionRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSMediaRuleBinding.rs:729:49\\n  |\\n72| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSMediaRuleBinding.rs:739:79\\n  |\\n73|     CSSConditionRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSMediaRuleBinding.rs:753:51\\n  |\\n75| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSNamespaceRuleBinding.rs:599:37\\n  |\\n59|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSNamespaceRuleBinding.rs:709:38\\n  |\\n70|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSNamespaceRuleBinding.rs:719:64\\n  |\\n71|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSNamespaceRuleBinding.rs:730:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSNamespaceRuleBinding.rs:740:70\\n  |\\n74|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSNamespaceRuleBinding.rs:754:51\\n  |\\n75| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleBinding.rs:758:38\\n  |\\n75|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleBinding.rs:768:21\\n  |\\n76|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleBinding.rs:779:49\\n  |\\n77| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleBinding.rs:802:51\\n  |\\n80| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:637:43\\n  |\\n63|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:664:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:704:47\\n  |\\n70|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:744:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:763:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:899:38\\n  |\\n89|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:909:21\\n  |\\n90|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:920:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSRuleListBinding.rs:943:51\\n  |\\n94| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:30484:43\\n  |\\n30| 4       get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:30511:43\\n  |\\n30| 1       get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:30551:47\\n  |\\n30| 1           get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:30591:43\\n  |\\n30| 1       get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:30610:37\\n  |\\n30| 0   GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:33706:38\\n  |\\n33| 6   GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:33716:21\\n  |\\n33| 6   prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:33727:49\\n  |\\n33| 7..                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleDeclarationBinding.rs:33750:51\\n  |\\n33| 0..                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleRuleBinding.rs:671:37\\n  |\\n67|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleRuleBinding.rs:782:38\\n  |\\n78|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleRuleBinding.rs:792:64\\n  |\\n79|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleRuleBinding.rs:803:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleRuleBinding.rs:813:70\\n  |\\n81|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleRuleBinding.rs:827:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleSheetBinding.rs:694:37\\n  |\\n69|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleSheetBinding.rs:827:38\\n  |\\n82|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleSheetBinding.rs:837:67\\n  |\\n83|     StyleSheetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleSheetBinding.rs:848:49\\n  |\\n84| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleSheetBinding.rs:858:73\\n  |\\n85|     StyleSheetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleSheetBinding.rs:872:51\\n  |\\n87| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleValueBinding.rs:570:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleValueBinding.rs:675:38\\n  |\\n67|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleValueBinding.rs:686:21\\n  |\\n68|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleValueBinding.rs:697:49\\n  |\\n69| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSStyleValueBinding.rs:720:51\\n  |\\n72| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSSupportsRuleBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSSupportsRuleBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSSupportsRuleBinding.rs:631:73\\n  |\\n63|     CSSConditionRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSSupportsRuleBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSSupportsRuleBinding.rs:652:79\\n  |\\n65|     CSSConditionRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSSupportsRuleBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSViewportRuleBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSViewportRuleBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSViewportRuleBinding.rs:631:64\\n  |\\n63|     CSSRuleBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSViewportRuleBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSViewportRuleBinding.rs:652:70\\n  |\\n65|     CSSRuleBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CSSViewportRuleBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasGradientBinding.rs:602:37\\n  |\\n60|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasGradientBinding.rs:707:38\\n  |\\n70|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasGradientBinding.rs:717:21\\n  |\\n71|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasGradientBinding.rs:728:49\\n  |\\n72| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasGradientBinding.rs:751:51\\n  |\\n75| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasPatternBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasPatternBinding.rs:619:38\\n  |\\n61|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasPatternBinding.rs:629:21\\n  |\\n62|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasPatternBinding.rs:640:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasPatternBinding.rs:663:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasRenderingContext2DBinding.rs:4174:37\\n  |\\n41|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasRenderingContext2DBinding.rs:4683:38\\n  |\\n46|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasRenderingContext2DBinding.rs:4693:21\\n  |\\n46|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasRenderingContext2DBinding.rs:4704:49\\n  |\\n47| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CanvasRenderingContext2DBinding.rs:4727:51\\n  |\\n47| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CharacterDataBinding.rs:1379:38\\n  |\\n13|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CharacterDataBinding.rs:1389:61\\n  |\\n13|     NodeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CharacterDataBinding.rs:1400:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CharacterDataBinding.rs:1410:67\\n  |\\n14|     NodeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CharacterDataBinding.rs:1424:51\\n  |\\n14| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ClientBinding.rs:667:37\\n  |\\n66|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ClientBinding.rs:784:38\\n  |\\n78|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ClientBinding.rs:795:21\\n  |\\n79|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ClientBinding.rs:806:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ClientBinding.rs:829:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:779:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:792:24\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:792:37\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:967:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:977:62\\n  |\\n97|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:988:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:998:68\\n  |\\n99|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:1012:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:1016:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CloseEventBinding.rs:1016:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CommentBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CommentBinding.rs:654:38\\n  |\\n65|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CommentBinding.rs:664:70\\n  |\\n66|     CharacterDataBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CommentBinding.rs:675:49\\n  |\\n67| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CommentBinding.rs:685:76\\n  |\\n68|     CharacterDataBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CommentBinding.rs:699:51\\n  |\\n69| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:681:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:694:24\\n  |\\n69|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:694:37\\n  |\\n69|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:856:38\\n  |\\n85|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:867:64\\n  |\\n86|     UIEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:878:49\\n  |\\n87| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:888:70\\n  |\\n88|     UIEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:902:51\\n  |\\n90| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:906:24\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CompositionEventBinding.rs:906:37\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ConsoleBinding.rs:813:44\\n  |\\n81|     GetConstructorObject(cx, global, proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ConsoleBinding.rs:826:69\\n  |\\n82| ...                   sStaticMethods, b\\\"console\\\\0\\\", namespace.handle_mut());\\n  |                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CryptoBinding.rs:589:37\\n  |\\n58|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CryptoBinding.rs:694:38\\n  |\\n69|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CryptoBinding.rs:704:21\\n  |\\n70|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CryptoBinding.rs:715:49\\n  |\\n71| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CryptoBinding.rs:738:51\\n  |\\n73| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomElementRegistryBinding.rs:784:37\\n  |\\n78|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomElementRegistryBinding.rs:905:38\\n  |\\n90|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomElementRegistryBinding.rs:916:21\\n  |\\n91|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomElementRegistryBinding.rs:927:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomElementRegistryBinding.rs:950:51\\n  |\\n95| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:735:37\\n  |\\n73|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:748:24\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:748:37\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:931:38\\n  |\\n93|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:941:62\\n  |\\n94|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:952:49\\n  |\\n95| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:962:68\\n  |\\n96|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:976:51\\n  |\\n97| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:980:24\\n  |\\n98|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/CustomEventBinding.rs:980:37\\n  |\\n98|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMExceptionBinding.rs:684:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMExceptionBinding.rs:855:38\\n  |\\n85|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMExceptionBinding.rs:865:21\\n  |\\n86|     prototype_proto.set(JS_GetErrorPrototype(cx));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMExceptionBinding.rs:876:49\\n  |\\n87| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMExceptionBinding.rs:899:51\\n  |\\n89| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMImplementationBinding.rs:781:37\\n  |\\n78|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMImplementationBinding.rs:910:38\\n  |\\n91|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMImplementationBinding.rs:920:21\\n  |\\n92|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMImplementationBinding.rs:931:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMImplementationBinding.rs:954:51\\n  |\\n95| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixBinding.rs:3329:37\\n  |\\n33|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixBinding.rs:3775:38\\n  |\\n37|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixBinding.rs:3785:74\\n  |\\n37|     DOMMatrixReadOnlyBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixBinding.rs:3796:49\\n  |\\n37| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixBinding.rs:3806:80\\n  |\\n38|     DOMMatrixReadOnlyBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixBinding.rs:3820:51\\n  |\\n38| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixReadOnlyBinding.rs:2048:37\\n  |\\n20|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixReadOnlyBinding.rs:2520:38\\n  |\\n25|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixReadOnlyBinding.rs:2530:21\\n  |\\n25|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixReadOnlyBinding.rs:2541:49\\n  |\\n25| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMMatrixReadOnlyBinding.rs:2564:51\\n  |\\n25| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMParserBinding.rs:643:37\\n  |\\n64|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMParserBinding.rs:767:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMParserBinding.rs:777:21\\n  |\\n77|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMParserBinding.rs:788:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMParserBinding.rs:811:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointBinding.rs:939:37\\n  |\\n93|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointBinding.rs:1141:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointBinding.rs:1151:73\\n  |\\n11|     DOMPointReadOnlyBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointBinding.rs:1162:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointBinding.rs:1172:79\\n  |\\n11|     DOMPointReadOnlyBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointBinding.rs:1186:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointReadOnlyBinding.rs:655:37\\n  |\\n65|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointReadOnlyBinding.rs:871:38\\n  |\\n87|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointReadOnlyBinding.rs:881:21\\n  |\\n88|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointReadOnlyBinding.rs:892:49\\n  |\\n89| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMPointReadOnlyBinding.rs:915:51\\n  |\\n91| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMQuadBinding.rs:880:37\\n  |\\n88|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMQuadBinding.rs:1128:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMQuadBinding.rs:1138:21\\n  |\\n11|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMQuadBinding.rs:1149:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMQuadBinding.rs:1172:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectBinding.rs:805:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectBinding.rs:1007:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectBinding.rs:1017:72\\n  |\\n10|     DOMRectReadOnlyBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectBinding.rs:1028:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectBinding.rs:1038:78\\n  |\\n10|     DOMRectReadOnlyBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectBinding.rs:1052:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectReadOnlyBinding.rs:905:37\\n  |\\n90|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectReadOnlyBinding.rs:1149:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectReadOnlyBinding.rs:1159:21\\n  |\\n11|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectReadOnlyBinding.rs:1170:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMRectReadOnlyBinding.rs:1193:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:565:43\\n  |\\n56|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:578:43\\n  |\\n57|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:626:43\\n  |\\n62|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:666:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:748:37\\n  |\\n74|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:837:38\\n  |\\n83|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:847:21\\n  |\\n84|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:858:49\\n  |\\n85| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMStringMapBinding.rs:881:51\\n  |\\n88| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1049:43\\n  |\\n10|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1076:43\\n  |\\n10|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1116:47\\n  |\\n11|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1156:43\\n  |\\n11|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1175:37\\n  |\\n11|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1395:38\\n  |\\n13|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1405:21\\n  |\\n14|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1416:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DOMTokenListBinding.rs:1439:51\\n  |\\n14| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DedicatedWorkerGlobalScopeBinding.rs:683:13\\n  |\\n68|         obj.handle_mut());\\n  |             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DedicatedWorkerGlobalScopeBinding.rs:690:44\\n  |\\n69|     GetProtoObject(cx, obj.handle(), proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DedicatedWorkerGlobalScopeBinding.rs:820:38\\n  |\\n82|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DedicatedWorkerGlobalScopeBinding.rs:830:74\\n  |\\n83|     WorkerGlobalScopeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DedicatedWorkerGlobalScopeBinding.rs:841:49\\n  |\\n84| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DedicatedWorkerGlobalScopeBinding.rs:851:80\\n  |\\n85|     WorkerGlobalScopeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DedicatedWorkerGlobalScopeBinding.rs:865:51\\n  |\\n86| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginLocationBinding.rs:801:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginLocationBinding.rs:814:24\\n  |\\n81|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginLocationBinding.rs:814:37\\n  |\\n81|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginLocationBinding.rs:935:21\\n  |\\n93|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginLocationBinding.rs:946:49\\n  |\\n94| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginLocationBinding.rs:956:24\\n  |\\n95|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginLocationBinding.rs:956:37\\n  |\\n95|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1058:13\\n  |\\n10|         obj.handle_mut());\\n  |             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1065:44\\n  |\\n10|     GetProtoObject(cx, obj.handle(), proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1075:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1075:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1264:68\\n  |\\n12|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1275:49\\n  |\\n12| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1285:24\\n  |\\n12|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DissimilarOriginWindowBinding.rs:1285:37\\n  |\\n12|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8209:43\\n  |\\n82|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8222:43\\n  |\\n82|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8270:43\\n  |\\n82|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8310:43\\n  |\\n83|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8345:37\\n  |\\n83|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8361:53\\n  |\\n83|     ensure_expando_object(cx, obj.handle(), expando.handle_mut());\\n  |                                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8363:24\\n  |\\n83|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:8363:37\\n  |\\n83|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:9631:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:9641:61\\n  |\\n96|     NodeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:9652:49\\n  |\\n96| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:9662:67\\n  |\\n96|     NodeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:9676:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:9686:24\\n  |\\n96|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentBinding.rs:9686:37\\n  |\\n96|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentFragmentBinding.rs:938:37\\n  |\\n93|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentFragmentBinding.rs:1140:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentFragmentBinding.rs:1150:61\\n  |\\n11|     NodeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentFragmentBinding.rs:1161:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentFragmentBinding.rs:1171:67\\n  |\\n11|     NodeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentFragmentBinding.rs:1185:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentTypeBinding.rs:842:37\\n  |\\n84|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentTypeBinding.rs:1012:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentTypeBinding.rs:1022:61\\n  |\\n10|     NodeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentTypeBinding.rs:1033:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentTypeBinding.rs:1043:67\\n  |\\n10|     NodeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/DocumentTypeBinding.rs:1057:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ElementBinding.rs:3822:37\\n  |\\n38|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ElementBinding.rs:4476:38\\n  |\\n44|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ElementBinding.rs:4486:61\\n  |\\n44|     NodeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ElementBinding.rs:4497:49\\n  |\\n44| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ElementBinding.rs:4507:67\\n  |\\n45|     NodeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ElementBinding.rs:4521:51\\n  |\\n45| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:880:37\\n  |\\n88|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:893:24\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:893:37\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:1082:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:1092:62\\n  |\\n10|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:1103:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:1113:68\\n  |\\n11|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:1127:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:1131:24\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ErrorEventBinding.rs:1131:37\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1055:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1068:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1068:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1353:38\\n  |\\n13|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1363:21\\n  |\\n13|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1374:49\\n  |\\n13| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1397:51\\n  |\\n13| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1407:24\\n  |\\n14|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventBinding.rs:1407:37\\n  |\\n14|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventHandlerBinding.rs:269:67\\n  |\\n26|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventHandlerBinding.rs:279:53\\n  |\\n27|         return self.Call(s.get_context(), thisObjJS.handle(), event);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventHandlerBinding.rs:354:67\\n  |\\n35|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventHandlerBinding.rs:364:53\\n  |\\n36|         return self.Call(s.get_context(), thisObjJS.handle(), event, source, lineno, column, error);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventHandlerBinding.rs:499:67\\n  |\\n49|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventHandlerBinding.rs:509:53\\n  |\\n50|         return self.Call(s.get_context(), thisObjJS.handle(), event);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventListenerBinding.rs:263:67\\n  |\\n26|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventListenerBinding.rs:273:60\\n  |\\n27|         return self.HandleEvent(s.get_context(), thisObjJS.handle(), event);\\n  |                                                            ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventSourceBinding.rs:914:37\\n  |\\n91|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventSourceBinding.rs:1134:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventSourceBinding.rs:1144:68\\n  |\\n11|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventSourceBinding.rs:1155:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventSourceBinding.rs:1165:74\\n  |\\n11|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventSourceBinding.rs:1179:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventTargetBinding.rs:919:38\\n  |\\n91|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventTargetBinding.rs:929:21\\n  |\\n92|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventTargetBinding.rs:940:49\\n  |\\n94| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/EventTargetBinding.rs:963:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:668:37\\n  |\\n66|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:681:24\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:681:37\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:863:38\\n  |\\n86|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:874:62\\n  |\\n87|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:885:49\\n  |\\n88| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:895:68\\n  |\\n89|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:909:51\\n  |\\n90| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:919:24\\n  |\\n91|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableEventBinding.rs:919:37\\n  |\\n91|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:774:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:787:24\\n  |\\n78|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:787:37\\n  |\\n78|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:963:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:974:72\\n  |\\n97|     ExtendableEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:985:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:995:78\\n  |\\n99|     ExtendableEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:1009:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:1013:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ExtendableMessageEventBinding.rs:1013:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileBinding.rs:676:37\\n  |\\n67|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileBinding.rs:843:38\\n  |\\n84|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileBinding.rs:853:61\\n  |\\n85|     BlobBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileBinding.rs:864:49\\n  |\\n86| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileBinding.rs:874:67\\n  |\\n87|     BlobBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileBinding.rs:888:51\\n  |\\n88| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:639:43\\n  |\\n63|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:666:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:706:47\\n  |\\n70|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:746:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:765:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:901:38\\n  |\\n90|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:911:21\\n  |\\n91|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:922:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileListBinding.rs:945:51\\n  |\\n94| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderBinding.rs:1223:37\\n  |\\n12|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderBinding.rs:1462:38\\n  |\\n14|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderBinding.rs:1472:68\\n  |\\n14|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderBinding.rs:1483:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderBinding.rs:1493:74\\n  |\\n14|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderBinding.rs:1507:51\\n  |\\n15| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderSyncBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderSyncBinding.rs:637:38\\n  |\\n63|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderSyncBinding.rs:647:21\\n  |\\n64|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderSyncBinding.rs:658:49\\n  |\\n65| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FileReaderSyncBinding.rs:681:51\\n  |\\n68| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:688:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:701:24\\n  |\\n70|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:701:37\\n  |\\n70|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:863:38\\n  |\\n86|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:873:64\\n  |\\n87|     UIEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:884:49\\n  |\\n88| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:894:70\\n  |\\n89|     UIEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:908:51\\n  |\\n90| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:912:24\\n  |\\n91|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FocusEventBinding.rs:912:37\\n  |\\n91|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:657:37\\n  |\\n65|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:670:24\\n  |\\n67|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:670:37\\n  |\\n67|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:798:38\\n  |\\n79|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:809:64\\n  |\\n80|     UIEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:820:49\\n  |\\n82| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:830:70\\n  |\\n83|     UIEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:844:51\\n  |\\n84| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:848:24\\n  |\\n84|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ForceTouchEventBinding.rs:848:37\\n  |\\n84|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1186:37\\n  |\\n11|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1398:38\\n  |\\n13|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1408:21\\n  |\\n14|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1419:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1442:51\\n  |\\n14| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1797:37\\n  |\\n17|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1882:21\\n  |\\n18|     prototype_proto.set(JS_GetIteratorPrototype(cx));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FormDataBinding.rs:1893:49\\n  |\\n18| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FunctionBinding.rs:262:67\\n  |\\n26|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/FunctionBinding.rs:272:53\\n  |\\n27|         return self.Call(s.get_context(), thisObjJS.handle(), arguments);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadBinding.rs:831:37\\n  |\\n83|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadBinding.rs:997:38\\n  |\\n99|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadBinding.rs:1008:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadBinding.rs:1019:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadBinding.rs:1042:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonBinding.rs:626:37\\n  |\\n62|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonBinding.rs:743:38\\n  |\\n74|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonBinding.rs:754:21\\n  |\\n75|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonBinding.rs:765:49\\n  |\\n76| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonBinding.rs:788:51\\n  |\\n78| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:637:43\\n  |\\n63|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:664:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:704:47\\n  |\\n70|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:744:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:763:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:899:38\\n  |\\n89|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:910:21\\n  |\\n91|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:921:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadButtonListBinding.rs:944:51\\n  |\\n94| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:683:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:696:24\\n  |\\n69|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:696:37\\n  |\\n69|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:854:38\\n  |\\n85|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:865:62\\n  |\\n86|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:876:49\\n  |\\n87| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:886:68\\n  |\\n88|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:900:51\\n  |\\n90| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:904:24\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadEventBinding.rs:904:37\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:637:43\\n  |\\n63|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:664:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:704:47\\n  |\\n70|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:744:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:763:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:899:38\\n  |\\n89|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:910:21\\n  |\\n91|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:921:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/GamepadListBinding.rs:944:51\\n  |\\n94| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAnchorElementBinding.rs:1889:37\\n  |\\n18|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAnchorElementBinding.rs:2177:70\\n  |\\n21|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAnchorElementBinding.rs:2251:38\\n  |\\n22|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAnchorElementBinding.rs:2261:68\\n  |\\n22|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAnchorElementBinding.rs:2272:49\\n  |\\n22| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAnchorElementBinding.rs:2282:74\\n  |\\n22|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAnchorElementBinding.rs:2296:51\\n  |\\n22| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAppletElementBinding.rs:607:37\\n  |\\n60|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAppletElementBinding.rs:711:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAppletElementBinding.rs:721:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAppletElementBinding.rs:732:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAppletElementBinding.rs:742:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAppletElementBinding.rs:756:51\\n  |\\n75| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAreaElementBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAreaElementBinding.rs:694:70\\n  |\\n69|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAreaElementBinding.rs:768:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAreaElementBinding.rs:778:68\\n  |\\n77|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAreaElementBinding.rs:789:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAreaElementBinding.rs:799:74\\n  |\\n79|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAreaElementBinding.rs:813:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAudioElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAudioElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAudioElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAudioElementBinding.rs:725:73\\n  |\\n72|     HTMLMediaElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAudioElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAudioElementBinding.rs:746:79\\n  |\\n74|     HTMLMediaElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLAudioElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBRElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBRElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBRElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBRElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBRElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBRElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBRElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBaseElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBaseElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBaseElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBaseElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBaseElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBaseElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBaseElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBodyElementBinding.rs:2107:37\\n  |\\n21|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBodyElementBinding.rs:2423:70\\n  |\\n24|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBodyElementBinding.rs:2497:38\\n  |\\n24|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBodyElementBinding.rs:2507:68\\n  |\\n25|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBodyElementBinding.rs:2518:49\\n  |\\n25| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBodyElementBinding.rs:2528:74\\n  |\\n25|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLBodyElementBinding.rs:2542:51\\n  |\\n25| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLButtonElementBinding.rs:1297:37\\n  |\\n12|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLButtonElementBinding.rs:1506:70\\n  |\\n15|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLButtonElementBinding.rs:1580:38\\n  |\\n15|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLButtonElementBinding.rs:1590:68\\n  |\\n15|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLButtonElementBinding.rs:1601:49\\n  |\\n16| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLButtonElementBinding.rs:1611:74\\n  |\\n16|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLButtonElementBinding.rs:1625:51\\n  |\\n16| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCanvasElementBinding.rs:811:37\\n  |\\n81|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCanvasElementBinding.rs:973:70\\n  |\\n97|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCanvasElementBinding.rs:1047:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCanvasElementBinding.rs:1057:68\\n  |\\n10|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCanvasElementBinding.rs:1068:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCanvasElementBinding.rs:1078:74\\n  |\\n10|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCanvasElementBinding.rs:1092:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:699:43\\n  |\\n69|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:717:43\\n  |\\n71|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:744:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:805:47\\n  |\\n80|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:856:43\\n  |\\n85|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:891:37\\n  |\\n89|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:1055:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:1065:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:1076:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLCollectionBinding.rs:1099:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDListElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDListElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDListElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDListElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDListElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDListElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDListElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataListElementBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataListElementBinding.rs:694:70\\n  |\\n69|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataListElementBinding.rs:768:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataListElementBinding.rs:778:68\\n  |\\n77|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataListElementBinding.rs:789:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataListElementBinding.rs:799:74\\n  |\\n79|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDataListElementBinding.rs:813:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDetailsElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDetailsElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDetailsElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDetailsElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDetailsElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDetailsElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDetailsElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDialogElementBinding.rs:730:37\\n  |\\n73|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDialogElementBinding.rs:884:70\\n  |\\n88|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDialogElementBinding.rs:958:38\\n  |\\n95|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDialogElementBinding.rs:968:68\\n  |\\n96|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDialogElementBinding.rs:979:49\\n  |\\n97| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDialogElementBinding.rs:989:74\\n  |\\n98|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDialogElementBinding.rs:1003:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDirectoryElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDirectoryElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDirectoryElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDirectoryElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDirectoryElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDirectoryElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDirectoryElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDivElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDivElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDivElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDivElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDivElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDivElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLDivElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLElementBinding.rs:4969:37\\n  |\\n49|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLElementBinding.rs:5708:70\\n  |\\n57|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLElementBinding.rs:5782:38\\n  |\\n57|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLElementBinding.rs:5792:64\\n  |\\n57|     ElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLElementBinding.rs:5803:49\\n  |\\n58| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLElementBinding.rs:5813:70\\n  |\\n58|     ElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLElementBinding.rs:5827:51\\n  |\\n58| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLEmbedElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLEmbedElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLEmbedElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLEmbedElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLEmbedElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLEmbedElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLEmbedElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFieldSetElementBinding.rs:705:37\\n  |\\n70|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFieldSetElementBinding.rs:850:70\\n  |\\n85|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFieldSetElementBinding.rs:924:38\\n  |\\n92|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFieldSetElementBinding.rs:934:68\\n  |\\n93|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFieldSetElementBinding.rs:945:49\\n  |\\n94| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFieldSetElementBinding.rs:955:74\\n  |\\n95|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFieldSetElementBinding.rs:969:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFontElementBinding.rs:763:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFontElementBinding.rs:903:70\\n  |\\n90|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFontElementBinding.rs:977:38\\n  |\\n97|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFontElementBinding.rs:987:68\\n  |\\n98|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFontElementBinding.rs:998:49\\n  |\\n99| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFontElementBinding.rs:1008:74\\n  |\\n10|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFontElementBinding.rs:1022:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:623:43\\n  |\\n62|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:650:43\\n  |\\n65|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:711:47\\n  |\\n71|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:762:43\\n  |\\n76|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:797:37\\n  |\\n79|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:908:38\\n  |\\n90|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:918:71\\n  |\\n91|     HTMLCollectionBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                       ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:929:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:939:77\\n  |\\n93|     HTMLCollectionBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormControlsCollectionBinding.rs:953:51\\n  |\\n95| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1359:43\\n  |\\n13|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1386:43\\n  |\\n13|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1426:47\\n  |\\n14|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1466:43\\n  |\\n14|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1485:37\\n  |\\n14|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1721:70\\n  |\\n17|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1795:38\\n  |\\n17|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1805:68\\n  |\\n18|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1816:49\\n  |\\n18| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1826:74\\n  |\\n18|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFormElementBinding.rs:1840:51\\n  |\\n18| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameSetElementBinding.rs:1885:37\\n  |\\n18|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameSetElementBinding.rs:2177:70\\n  |\\n21|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameSetElementBinding.rs:2251:38\\n  |\\n22|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameSetElementBinding.rs:2261:68\\n  |\\n22|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameSetElementBinding.rs:2272:49\\n  |\\n22| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameSetElementBinding.rs:2282:74\\n  |\\n22|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLFrameSetElementBinding.rs:2296:51\\n  |\\n22| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHRElementBinding.rs:763:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHRElementBinding.rs:903:70\\n  |\\n90|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHRElementBinding.rs:977:38\\n  |\\n97|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHRElementBinding.rs:987:68\\n  |\\n98|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHRElementBinding.rs:998:49\\n  |\\n99| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHRElementBinding.rs:1008:74\\n  |\\n10|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHRElementBinding.rs:1022:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadingElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadingElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadingElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadingElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadingElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadingElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHeadingElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHtmlElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHtmlElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHtmlElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHtmlElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHtmlElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHtmlElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLHtmlElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLIFrameElementBinding.rs:1441:37\\n  |\\n14|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLIFrameElementBinding.rs:1715:70\\n  |\\n17|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLIFrameElementBinding.rs:1789:38\\n  |\\n17|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLIFrameElementBinding.rs:1799:68\\n  |\\n17|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLIFrameElementBinding.rs:1810:49\\n  |\\n18| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLIFrameElementBinding.rs:1820:74\\n  |\\n18|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLIFrameElementBinding.rs:1834:51\\n  |\\n18| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLImageElementBinding.rs:1619:37\\n  |\\n16|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLImageElementBinding.rs:1867:70\\n  |\\n18|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLImageElementBinding.rs:1988:38\\n  |\\n19|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLImageElementBinding.rs:1998:68\\n  |\\n19|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLImageElementBinding.rs:2009:49\\n  |\\n20| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLImageElementBinding.rs:2019:74\\n  |\\n20|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLImageElementBinding.rs:2033:51\\n  |\\n20| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLInputElementBinding.rs:3029:37\\n  |\\n30|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLInputElementBinding.rs:3454:70\\n  |\\n34|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLInputElementBinding.rs:3528:38\\n  |\\n35|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLInputElementBinding.rs:3538:68\\n  |\\n35|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLInputElementBinding.rs:3549:49\\n  |\\n35| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLInputElementBinding.rs:3559:74\\n  |\\n35|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLInputElementBinding.rs:3573:51\\n  |\\n35| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLIElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLIElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLIElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLIElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLIElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLIElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLIElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLabelElementBinding.rs:676:37\\n  |\\n67|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLabelElementBinding.rs:814:70\\n  |\\n81|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLabelElementBinding.rs:888:38\\n  |\\n88|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLabelElementBinding.rs:898:68\\n  |\\n89|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLabelElementBinding.rs:909:49\\n  |\\n90| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLabelElementBinding.rs:919:74\\n  |\\n91|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLabelElementBinding.rs:933:51\\n  |\\n93| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLegendElementBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLegendElementBinding.rs:694:70\\n  |\\n69|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLegendElementBinding.rs:768:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLegendElementBinding.rs:778:68\\n  |\\n77|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLegendElementBinding.rs:789:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLegendElementBinding.rs:799:74\\n  |\\n79|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLegendElementBinding.rs:813:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLinkElementBinding.rs:1341:37\\n  |\\n13|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLinkElementBinding.rs:1551:70\\n  |\\n15|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLinkElementBinding.rs:1625:38\\n  |\\n16|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLinkElementBinding.rs:1635:68\\n  |\\n16|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLinkElementBinding.rs:1646:49\\n  |\\n16| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLinkElementBinding.rs:1656:74\\n  |\\n16|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLLinkElementBinding.rs:1670:51\\n  |\\n16| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMapElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMapElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMapElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMapElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMapElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMapElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMapElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMediaElementBinding.rs:1342:38\\n  |\\n13|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMediaElementBinding.rs:1352:68\\n  |\\n13|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMediaElementBinding.rs:1363:49\\n  |\\n13| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMediaElementBinding.rs:1373:74\\n  |\\n13|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMediaElementBinding.rs:1387:51\\n  |\\n13| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMetaElementBinding.rs:689:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMetaElementBinding.rs:821:70\\n  |\\n82|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMetaElementBinding.rs:895:38\\n  |\\n89|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMetaElementBinding.rs:905:68\\n  |\\n90|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMetaElementBinding.rs:916:49\\n  |\\n91| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMetaElementBinding.rs:926:74\\n  |\\n92|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMetaElementBinding.rs:940:51\\n  |\\n94| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMeterElementBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMeterElementBinding.rs:694:70\\n  |\\n69|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMeterElementBinding.rs:768:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMeterElementBinding.rs:778:68\\n  |\\n77|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMeterElementBinding.rs:789:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMeterElementBinding.rs:799:74\\n  |\\n79|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLMeterElementBinding.rs:813:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLModElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLModElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLModElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLModElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLModElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLModElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLModElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOListElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOListElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOListElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOListElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOListElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOListElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOListElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLObjectElementBinding.rs:675:37\\n  |\\n67|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLObjectElementBinding.rs:813:70\\n  |\\n81|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLObjectElementBinding.rs:887:38\\n  |\\n88|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLObjectElementBinding.rs:897:68\\n  |\\n89|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLObjectElementBinding.rs:908:49\\n  |\\n90| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLObjectElementBinding.rs:918:74\\n  |\\n91|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLObjectElementBinding.rs:932:51\\n  |\\n93| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptGroupElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptGroupElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptGroupElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptGroupElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptGroupElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptGroupElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptGroupElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionElementBinding.rs:1007:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionElementBinding.rs:1178:70\\n  |\\n11|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionElementBinding.rs:1252:38\\n  |\\n12|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionElementBinding.rs:1262:68\\n  |\\n12|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionElementBinding.rs:1273:49\\n  |\\n12| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionElementBinding.rs:1283:74\\n  |\\n12|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionElementBinding.rs:1297:51\\n  |\\n12| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:840:43\\n  |\\n84|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:867:43\\n  |\\n86|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:928:47\\n  |\\n92|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:979:43\\n  |\\n97|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:1063:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:1212:38\\n  |\\n12|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:1222:71\\n  |\\n12|     HTMLCollectionBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                       ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:1233:49\\n  |\\n12| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:1243:77\\n  |\\n12|     HTMLCollectionBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOptionsCollectionBinding.rs:1257:51\\n  |\\n12| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOutputElementBinding.rs:631:37\\n  |\\n63|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOutputElementBinding.rs:768:70\\n  |\\n76|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOutputElementBinding.rs:842:38\\n  |\\n84|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOutputElementBinding.rs:852:68\\n  |\\n85|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOutputElementBinding.rs:863:49\\n  |\\n86| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOutputElementBinding.rs:873:74\\n  |\\n87|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLOutputElementBinding.rs:887:51\\n  |\\n88| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParagraphElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParagraphElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParagraphElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParagraphElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParagraphElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParagraphElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParagraphElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParamElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParamElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParamElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParamElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParamElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParamElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLParamElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLPreElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLPreElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLPreElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLPreElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLPreElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLPreElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLPreElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLProgressElementBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLProgressElementBinding.rs:694:70\\n  |\\n69|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLProgressElementBinding.rs:768:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLProgressElementBinding.rs:778:68\\n  |\\n77|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLProgressElementBinding.rs:789:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLProgressElementBinding.rs:799:74\\n  |\\n79|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLProgressElementBinding.rs:813:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLQuoteElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLQuoteElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLQuoteElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLQuoteElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLQuoteElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLQuoteElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLQuoteElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLScriptElementBinding.rs:1281:37\\n  |\\n12|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLScriptElementBinding.rs:1477:70\\n  |\\n14|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLScriptElementBinding.rs:1551:38\\n  |\\n15|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLScriptElementBinding.rs:1561:68\\n  |\\n15|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLScriptElementBinding.rs:1572:49\\n  |\\n15| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLScriptElementBinding.rs:1582:74\\n  |\\n15|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLScriptElementBinding.rs:1596:51\\n  |\\n15| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1443:43\\n  |\\n14|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1470:43\\n  |\\n14|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1510:47\\n  |\\n15|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1550:43\\n  |\\n15|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1569:37\\n  |\\n15|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1834:70\\n  |\\n18|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1908:38\\n  |\\n19|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1918:68\\n  |\\n19|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1929:49\\n  |\\n19| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1939:74\\n  |\\n19|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSelectElementBinding.rs:1953:51\\n  |\\n19| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSourceElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSourceElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSourceElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSourceElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSourceElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSourceElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSourceElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSpanElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSpanElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSpanElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSpanElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSpanElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSpanElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLSpanElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLStyleElementBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLStyleElementBinding.rs:694:70\\n  |\\n69|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLStyleElementBinding.rs:768:38\\n  |\\n76|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLStyleElementBinding.rs:778:68\\n  |\\n77|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLStyleElementBinding.rs:789:49\\n  |\\n78| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLStyleElementBinding.rs:799:74\\n  |\\n79|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLStyleElementBinding.rs:813:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCaptionElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCaptionElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCaptionElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCaptionElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCaptionElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCaptionElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCaptionElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCellElementBinding.rs:944:70\\n  |\\n94|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCellElementBinding.rs:1018:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCellElementBinding.rs:1028:68\\n  |\\n10|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCellElementBinding.rs:1039:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCellElementBinding.rs:1049:74\\n  |\\n10|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableCellElementBinding.rs:1063:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableColElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableColElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableColElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableColElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableColElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableColElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableColElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableDataCellElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableDataCellElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableDataCellElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableDataCellElementBinding.rs:725:77\\n  |\\n72|     HTMLTableCellElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableDataCellElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableDataCellElementBinding.rs:746:83\\n  |\\n74|     HTMLTableCellElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableDataCellElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableElementBinding.rs:1346:37\\n  |\\n13|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableElementBinding.rs:1602:70\\n  |\\n16|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableElementBinding.rs:1676:38\\n  |\\n16|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableElementBinding.rs:1686:68\\n  |\\n16|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableElementBinding.rs:1697:49\\n  |\\n16| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableElementBinding.rs:1707:74\\n  |\\n17|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableElementBinding.rs:1721:51\\n  |\\n17| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableHeaderCellElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableHeaderCellElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableHeaderCellElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableHeaderCellElementBinding.rs:725:77\\n  |\\n72|     HTMLTableCellElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableHeaderCellElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableHeaderCellElementBinding.rs:746:83\\n  |\\n74|     HTMLTableCellElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableHeaderCellElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableRowElementBinding.rs:814:37\\n  |\\n81|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableRowElementBinding.rs:989:70\\n  |\\n98|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableRowElementBinding.rs:1063:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableRowElementBinding.rs:1073:68\\n  |\\n10|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableRowElementBinding.rs:1084:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableRowElementBinding.rs:1094:74\\n  |\\n10|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableRowElementBinding.rs:1108:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableSectionElementBinding.rs:682:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableSectionElementBinding.rs:835:70\\n  |\\n83|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableSectionElementBinding.rs:909:38\\n  |\\n90|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableSectionElementBinding.rs:919:68\\n  |\\n91|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableSectionElementBinding.rs:930:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableSectionElementBinding.rs:940:74\\n  |\\n94|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTableSectionElementBinding.rs:954:51\\n  |\\n95| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTemplateElementBinding.rs:573:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTemplateElementBinding.rs:696:70\\n  |\\n69|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTemplateElementBinding.rs:770:38\\n  |\\n77|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTemplateElementBinding.rs:780:68\\n  |\\n78|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTemplateElementBinding.rs:791:49\\n  |\\n79| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTemplateElementBinding.rs:801:74\\n  |\\n80|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTemplateElementBinding.rs:815:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTextAreaElementBinding.rs:1644:37\\n  |\\n16|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTextAreaElementBinding.rs:1907:70\\n  |\\n19|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTextAreaElementBinding.rs:1981:38\\n  |\\n19|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTextAreaElementBinding.rs:1991:68\\n  |\\n19|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTextAreaElementBinding.rs:2002:49\\n  |\\n20| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTextAreaElementBinding.rs:2012:74\\n  |\\n20|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTextAreaElementBinding.rs:2026:51\\n  |\\n20| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTimeElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTimeElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTimeElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTimeElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTimeElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTimeElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTimeElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTitleElementBinding.rs:615:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTitleElementBinding.rs:739:70\\n  |\\n73|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTitleElementBinding.rs:813:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTitleElementBinding.rs:823:68\\n  |\\n82|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTitleElementBinding.rs:834:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTitleElementBinding.rs:844:74\\n  |\\n84|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTitleElementBinding.rs:858:51\\n  |\\n85| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTrackElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTrackElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTrackElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTrackElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTrackElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTrackElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLTrackElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUListElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUListElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUListElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUListElementBinding.rs:725:68\\n  |\\n72|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUListElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUListElementBinding.rs:746:74\\n  |\\n74|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUListElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUnknownElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUnknownElementBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUnknownElementBinding.rs:631:68\\n  |\\n63|     HTMLElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUnknownElementBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUnknownElementBinding.rs:652:74\\n  |\\n65|     HTMLElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLUnknownElementBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLVideoElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLVideoElementBinding.rs:641:70\\n  |\\n64|                 GetProtoObject(cx, global_object.handle(), prototype.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLVideoElementBinding.rs:715:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLVideoElementBinding.rs:725:73\\n  |\\n72|     HTMLMediaElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLVideoElementBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLVideoElementBinding.rs:746:79\\n  |\\n74|     HTMLMediaElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HTMLVideoElementBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:727:37\\n  |\\n72|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:740:24\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:740:37\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:909:38\\n  |\\n90|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:919:62\\n  |\\n91|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:930:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:940:68\\n  |\\n94|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:954:51\\n  |\\n95| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:958:24\\n  |\\n95|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HashChangeEventBinding.rs:958:37\\n  |\\n95|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1009:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1206:38\\n  |\\n12|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1216:21\\n  |\\n12|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1227:49\\n  |\\n12| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1250:51\\n  |\\n12| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1605:37\\n  |\\n16|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1690:21\\n  |\\n16|     prototype_proto.set(JS_GetIteratorPrototype(cx));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HeadersBinding.rs:1701:49\\n  |\\n17| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HistoryBinding.rs:703:37\\n  |\\n70|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HistoryBinding.rs:844:38\\n  |\\n84|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HistoryBinding.rs:854:21\\n  |\\n85|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HistoryBinding.rs:865:49\\n  |\\n86| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/HistoryBinding.rs:888:51\\n  |\\n88| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ImageDataBinding.rs:626:37\\n  |\\n62|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ImageDataBinding.rs:1007:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ImageDataBinding.rs:1017:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ImageDataBinding.rs:1028:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ImageDataBinding.rs:1051:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:733:37\\n  |\\n73|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:746:24\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:746:37\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:915:38\\n  |\\n91|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:925:64\\n  |\\n92|     UIEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:936:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:946:70\\n  |\\n94|     UIEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:960:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:964:24\\n  |\\n96|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/InputEventBinding.rs:964:37\\n  |\\n96|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1277:37\\n  |\\n12|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1290:24\\n  |\\n12|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1290:37\\n  |\\n12|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1570:38\\n  |\\n15|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1580:64\\n  |\\n15|     UIEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1591:49\\n  |\\n15| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1601:70\\n  |\\n16|     UIEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1615:51\\n  |\\n16| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1619:24\\n  |\\n16|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/KeyboardEventBinding.rs:1619:37\\n  |\\n16|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1397:37\\n  |\\n13|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1410:24\\n  |\\n14|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1410:37\\n  |\\n14|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1614:38\\n  |\\n16|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1624:21\\n  |\\n16|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1635:49\\n  |\\n16| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1658:51\\n  |\\n16| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1662:24\\n  |\\n16|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/LocationBinding.rs:1662:37\\n  |\\n16|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaErrorBinding.rs:603:37\\n  |\\n60|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaErrorBinding.rs:724:38\\n  |\\n72|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaErrorBinding.rs:734:21\\n  |\\n73|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaErrorBinding.rs:745:49\\n  |\\n74| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaErrorBinding.rs:768:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:794:43\\n  |\\n79|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:821:43\\n  |\\n82|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:861:47\\n  |\\n86|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:901:43\\n  |\\n90|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:920:37\\n  |\\n92|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:1080:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:1090:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:1101:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaListBinding.rs:1124:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListBinding.rs:767:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListBinding.rs:917:38\\n  |\\n91|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListBinding.rs:927:68\\n  |\\n92|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListBinding.rs:938:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListBinding.rs:948:74\\n  |\\n94|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListBinding.rs:962:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:727:37\\n  |\\n72|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:740:24\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:740:37\\n  |\\n74|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:909:38\\n  |\\n90|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:919:62\\n  |\\n91|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:930:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:940:68\\n  |\\n94|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:954:51\\n  |\\n95| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:958:24\\n  |\\n95|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MediaQueryListEventBinding.rs:958:37\\n  |\\n95|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:772:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:785:24\\n  |\\n78|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:785:37\\n  |\\n78|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:960:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:970:62\\n  |\\n97|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:981:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:991:68\\n  |\\n99|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:1005:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:1009:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MessageEventBinding.rs:1009:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:691:43\\n  |\\n69|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:709:43\\n  |\\n70|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:736:43\\n  |\\n73|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:797:47\\n  |\\n79|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:848:43\\n  |\\n84|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:883:37\\n  |\\n88|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:1029:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:1039:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:1050:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeArrayBinding.rs:1073:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeBinding.rs:656:37\\n  |\\n65|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeBinding.rs:780:38\\n  |\\n78|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeBinding.rs:790:21\\n  |\\n79|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeBinding.rs:801:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MimeTypeBinding.rs:824:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1293:37\\n  |\\n12|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1306:24\\n  |\\n13|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1306:37\\n  |\\n13|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1569:38\\n  |\\n15|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1579:64\\n  |\\n15|     UIEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1590:49\\n  |\\n15| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1600:70\\n  |\\n16|     UIEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1614:51\\n  |\\n16| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1618:24\\n  |\\n16|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MouseEventBinding.rs:1618:37\\n  |\\n16|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationObserverBinding.rs:472:67\\n  |\\n47|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationObserverBinding.rs:482:53\\n  |\\n48|         return self.Call(s.get_context(), thisObjJS.handle(), mutations, observer);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationObserverBinding.rs:919:37\\n  |\\n91|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationObserverBinding.rs:1061:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationObserverBinding.rs:1072:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationObserverBinding.rs:1083:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationObserverBinding.rs:1106:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationRecordBinding.rs:804:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationRecordBinding.rs:963:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationRecordBinding.rs:974:21\\n  |\\n97|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationRecordBinding.rs:985:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/MutationRecordBinding.rs:1008:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1004:43\\n  |\\n10|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1022:43\\n  |\\n10|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1049:43\\n  |\\n10|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1110:47\\n  |\\n11|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1161:43\\n  |\\n11|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1196:37\\n  |\\n11|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1382:38\\n  |\\n13|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1392:21\\n  |\\n13|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1403:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NamedNodeMapBinding.rs:1426:51\\n  |\\n14| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NavigatorBinding.rs:1049:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NavigatorBinding.rs:1329:38\\n  |\\n13|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NavigatorBinding.rs:1339:21\\n  |\\n13|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NavigatorBinding.rs:1350:49\\n  |\\n13| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NavigatorBinding.rs:1373:51\\n  |\\n13| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeBinding.rs:2122:38\\n  |\\n21|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeBinding.rs:2132:68\\n  |\\n21|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeBinding.rs:2143:49\\n  |\\n21| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeBinding.rs:2153:74\\n  |\\n21|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeBinding.rs:2167:51\\n  |\\n21| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeFilterBinding.rs:553:44\\n  |\\n55|     GetConstructorObject(cx, global, proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeFilterBinding.rs:563:89\\n  |\\n56|     create_callback_interface_object(cx, global, sConstants, b\\\"NodeFilter\\\\0\\\", interface.handle_mut());\\n  |                                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeFilterBinding.rs:597:67\\n  |\\n59|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeFilterBinding.rs:607:59\\n  |\\n60|         return self.AcceptNode(s.get_context(), thisObjJS.handle(), node);\\n  |                                                           ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeIteratorBinding.rs:798:37\\n  |\\n79|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeIteratorBinding.rs:967:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeIteratorBinding.rs:977:21\\n  |\\n97|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeIteratorBinding.rs:988:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeIteratorBinding.rs:1011:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:642:43\\n  |\\n64|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:669:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:709:47\\n  |\\n70|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:749:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:768:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:950:38\\n  |\\n95|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:960:21\\n  |\\n96|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:971:49\\n  |\\n97| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/NodeListBinding.rs:994:51\\n  |\\n99| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESStandardDerivativesBinding.rs:542:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESStandardDerivativesBinding.rs:611:21\\n  |\\n61|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESStandardDerivativesBinding.rs:622:49\\n  |\\n62| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureFloatBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureFloatBinding.rs:599:21\\n  |\\n59|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureFloatBinding.rs:610:49\\n  |\\n61| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureFloatLinearBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureFloatLinearBinding.rs:599:21\\n  |\\n59|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureFloatLinearBinding.rs:610:49\\n  |\\n61| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureHalfFloatBinding.rs:542:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureHalfFloatBinding.rs:611:21\\n  |\\n61|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureHalfFloatBinding.rs:622:49\\n  |\\n62| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureHalfFloatLinearBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureHalfFloatLinearBinding.rs:599:21\\n  |\\n59|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESTextureHalfFloatLinearBinding.rs:610:49\\n  |\\n61| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESVertexArrayObjectBinding.rs:735:37\\n  |\\n73|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESVertexArrayObjectBinding.rs:852:21\\n  |\\n85|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/OESVertexArrayObjectBinding.rs:863:49\\n  |\\n86| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:675:37\\n  |\\n67|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:688:24\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:688:37\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:850:38\\n  |\\n85|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:860:62\\n  |\\n86|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:871:49\\n  |\\n87| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:881:68\\n  |\\n88|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:895:51\\n  |\\n89| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:899:24\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PageTransitionEventBinding.rs:899:37\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintRenderingContext2DBinding.rs:3491:37\\n  |\\n34|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintRenderingContext2DBinding.rs:3939:38\\n  |\\n39|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintRenderingContext2DBinding.rs:3950:21\\n  |\\n39|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintRenderingContext2DBinding.rs:3961:49\\n  |\\n39| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintRenderingContext2DBinding.rs:3984:51\\n  |\\n39| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintSizeBinding.rs:597:37\\n  |\\n59|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintSizeBinding.rs:707:38\\n  |\\n70|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintSizeBinding.rs:718:21\\n  |\\n71|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintSizeBinding.rs:729:49\\n  |\\n72| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintSizeBinding.rs:752:51\\n  |\\n75| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintWorkletGlobalScopeBinding.rs:613:13\\n  |\\n61|         obj.handle_mut());\\n  |             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintWorkletGlobalScopeBinding.rs:620:44\\n  |\\n62|     GetProtoObject(cx, obj.handle(), proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintWorkletGlobalScopeBinding.rs:720:38\\n  |\\n72|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintWorkletGlobalScopeBinding.rs:731:75\\n  |\\n73|     WorkletGlobalScopeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintWorkletGlobalScopeBinding.rs:742:49\\n  |\\n74| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintWorkletGlobalScopeBinding.rs:752:81\\n  |\\n75|     WorkletGlobalScopeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PaintWorkletGlobalScopeBinding.rs:766:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceBinding.rs:967:37\\n  |\\n96|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceBinding.rs:1148:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceBinding.rs:1158:21\\n  |\\n11|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceBinding.rs:1169:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceBinding.rs:1192:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceEntryBinding.rs:655:37\\n  |\\n65|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceEntryBinding.rs:797:38\\n  |\\n79|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceEntryBinding.rs:807:21\\n  |\\n80|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceEntryBinding.rs:818:49\\n  |\\n81| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceEntryBinding.rs:841:51\\n  |\\n84| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMarkBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMarkBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMarkBinding.rs:631:73\\n  |\\n63|     PerformanceEntryBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMarkBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMarkBinding.rs:652:79\\n  |\\n65|     PerformanceEntryBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMarkBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMeasureBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMeasureBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMeasureBinding.rs:631:73\\n  |\\n63|     PerformanceEntryBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMeasureBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMeasureBinding.rs:652:79\\n  |\\n65|     PerformanceEntryBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceMeasureBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverBinding.rs:353:67\\n  |\\n35|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverBinding.rs:363:53\\n  |\\n36|         return self.Call(s.get_context(), thisObjJS.handle(), entries, observer);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverBinding.rs:809:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverBinding.rs:958:38\\n  |\\n95|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverBinding.rs:968:21\\n  |\\n96|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverBinding.rs:979:49\\n  |\\n97| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverBinding.rs:1002:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverEntryListBinding.rs:677:37\\n  |\\n67|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverEntryListBinding.rs:798:38\\n  |\\n79|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverEntryListBinding.rs:808:21\\n  |\\n80|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverEntryListBinding.rs:819:49\\n  |\\n81| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceObserverEntryListBinding.rs:842:51\\n  |\\n84| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformancePaintTimingBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformancePaintTimingBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformancePaintTimingBinding.rs:631:73\\n  |\\n63|     PerformanceEntryBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformancePaintTimingBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformancePaintTimingBinding.rs:652:79\\n  |\\n65|     PerformanceEntryBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformancePaintTimingBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceTimingBinding.rs:771:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceTimingBinding.rs:923:38\\n  |\\n92|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceTimingBinding.rs:933:21\\n  |\\n93|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceTimingBinding.rs:944:49\\n  |\\n94| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PerformanceTimingBinding.rs:967:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionStatusBinding.rs:1013:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionStatusBinding.rs:1142:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionStatusBinding.rs:1153:68\\n  |\\n11|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionStatusBinding.rs:1164:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionStatusBinding.rs:1174:74\\n  |\\n11|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionStatusBinding.rs:1188:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionsBinding.rs:669:37\\n  |\\n66|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionsBinding.rs:790:38\\n  |\\n79|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionsBinding.rs:801:21\\n  |\\n80|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionsBinding.rs:812:49\\n  |\\n81| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PermissionsBinding.rs:835:51\\n  |\\n83| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:736:43\\n  |\\n73|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:754:43\\n  |\\n75|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:781:43\\n  |\\n78|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:842:47\\n  |\\n84|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:893:43\\n  |\\n89|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:928:37\\n  |\\n92|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:1082:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:1092:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:1103:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginArrayBinding.rs:1126:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:778:43\\n  |\\n77|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:796:43\\n  |\\n79|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:823:43\\n  |\\n82|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:884:47\\n  |\\n88|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:935:43\\n  |\\n93|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:970:37\\n  |\\n97|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:1137:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:1147:21\\n  |\\n11|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:1158:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PluginBinding.rs:1181:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:668:37\\n  |\\n66|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:681:24\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:681:37\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:843:38\\n  |\\n84|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:853:62\\n  |\\n85|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:864:49\\n  |\\n86| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:874:68\\n  |\\n87|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:888:51\\n  |\\n88| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:892:24\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PopStateEventBinding.rs:892:37\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProcessingInstructionBinding.rs:570:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProcessingInstructionBinding.rs:673:38\\n  |\\n67|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProcessingInstructionBinding.rs:683:70\\n  |\\n68|     CharacterDataBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProcessingInstructionBinding.rs:694:49\\n  |\\n69| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProcessingInstructionBinding.rs:704:76\\n  |\\n70|     CharacterDataBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProcessingInstructionBinding.rs:718:51\\n  |\\n71| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:779:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:792:24\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:792:37\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:967:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:977:62\\n  |\\n97|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:988:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:998:68\\n  |\\n99|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:1012:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:1016:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ProgressEventBinding.rs:1016:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseBinding.rs:262:67\\n  |\\n26|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseBinding.rs:272:53\\n  |\\n27|         return self.Call(s.get_context(), thisObjJS.handle());\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseBinding.rs:337:67\\n  |\\n33|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseBinding.rs:347:53\\n  |\\n34|         return self.Call(s.get_context(), thisObjJS.handle(), value);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseBinding.rs:669:21\\n  |\\n66|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseBinding.rs:680:49\\n  |\\n68| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseNativeHandlerBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseNativeHandlerBinding.rs:599:21\\n  |\\n59|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/PromiseNativeHandlerBinding.rs:610:49\\n  |\\n61| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:632:43\\n  |\\n63|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:659:43\\n  |\\n65|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:699:47\\n  |\\n69|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:739:43\\n  |\\n73|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:758:37\\n  |\\n75|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:866:38\\n  |\\n86|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:876:65\\n  |\\n87|     NodeListBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:887:49\\n  |\\n88| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:897:71\\n  |\\n89|     NodeListBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                       ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RadioNodeListBinding.rs:911:51\\n  |\\n91| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RangeBinding.rs:1938:37\\n  |\\n19|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RangeBinding.rs:2298:38\\n  |\\n22|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RangeBinding.rs:2308:21\\n  |\\n23|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RangeBinding.rs:2319:49\\n  |\\n23| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RangeBinding.rs:2342:51\\n  |\\n23| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RequestBinding.rs:1616:37\\n  |\\n16|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RequestBinding.rs:1897:38\\n  |\\n18|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RequestBinding.rs:1907:21\\n  |\\n19|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RequestBinding.rs:1918:49\\n  |\\n19| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/RequestBinding.rs:1941:51\\n  |\\n19| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ResponseBinding.rs:1154:37\\n  |\\n11|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ResponseBinding.rs:1434:38\\n  |\\n14|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ResponseBinding.rs:1444:21\\n  |\\n14|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ResponseBinding.rs:1455:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ResponseBinding.rs:1478:51\\n  |\\n14| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGElementBinding.rs:562:38\\n  |\\n56|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGElementBinding.rs:573:64\\n  |\\n57|     ElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGElementBinding.rs:584:49\\n  |\\n58| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGElementBinding.rs:594:70\\n  |\\n59|     ElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGElementBinding.rs:608:51\\n  |\\n60| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGGraphicsElementBinding.rs:562:38\\n  |\\n56|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGGraphicsElementBinding.rs:573:67\\n  |\\n57|     SVGElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGGraphicsElementBinding.rs:584:49\\n  |\\n58| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGGraphicsElementBinding.rs:594:73\\n  |\\n59|     SVGElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                         ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGGraphicsElementBinding.rs:608:51\\n  |\\n60| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGSVGElementBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGSVGElementBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGSVGElementBinding.rs:632:75\\n  |\\n63|     SVGGraphicsElementBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGSVGElementBinding.rs:643:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGSVGElementBinding.rs:653:81\\n  |\\n65|     SVGGraphicsElementBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/SVGSVGElementBinding.rs:667:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ScreenBinding.rs:597:37\\n  |\\n59|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ScreenBinding.rs:707:38\\n  |\\n70|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ScreenBinding.rs:717:21\\n  |\\n71|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ScreenBinding.rs:728:49\\n  |\\n72| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ScreenBinding.rs:751:51\\n  |\\n75| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerBinding.rs:809:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerBinding.rs:957:38\\n  |\\n95|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerBinding.rs:968:68\\n  |\\n96|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerBinding.rs:979:49\\n  |\\n97| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerBinding.rs:989:74\\n  |\\n98|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerBinding.rs:1003:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:699:37\\n  |\\n69|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:712:24\\n  |\\n71|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:712:37\\n  |\\n71|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:828:38\\n  |\\n82|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:839:68\\n  |\\n83|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:850:49\\n  |\\n85| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:860:74\\n  |\\n86|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:874:51\\n  |\\n87| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:878:24\\n  |\\n87|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerContainerBinding.rs:878:37\\n  |\\n87|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerGlobalScopeBinding.rs:608:13\\n  |\\n60|         obj.handle_mut());\\n  |             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerGlobalScopeBinding.rs:615:44\\n  |\\n61|     GetProtoObject(cx, obj.handle(), proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerGlobalScopeBinding.rs:714:38\\n  |\\n71|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerGlobalScopeBinding.rs:725:74\\n  |\\n72|     WorkerGlobalScopeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerGlobalScopeBinding.rs:736:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerGlobalScopeBinding.rs:746:80\\n  |\\n74|     WorkerGlobalScopeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerGlobalScopeBinding.rs:760:51\\n  |\\n76| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:658:37\\n  |\\n65|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:671:24\\n  |\\n67|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:671:37\\n  |\\n67|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:799:38\\n  |\\n79|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:810:68\\n  |\\n81|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:821:49\\n  |\\n82| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:831:74\\n  |\\n83|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:845:51\\n  |\\n84| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:849:24\\n  |\\n84|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServiceWorkerRegistrationBinding.rs:849:37\\n  |\\n84|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServoParserBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServoParserBinding.rs:599:21\\n  |\\n59|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ServoParserBinding.rs:610:49\\n  |\\n61| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:826:43\\n  |\\n82|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:839:43\\n  |\\n83|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:887:43\\n  |\\n88|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:927:43\\n  |\\n92|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:1001:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:1165:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:1175:21\\n  |\\n11|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:1186:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageBinding.rs:1209:51\\n  |\\n12| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:892:37\\n  |\\n89|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:905:24\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:905:37\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:1095:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:1105:62\\n  |\\n11|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:1116:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:1126:68\\n  |\\n11|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:1140:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:1144:24\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StorageEventBinding.rs:1144:37\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StylePropertyMapReadOnlyBinding.rs:663:37\\n  |\\n66|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StylePropertyMapReadOnlyBinding.rs:784:38\\n  |\\n78|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StylePropertyMapReadOnlyBinding.rs:795:21\\n  |\\n79|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StylePropertyMapReadOnlyBinding.rs:806:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StylePropertyMapReadOnlyBinding.rs:829:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetBinding.rs:692:37\\n  |\\n69|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetBinding.rs:835:38\\n  |\\n83|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetBinding.rs:845:21\\n  |\\n84|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetBinding.rs:856:49\\n  |\\n85| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetBinding.rs:879:51\\n  |\\n87| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:637:43\\n  |\\n63|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:664:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:704:47\\n  |\\n70|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:744:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:763:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:899:38\\n  |\\n89|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:909:21\\n  |\\n90|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:920:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/StyleSheetListBinding.rs:943:51\\n  |\\n94| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingBinding.rs:1779:67\\n  |\\n17|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingBinding.rs:1789:53\\n  |\\n17|         return self.Call(s.get_context(), thisObjJS.handle(), value);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingBinding.rs:19019:37\\n  |\\n19| 9   GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingBinding.rs:22445:38\\n  |\\n22| 5   GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingBinding.rs:22456:21\\n  |\\n22| 6   prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingBinding.rs:22467:49\\n  |\\n22| 7..                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingBinding.rs:22490:51\\n  |\\n22| 0..                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:682:43\\n  |\\n68|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:709:43\\n  |\\n70|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:749:47\\n  |\\n74|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:789:43\\n  |\\n78|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:808:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:998:38\\n  |\\n99|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:1009:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:1020:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingIterableBinding.rs:1043:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:777:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:928:38\\n  |\\n92|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:939:21\\n  |\\n93|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:950:49\\n  |\\n95| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:973:51\\n  |\\n97| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:1328:37\\n  |\\n13|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:1413:21\\n  |\\n14|     prototype_proto.set(JS_GetIteratorPrototype(cx));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingPairIterableBinding.rs:1424:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:881:43\\n  |\\n88|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:908:43\\n  |\\n90|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:969:47\\n  |\\n96|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:1020:43\\n  |\\n10|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:1103:37\\n  |\\n11|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:1284:38\\n  |\\n12|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:1295:68\\n  |\\n12|     TestBindingBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:1306:49\\n  |\\n13| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:1316:74\\n  |\\n13|     TestBindingBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestBindingProxyBinding.rs:1330:51\\n  |\\n13| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestRunnerBinding.rs:592:37\\n  |\\n59|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestRunnerBinding.rs:697:38\\n  |\\n69|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestRunnerBinding.rs:708:21\\n  |\\n70|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestRunnerBinding.rs:719:49\\n  |\\n71| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestRunnerBinding.rs:742:51\\n  |\\n74| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletBinding.rs:649:37\\n  |\\n64|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletBinding.rs:781:38\\n  |\\n78|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletBinding.rs:792:21\\n  |\\n79|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletBinding.rs:803:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletBinding.rs:826:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletGlobalScopeBinding.rs:602:13\\n  |\\n60|         obj.handle_mut());\\n  |             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletGlobalScopeBinding.rs:609:44\\n  |\\n60|     GetProtoObject(cx, obj.handle(), proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletGlobalScopeBinding.rs:709:38\\n  |\\n70|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletGlobalScopeBinding.rs:720:75\\n  |\\n72|     WorkletGlobalScopeBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletGlobalScopeBinding.rs:731:49\\n  |\\n73| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletGlobalScopeBinding.rs:741:81\\n  |\\n74|     WorkletGlobalScopeBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TestWorkletGlobalScopeBinding.rs:755:51\\n  |\\n75| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextBinding.rs:623:37\\n  |\\n62|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextBinding.rs:781:38\\n  |\\n78|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextBinding.rs:791:70\\n  |\\n79|     CharacterDataBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextBinding.rs:802:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextBinding.rs:812:76\\n  |\\n81|     CharacterDataBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextBinding.rs:826:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextDecoderBinding.rs:712:37\\n  |\\n71|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextDecoderBinding.rs:890:38\\n  |\\n89|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextDecoderBinding.rs:900:21\\n  |\\n90|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextDecoderBinding.rs:911:49\\n  |\\n91| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextDecoderBinding.rs:934:51\\n  |\\n93| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextEncoderBinding.rs:613:37\\n  |\\n61|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextEncoderBinding.rs:756:38\\n  |\\n75|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextEncoderBinding.rs:766:21\\n  |\\n76|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextEncoderBinding.rs:777:49\\n  |\\n77| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TextEncoderBinding.rs:800:51\\n  |\\n80| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchBinding.rs:772:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchBinding.rs:924:38\\n  |\\n92|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchBinding.rs:934:21\\n  |\\n93|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchBinding.rs:945:49\\n  |\\n94| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchBinding.rs:968:51\\n  |\\n96| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:774:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:787:24\\n  |\\n78|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:787:37\\n  |\\n78|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:943:38\\n  |\\n94|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:953:64\\n  |\\n95|     UIEventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:964:49\\n  |\\n96| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:974:70\\n  |\\n97|     UIEventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:988:51\\n  |\\n98| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:992:24\\n  |\\n99|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchEventBinding.rs:992:37\\n  |\\n99|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:637:43\\n  |\\n63|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:664:43\\n  |\\n66|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:704:47\\n  |\\n70|             get_expando_object(proxy, expando.handle_mut());\\n  |                                               ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:744:43\\n  |\\n74|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:763:37\\n  |\\n76|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:899:38\\n  |\\n89|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:909:21\\n  |\\n90|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:920:49\\n  |\\n92| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TouchListBinding.rs:943:51\\n  |\\n94| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:779:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:792:24\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:792:37\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:968:38\\n  |\\n96|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:978:62\\n  |\\n97|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:989:49\\n  |\\n98| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:999:68\\n  |\\n99|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:1013:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:1017:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TransitionEventBinding.rs:1017:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TreeWalkerBinding.rs:967:37\\n  |\\n96|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TreeWalkerBinding.rs:1162:38\\n  |\\n11|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TreeWalkerBinding.rs:1172:21\\n  |\\n11|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TreeWalkerBinding.rs:1183:49\\n  |\\n11| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/TreeWalkerBinding.rs:1206:51\\n  |\\n12| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:833:37\\n  |\\n83|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:846:24\\n  |\\n84|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:846:37\\n  |\\n84|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:1055:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:1065:62\\n  |\\n10|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:1076:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:1086:68\\n  |\\n10|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:1100:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:1110:24\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/UIEventBinding.rs:1110:37\\n  |\\n11|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLBinding.rs:1369:37\\n  |\\n13|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLBinding.rs:1658:38\\n  |\\n16|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLBinding.rs:1668:21\\n  |\\n16|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLBinding.rs:1679:49\\n  |\\n16| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLBinding.rs:1702:51\\n  |\\n17| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1048:37\\n  |\\n10|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1261:38\\n  |\\n12|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1271:21\\n  |\\n12|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1282:49\\n  |\\n12| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1305:51\\n  |\\n13| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1660:37\\n  |\\n16|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1745:21\\n  |\\n17|     prototype_proto.set(JS_GetIteratorPrototype(cx));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/URLSearchParamsBinding.rs:1756:49\\n  |\\n17| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRBinding.rs:571:37\\n  |\\n57|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRBinding.rs:656:21\\n  |\\n65|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRBinding.rs:667:49\\n  |\\n66| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayBinding.rs:1285:37\\n  |\\n12|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayBinding.rs:1533:38\\n  |\\n15|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayBinding.rs:1544:68\\n  |\\n15|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayBinding.rs:1555:49\\n  |\\n15| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayBinding.rs:1565:74\\n  |\\n15|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayBinding.rs:1579:51\\n  |\\n15| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayCapabilitiesBinding.rs:684:37\\n  |\\n68|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayCapabilitiesBinding.rs:815:38\\n  |\\n81|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayCapabilitiesBinding.rs:826:21\\n  |\\n82|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayCapabilitiesBinding.rs:837:49\\n  |\\n83| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayCapabilitiesBinding.rs:860:51\\n  |\\n86| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:778:37\\n  |\\n77|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:791:24\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:791:37\\n  |\\n79|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:956:38\\n  |\\n95|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:967:62\\n  |\\n96|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:978:49\\n  |\\n97| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:988:68\\n  |\\n98|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:1002:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:1006:24\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRDisplayEventBinding.rs:1006:37\\n  |\\n10|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VREyeParametersBinding.rs:656:37\\n  |\\n65|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VREyeParametersBinding.rs:780:38\\n  |\\n78|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VREyeParametersBinding.rs:791:21\\n  |\\n79|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VREyeParametersBinding.rs:802:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VREyeParametersBinding.rs:825:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFieldOfViewBinding.rs:655:37\\n  |\\n65|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFieldOfViewBinding.rs:779:38\\n  |\\n77|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFieldOfViewBinding.rs:790:21\\n  |\\n79|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFieldOfViewBinding.rs:801:49\\n  |\\n80| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFieldOfViewBinding.rs:824:51\\n  |\\n82| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFrameDataBinding.rs:714:37\\n  |\\n71|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFrameDataBinding.rs:871:38\\n  |\\n87|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFrameDataBinding.rs:882:21\\n  |\\n88|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFrameDataBinding.rs:893:49\\n  |\\n89| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRFrameDataBinding.rs:916:51\\n  |\\n91| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRPoseBinding.rs:713:37\\n  |\\n71|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRPoseBinding.rs:851:38\\n  |\\n85|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRPoseBinding.rs:862:21\\n  |\\n86|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRPoseBinding.rs:873:49\\n  |\\n87| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRPoseBinding.rs:896:51\\n  |\\n89| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRStageParametersBinding.rs:626:37\\n  |\\n62|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRStageParametersBinding.rs:743:38\\n  |\\n74|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRStageParametersBinding.rs:754:21\\n  |\\n75|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRStageParametersBinding.rs:765:49\\n  |\\n76| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VRStageParametersBinding.rs:788:51\\n  |\\n78| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ValidityStateBinding.rs:858:37\\n  |\\n85|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ValidityStateBinding.rs:1031:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ValidityStateBinding.rs:1041:21\\n  |\\n10|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ValidityStateBinding.rs:1052:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/ValidityStateBinding.rs:1075:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VoidFunctionBinding.rs:262:67\\n  |\\n26|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/VoidFunctionBinding.rs:272:53\\n  |\\n27|         return self.Call(s.get_context(), thisObjJS.handle());\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGL2RenderingContextBinding.rs:9787:37\\n  |\\n97|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGL2RenderingContextBinding.rs:11556:38\\n  |\\n11| 6   GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGL2RenderingContextBinding.rs:11567:21\\n  |\\n11| 7   prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGL2RenderingContextBinding.rs:11578:49\\n  |\\n11| 8..                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGL2RenderingContextBinding.rs:11601:51\\n  |\\n11| 1..                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLActiveInfoBinding.rs:626:37\\n  |\\n62|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLActiveInfoBinding.rs:743:38\\n  |\\n74|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLActiveInfoBinding.rs:753:21\\n  |\\n75|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLActiveInfoBinding.rs:764:49\\n  |\\n76| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLActiveInfoBinding.rs:787:51\\n  |\\n78| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLBufferBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLBufferBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLBufferBinding.rs:631:68\\n  |\\n63|     WebGLObjectBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLBufferBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLBufferBinding.rs:652:74\\n  |\\n65|     WebGLObjectBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLBufferBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:676:37\\n  |\\n67|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:689:24\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:689:37\\n  |\\n68|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:851:38\\n  |\\n85|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:861:62\\n  |\\n86|     EventBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                              ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:872:49\\n  |\\n87| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:882:68\\n  |\\n88|     EventBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:896:51\\n  |\\n89| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:900:24\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLContextEventBinding.rs:900:37\\n  |\\n90|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLFramebufferBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLFramebufferBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLFramebufferBinding.rs:631:68\\n  |\\n63|     WebGLObjectBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLFramebufferBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLFramebufferBinding.rs:652:74\\n  |\\n65|     WebGLObjectBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLFramebufferBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLObjectBinding.rs:560:38\\n  |\\n56|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLObjectBinding.rs:570:21\\n  |\\n57|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLObjectBinding.rs:581:49\\n  |\\n58| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLObjectBinding.rs:604:51\\n  |\\n60| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLProgramBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLProgramBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLProgramBinding.rs:631:68\\n  |\\n63|     WebGLObjectBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLProgramBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLProgramBinding.rs:652:74\\n  |\\n65|     WebGLObjectBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLProgramBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderbufferBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderbufferBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderbufferBinding.rs:631:68\\n  |\\n63|     WebGLObjectBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderbufferBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderbufferBinding.rs:652:74\\n  |\\n65|     WebGLObjectBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderbufferBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderingContextBinding.rs:9784:37\\n  |\\n97|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderingContextBinding.rs:11290:38\\n  |\\n11| 0   GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderingContextBinding.rs:11300:21\\n  |\\n11| 0   prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderingContextBinding.rs:11311:49\\n  |\\n11| 1..                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLRenderingContextBinding.rs:11334:51\\n  |\\n11| 4..                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderBinding.rs:631:68\\n  |\\n63|     WebGLObjectBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderBinding.rs:652:74\\n  |\\n65|     WebGLObjectBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderPrecisionFormatBinding.rs:626:37\\n  |\\n62|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderPrecisionFormatBinding.rs:743:38\\n  |\\n74|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderPrecisionFormatBinding.rs:753:21\\n  |\\n75|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderPrecisionFormatBinding.rs:764:49\\n  |\\n76| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLShaderPrecisionFormatBinding.rs:787:51\\n  |\\n78| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLTextureBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLTextureBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLTextureBinding.rs:631:68\\n  |\\n63|     WebGLObjectBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLTextureBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLTextureBinding.rs:652:74\\n  |\\n65|     WebGLObjectBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLTextureBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLUniformLocationBinding.rs:539:37\\n  |\\n53|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLUniformLocationBinding.rs:619:38\\n  |\\n61|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLUniformLocationBinding.rs:629:21\\n  |\\n62|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLUniformLocationBinding.rs:640:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLUniformLocationBinding.rs:663:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLVertexArrayObjectOESBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLVertexArrayObjectOESBinding.rs:601:68\\n  |\\n60|     WebGLObjectBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebGLVertexArrayObjectOESBinding.rs:612:49\\n  |\\n61| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebSocketBinding.rs:1154:37\\n  |\\n11|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebSocketBinding.rs:1407:38\\n  |\\n14|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebSocketBinding.rs:1417:68\\n  |\\n14|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebSocketBinding.rs:1428:49\\n  |\\n14| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebSocketBinding.rs:1438:74\\n  |\\n14|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WebSocketBinding.rs:1452:51\\n  |\\n14| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:461:67\\n  |\\n46|         wrap_call_this_object(s.get_context(), thisObj, thisObjJS.handle_mut());\\n  |                                                                   ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:471:53\\n  |\\n47|         return self.Call(s.get_context(), thisObjJS.handle(), time);\\n  |                                                     ^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:8906:13\\n  |\\n89|         obj.handle_mut());\\n  |             ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:8913:44\\n  |\\n89|     GetProtoObject(cx, obj.handle(), proto.handle_mut());\\n  |                                            ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:8923:24\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:8923:37\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:10221:38\\n  |\\n10| 1   GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:10231:68\\n  |\\n10| 1   EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:10242:49\\n  |\\n10| 2..                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:10252:74\\n  |\\n10| 2   EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:10266:51\\n  |\\n10| 6..                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:10270:24\\n  |\\n10| 0   unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WindowBinding.rs:10270:37\\n  |\\n10| 0   unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerBinding.rs:739:37\\n  |\\n73|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerBinding.rs:914:38\\n  |\\n91|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerBinding.rs:924:68\\n  |\\n92|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerBinding.rs:935:49\\n  |\\n93| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerBinding.rs:945:74\\n  |\\n94|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerBinding.rs:959:51\\n  |\\n95| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerGlobalScopeBinding.rs:1806:38\\n  |\\n18|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerGlobalScopeBinding.rs:1816:68\\n  |\\n18|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerGlobalScopeBinding.rs:1827:49\\n  |\\n18| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerGlobalScopeBinding.rs:1837:74\\n  |\\n18|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerGlobalScopeBinding.rs:1851:51\\n  |\\n18| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerLocationBinding.rs:802:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerLocationBinding.rs:976:38\\n  |\\n97|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerLocationBinding.rs:986:21\\n  |\\n98|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerLocationBinding.rs:997:49\\n  |\\n99| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerLocationBinding.rs:1020:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerNavigatorBinding.rs:803:37\\n  |\\n80|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerNavigatorBinding.rs:986:38\\n  |\\n98|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerNavigatorBinding.rs:996:21\\n  |\\n99|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerNavigatorBinding.rs:1007:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkerNavigatorBinding.rs:1030:51\\n  |\\n10| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletBinding.rs:667:37\\n  |\\n66|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletBinding.rs:772:38\\n  |\\n77|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletBinding.rs:783:21\\n  |\\n78|     prototype_proto.set(JS_GetObjectPrototype(cx, global));\\n  |                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletBinding.rs:794:49\\n  |\\n79| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletBinding.rs:817:51\\n  |\\n81| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletGlobalScopeBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletGlobalScopeBinding.rs:639:38\\n  |\\n63|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletGlobalScopeBinding.rs:650:68\\n  |\\n65|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletGlobalScopeBinding.rs:661:49\\n  |\\n66| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletGlobalScopeBinding.rs:671:74\\n  |\\n67|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/WorkletGlobalScopeBinding.rs:685:51\\n  |\\n68| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:597:43\\n  |\\n59|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:610:43\\n  |\\n61|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:658:43\\n  |\\n65|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:698:43\\n  |\\n69|         get_expando_object(proxy, expando.handle_mut());\\n  |                                           ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:733:37\\n  |\\n73|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:749:53\\n  |\\n74|     ensure_expando_object(cx, obj.handle(), expando.handle_mut());\\n  |                                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:751:24\\n  |\\n75|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:751:37\\n  |\\n75|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:847:38\\n  |\\n84|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:857:65\\n  |\\n85|     DocumentBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:868:49\\n  |\\n86| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:878:71\\n  |\\n87|     DocumentBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                       ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:892:51\\n  |\\n89| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:896:24\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLDocumentBinding.rs:896:37\\n  |\\n89|     unforgeable_holder.handle_mut().set(\\n  |                                     ^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestBinding.rs:1685:37\\n  |\\n16|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestBinding.rs:1970:38\\n  |\\n19|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestBinding.rs:1980:82\\n  |\\n19|     XMLHttpRequestEventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                                  ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestBinding.rs:1991:49\\n  |\\n19| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestBinding.rs:2001:88\\n  |\\n20|     XMLHttpRequestEventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestBinding.rs:2015:51\\n  |\\n20| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestEventTargetBinding.rs:1062:38\\n  |\\n10|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestEventTargetBinding.rs:1072:68\\n  |\\n10|     EventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                    ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestEventTargetBinding.rs:1083:49\\n  |\\n10| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestEventTargetBinding.rs:1093:74\\n  |\\n10|     EventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                          ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestEventTargetBinding.rs:1107:51\\n  |\\n11| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestUploadBinding.rs:541:37\\n  |\\n54|     GetProtoObject(cx, scope, proto.handle_mut());\\n  |                                     ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestUploadBinding.rs:621:38\\n  |\\n62|     GetProtoObject(cx, global, proto.handle_mut());\\n  |                                      ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestUploadBinding.rs:631:82\\n  |\\n63|     XMLHttpRequestEventTargetBinding::GetProtoObject(cx, global, prototype_proto.handle_mut());\\n  |                                                                                  ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestUploadBinding.rs:642:49\\n  |\\n64| ...                   prototype.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestUploadBinding.rs:652:88\\n  |\\n65|     XMLHttpRequestEventTargetBinding::GetConstructorObject(cx, global, interface_proto.handle_mut());\\n  |                                                                                        ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: type annotations needed\\n --> /tmp/.tmpKiipn6/target/debug/build/script-5b8f5a25429a352f/out/Bindings/XMLHttpRequestUploadBinding.rs:666:51\\n  |\\n66| ...                   interface.handle_mut());\\n  |                                 ^^^^^^^^^^\\n  |\\n  = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\\n  = note: for more information, see issue #46906 <https://github.com/rust-lang/rust/issues/46906>\\n\\nwarning: unused variable: `sequential`\\n --> components/script/script_thread.rs:925:17\\n  |\\n92|         let mut sequential = vec![];\\n  |                 ^^^^^^^^^^ help: consider prefixing with an underscore: `_sequential`\\n  |\\n  = note: `#[warn(unused_variables)]` on by default\\n\\nwarning: unused variable: `event`\\n   --> components/script/script_thread.rs:929:17\\n    |\\n929 |         let mut event = {\\n    |                 ^^^^^ help: consider prefixing with an underscore: `_event`\\n\\nwarning: unused variable: `msg_from_constellation`\\n   --> components/script/serviceworker_manager.rs:189:13\\n    |\\n189 |         let msg_from_constellation = &self.own_port;\\n    |             ^^^^^^^^^^^^^^^^^^^^^^ help: consider prefixing with an underscore: `_msg_from_constellation`\\n\\nwarning: unused variable: `msg_from_resource`\\n   --> components/script/serviceworker_manager.rs:190:13\\n    |\\n190 |         let msg_from_resource = &self.resource_receiver;\\n    |             ^^^^^^^^^^^^^^^^^ help: consider prefixing with an underscore: `_msg_from_resource`\\n\\nwarning: variable does not need to be mutable\\n --> components/script/script_thread.rs:925:13\\n  |\\n92|         let mut sequential = vec![];\\n  |             ----^^^^^^^^^^\\n  |             |\\n  |             help: remove this `mut`\\n  |\\n  = note: `#[warn(unused_mut)]` on by default\\n\\nwarning: variant is never constructed: `FromWorker`\\n --> components/script/dom/dedicatedworkerglobalscope.rs:73:5\\n  |\\n73|     FromWorker((TrustedWorkerAddress, WorkerScriptMsg)),\\n  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(dead_code)]` on by default\\n\\nwarning: variant is never constructed: `FromScheduler`\\n  --> components/script/dom/dedicatedworkerglobalscope.rs:74:5\\n   |\\n74 |     FromScheduler((TrustedWorkerAddress, TimerEvent)),\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variant is never constructed: `FromDevtools`\\n  --> components/script/dom/dedicatedworkerglobalscope.rs:75:5\\n   |\\n75 |     FromDevtools(DevtoolScriptControlMsg)\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variant is never constructed: `FromServiceWorker`\\n  --> components/script/dom/serviceworkerglobalscope.rs:46:5\\n   |\\n46 |     FromServiceWorker(ServiceWorkerScriptMsg),\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variant is never constructed: `FromDevtools`\\n  --> components/script/dom/serviceworkerglobalscope.rs:47:5\\n   |\\n47 |     FromDevtools(DevtoolScriptControlMsg),\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variant is never constructed: `FromTimeoutThread`\\n  --> components/script/dom/serviceworkerglobalscope.rs:48:5\\n   |\\n48 |     FromTimeoutThread(())\\n   |     ^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: method is never used: `from_devtools_sender`\\n   --> components/script/dom/workerglobalscope.rs:132:5\\n    |\\n132 |     pub fn from_devtools_sender(&self) -> Option<IpcSender<DevtoolScriptControlMsg>> {\\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: method is never used: `from_devtools_receiver`\\n   --> components/script/dom/workerglobalscope.rs:136:5\\n    |\\n136 |     pub fn from_devtools_receiver(&self) -> &Receiver<DevtoolScriptControlMsg> {\\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variant is never constructed: `FromResource`\\n  --> components/script/serviceworker_manager.rs:26:5\\n   |\\n26 |     FromResource(CustomResponseMediator),\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variant is never constructed: `FromConstellation`\\n  --> components/script/serviceworker_manager.rs:27:5\\n   |\\n27 |     FromConstellation(ServiceWorkerMsg)\\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpKiipn6/self-profile-output\\\"; prefix is \\\"script-13282\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `script`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=178420099178;;instructions:u;41915405303;100.00;1.10;insn per cycle\\n161867416206;;cycles:u;41915405303;100.00;3.862;GHz\\n41915.243062;;task-clock;41915243062;100.00;1.000;CPUs utilized\\n41915.268208;;cpu-clock;41915243062;100.00;1.000;CPUs utilized\\n663068;;faults;41915243062;100.00;0.016;M/sec\\n2404568;;max-rss;3;100.00\\n41.970945401;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"sentry-cli":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=   Compiling sentry-cli v1.21.0 (/tmp/.tmpeyU8he)\\n    Checking backtrace-sys v0.1.14\\n    Checking bzip2-sys v0.1.6\\n    Checking miniz-sys v0.1.10\\n   Compiling curl-sys v0.3.15\\n    Checking openssl-sys v0.9.17\\n    Checking libz-sys v1.0.17\\n   Compiling derive-error-chain v0.10.1\\n    Checking runas v0.1.4\\n    Checking uchardet-sys v2.0.0\\n    Checking backtrace v0.3.3\\n    Checking bzip2 v0.3.2\\n    Checking flate2 v0.2.20\\n    Checking libgit2-sys v0.6.15\\n    Checking sourcemap v1.2.0\\n    Checking plist v0.2.3\\n    Checking string_cache v0.6.2\\n    Checking error-chain v0.10.0\\n    Checking git2 v0.6.8\\n    Checking elementtree v0.5.0\\n    Checking uchardet v2.0.0\\n    Checking proguard v0.3.0\\n    Checking zip v0.2.6\\n    Checking dotenv v0.10.1\\n    Checking curl v0.4.8\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/api.rs:673:36\\n  |\\n67|                         read: &mut FnMut(&mut [u8]) -> usize)\\n  |                                    ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&mut [u8]) -> usize`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: the item `runas` is imported redundantly\\n --> src/commands/uninstall.rs:26:9\\n  |\\n26|     use runas;\\n  |         ^^^^^\\n  | \\n ::: src/main.rs:29:1\\n  |\\n29| extern crate runas;\\n  | ------------------- the item `runas` is already imported here\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: the item `chan` is imported redundantly\\n  --> src/utils/system.rs:19:9\\n   |\\n19 |     use chan;\\n   |         ^^^^\\n   | \\n  ::: src/main.rs:9:1\\n   |\\n9  | extern crate chan;\\n   | ------------------ the item `chan` is already imported here\\n\\nwarning: the item `Signal` is imported redundantly\\n  --> src/utils/system.rs:33:13\\n   |\\n11 | use chan_signal::{notify, Signal};\\n   |                           ------ the item `Signal` is already imported here\\n...\\n33 |         use chan_signal::Signal;\\n   |             ^^^^^^^^^^^^^^^^^^^\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n  --> src/api.rs:15:5\\n   |\\n15 | use std::ascii::AsciiExt;\\n   |     ^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n  --> src/utils/ui.rs:41:9\\n   |\\n41 |     use std::ascii::AsciiExt;\\n   |         ^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: variable does not need to be mutable\\n --> src/api.rs:685:13\\n  |\\n68|         let mut headers = &mut headers;\\n  |             ----^^^^^^^\\n  |             |\\n  |             help: remove this `mut`\\n  |\\n  = note: `#[warn(unused_mut)]` on by default\\n\\nwarning: variable does not need to be mutable\\n   --> src/commands/upload_dsym.rs:287:21\\n    |\\n287 |                 let mut archive = archive_ptr.as_mut().unwrap();\\n    |                     ----^^^^^^^\\n    |                     |\\n    |                     help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/commands/upload_dsym.rs:436:17\\n    |\\n436 |             let mut r = &mut refs[idx];\\n    |                 ----^\\n    |                 |\\n    |                 help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/commands/releases.rs:428:21\\n    |\\n428 |                 let mut row = table.add_row();\\n    |                     ----^^^\\n    |                     |\\n    |                     help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/commands/releases.rs:471:13\\n    |\\n471 |         let mut row = table.add_row();\\n    |             ----^^^\\n    |             |\\n    |             help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> src/commands/releases.rs:551:13\\n    |\\n551 |         let mut row = table.add_row();\\n    |             ----^^^\\n    |             |\\n    |             help: remove this `mut`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpeyU8he/self-profile-output\\\"; prefix is \\\"sentry_cli-16475\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `sentry-cli`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=10252266930;;instructions:u;2199406999;100.00;1.20;insn per cycle\\n8535890920;;cycles:u;2199406999;100.00;3.881;GHz\\n2199.391980;;task-clock;2199391980;100.00;1.000;CPUs utilized\\n2199.401404;;cpu-clock;2199391980;100.00;1.000;CPUs utilized\\n35832;;faults;2199391980;100.00;0.016;M/sec\\n251136;;max-rss;3;100.00\\n2.241721040;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"serde":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking serde v1.0.37 (/tmp/.tmpWeJxfy/serde)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> serde/src/de/mod.rs:199:54\\n  |\\n19|             fn invalid_type(unexp: Unexpected, exp: &Expected) -> Self {\\n  |                                                      ^^^^^^^^ help: use `dyn`: `dyn Expected`\\n...\\n27| declare_error_trait!(Error: Sized + error::Error);\\n  | -------------------------------------------------- in this macro invocation\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> serde/src/de/mod.rs:216:55\\n    |\\n216 |             fn invalid_value(unexp: Unexpected, exp: &Expected) -> Self {\\n    |                                                       ^^^^^^^^ help: use `dyn`: `dyn Expected`\\n...\\n276 | declare_error_trait!(Error: Sized + error::Error);\\n    | -------------------------------------------------- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> serde/src/de/mod.rs:229:49\\n    |\\n229 |             fn invalid_length(len: usize, exp: &Expected) -> Self {\\n    |                                                 ^^^^^^^^ help: use `dyn`: `dyn Expected`\\n...\\n276 | declare_error_trait!(Error: Sized + error::Error);\\n    | -------------------------------------------------- in this macro invocation\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> serde/src/de/mod.rs:466:22\\n    |\\n466 | impl<\\'a> Display for Expected + \\'a {\\n    |                      ^^^^^^^^^^^^^ help: use `dyn`: `dyn Expected + \\'a`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpWeJxfy/self-profile-output\\\"; prefix is \\\"serde-16519\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `serde`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=25323930585;;instructions:u;4512499003;100.00;1.43;insn per cycle\\n17752748487;;cycles:u;4512499003;100.00;3.934;GHz\\n4512.479671;;task-clock;4512479671;100.00;0.996;CPUs utilized\\n4512.480560;;cpu-clock;4512479671;100.00;0.996;CPUs utilized\\n39719;;faults;4512479671;100.00;0.009;M/sec\\n247152;;max-rss;3;100.00\\n4.571405321;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"style-servo":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking nsstring_vendor v0.1.0 (/tmp/.tmp8TPX3Y/components/style/gecko_bindings/nsstring_vendor)\\n    Checking heapsize v0.4.1\\n    Checking servo_arc v0.0.1 (/tmp/.tmp8TPX3Y/components/servo_arc)\\n    Checking rayon-core v1.2.1\\n   Compiling style v0.0.1 (/tmp/.tmp8TPX3Y/components/style)\\n   Compiling cssparser v0.22.1 (/tmp/.tmp8TPX3Y/rust-cssparser)\\n   Compiling synstructure v0.5.2\\n    Checking lru_cache v0.0.1 (/tmp/.tmp8TPX3Y/components/lru_cache)\\n   Compiling cssparser-macros v0.3.0\\n   Compiling selectors v0.19.0 (/tmp/.tmp8TPX3Y/components/selectors)\\n   Compiling darling_macro v0.2.0\\n    Checking app_units v0.5.6\\n    Checking euclid v0.15.1\\n    Checking hashglobe v0.1.0 (/tmp/.tmp8TPX3Y/components/hashglobe)\\n   Compiling malloc_size_of_derive v0.0.1 (/tmp/.tmp8TPX3Y/components/malloc_size_of_derive)\\n    Checking rayon v0.8.2\\n   Compiling darling v0.2.0\\n    Checking fallible v0.0.1 (/tmp/.tmp8TPX3Y/components/fallible)\\n   Compiling style_derive v0.0.1 (/tmp/.tmp8TPX3Y/components/style_derive)\\n    Checking malloc_size_of v0.0.1 (/tmp/.tmp8TPX3Y/components/malloc_size_of)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> components/malloc_size_of/lib.rs:75:27\\n  |\\n75| type VoidPtrToBoolFnMut = FnMut(*const c_void) -> bool;\\n  |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(*const c_void) -> bool`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> components/selectors/attr.rs:7:5\\n  |\\n7 | use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nwarning: unused import: `std::ascii::AsciiExt`\\n  --> components/selectors/parser.rs:17:5\\n   |\\n17 | use std::ascii::AsciiExt;\\n   |     ^^^^^^^^^^^^^^^^^^^^\\n\\n    Checking style_traits v0.0.1 (/tmp/.tmp8TPX3Y/components/style_traits)\\nwarning: unused import: `std::ascii::AsciiExt`\\n --> components/style_traits/viewport.rs:10:5\\n  |\\n10| use std::ascii::AsciiExt;\\n  |     ^^^^^^^^^^^^^^^^^^^^\\n  |\\n  = note: `#[warn(unused_imports)]` on by default\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp8TPX3Y/self-profile-output\\\"; prefix is \\\"style-17636\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `style`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=113035907384;;instructions:u;26145943524;100.00;1.11;insn per cycle\\n101987231234;;cycles:u;26145943524;100.00;3.901;GHz\\n26145.863782;;task-clock;26145863782;100.00;1.000;CPUs utilized\\n26145.865216;;cpu-clock;26145863782;100.00;1.000;CPUs utilized\\n340759;;faults;26145863782;100.00;0.013;M/sec\\n1359200;;max-rss;3;100.00\\n26.188206091;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"syn":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking synom v0.11.3 (/tmp/.tmpbUPyim/synom)\\n    Checking syn v0.11.11 (/tmp/.tmpbUPyim)\\nwarning: unused doc comment\\n --> src/expr.rs:748:5\\n  |\\n74| /     /// ```ignore\\n74| |     /// <placement> = <placement> ..\\n75| |     /// <placement> += <placement> ..\\n75| |     /// <placement> -= <placement> ..\\n... |\\n76| |     ///\\n76| |     /// NOTE: This operator is right-associative.\\n  | |_________________________________________________^\\n76|       #[cfg(feature = \\\"full\\\")]\\n76| /     named!(assign_expr(allow_struct: bool, allow_block: bool) -> ExprKind, do_parse!(\\n76| |         mut e: call!(placement_expr, allow_struct, allow_block) >>\\n76| |         alt!(\\n76| |             do_parse!(\\n... |\\n79| |         (e)\\n79| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = note: `#[warn(unused_doc_comments)]` on by default\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:798:5\\n  |\\n79| /     /// ```ignore\\n79| |     /// <range> <- <range> ..\\n80| |     /// ```\\n80| |     ///\\n... |\\n80| |     ///\\n80| |     /// NOTE: This operator is right-associative.\\n  | |_________________________________________________^\\n80|       #[cfg(feature = \\\"full\\\")]\\n80| /     named!(placement_expr(allow_struct: bool, allow_block: bool) -> ExprKind, do_parse!(\\n80| |         mut e: call!(range_expr, allow_struct, allow_block) >>\\n80| |         alt!(\\n81| |             do_parse!(\\n... |\\n82| |         (e)\\n82| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:829:5\\n  |\\n82| /     /// ```ignore\\n83| |     /// <or> ... <or> ..\\n83| |     /// <or> .. <or> ..\\n83| |     /// <or> ..\\n... |\\n84| |     /// NOTE: The form of ranges which don\\'t include a preceding expression are\\n84| |     /// parsed by `atom_expr`, rather than by this function.\\n  | |____________________________________________________________^\\n84|       #[cfg(feature = \\\"full\\\")]\\n84| /     named!(range_expr(allow_struct: bool, allow_block: bool) -> ExprKind, do_parse!(\\n84| |         mut e: call!(or_expr, allow_struct, allow_block) >>\\n84| |         many0!(do_parse!(\\n84| |             limits: syn!(RangeLimits) >>\\n... |\\n85| |         (e)\\n85| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:861:5\\n  |\\n86| /     /// ```ignore\\n86| |     /// <and> || <and> ...\\n86| |     /// ```\\n  | |___________^\\n86|       binop!(or_expr, and_expr, map!(syn!(OrOr), BinOp::Or));\\n  |       ------------------------------------------------------- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:866:5\\n  |\\n86| /     /// ```ignore\\n86| |     /// <compare> && <compare> ...\\n86| |     /// ```\\n  | |___________^\\n86|       binop!(and_expr, compare_expr, map!(syn!(AndAnd), BinOp::And));\\n  |       --------------------------------------------------------------- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:871:5\\n  |\\n87| /     /// ```ignore\\n87| |     /// <bitor> == <bitor> ...\\n87| |     /// <bitor> != <bitor> ...\\n87| |     /// <bitor> >= <bitor> ...\\n... |\\n88| |     /// NOTE: This operator appears to be parsed as left-associative, but errors\\n88| |     /// if it is used in a non-associative manner.\\n  | |__________________________________________________^\\n88| /     binop!(compare_expr, bitor_expr, alt!(\\n88| |         syn!(EqEq) => { BinOp::Eq }\\n88| |         |\\n88| |         syn!(Ne) => { BinOp::Ne }\\n... |\\n90| |         syn!(Gt) => { BinOp::Gt }\\n90| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:903:5\\n  |\\n90| /     /// ```ignore\\n90| |     /// <bitxor> | <bitxor> ...\\n90| |     /// ```\\n  | |___________^\\n90| /     binop!(bitor_expr, bitxor_expr, do_parse!(\\n90| |         not!(syn!(OrOr)) >>\\n90| |         not!(syn!(OrEq)) >>\\n90| |         t: syn!(Or) >>\\n91| |         (BinOp::BitOr(t))\\n91| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:913:5\\n  |\\n91| /     /// ```ignore\\n91| |     /// <bitand> ^ <bitand> ...\\n91| |     /// ```\\n  | |___________^\\n91| /     binop!(bitxor_expr, bitand_expr, do_parse!(\\n91| |         // NOTE: Make sure we aren\\'t looking at ^=.\\n91| |         not!(syn!(CaretEq)) >>\\n91| |         t: syn!(Caret) >>\\n92| |         (BinOp::BitXor(t))\\n92| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:923:5\\n  |\\n92| /     /// ```ignore\\n92| |     /// <shift> & <shift> ...\\n92| |     /// ```\\n  | |___________^\\n92| /     binop!(bitand_expr, shift_expr, do_parse!(\\n92| |         // NOTE: Make sure we aren\\'t looking at && or &=.\\n92| |         not!(syn!(AndAnd)) >>\\n92| |         not!(syn!(AndEq)) >>\\n93| |         t: syn!(And) >>\\n93| |         (BinOp::BitAnd(t))\\n93| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:934:5\\n  |\\n93| /     /// ```ignore\\n93| |     /// <arith> << <arith> ...\\n93| |     /// <arith> >> <arith> ...\\n93| |     /// ```\\n  | |___________^\\n93| /     binop!(shift_expr, arith_expr, alt!(\\n93| |         syn!(Shl) => { BinOp::Shl }\\n94| |         |\\n94| |         syn!(Shr) => { BinOp::Shr }\\n94| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:944:5\\n  |\\n94| /     /// ```ignore\\n94| |     /// <term> + <term> ...\\n94| |     /// <term> - <term> ...\\n94| |     /// ```\\n  | |___________^\\n94| /     binop!(arith_expr, term_expr, alt!(\\n94| |         syn!(Add) => { BinOp::Add }\\n95| |         |\\n95| |         syn!(Sub) => { BinOp::Sub }\\n95| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:954:5\\n  |\\n95| /     /// ```ignore\\n95| |     /// <cast> * <cast> ...\\n95| |     /// <cast> / <cast> ...\\n95| |     /// <cast> % <cast> ...\\n95| |     /// ```\\n  | |___________^\\n95| /     binop!(term_expr, cast_expr, alt!(\\n96| |         syn!(Star) => { BinOp::Mul }\\n96| |         |\\n96| |         syn!(Div) => { BinOp::Div }\\n96| |         |\\n96| |         syn!(Rem) => { BinOp::Rem }\\n96| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:967:5\\n  |\\n96| /     /// ```ignore\\n96| |     /// <unary> as <ty>\\n96| |     /// <unary> : <ty>\\n97| |     /// ```\\n  | |___________^\\n97| /     named!(cast_expr(allow_struct: bool, allow_block: bool) -> ExprKind, do_parse!(\\n97| |         mut e: call!(unary_expr, allow_struct, allow_block) >>\\n97| |         many0!(alt!(\\n97| |             do_parse!(\\n... |\\n10| |         (e)\\n10| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:1005:5\\n  |\\n10| /     /// ```\\n10| |     /// <UnOp> <trailer>\\n10| |     /// & <trailer>\\n10| |     /// &mut <trailer>\\n10| |     /// box <trailer>\\n10| |     /// ```\\n  | |___________^\\n10|       #[cfg(feature = \\\"full\\\")]\\n10| /     named!(unary_expr(allow_struct: bool, allow_block: bool) -> ExprKind, alt!(\\n10| |         do_parse!(\\n10| |             op: syn!(UnOp) >>\\n10| |             expr: call!(unary_expr, allow_struct, true) >>\\n... |\\n10| |         call!(trailer_expr, allow_struct, allow_block)\\n10| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:1060:5\\n  |\\n10| /     /// ```ignore\\n10| |     /// <atom> (..<args>) ...\\n10| |     /// <atom> . <ident> (..<args>) ...\\n10| |     /// <atom> . <ident> ...\\n... |\\n10| |     /// <atom> ? ...\\n10| |     /// ```\\n  | |___________^\\n10|       #[cfg(feature = \\\"full\\\")]\\n10| /     named!(trailer_expr(allow_struct: bool, allow_block: bool) -> ExprKind, do_parse!(\\n10| |         mut e: call!(atom_expr, allow_struct, allow_block) >>\\n10| |         many0!(alt!(\\n10| |             tap!(args: and_call => {\\n... |\\n11| |         (e)\\n11| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nwarning: unused doc comment\\n --> src/expr.rs:1150:5\\n  |\\n11| /     /// Parse all atomic expressions which don\\'t have to worry about precidence\\n11| |     /// interactions, as they are fully contained.\\n  | |__________________________________________________^\\n11|       #[cfg(feature = \\\"full\\\")]\\n11| /     named!(atom_expr(allow_struct: bool, allow_block: bool) -> ExprKind, alt!(\\n11| |         syn!(ExprGroup) => { ExprKind::Group } // must be placed first\\n11| |         |\\n11| |         syn!(Lit) => { ExprKind::Lit } // must be before expr_struct\\n... |\\n12| |         syn!(ExprRepeat) => { ExprKind::Repeat }\\n12| |     ));\\n  | |_______- rustdoc does not generate documentation for macro expansions\\n  |\\n  = help: to document an item produced by a macro, the macro must produce the documentation as part of its expansion\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpbUPyim/self-profile-output\\\"; prefix is \\\"syn-17707\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `syn`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=2935665379;;instructions:u;633392991;100.00;1.21;insn per cycle\\n2417494445;;cycles:u;633392991;100.00;3.817;GHz\\n633.375639;;task-clock;633375639;100.00;0.994;CPUs utilized\\n633.374470;;cpu-clock;633375639;100.00;0.994;CPUs utilized\\n15168;;faults;633375639;100.00;0.024;M/sec\\n148672;;max-rss;3;100.00\\n0.673341274;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"tokio-webpush-simple":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking openssl-sys v0.9.14\\n   Compiling openssl v0.9.14\\n    Checking backtrace-sys v0.1.11\\n    Checking unicase v2.0.0\\n    Checking backtrace v0.3.2\\n    Checking error-chain v0.10.0\\n    Checking mime v0.3.2\\n    Checking hyper v0.11.0\\n    Checking native-tls v0.1.4\\n    Checking tokio-tls v0.1.3\\n    Checking tungstenite v0.2.4\\n    Checking tokio-tungstenite v0.2.1\\n    Checking webpush-server v0.1.0 (/tmp/.tmpfYLOHM)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> src/main.rs:51:32\\n  |\\n51|     pub type MyFuture<T> = Box<Future<Item = T, Error = Error>>;\\n  |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item = T, Error = Error>`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> src/main.rs:374:23\\n    |\\n374 |     type Future = Box<Future<Item = hyper::Response, Error = hyper::Error>>;\\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item = hyper::Response, Error = hyper::Error>`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpfYLOHM/self-profile-output\\\"; prefix is \\\"webpush_server-20412\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `webpush-server`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=1532241437;;instructions:u;305356197;100.00;1.35;insn per cycle\\n1134085814;;cycles:u;305356197;100.00;3.714;GHz\\n305.341640;;task-clock;305341640;100.00;1.000;CPUs utilized\\n305.340746;;cpu-clock;305341640;100.00;1.000;CPUs utilized\\n11117;;faults;305341640;100.00;0.036;M/sec\\n143212;;max-rss;3;100.00\\n0.343343876;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"tuple-stress":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking tuple-stress v0.1.0 (/tmp/.tmpd9y2tJ)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpd9y2tJ/self-profile-output\\\"; prefix is \\\"tuple_stress-20456\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `tuple-stress`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=19337241732;;instructions:u;3212270622;100.00;1.55;insn per cycle\\n12439741612;;cycles:u;3212270622;100.00;3.873;GHz\\n3212.256756;;task-clock;3212256756;100.00;0.995;CPUs utilized\\n3212.247159;;cpu-clock;3212256756;100.00;0.995;CPUs utilized\\n93774;;faults;3212256756;100.00;0.029;M/sec\\n428764;;max-rss;3;100.00\\n3.267775136;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"ucd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking ucd v0.1.1 (/tmp/.tmpkYe8y2)\\nwarning: `...` range patterns are deprecated\\n --> src/lib.rs:267:23\\n  |\\n26|                   8298...8303 | 9001 | 9002 | 917505 => true,\\n  |                       ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:370:29\\n    |\\n370 |             183 | 903 | 4969...4977 | 6618 => true,\\n    |                             ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:396:14\\n    |\\n396 |             9...13 | 32 | 133 | 8206\\n    |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:414:17\\n    |\\n414 |             4352...4447 | 43360...43388 => Some(HangulSyllableType::LeadingJamo),\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:414:32\\n    |\\n414 |             4352...4447 | 43360...43388 => Some(HangulSyllableType::LeadingJamo),\\n    |                                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:415:17\\n    |\\n415 |             4448...4519 | 55216...55238 => Some(HangulSyllableType::VowelJamo),\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:415:32\\n    |\\n415 |             4448...4519 | 55216...55238 => Some(HangulSyllableType::VowelJamo),\\n    |                                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:416:17\\n    |\\n416 |             4520...4607 | 55243...55291 => Some(HangulSyllableType::TrailingJamo),\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:416:32\\n    |\\n416 |             4520...4607 | 55243...55291 => Some(HangulSyllableType::TrailingJamo),\\n    |                                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:417:18\\n    |\\n417 |             44032...55203 => Some({\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:444:34\\n    |\\n444 |             12272 | 12273 | 12276...12283 => true,\\n    |                                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:451:18\\n    |\\n451 |             11904...11929 | 11931...12019 | 12032...12245 => true,\\n    |                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:451:34\\n    |\\n451 |             11904...11929 | 11931...12019 | 12032...12245 => true,\\n    |                                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:451:50\\n    |\\n451 |             11904...11929 | 11931...12019 | 12032...12245 => true,\\n    |                                                  ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:503:38\\n    |\\n503 |             1564 | 8206 | 8207 | 8234...8238 | 8294...8297 => true,\\n    |                                      ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:503:52\\n    |\\n503 |             1564 | 8206 | 8207 | 8234...8238 | 8294...8297 => true,\\n    |                                                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:593:17\\n    |\\n593 |             8544...8559 | 9398...9423 | 127280...127305\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:593:31\\n    |\\n593 |             8544...8559 | 9398...9423 | 127280...127305\\n    |                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:593:47\\n    |\\n593 |             8544...8559 | 9398...9423 | 127280...127305\\n    |                                               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:594:33\\n    |\\n594 |                         | 127312...127337 | 127344...127369 => true,\\n    |                                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/lib.rs:594:51\\n    |\\n594 |                         | 127312...127337 | 127344...127369 => true,\\n    |                                                   ^^^ help: use `..=` for an inclusive range\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpkYe8y2/self-profile-output\\\"; prefix is \\\"ucd-20500\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `ucd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=37511588966;;instructions:u;5544672326;100.00;1.74;insn per cycle\\n21575663929;;cycles:u;5544672326;100.00;3.891;GHz\\n5544.636334;;task-clock;5544636334;100.00;0.997;CPUs utilized\\n5544.635330;;cpu-clock;5544636334;100.00;0.997;CPUs utilized\\n120210;;faults;5544636334;100.00;0.022;M/sec\\n558348;;max-rss;3;100.00\\n5.615369478;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"unicode_normalization":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking unicode-normalization v0.1.7 (/tmp/.tmp7aFrzO)\\nwarning: `...` range patterns are deprecated\\n --> src/normalize.rs:126:17\\n  |\\n12|         (L_BASE ... L_LAST, V_BASE ... V_LAST) => {\\n  |                 ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/normalize.rs:126:36\\n    |\\n126 |         (L_BASE ... L_LAST, V_BASE ... V_LAST) => {\\n    |                                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/normalize.rs:134:17\\n    |\\n134 |         (S_BASE ... S_LAST, T_FIRST ... T_LAST) if (a - S_BASE) % T_COUNT == 0 => {\\n    |                 ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> src/normalize.rs:134:37\\n    |\\n134 |         (S_BASE ... S_LAST, T_FIRST ... T_LAST) if (a - S_BASE) % T_COUNT == 0 => {\\n    |                                     ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9647:19\\n     |\\n9647 |         \\'\\\\u{0340}\\'...\\'\\\\u{0341}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9648:19\\n     |\\n9648 |         \\'\\\\u{0343}\\'...\\'\\\\u{0344}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9652:19\\n     |\\n9652 |         \\'\\\\u{0958}\\'...\\'\\\\u{095F}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9653:19\\n     |\\n9653 |         \\'\\\\u{09DC}\\'...\\'\\\\u{09DD}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9657:19\\n     |\\n9657 |         \\'\\\\u{0A59}\\'...\\'\\\\u{0A5B}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9659:19\\n     |\\n9659 |         \\'\\\\u{0B5C}\\'...\\'\\\\u{0B5D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9667:19\\n     |\\n9667 |         \\'\\\\u{0F75}\\'...\\'\\\\u{0F76}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9691:19\\n     |\\n9691 |         \\'\\\\u{1FEE}\\'...\\'\\\\u{1FEF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9695:19\\n     |\\n9695 |         \\'\\\\u{2000}\\'...\\'\\\\u{2001}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9697:19\\n     |\\n9697 |         \\'\\\\u{212A}\\'...\\'\\\\u{212B}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9701:19\\n     |\\n9701 |         \\'\\\\u{F900}\\'...\\'\\\\u{FA0D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9704:19\\n     |\\n9704 |         \\'\\\\u{FA15}\\'...\\'\\\\u{FA1E}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9707:19\\n     |\\n9707 |         \\'\\\\u{FA25}\\'...\\'\\\\u{FA26}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9708:19\\n     |\\n9708 |         \\'\\\\u{FA2A}\\'...\\'\\\\u{FA6D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9709:19\\n     |\\n9709 |         \\'\\\\u{FA70}\\'...\\'\\\\u{FAD9}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9712:19\\n     |\\n9712 |         \\'\\\\u{FB2A}\\'...\\'\\\\u{FB36}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9713:19\\n     |\\n9713 |         \\'\\\\u{FB38}\\'...\\'\\\\u{FB3C}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9715:19\\n     |\\n9715 |         \\'\\\\u{FB40}\\'...\\'\\\\u{FB41}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9716:19\\n     |\\n9716 |         \\'\\\\u{FB43}\\'...\\'\\\\u{FB44}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9717:19\\n     |\\n9717 |         \\'\\\\u{FB46}\\'...\\'\\\\u{FB4E}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9718:20\\n     |\\n9718 |         \\'\\\\u{1D15E}\\'...\\'\\\\u{1D164}\\' => No,\\n     |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9719:20\\n     |\\n9719 |         \\'\\\\u{1D1BB}\\'...\\'\\\\u{1D1C0}\\' => No,\\n     |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9720:20\\n     |\\n9720 |         \\'\\\\u{2F800}\\'...\\'\\\\u{2FA1D}\\' => No,\\n     |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9721:19\\n     |\\n9721 |         \\'\\\\u{0300}\\'...\\'\\\\u{0304}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9722:19\\n     |\\n9722 |         \\'\\\\u{0306}\\'...\\'\\\\u{030C}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9725:19\\n     |\\n9725 |         \\'\\\\u{0313}\\'...\\'\\\\u{0314}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9727:19\\n     |\\n9727 |         \\'\\\\u{0323}\\'...\\'\\\\u{0328}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9728:19\\n     |\\n9728 |         \\'\\\\u{032D}\\'...\\'\\\\u{032E}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9729:19\\n     |\\n9729 |         \\'\\\\u{0330}\\'...\\'\\\\u{0331}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9733:19\\n     |\\n9733 |         \\'\\\\u{0653}\\'...\\'\\\\u{0655}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9744:19\\n     |\\n9744 |         \\'\\\\u{0CD5}\\'...\\'\\\\u{0CD6}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9751:19\\n     |\\n9751 |         \\'\\\\u{1161}\\'...\\'\\\\u{1175}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9752:19\\n     |\\n9752 |         \\'\\\\u{11A8}\\'...\\'\\\\u{11C2}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9754:19\\n     |\\n9754 |         \\'\\\\u{3099}\\'...\\'\\\\u{309A}\\' => Maybe,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9770:19\\n     |\\n9770 |         \\'\\\\u{00C0}\\'...\\'\\\\u{00C5}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9771:19\\n     |\\n9771 |         \\'\\\\u{00C7}\\'...\\'\\\\u{00CF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9772:19\\n     |\\n9772 |         \\'\\\\u{00D1}\\'...\\'\\\\u{00D6}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9773:19\\n     |\\n9773 |         \\'\\\\u{00D9}\\'...\\'\\\\u{00DD}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9774:19\\n     |\\n9774 |         \\'\\\\u{00E0}\\'...\\'\\\\u{00E5}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9775:19\\n     |\\n9775 |         \\'\\\\u{00E7}\\'...\\'\\\\u{00EF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9776:19\\n     |\\n9776 |         \\'\\\\u{00F1}\\'...\\'\\\\u{00F6}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9777:19\\n     |\\n9777 |         \\'\\\\u{00F9}\\'...\\'\\\\u{00FD}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9778:19\\n     |\\n9778 |         \\'\\\\u{00FF}\\'...\\'\\\\u{010F}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9779:19\\n     |\\n9779 |         \\'\\\\u{0112}\\'...\\'\\\\u{0125}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9780:19\\n     |\\n9780 |         \\'\\\\u{0128}\\'...\\'\\\\u{0130}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9781:19\\n     |\\n9781 |         \\'\\\\u{0134}\\'...\\'\\\\u{0137}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9782:19\\n     |\\n9782 |         \\'\\\\u{0139}\\'...\\'\\\\u{013E}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9783:19\\n     |\\n9783 |         \\'\\\\u{0143}\\'...\\'\\\\u{0148}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9784:19\\n     |\\n9784 |         \\'\\\\u{014C}\\'...\\'\\\\u{0151}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9785:19\\n     |\\n9785 |         \\'\\\\u{0154}\\'...\\'\\\\u{0165}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9786:19\\n     |\\n9786 |         \\'\\\\u{0168}\\'...\\'\\\\u{017E}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9787:19\\n     |\\n9787 |         \\'\\\\u{01A0}\\'...\\'\\\\u{01A1}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9788:19\\n     |\\n9788 |         \\'\\\\u{01AF}\\'...\\'\\\\u{01B0}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9789:19\\n     |\\n9789 |         \\'\\\\u{01CD}\\'...\\'\\\\u{01DC}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9790:19\\n     |\\n9790 |         \\'\\\\u{01DE}\\'...\\'\\\\u{01E3}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9791:19\\n     |\\n9791 |         \\'\\\\u{01E6}\\'...\\'\\\\u{01F0}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9792:19\\n     |\\n9792 |         \\'\\\\u{01F4}\\'...\\'\\\\u{01F5}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9793:19\\n     |\\n9793 |         \\'\\\\u{01F8}\\'...\\'\\\\u{021B}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9794:19\\n     |\\n9794 |         \\'\\\\u{021E}\\'...\\'\\\\u{021F}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9795:19\\n     |\\n9795 |         \\'\\\\u{0226}\\'...\\'\\\\u{0233}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9796:19\\n     |\\n9796 |         \\'\\\\u{0340}\\'...\\'\\\\u{0341}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9797:19\\n     |\\n9797 |         \\'\\\\u{0343}\\'...\\'\\\\u{0344}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9803:19\\n     |\\n9803 |         \\'\\\\u{0388}\\'...\\'\\\\u{038A}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9805:19\\n     |\\n9805 |         \\'\\\\u{038E}\\'...\\'\\\\u{0390}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9806:19\\n     |\\n9806 |         \\'\\\\u{03AA}\\'...\\'\\\\u{03B0}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9807:19\\n     |\\n9807 |         \\'\\\\u{03CA}\\'...\\'\\\\u{03CE}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9808:19\\n     |\\n9808 |         \\'\\\\u{03D3}\\'...\\'\\\\u{03D4}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9809:19\\n     |\\n9809 |         \\'\\\\u{0400}\\'...\\'\\\\u{0401}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9812:19\\n     |\\n9812 |         \\'\\\\u{040C}\\'...\\'\\\\u{040E}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9815:19\\n     |\\n9815 |         \\'\\\\u{0450}\\'...\\'\\\\u{0451}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9818:19\\n     |\\n9818 |         \\'\\\\u{045C}\\'...\\'\\\\u{045E}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9819:19\\n     |\\n9819 |         \\'\\\\u{0476}\\'...\\'\\\\u{0477}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9820:19\\n     |\\n9820 |         \\'\\\\u{04C1}\\'...\\'\\\\u{04C2}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9821:19\\n     |\\n9821 |         \\'\\\\u{04D0}\\'...\\'\\\\u{04D3}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9822:19\\n     |\\n9822 |         \\'\\\\u{04D6}\\'...\\'\\\\u{04D7}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9823:19\\n     |\\n9823 |         \\'\\\\u{04DA}\\'...\\'\\\\u{04DF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9824:19\\n     |\\n9824 |         \\'\\\\u{04E2}\\'...\\'\\\\u{04E7}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9825:19\\n     |\\n9825 |         \\'\\\\u{04EA}\\'...\\'\\\\u{04F5}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9826:19\\n     |\\n9826 |         \\'\\\\u{04F8}\\'...\\'\\\\u{04F9}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9827:19\\n     |\\n9827 |         \\'\\\\u{0622}\\'...\\'\\\\u{0626}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9834:19\\n     |\\n9834 |         \\'\\\\u{0958}\\'...\\'\\\\u{095F}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9835:19\\n     |\\n9835 |         \\'\\\\u{09CB}\\'...\\'\\\\u{09CC}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9836:19\\n     |\\n9836 |         \\'\\\\u{09DC}\\'...\\'\\\\u{09DD}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9840:19\\n     |\\n9840 |         \\'\\\\u{0A59}\\'...\\'\\\\u{0A5B}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9843:19\\n     |\\n9843 |         \\'\\\\u{0B4B}\\'...\\'\\\\u{0B4C}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9844:19\\n     |\\n9844 |         \\'\\\\u{0B5C}\\'...\\'\\\\u{0B5D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9846:19\\n     |\\n9846 |         \\'\\\\u{0BCA}\\'...\\'\\\\u{0BCC}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9849:19\\n     |\\n9849 |         \\'\\\\u{0CC7}\\'...\\'\\\\u{0CC8}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9850:19\\n     |\\n9850 |         \\'\\\\u{0CCA}\\'...\\'\\\\u{0CCB}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9851:19\\n     |\\n9851 |         \\'\\\\u{0D4A}\\'...\\'\\\\u{0D4C}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9853:19\\n     |\\n9853 |         \\'\\\\u{0DDC}\\'...\\'\\\\u{0DDE}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9861:19\\n     |\\n9861 |         \\'\\\\u{0F75}\\'...\\'\\\\u{0F76}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9879:19\\n     |\\n9879 |         \\'\\\\u{1B40}\\'...\\'\\\\u{1B41}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9881:19\\n     |\\n9881 |         \\'\\\\u{1E00}\\'...\\'\\\\u{1E99}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9883:19\\n     |\\n9883 |         \\'\\\\u{1EA0}\\'...\\'\\\\u{1EF9}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9884:19\\n     |\\n9884 |         \\'\\\\u{1F00}\\'...\\'\\\\u{1F15}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9885:19\\n     |\\n9885 |         \\'\\\\u{1F18}\\'...\\'\\\\u{1F1D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9886:19\\n     |\\n9886 |         \\'\\\\u{1F20}\\'...\\'\\\\u{1F45}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9887:19\\n     |\\n9887 |         \\'\\\\u{1F48}\\'...\\'\\\\u{1F4D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9888:19\\n     |\\n9888 |         \\'\\\\u{1F50}\\'...\\'\\\\u{1F57}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9892:19\\n     |\\n9892 |         \\'\\\\u{1F5F}\\'...\\'\\\\u{1F7D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9893:19\\n     |\\n9893 |         \\'\\\\u{1F80}\\'...\\'\\\\u{1FB4}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9894:19\\n     |\\n9894 |         \\'\\\\u{1FB6}\\'...\\'\\\\u{1FBC}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9897:19\\n     |\\n9897 |         \\'\\\\u{1FC2}\\'...\\'\\\\u{1FC4}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9898:19\\n     |\\n9898 |         \\'\\\\u{1FC6}\\'...\\'\\\\u{1FCC}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9899:19\\n     |\\n9899 |         \\'\\\\u{1FCD}\\'...\\'\\\\u{1FCF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9900:19\\n     |\\n9900 |         \\'\\\\u{1FD0}\\'...\\'\\\\u{1FD3}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9901:19\\n     |\\n9901 |         \\'\\\\u{1FD6}\\'...\\'\\\\u{1FDB}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9902:19\\n     |\\n9902 |         \\'\\\\u{1FDD}\\'...\\'\\\\u{1FDF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9903:19\\n     |\\n9903 |         \\'\\\\u{1FE0}\\'...\\'\\\\u{1FEC}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9904:19\\n     |\\n9904 |         \\'\\\\u{1FED}\\'...\\'\\\\u{1FEF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9905:19\\n     |\\n9905 |         \\'\\\\u{1FF2}\\'...\\'\\\\u{1FF4}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9906:19\\n     |\\n9906 |         \\'\\\\u{1FF6}\\'...\\'\\\\u{1FFC}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9908:19\\n     |\\n9908 |         \\'\\\\u{2000}\\'...\\'\\\\u{2001}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9910:19\\n     |\\n9910 |         \\'\\\\u{212A}\\'...\\'\\\\u{212B}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9911:19\\n     |\\n9911 |         \\'\\\\u{219A}\\'...\\'\\\\u{219B}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9914:19\\n     |\\n9914 |         \\'\\\\u{21CE}\\'...\\'\\\\u{21CF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9926:19\\n     |\\n9926 |         \\'\\\\u{226D}\\'...\\'\\\\u{2271}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9927:19\\n     |\\n9927 |         \\'\\\\u{2274}\\'...\\'\\\\u{2275}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9928:19\\n     |\\n9928 |         \\'\\\\u{2278}\\'...\\'\\\\u{2279}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9929:19\\n     |\\n9929 |         \\'\\\\u{2280}\\'...\\'\\\\u{2281}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9930:19\\n     |\\n9930 |         \\'\\\\u{2284}\\'...\\'\\\\u{2285}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9931:19\\n     |\\n9931 |         \\'\\\\u{2288}\\'...\\'\\\\u{2289}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9932:19\\n     |\\n9932 |         \\'\\\\u{22AC}\\'...\\'\\\\u{22AF}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9933:19\\n     |\\n9933 |         \\'\\\\u{22E0}\\'...\\'\\\\u{22E3}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9934:19\\n     |\\n9934 |         \\'\\\\u{22EA}\\'...\\'\\\\u{22ED}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9953:19\\n     |\\n9953 |         \\'\\\\u{3070}\\'...\\'\\\\u{3071}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9954:19\\n     |\\n9954 |         \\'\\\\u{3073}\\'...\\'\\\\u{3074}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9955:19\\n     |\\n9955 |         \\'\\\\u{3076}\\'...\\'\\\\u{3077}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9956:19\\n     |\\n9956 |         \\'\\\\u{3079}\\'...\\'\\\\u{307A}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9957:19\\n     |\\n9957 |         \\'\\\\u{307C}\\'...\\'\\\\u{307D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9975:19\\n     |\\n9975 |         \\'\\\\u{30D0}\\'...\\'\\\\u{30D1}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9976:19\\n     |\\n9976 |         \\'\\\\u{30D3}\\'...\\'\\\\u{30D4}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9977:19\\n     |\\n9977 |         \\'\\\\u{30D6}\\'...\\'\\\\u{30D7}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9978:19\\n     |\\n9978 |         \\'\\\\u{30D9}\\'...\\'\\\\u{30DA}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9979:19\\n     |\\n9979 |         \\'\\\\u{30DC}\\'...\\'\\\\u{30DD}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9981:19\\n     |\\n9981 |         \\'\\\\u{30F7}\\'...\\'\\\\u{30FA}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9983:19\\n     |\\n9983 |         \\'\\\\u{AC00}\\'...\\'\\\\u{D7A3}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9984:19\\n     |\\n9984 |         \\'\\\\u{F900}\\'...\\'\\\\u{FA0D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9987:19\\n     |\\n9987 |         \\'\\\\u{FA15}\\'...\\'\\\\u{FA1E}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9990:19\\n     |\\n9990 |         \\'\\\\u{FA25}\\'...\\'\\\\u{FA26}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9991:19\\n     |\\n9991 |         \\'\\\\u{FA2A}\\'...\\'\\\\u{FA6D}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9992:19\\n     |\\n9992 |         \\'\\\\u{FA70}\\'...\\'\\\\u{FAD9}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9995:19\\n     |\\n9995 |         \\'\\\\u{FB2A}\\'...\\'\\\\u{FB36}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9996:19\\n     |\\n9996 |         \\'\\\\u{FB38}\\'...\\'\\\\u{FB3C}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9998:19\\n     |\\n9998 |         \\'\\\\u{FB40}\\'...\\'\\\\u{FB41}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> src/tables.rs:9999:19\\n     |\\n9999 |         \\'\\\\u{FB43}\\'...\\'\\\\u{FB44}\\' => No,\\n     |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10000:19\\n      |\\n10000 |         \\'\\\\u{FB46}\\'...\\'\\\\u{FB4E}\\' => No,\\n      |                   ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10004:20\\n      |\\n10004 |         \\'\\\\u{1112E}\\'...\\'\\\\u{1112F}\\' => No,\\n      |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10005:20\\n      |\\n10005 |         \\'\\\\u{1134B}\\'...\\'\\\\u{1134C}\\' => No,\\n      |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10006:20\\n      |\\n10006 |         \\'\\\\u{114BB}\\'...\\'\\\\u{114BC}\\' => No,\\n      |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10008:20\\n      |\\n10008 |         \\'\\\\u{115BA}\\'...\\'\\\\u{115BB}\\' => No,\\n      |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10009:20\\n      |\\n10009 |         \\'\\\\u{1D15E}\\'...\\'\\\\u{1D164}\\' => No,\\n      |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10010:20\\n      |\\n10010 |         \\'\\\\u{1D1BB}\\'...\\'\\\\u{1D1C0}\\' => No,\\n      |                    ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n     --> src/tables.rs:10011:20\\n      |\\n10011 |         \\'\\\\u{2F800}\\'...\\'\\\\u{2FA1D}\\' => No,\\n      |                    ^^^ help: use `..=` for an inclusive range\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp7aFrzO/self-profile-output\\\"; prefix is \\\"unicode_normalization-20544\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `unicode-normalization`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=21696582220;;instructions:u;2263429673;100.00;2.46;insn per cycle\\n8807153170;;cycles:u;2263429673;100.00;3.891;GHz\\n2263.436910;;task-clock;2263436910;100.00;0.991;CPUs utilized\\n2263.444907;;cpu-clock;2263436910;100.00;0.991;CPUs utilized\\n38318;;faults;2263436910;100.00;0.017;M/sec\\n241272;;max-rss;3;100.00\\n2.338700375;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"unify-linearly":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-32062-equality-relations-complexity v0.1.0 (/tmp/.tmp79kVs0)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmp79kVs0/self-profile-output\\\"; prefix is \\\"issue_32062_equality_relations_complexity-20588\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-32062-equality-relations-complexity`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=275121227;;instructions:u;58214834;100.00;1.49;insn per cycle\\n184874036;;cycles:u;58214834;100.00;3.177;GHz\\n58.198669;;task-clock;58198669;100.00;0.999;CPUs utilized\\n58.197619;;cpu-clock;58198669;100.00;0.999;CPUs utilized\\n5232;;faults;58198669;100.00;0.090;M/sec\\n100328;;max-rss;3;100.00\\n0.077356499;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"unused-warnings":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking issue-43572-unused-uses v0.1.0 (/tmp/.tmplY9uT3)\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmplY9uT3/self-profile-output\\\"; prefix is \\\"issue_43572_unused_uses-20632\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `issue-43572-unused-uses`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=2145542121;;instructions:u;421702442;100.00;1.40;insn per cycle\\n1537968819;;cycles:u;421702442;100.00;3.647;GHz\\n421.687391;;task-clock;421687391;100.00;1.000;CPUs utilized\\n421.695768;;cpu-clock;421687391;100.00;1.000;CPUs utilized\\n25681;;faults;421687391;100.00;0.061;M/sec\\n175600;;max-rss;3;100.00\\n0.440714232;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"webrender":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=warning: /tmp/.tmpOKTNy6/Cargo.toml: unused manifest key: patch.crates-io.serde_derive.feature\\nwarning: /tmp/.tmpOKTNy6/Cargo.toml: unused manifest key: workspace.license\\n   Compiling webrender v0.57.2 (/tmp/.tmpOKTNy6/webrender)\\n    Checking rayon-core v1.4.0\\n   Compiling serde_derive v1.0.37 (https://github.com/servo/serde?branch=deserialize_from_enums6#b8d39b01)\\n    Checking servo-freetype-sys v4.0.3\\n    Checking gleam v0.5.0\\n    Checking freetype v0.4.0\\n    Checking rayon v1.0.0\\n    Checking serde v1.0.37\\n    Checking euclid v0.17.3\\n    Checking serde_bytes v0.10.4\\n    Checking app_units v0.6.0\\n    Checking bincode v1.0.0\\n    Checking plane-split v0.9.1\\n    Checking webrender_api v0.57.2 (/tmp/.tmpOKTNy6/webrender_api)\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> webrender_api/src/api.rs:1114:28\\n  |\\n11|     fn clone(&self) -> Box<RenderNotifier>;\\n  |                            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn RenderNotifier`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n --> webrender_api/src/font.rs:121:14\\n  |\\n12|             1...2 => SubpixelOffset::Quarter,\\n  |              ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender_api/src/font.rs:122:14\\n    |\\n122 |             3...4 => SubpixelOffset::Half,\\n    |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender_api/src/font.rs:123:14\\n    |\\n123 |             5...6 => SubpixelOffset::ThreeQuarters,\\n    |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender_api/src/image.rs:181:20\\n    |\\n181 |         services: &BlobImageResources,\\n    |                    ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn BlobImageResources`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n --> webrender/src/device.rs:142:28\\n  |\\n14| fn get_shader_version(gl: &gl::Gl) -> &\\'static str {\\n  |                            ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n  |\\n  = note: `#[warn(bare_trait_objects)]` on by default\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:257:14\\n    |\\n257 |         gl: &gl::Gl,\\n    |              ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:328:14\\n    |\\n328 |         gl: &gl::Gl,\\n    |              ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:346:25\\n    |\\n346 |     fn bind(&self, gl: &gl::Gl, main: VBOId, instance: VBOId) {\\n    |                         ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:360:25\\n    |\\n360 |     fn bind(&self, gl: &gl::Gl) {\\n    |                         ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:366:25\\n    |\\n366 |     fn bind(&self, gl: &gl::Gl) {\\n    |                         ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:372:25\\n    |\\n372 |     fn bind(&self, gl: &gl::Gl, target: FBOTarget) {\\n    |                         ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:659:12\\n    |\\n659 |     gl: Rc<gl::Gl>,\\n    |            ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:699:16\\n    |\\n699 |         gl: Rc<gl::Gl>,\\n    |                ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:702:36\\n    |\\n702 |         _file_changed_handler: Box<FileWatcherHandler>,\\n    |                                    ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FileWatcherHandler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:765:26\\n    |\\n765 |     pub fn gl(&self) -> &gl::Gl {\\n    |                          ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:769:32\\n    |\\n769 |     pub fn rc_gl(&self) -> &Rc<gl::Gl> {\\n    |                                ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/device.rs:817:14\\n    |\\n817 |         gl: &gl::Gl,\\n    |              ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/device.rs:2247:13\\n     |\\n2247 |     gl: &\\'a gl::Gl,\\n     |             ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: `...` range patterns are deprecated\\n --> webrender/src/gpu_cache.rs:290:14\\n  |\\n29|             3...4 => (4, &mut self.free_list_4),\\n  |              ^^^ help: use `..=` for an inclusive range\\n  |\\n  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender/src/gpu_cache.rs:291:14\\n    |\\n291 |             5...8 => (8, &mut self.free_list_8),\\n    |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender/src/gpu_cache.rs:292:14\\n    |\\n292 |             9...16 => (16, &mut self.free_list_16),\\n    |              ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender/src/gpu_cache.rs:293:15\\n    |\\n293 |             17...32 => (32, &mut self.free_list_32),\\n    |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender/src/gpu_cache.rs:294:15\\n    |\\n294 |             33...64 => (64, &mut self.free_list_64),\\n    |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender/src/gpu_cache.rs:295:15\\n    |\\n295 |             65...128 => (128, &mut self.free_list_128),\\n    |               ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n   --> webrender/src/gpu_cache.rs:296:16\\n    |\\n296 |             129...MAX_VERTEX_TEXTURE_WIDTH => (MAX_VERTEX_TEXTURE_WIDTH, &mut self.free_list_large),\\n    |                ^^^ help: use `..=` for an inclusive range\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> webrender/src/image.rs:35:20\\n   |\\n35 |     callback: &mut FnMut(&LayoutPoint, EdgeAaSegmentMask),\\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&LayoutPoint, EdgeAaSegmentMask)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/image.rs:101:20\\n    |\\n101 |     callback: &mut FnMut(&LayoutRect, TileOffset, EdgeAaSegmentMask),\\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&LayoutRect, TileOffset, EdgeAaSegmentMask)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/prim_store.rs:2571:20\\n     |\\n2571 |     callback: &mut FnMut(&LayoutRect, &LayoutRect, GpuDataRequest),\\n     |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&LayoutRect, &LayoutRect, GpuDataRequest)`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> webrender/src/query.rs:69:12\\n   |\\n69 |     gl: Rc<gl::Gl>,\\n   |            ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> webrender/src/query.rs:77:19\\n   |\\n77 |     fn new(gl: Rc<gl::Gl>) -> Self {\\n   |                   ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/query.rs:187:12\\n    |\\n187 |     gl: Rc<gl::Gl>,\\n    |            ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/query.rs:193:23\\n    |\\n193 |     pub fn new(gl: Rc<gl::Gl>) -> Self {\\n    |                       ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/query.rs:276:12\\n    |\\n276 |     gl: Rc<gl::Gl>,\\n    |            ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/query.rs:280:20\\n    |\\n280 |     fn new(gl: &Rc<gl::Gl>, message: &str) -> Self {\\n    |                    ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/query.rs:285:21\\n    |\\n285 |     fn fire(gl: &Rc<gl::Gl>, message: &str) {\\n    |                     ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/render_backend.rs:423:19\\n    |\\n423 |     notifier: Box<RenderNotifier>,\\n    |                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn RenderNotifier`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/render_backend.rs:424:26\\n    |\\n424 |     recorder: Option<Box<ApiRecordingReceiver>>,\\n    |                          ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ApiRecordingReceiver`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/render_backend.rs:425:25\\n    |\\n425 |     sampler: Option<Box<AsyncPropertySampler + Send>>,\\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn AsyncPropertySampler + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/render_backend.rs:439:23\\n    |\\n439 |         notifier: Box<RenderNotifier>,\\n    |                       ^^^^^^^^^^^^^^ help: use `dyn`: `dyn RenderNotifier`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/render_backend.rs:441:30\\n    |\\n441 |         recorder: Option<Box<ApiRecordingReceiver>>,\\n    |                              ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ApiRecordingReceiver`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/render_backend.rs:442:29\\n    |\\n442 |         sampler: Option<Box<AsyncPropertySampler + Send>>,\\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn AsyncPropertySampler + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:1244:19\\n     |\\n1244 |     notifier: Box<RenderNotifier>,\\n     |                   ^^^^^^^^^^^^^^ help: use `dyn`: `dyn RenderNotifier`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:1350:40\\n     |\\n1350 |     external_image_handler: Option<Box<ExternalImageHandler>>,\\n     |                                        ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExternalImageHandler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:1355:38\\n     |\\n1355 |     output_image_handler: Option<Box<OutputImageHandler>>,\\n     |                                      ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn OutputImageHandler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:1418:16\\n     |\\n1418 |         gl: Rc<gl::Gl>,\\n     |                ^^^^^^ help: use `dyn`: `dyn gl::Gl`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:1419:23\\n     |\\n1419 |         notifier: Box<RenderNotifier>,\\n     |                       ^^^^^^^^^^^^^^ help: use `dyn`: `dyn RenderNotifier`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:2137:63\\n     |\\n2137 |     pub fn set_external_image_handler(&mut self, handler: Box<ExternalImageHandler>) {\\n     |                                                               ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExternalImageHandler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:2142:61\\n     |\\n2142 |     pub fn set_output_image_handler(&mut self, handler: Box<OutputImageHandler>) {\\n     |                                                             ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn OutputImageHandler`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:3981:41\\n     |\\n3981 |     pub blob_image_renderer: Option<Box<BlobImageRenderer>>,\\n     |                                         ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn BlobImageRenderer`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:3982:30\\n     |\\n3982 |     pub recorder: Option<Box<ApiRecordingReceiver>>,\\n     |                              ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ApiRecordingReceiver`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:3983:37\\n     |\\n3983 |     pub thread_listener: Option<Box<ThreadListener + Send + Sync>>,\\n     |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ThreadListener + Send + Sync`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:3989:41\\n     |\\n3989 |     pub scene_builder_hooks: Option<Box<SceneBuilderHooks + Send>>,\\n     |                                         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SceneBuilderHooks + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n    --> webrender/src/renderer.rs:3990:29\\n     |\\n3990 |     pub sampler: Option<Box<AsyncPropertySampler + Send>>,\\n     |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn AsyncPropertySampler + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/resource_cache.rs:307:37\\n    |\\n307 |     blob_image_renderer: Option<Box<BlobImageRenderer>>,\\n    |                                     ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn BlobImageRenderer`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n   --> webrender/src/resource_cache.rs:314:41\\n    |\\n314 |         blob_image_renderer: Option<Box<BlobImageRenderer>>,\\n    |                                         ^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn BlobImageRenderer`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> webrender/src/scene_builder.rs:74:23\\n   |\\n74 |     hooks: Option<Box<SceneBuilderHooks + Send>>,\\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SceneBuilderHooks + Send`\\n\\nwarning: trait objects without an explicit `dyn` are deprecated\\n  --> webrender/src/scene_builder.rs:81:27\\n   |\\n81 |         hooks: Option<Box<SceneBuilderHooks + Send>>,\\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn SceneBuilderHooks + Send`\\n\\nwarning: `...` range patterns are deprecated\\n    --> webrender/src/texture_cache.rs:1270:10\\n     |\\n1270 |         1...16 => 16,\\n     |          ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> webrender/src/texture_cache.rs:1271:11\\n     |\\n1271 |         17...32 => 32,\\n     |           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> webrender/src/texture_cache.rs:1272:11\\n     |\\n1272 |         33...64 => 64,\\n     |           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> webrender/src/texture_cache.rs:1273:11\\n     |\\n1273 |         65...128 => 128,\\n     |           ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> webrender/src/texture_cache.rs:1274:12\\n     |\\n1274 |         129...256 => 256,\\n     |            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: `...` range patterns are deprecated\\n    --> webrender/src/texture_cache.rs:1275:12\\n     |\\n1275 |         257...512 => 512,\\n     |            ^^^ help: use `..=` for an inclusive range\\n\\nwarning: variable does not need to be mutable\\n --> webrender/src/border.rs:603:57\\n  |\\n60|                     BorderCornerKind::Mask(corner_data, mut corner_radius, widths, kind) => {\\n  |                                                         ----^^^^^^^^^^^^^\\n  |                                                         |\\n  |                                                         help: remove this `mut`\\n  |\\n  = note: `#[warn(unused_mut)]` on by default\\n\\nwarning: variable does not need to be mutable\\n  --> webrender/src/glyph_rasterizer/no_pathfinder.rs:61:33\\n   |\\n61 |                 Entry::Occupied(mut entry) => {\\n   |                                 ----^^^^^\\n   |                                 |\\n   |                                 help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n   --> webrender/src/render_backend.rs:713:41\\n    |\\n713 | ...                   if let Some(mut built_scene) = built_scene.take() {\\n    |                                   ----^^^^^^^^^^^\\n    |                                   |\\n    |                                   help: remove this `mut`\\n\\nwarning: variable does not need to be mutable\\n    --> webrender/src/renderer.rs:1809:21\\n     |\\n1809 |                     mut doc,\\n     |                     ----^^^\\n     |                     |\\n     |                     help: remove this `mut`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpOKTNy6/self-profile-output\\\"; prefix is \\\"webrender-21755\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `webrender`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=12750472310;;instructions:u;3041505653;100.00;1.08;insn per cycle\\n11824261734;;cycles:u;3041505653;100.00;3.888;GHz\\n3041.491152;;task-clock;3041491152;100.00;0.994;CPUs utilized\\n3041.490854;;cpu-clock;3041491152;100.00;0.994;CPUs utilized\\n50236;;faults;3041491152;100.00;0.017;M/sec\\n302400;;max-rss;3;100.00\\n3.107061017;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"},"wg-grammar":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking proc-macro2 v0.4.27\\n    Checking gll v0.0.2 (https://github.com/rust-lang-nursery/gll#3e82b327)\\n    Checking rust-grammar v0.1.0 (/tmp/.tmpuSzfJ9)\\nwarning: unused variable: `parser`\\n --> src/parse.rs:190:17\\n  |\\n19|                 parser: &\\'a ::gll::runtime::Parser<\\'i, _P, _C, I>,\\n  |                 ^^^^^^ help: consider prefixing with an underscore: `_parser`\\n  |\\n  = note: `#[warn(unused_variables)]` on by default\\n\\nwarning: unused variable: `parser`\\n   --> src/parse.rs:254:17\\n    |\\n254 |                 parser: &\\'a ::gll::runtime::Parser<\\'i, _P, _C, I>,\\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_parser`\\n\\nwarning: unused variable: `parser`\\n   --> src/parse.rs:318:17\\n    |\\n318 |                 parser: &\\'a ::gll::runtime::Parser<\\'i, _P, _C, I>,\\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_parser`\\n\\nwarning: unused variable: `parser`\\n   --> src/parse.rs:382:17\\n    |\\n382 |                 parser: &\\'a ::gll::runtime::Parser<\\'i, _P, _C, I>,\\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_parser`\\n\\nwarning: unused variable: `parser`\\n   --> src/parse.rs:446:17\\n    |\\n446 |                 parser: &\\'a ::gll::runtime::Parser<\\'i, _P, _C, I>,\\n    |                 ^^^^^^ help: consider prefixing with an underscore: `_parser`\\n\\nthread \\'main\\' panicked at \\'assertion failed: `(left == right)`\\n  left: `\\\"codegen_and_optimize_crate\\\"`,\\n right: `\\\"codegen_crate\\\"`\\', summarize/src/analysis.rs:121:17\\nnote: Run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nthread \\'main\\' panicked at \\'summarize failed in \\\"/tmp/.tmpuSzfJ9/self-profile-output\\\"; prefix is \\\"rust_grammar-21920\\\"\\', collector/src/bin/rustc-fake.rs:96:21\\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\\nerror: Could not compile `rust-grammar`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=14795808836;;instructions:u;2603535190;100.00;1.45;insn per cycle\\n10231341813;;cycles:u;2603535190;100.00;3.930;GHz\\n2603.529080;;task-clock;2603529080;100.00;0.993;CPUs utilized\\n2603.530282;;cpu-clock;2603529080;100.00;0.993;CPUs utilized\\n27407;;faults;2603529080;100.00;0.011;M/sec\\n196936;;max-rss;3;100.00\\n2.669850968;;wall-time;4;100.00\\n\" }\n\nstack backtrace:\n   0: failure::backtrace::internal::InternalBacktrace::new::h283f8a35e18b39ba (0x55a19d9f5f38)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n   1: failure::backtrace::Backtrace::new::h5621ac89965a2646 (0x55a19d9f60f0)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n      <failure::backtrace::Backtrace as core::default::Default>::default::h8dabef315f83383d\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:125\n   2: <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h8db5cb4779bbb9ec (0x55a19d97e703)\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n      <failure::error::Error as core::convert::From<F>>::from::hc81952248ae87103\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n      failure::error_message::err_msg::h4bd87736e4886743\n             at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n      collector::command_output::hb8a0b2989471f30c\n             at collector/src/lib.rs:658\n   3: collector::execute::CargoProcess::run_rustc::h81b763c5670ccf3f (0x55a19d5dd16b)\n             at collector/src/bin/rustc-perf-collector/execute.rs:230\n   4: collector::execute::Benchmark::measure::h97c6c402dc606a17 (0x55a19d5e5b51)\n             at collector/src/bin/rustc-perf-collector/execute.rs:786\n   5: collector::bench_commit::hfa99d2cbdcf8fac2 (0x55a19d5d0f33)\n             at collector/src/bin/rustc-perf-collector/main.rs:306\n   6: collector::process_commits::hce4a720aff4b70b1 (0x55a19d5d8dc6)\n             at collector/src/bin/rustc-perf-collector/main.rs:176\n      collector::main_result::hde66ab0b455f28bd\n             at collector/src/bin/rustc-perf-collector/main.rs:542\n   7: collector::main::ha3a482442eef5858 (0x55a19d5d172f)\n             at collector/src/bin/rustc-perf-collector/main.rs:382\n   8: std::rt::lang_start::{{closure}}::h07ceecdfc6979035 (0x55a19d5a7603)\n             at /rustc/890881f8f4c77e8670d4b32104c0325fcfefc90f/src/libstd/rt.rs:64\n   9: std::rt::lang_start_internal::{{closure}}::h206ab7e4498aa1c0 (0x55a19da216c3)\n             at src/libstd/rt.rs:49\n      std::panicking::try::do_call::h89a9b41ab5b49bd7\n             at src/libstd/panicking.rs:296\n  10: __rust_maybe_catch_panic (0x55a19da2bbfa)\n             at src/libpanic_unwind/lib.rs:82\n  11: std::panicking::try::h1a76c542b7a68f0e (0x55a19da2228d)\n             at src/libstd/panicking.rs:275\n      std::panic::catch_unwind::hbf51b086a93263a6\n             at src/libstd/panic.rs:394\n      std::rt::lang_start_internal::hdbf5055a9a60353b\n             at src/libstd/rt.rs:48\n  12: main (0x55a19d5dad88)\n  13: __libc_start_main (0x7f2496a61830)\n  14: _start (0x55a19d583b49)\n  15: <unknown> (0x0)"}},"triple":"x86_64-unknown-linux-gnu"}