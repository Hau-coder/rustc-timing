{"commit":{"sha":"9a59d693239915aa37bd08ca194a8ba2857db25a","date":"2017-08-28T16:36:03+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":18662362430.0},{"name":"cycles:u","cnt":15498897635.0},{"name":"task-clock","cnt":3803.047962},{"name":"cpu-clock","cnt":3972.680712},{"name":"faults","cnt":20760.0},{"name":"max-rss","cnt":273196.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1281140691.0},{"name":"cycles:u","cnt":839995280.0},{"name":"task-clock","cnt":131.446969},{"name":"cpu-clock","cnt":245.149388},{"name":"faults","cnt":12840.0},{"name":"max-rss","cnt":127076.0}]}]}]},"html5ever-2016-08-25":{"Ok":[{"name":"html5ever-2016-08-25","runs":[{"stats":[{"name":"instructions:u","cnt":17715428533.0},{"name":"cycles:u","cnt":11830924696.0},{"name":"task-clock","cnt":3039.955466},{"name":"cpu-clock","cnt":3039.954449},{"name":"faults","cnt":17919.0},{"name":"max-rss","cnt":269392.0}]}]}]},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24172548221.0},{"name":"cycles:u","cnt":20498664594.0},{"name":"task-clock","cnt":5203.787345},{"name":"cpu-clock","cnt":5203.789745},{"name":"faults","cnt":11526.0},{"name":"max-rss","cnt":324900.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":23476753854.0},{"name":"cycles:u","cnt":13354445317.0},{"name":"task-clock","cnt":3422.953335},{"name":"cpu-clock","cnt":3422.943558},{"name":"faults","cnt":25938.0},{"name":"max-rss","cnt":305124.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":14301708871.0},{"name":"cycles:u","cnt":8623498654.0},{"name":"task-clock","cnt":2231.377211},{"name":"cpu-clock","cnt":2284.872931},{"name":"faults","cnt":95977.0},{"name":"max-rss","cnt":266108.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":2048099851.0},{"name":"cycles:u","cnt":1295858566.0},{"name":"task-clock","cnt":316.872328},{"name":"cpu-clock","cnt":364.145598},{"name":"faults","cnt":16590.0},{"name":"max-rss","cnt":138080.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":8897368755.0},{"name":"cycles:u","cnt":6196451950.0},{"name":"task-clock","cnt":1590.458533},{"name":"cpu-clock","cnt":1636.38706},{"name":"faults","cnt":30198.0},{"name":"max-rss","cnt":380560.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":2838695588.0},{"name":"cycles:u","cnt":1860361796.0},{"name":"task-clock","cnt":469.359002},{"name":"cpu-clock","cnt":513.410326},{"name":"faults","cnt":23751.0},{"name":"max-rss","cnt":158408.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":7444635670.0},{"name":"cycles:u","cnt":5485430684.0},{"name":"task-clock","cnt":1394.98852},{"name":"cpu-clock","cnt":1419.310732},{"name":"faults","cnt":14670.0},{"name":"max-rss","cnt":170200.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52131596646.0},{"name":"cycles:u","cnt":42739624040.0},{"name":"task-clock","cnt":10824.160856},{"name":"cpu-clock","cnt":10824.158113},{"name":"faults","cnt":15681.0},{"name":"max-rss","cnt":486876.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":30198365552.0},{"name":"cycles:u","cnt":24579182980.0},{"name":"task-clock","cnt":6234.501993},{"name":"cpu-clock","cnt":6234.51839},{"name":"faults","cnt":16022.0},{"name":"max-rss","cnt":354184.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":42388957542.0},{"name":"cycles:u","cnt":44619632583.0},{"name":"task-clock","cnt":11872.975909},{"name":"cpu-clock","cnt":11872.974514},{"name":"faults","cnt":63709.0},{"name":"max-rss","cnt":390232.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":14206611480.0},{"name":"cycles:u","cnt":12246123990.0},{"name":"task-clock","cnt":3214.635528},{"name":"cpu-clock","cnt":3214.6224},{"name":"faults","cnt":12137.0},{"name":"max-rss","cnt":405308.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":8405113936.0},{"name":"cycles:u","cnt":6677649402.0},{"name":"task-clock","cnt":1744.693362},{"name":"cpu-clock","cnt":1744.638766},{"name":"faults","cnt":11223.0},{"name":"max-rss","cnt":353184.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":11038477244.0},{"name":"cycles:u","cnt":8807096945.0},{"name":"task-clock","cnt":2297.776718},{"name":"cpu-clock","cnt":2297.747395},{"name":"faults","cnt":14948.0},{"name":"max-rss","cnt":367272.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":18169817038.0},{"name":"cycles:u","cnt":16170439827.0},{"name":"task-clock","cnt":4245.291378},{"name":"cpu-clock","cnt":4245.295247},{"name":"faults","cnt":18240.0},{"name":"max-rss","cnt":422932.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":8792908174.0},{"name":"cycles:u","cnt":7025617331.0},{"name":"task-clock","cnt":1840.108602},{"name":"cpu-clock","cnt":1840.060182},{"name":"faults","cnt":10119.0},{"name":"max-rss","cnt":357524.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":41634804725.0},{"name":"cycles:u","cnt":43242599556.0},{"name":"task-clock","cnt":11517.602204},{"name":"cpu-clock","cnt":11517.593189},{"name":"faults","cnt":62989.0},{"name":"max-rss","cnt":398712.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":42044022463.0},{"name":"cycles:u","cnt":44693909395.0},{"name":"task-clock","cnt":11916.485779},{"name":"cpu-clock","cnt":11916.466189},{"name":"faults","cnt":66132.0},{"name":"max-rss","cnt":398472.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":8304360618.0},{"name":"cycles:u","cnt":6550939096.0},{"name":"task-clock","cnt":1710.204602},{"name":"cpu-clock","cnt":1710.165267},{"name":"faults","cnt":8970.0},{"name":"max-rss","cnt":346276.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":11669568380.0},{"name":"cycles:u","cnt":9132784536.0},{"name":"task-clock","cnt":2333.075973},{"name":"cpu-clock","cnt":2333.075397},{"name":"faults","cnt":9482.0},{"name":"max-rss","cnt":226436.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9617377007.0},{"name":"cycles:u","cnt":7159203591.0},{"name":"task-clock","cnt":1831.296174},{"name":"cpu-clock","cnt":1831.294697},{"name":"faults","cnt":8368.0},{"name":"max-rss","cnt":211216.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling smallvec v0.4.1\\n   Compiling bitflags v0.7.0\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling itoa v0.3.1\\n   Compiling rayon-core v1.2.1\\n   Compiling siphasher v0.2.2\\n   Compiling scopeguard v0.3.2\\n   Compiling either v1.1.0\\n   Compiling cfg-if v0.1.2\\n   Compiling serde v1.0.10\\n   Compiling unicode-xid v0.0.4\\n   Compiling pdqsort v0.1.2\\n   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling matches v0.1.6\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling odds v0.2.25\\n   Compiling atomic_refcell v0.1.1\\n   Compiling byteorder v1.1.0\\n   Compiling heapsize v0.4.1\\n   Compiling rustc-serialize v0.3.24\\n   Compiling quote v0.3.15\\n   Compiling futures v0.1.14\\n   Compiling same-file v0.1.3\\n   Compiling lazy_static v0.2.8\\n   Compiling libc v0.2.28\\n   Compiling num-traits v0.1.40\\n   Compiling fnv v1.0.5\\n   Compiling log v0.3.8\\n   Compiling precomputed-hash v0.1.0\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling bit-vec v0.4.4\\n   Compiling void v1.0.2\\n   Compiling owning_ref v0.3.3\\n   Compiling coco v0.1.1\\n   Compiling phf_shared v0.7.21\\n   Compiling synom v0.11.3\\n   Compiling unicode-bidi v0.3.4\\n   Compiling nodrop v0.1.9\\n   Compiling walkdir v1.0.7\\n   Compiling num_cpus v1.6.2\\n   Compiling time v0.1.38\\n   Compiling thread-id v3.2.0\\n   Compiling rand v0.3.15\\n   Compiling unreachable v0.1.1\\n   Compiling phf v0.7.21\\n   Compiling num-integer v0.1.35\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/components/servo_arc)\\n   Compiling arrayvec v0.3.23\\n   Compiling arraydeque v0.2.3\\n   Compiling syn v0.11.11\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/components/style)\\n   Compiling ordered-float v0.4.0\\n   Compiling phf_generator v0.7.21\\n   Compiling parking_lot_core v0.2.2\\n   Compiling phf_codegen v0.7.21\\n   Compiling selectors v0.19.0 (file:///tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/components/selectors)\\n   Compiling parking_lot v0.4.4\\n   Compiling rayon v0.8.2\\n   Compiling app_units v0.5.1\\n   Compiling euclid v0.15.1\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:165:5\\n    |\\n165 | /     pub fn post_mul<NewDst>(&self, mat: &TypedTransform2D<T, Dst, NewDst>) -> TypedTransform2D<T, Src, NewDst> {\\n166 | |         TypedTransform2D::row_major(\\n167 | |             self.m11 * mat.m11 + self.m12 * mat.m21,\\n168 | |             self.m11 * mat.m12 + self.m12 * mat.m22,\\n...   |\\n173 | |         )\\n174 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:179:5\\n    |\\n179 | /     pub fn pre_mul<NewSrc>(&self, mat: &TypedTransform2D<T, NewSrc, Src>) -> TypedTransform2D<T, NewSrc, Dst> {\\n180 | |         mat.post_mul(self)\\n181 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:195:5\\n    |\\n195 | /     pub fn post_translate(&self, v: TypedVector2D<T, Dst>) -> Self {\\n196 | |         self.post_mul(&TypedTransform2D::create_translation(v.x, v.y))\\n197 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:201:5\\n    |\\n201 | /     pub fn pre_translate(&self, v: TypedVector2D<T, Src>) -> Self {\\n202 | |         self.pre_mul(&TypedTransform2D::create_translation(v.x, v.y))\\n203 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:217:5\\n    |\\n217 | /     pub fn post_scale(&self, x: T, y: T) -> Self {\\n218 | |         self.post_mul(&TypedTransform2D::create_scale(x, y))\\n219 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:223:5\\n    |\\n223 | /     pub fn pre_scale(&self, x: T, y: T) -> Self {\\n224 | |         TypedTransform2D::row_major(\\n225 | |             self.m11 * x, self.m12,\\n226 | |             self.m21,     self.m22 * y,\\n227 | |             self.m31,     self.m32\\n228 | |         )\\n229 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:245:5\\n    |\\n245 | /     pub fn post_rotate(&self, theta: Radians<T>) -> Self {\\n246 | |         self.post_mul(&TypedTransform2D::create_rotation(theta))\\n247 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:251:5\\n    |\\n251 | /     pub fn pre_rotate(&self, theta: Radians<T>) -> Self {\\n252 | |         self.pre_mul(&TypedTransform2D::create_rotation(theta))\\n253 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:258:5\\n    |\\n258 | /     pub fn transform_point(&self, point: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst> {\\n259 | |         TypedPoint2D::new(point.x * self.m11 + point.y * self.m21 + self.m31,\\n260 | |                           point.x * self.m12 + point.y * self.m22 + self.m32)\\n261 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:266:5\\n    |\\n266 | /     pub fn transform_vector(&self, vec: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst> {\\n267 | |         vec2(vec.x * self.m11 + vec.y * self.m21,\\n268 | |              vec.x * self.m12 + vec.y * self.m22)\\n269 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:275:5\\n    |\\n275 | /     pub fn transform_rect(&self, rect: &TypedRect<T, Src>) -> TypedRect<T, Dst> {\\n276 | |         TypedRect::from_points(&[\\n277 | |             self.transform_point(&rect.origin),\\n278 | |             self.transform_point(&rect.top_right()),\\n...   |\\n281 | |         ])\\n282 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:291:5\\n    |\\n291 | /     pub fn inverse(&self) -> Option<TypedTransform2D<T, Dst, Src>> {\\n292 | |         let det = self.determinant();\\n293 | |\\n294 | |         let _0: T = Zero::zero();\\n...   |\\n309 | |         ))\\n310 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:374:5\\n    |\\n374 | /     pub fn mul_s(&self, x: T) -> Self {\\n375 | |         TypedTransform3D::row_major(\\n376 | |             self.m11 * x, self.m12 * x, self.m13 * x, self.m14 * x,\\n377 | |             self.m21 * x, self.m22 * x, self.m23 * x, self.m24 * x,\\n...   |\\n380 | |         )\\n381 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:461:5\\n    |\\n461 | /     pub fn pre_translate(&self, v: TypedVector3D<T, Src>) -> Self {\\n462 | |         self.pre_mul(&TypedTransform3D::create_translation(v.x, v.y, v.z))\\n463 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:467:5\\n    |\\n467 | /     pub fn post_translate(&self, v: TypedVector3D<T, Dst>) -> Self {\\n468 | |         self.post_mul(&TypedTransform3D::create_translation(v.x, v.y, v.z))\\n469 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:484:5\\n    |\\n484 | /     pub fn pre_scale(&self, x: T, y: T, z: T) -> Self {\\n485 | |         TypedTransform3D::row_major(\\n486 | |             self.m11 * x, self.m12,     self.m13,     self.m14,\\n487 | |             self.m21    , self.m22 * y, self.m23,     self.m24,\\n...   |\\n490 | |         )\\n491 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:495:5\\n    |\\n495 | /     pub fn post_scale(&self, x: T, y: T, z: T) -> Self {\\n496 | |         self.post_mul(&TypedTransform3D::create_scale(x, y, z))\\n497 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:538:5\\n    |\\n538 | /     pub fn post_rotate(&self, x: T, y: T, z: T, theta: Radians<T>) -> Self {\\n539 | |         self.post_mul(&TypedTransform3D::create_rotation(x, y, z, theta))\\n540 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:544:5\\n    |\\n544 | /     pub fn pre_rotate(&self, x: T, y: T, z: T, theta: Radians<T>) -> Self {\\n545 | |         self.pre_mul(&TypedTransform3D::create_rotation(x, y, z, theta))\\n546 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:237:5\\n    |\\n237 | /     pub fn round(&self) -> Self {\\n238 | |         point2(self.x.round(), self.y.round())\\n239 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:249:5\\n    |\\n249 | /     pub fn ceil(&self) -> Self {\\n250 | |         point2(self.x.ceil(), self.y.ceil())\\n251 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:261:5\\n    |\\n261 | /     pub fn floor(&self) -> Self {\\n262 | |         point2(self.x.floor(), self.y.floor())\\n263 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:548:5\\n    |\\n548 | /     pub fn round(&self) -> Self {\\n549 | |         point3(self.x.round(), self.y.round(), self.z.round())\\n550 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:559:5\\n    |\\n559 | /     pub fn ceil(&self) -> Self {\\n560 | |         point3(self.x.ceil(), self.y.ceil(), self.z.ceil())\\n561 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:570:5\\n    |\\n570 | /     pub fn floor(&self) -> Self {\\n571 | |         point3(self.x.floor(), self.y.floor(), self.z.floor())\\n572 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:171:5\\n    |\\n171 | /     pub fn translate(&self, by: &TypedVector2D<T, U>) -> Self {\\n172 | |         Self::new(self.origin + *by, self.size)\\n173 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:196:5\\n    |\\n196 | /     pub fn inflate(&self, width: T, height: T) -> Self {\\n197 | |         TypedRect::new(\\n198 | |             TypedPoint2D::new(self.origin.x - width, self.origin.y - height),\\n199 | |             TypedSize2D::new(self.size.width + width + width, self.size.height + height + height),\\n200 | |         )\\n201 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:205:5\\n    |\\n205 | /     pub fn inflate_typed(&self, width: Length<T, U>, height: Length<T, U>) -> Self {\\n206 | |         self.inflate(width.get(), height.get())\\n207 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:226:5\\n    |\\n226 | /     pub fn translate_by_size(&self, size: &TypedSize2D<T, U>) -> Self {\\n227 | |         self.translate(&size.to_vector())\\n228 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:398:5\\n    |\\n398 | /     pub fn round(&self) -> Self {\\n399 | |         let origin = self.origin.round();\\n400 | |         let size = self.origin.add_size(&self.size).round() - origin;\\n401 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n402 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:407:5\\n    |\\n407 | /     pub fn round_in(&self) -> Self {\\n408 | |         let origin = self.origin.ceil();\\n409 | |         let size = self.origin.add_size(&self.size).floor() - origin;\\n410 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n411 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:416:5\\n    |\\n416 | /     pub fn round_out(&self) -> Self {\\n417 | |         let origin = self.origin.floor();\\n418 | |         let size = self.origin.add_size(&self.size).ceil() - origin;\\n419 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n420 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:270:5\\n    |\\n270 | /     pub fn round(&self) -> Self {\\n271 | |         vec2(self.x.round(), self.y.round())\\n272 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:282:5\\n    |\\n282 | /     pub fn ceil(&self) -> Self {\\n283 | |         vec2(self.x.ceil(), self.y.ceil())\\n284 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:294:5\\n    |\\n294 | /     pub fn floor(&self) -> Self {\\n295 | |         vec2(self.x.floor(), self.y.floor())\\n296 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:617:5\\n    |\\n617 | /     pub fn round(&self) -> Self {\\n618 | |         vec3(self.x.round(), self.y.round(), self.z.round())\\n619 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:628:5\\n    |\\n628 | /     pub fn ceil(&self) -> Self {\\n629 | |         vec3(self.x.ceil(), self.y.ceil(), self.z.ceil())\\n630 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:639:5\\n    |\\n639 | /     pub fn floor(&self) -> Self {\\n640 | |         vec3(self.x.floor(), self.y.floor(), self.z.floor())\\n641 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\n   Compiling synstructure v0.5.2\\n   Compiling cssparser-macros v0.3.0\\n   Compiling cssparser v0.17.0\\n   Compiling style_derive v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/components/style_derive)\\nwarning: variable does not need to be mutable\\n   --> components/selectors/matching.rs:461:39\\n    |\\n461 |                                       mut context: &mut LocalMatchingContext<E::Impl>,\\n    |                                       ^^^^^^^^^^^\\n    |\\n    = note: #[warn(unused_mut)] on by default\\n\\nwarning: variable does not need to be mutable\\n    --> components/selectors/parser.rs:1472:5\\n     |\\n1472 |     mut builder: &mut SelectorBuilder<Impl>)\\n     |     ^^^^^^^^^^^\\n\\n   Compiling style_traits v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/components/style_traits)\\nwarning: doc comment not used by rustdoc\\n   --> components/style/values/specified/image.rs:688:17\\n    |\\n688 |                 /// `to` keyword is mandatory in modern syntax.\\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n    |\\n    = note: #[warn(unused_doc_comment)] on by default\\n\\nwarning: doc comment not used by rustdoc\\n   --> components/style/values/specified/image.rs:694:17\\n    |\\n694 |                 /// There is no `to` keyword in webkit prefixed syntax. If it\\'s consumed,\\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: doc comment not used by rustdoc\\n    --> /tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/target/debug/build/style-a82f6bacb87f42b2/out/gecko_properties.rs:8443:9\\n     |\\n8443 |         /// XXXManishearth this should also handle text zoom\\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nerror[E0106]: missing lifetime specifier\\n   --> /tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/target/debug/build/style-a82f6bacb87f42b2/out/gecko/bindings.rs:558:9\\n    |\\n558 |      -> RawGeckoNodeBorrowedOrNull;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter\\n    |\\n    = help: this function\\'s return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\\n    = help: consider giving it an explicit bounded or \\'static lifetime\\n\\nerror[E0106]: missing lifetime specifier\\n   --> /tmp/rustc-benchmark-style-9b276565.EpkQDqAoKPCt/target/debug/build/style-a82f6bacb87f42b2/out/gecko/bindings.rs:827:9\\n    |\\n827 |      -> RawServoAnimationValueBorrowedOrNull;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter\\n    |\\n    = help: this function\\'s return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\\n    = help: consider giving it an explicit bounded or \\'static lifetime\\n\\nerror: aborting due to 2 previous errors\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:30:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `style`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/9a59d693239915aa37bd08ca194a8ba2857db25a/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\n39380851184;;instructions:u;6571045673;100.00;1.52;insn per cycle\\n25846894356;;cycles:u;6571045673;100.00;3.933;GHz\\n6571.006532;;task-clock;6571006532;100.00;1.000;CPUs utilized\\n6571.010955;;cpu-clock;6571006532;100.00;1.000;CPUs utilized\\n5322;;faults;6571006532;100.00;0.810;K/sec\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: None })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":135609252892.0},{"name":"cycles:u","cnt":110151988683.0},{"name":"task-clock","cnt":27909.384455},{"name":"cpu-clock","cnt":27909.404761},{"name":"faults","cnt":30639.0},{"name":"max-rss","cnt":932832.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":211548074826.0},{"name":"cycles:u","cnt":201072552489.0},{"name":"task-clock","cnt":53166.691088},{"name":"cpu-clock","cnt":53166.684551},{"name":"faults","cnt":227344.0},{"name":"max-rss","cnt":975668.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":55754233537.0},{"name":"cycles:u","cnt":39934720420.0},{"name":"task-clock","cnt":10243.738816},{"name":"cpu-clock","cnt":10243.66973},{"name":"faults","cnt":24850.0},{"name":"max-rss","cnt":986220.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28427872035.0},{"name":"cycles:u","cnt":23702515393.0},{"name":"task-clock","cnt":6103.507505},{"name":"cpu-clock","cnt":6127.91512},{"name":"faults","cnt":43922.0},{"name":"max-rss","cnt":390956.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":43470060394.0},{"name":"cycles:u","cnt":38750848906.0},{"name":"task-clock","cnt":9958.965214},{"name":"cpu-clock","cnt":10317.878446},{"name":"faults","cnt":76809.0},{"name":"max-rss","cnt":409680.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9633472410.0},{"name":"cycles:u","cnt":7412388216.0},{"name":"task-clock","cnt":1971.164207},{"name":"cpu-clock","cnt":2047.191718},{"name":"faults","cnt":49072.0},{"name":"max-rss","cnt":383124.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":43830048038.0},{"name":"cycles:u","cnt":39603524782.0},{"name":"task-clock","cnt":10244.650087},{"name":"cpu-clock","cnt":10565.025962},{"name":"faults","cnt":78981.0},{"name":"max-rss","cnt":411116.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":23743496085.0},{"name":"cycles:u","cnt":16646026136.0},{"name":"task-clock","cnt":4147.734197},{"name":"cpu-clock","cnt":4267.670287},{"name":"faults","cnt":35732.0},{"name":"max-rss","cnt":423476.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}