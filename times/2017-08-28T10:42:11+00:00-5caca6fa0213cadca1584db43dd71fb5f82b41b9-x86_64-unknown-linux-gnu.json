{"commit":{"sha":"5caca6fa0213cadca1584db43dd71fb5f82b41b9","date":"2017-08-28T10:42:11+00:00"},"benchmarks":{"futures-rs-test-all":{"Ok":[{"name":"futures-rs-test-all","runs":[{"stats":[{"name":"instructions:u","cnt":18672058225.0},{"name":"cycles:u","cnt":15419592102.0},{"name":"task-clock","cnt":3866.429361},{"name":"cpu-clock","cnt":3949.863894},{"name":"faults","cnt":20526.0},{"name":"max-rss","cnt":275308.0}]}]}]},"helloworld":{"Ok":[{"name":"helloworld","runs":[{"stats":[{"name":"instructions:u","cnt":1279217634.0},{"name":"cycles:u","cnt":842246634.0},{"name":"task-clock","cnt":133.692282},{"name":"cpu-clock","cnt":245.737691},{"name":"faults","cnt":12816.0},{"name":"max-rss","cnt":127676.0}]}]}]},"html5ever-2016-08-25":{"Ok":[{"name":"html5ever-2016-08-25","runs":[{"stats":[{"name":"instructions:u","cnt":17712944809.0},{"name":"cycles:u","cnt":11872122575.0},{"name":"task-clock","cnt":3035.518665},{"name":"cpu-clock","cnt":3035.517483},{"name":"faults","cnt":19457.0},{"name":"max-rss","cnt":268608.0}]}]}]},"hyper.0.5.0":{"Ok":[{"name":"hyper.0.5.0","runs":[{"stats":[{"name":"instructions:u","cnt":24254833516.0},{"name":"cycles:u","cnt":20343883491.0},{"name":"task-clock","cnt":5163.552758},{"name":"cpu-clock","cnt":5163.542907},{"name":"faults","cnt":11883.0},{"name":"max-rss","cnt":322868.0}]}]}]},"inflate-0.1.0":{"Ok":[{"name":"inflate-0.1.0","runs":[{"stats":[{"name":"instructions:u","cnt":23467972629.0},{"name":"cycles:u","cnt":12942954046.0},{"name":"task-clock","cnt":3316.879779},{"name":"cpu-clock","cnt":3316.868912},{"name":"faults","cnt":27972.0},{"name":"max-rss","cnt":305448.0}]}]}]},"issue-20936-deep-vector":{"Ok":[{"name":"issue-20936-deep-vector","runs":[{"stats":[{"name":"instructions:u","cnt":14276517731.0},{"name":"cycles:u","cnt":8594812920.0},{"name":"task-clock","cnt":2217.460746},{"name":"cpu-clock","cnt":2265.915987},{"name":"faults","cnt":86328.0},{"name":"max-rss","cnt":264400.0}]}]}]},"issue-31157-compilation-time-ram-regression":{"Ok":[{"name":"issue-31157-compilation-time-ram-regression","runs":[{"stats":[{"name":"instructions:u","cnt":13509800871.0},{"name":"cycles:u","cnt":10469373656.0},{"name":"task-clock","cnt":2660.452511},{"name":"cpu-clock","cnt":2660.452598},{"name":"faults","cnt":6131.0},{"name":"max-rss","cnt":214748.0}]}]}]},"issue-32062-equality-relations-complexity":{"Ok":[{"name":"issue-32062-equality-relations-complexity","runs":[{"stats":[{"name":"instructions:u","cnt":2046104648.0},{"name":"cycles:u","cnt":1302275021.0},{"name":"task-clock","cnt":251.229216},{"name":"cpu-clock","cnt":365.1708},{"name":"faults","cnt":16551.0},{"name":"max-rss","cnt":138008.0}]}]}]},"issue-32278-big-array-of-strings":{"Ok":[{"name":"issue-32278-big-array-of-strings","runs":[{"stats":[{"name":"instructions:u","cnt":8889824053.0},{"name":"cycles:u","cnt":6043321397.0},{"name":"task-clock","cnt":1437.85215},{"name":"cpu-clock","cnt":1601.343722},{"name":"faults","cnt":31113.0},{"name":"max-rss","cnt":376420.0}]}]}]},"issue-43572-unused-uses":{"Ok":[{"name":"issue-43572-unused-uses","runs":[{"stats":[{"name":"instructions:u","cnt":2836817465.0},{"name":"cycles:u","cnt":1865902677.0},{"name":"task-clock","cnt":432.105447},{"name":"cpu-clock","cnt":517.481285},{"name":"faults","cnt":23341.0},{"name":"max-rss","cnt":159208.0}]}]}]},"jld-day15-parser":{"Ok":[{"name":"jld-day15-parser","runs":[{"stats":[{"name":"instructions:u","cnt":7452635494.0},{"name":"cycles:u","cnt":5498565699.0},{"name":"task-clock","cnt":1402.759579},{"name":"cpu-clock","cnt":1426.515986},{"name":"faults","cnt":14676.0},{"name":"max-rss","cnt":170908.0}]}]}]},"piston-image-0.10.3":{"Ok":[{"name":"piston-image-0.10.3","runs":[{"stats":[{"name":"instructions:u","cnt":52146119816.0},{"name":"cycles:u","cnt":42602179958.0},{"name":"task-clock","cnt":10789.542279},{"name":"cpu-clock","cnt":10789.543206},{"name":"faults","cnt":16081.0},{"name":"max-rss","cnt":488012.0}]}]}]},"regex-0.1.80":{"Ok":[{"name":"regex-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":30209181941.0},{"name":"cycles:u","cnt":24552635460.0},{"name":"task-clock","cnt":6230.320096},{"name":"cpu-clock","cnt":6230.319924},{"name":"faults","cnt":16051.0},{"name":"max-rss","cnt":354892.0}]}]},{"name":"regex-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":42404150110.0},{"name":"cycles:u","cnt":45926329091.0},{"name":"task-clock","cnt":12228.548646},{"name":"cpu-clock","cnt":12228.512917},{"name":"faults","cnt":63901.0},{"name":"max-rss","cnt":380360.0}]}]},{"name":"regex-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":14197452852.0},{"name":"cycles:u","cnt":12405617448.0},{"name":"task-clock","cnt":3257.443609},{"name":"cpu-clock","cnt":3257.430153},{"name":"faults","cnt":11817.0},{"name":"max-rss","cnt":401732.0}]}]},{"name":"regex-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":8391358632.0},{"name":"cycles:u","cnt":6608992883.0},{"name":"task-clock","cnt":1756.134827},{"name":"cpu-clock","cnt":1756.097829},{"name":"faults","cnt":11106.0},{"name":"max-rss","cnt":355268.0}]}]},{"name":"regex-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":11022877521.0},{"name":"cycles:u","cnt":8838691094.0},{"name":"task-clock","cnt":2299.399554},{"name":"cpu-clock","cnt":2299.371285},{"name":"faults","cnt":14502.0},{"name":"max-rss","cnt":366676.0}]}]},{"name":"regex-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":18169813724.0},{"name":"cycles:u","cnt":16165003049.0},{"name":"task-clock","cnt":4254.392992},{"name":"cpu-clock","cnt":4254.380386},{"name":"faults","cnt":17968.0},{"name":"max-rss","cnt":415584.0}]}]},{"name":"regex-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":8780097164.0},{"name":"cycles:u","cnt":7022610378.0},{"name":"task-clock","cnt":1834.966413},{"name":"cpu-clock","cnt":1834.905742},{"name":"faults","cnt":10569.0},{"name":"max-rss","cnt":359228.0}]}]},{"name":"regex-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":41561777435.0},{"name":"cycles:u","cnt":44356206246.0},{"name":"task-clock","cnt":11833.532095},{"name":"cpu-clock","cnt":11833.513738},{"name":"faults","cnt":59978.0},{"name":"max-rss","cnt":397732.0}]}]},{"name":"regex-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":42133890752.0},{"name":"cycles:u","cnt":45986686902.0},{"name":"task-clock","cnt":12252.719801},{"name":"cpu-clock","cnt":12252.73399},{"name":"faults","cnt":60773.0},{"name":"max-rss","cnt":399124.0}]}]},{"name":"regex-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":8292034704.0},{"name":"cycles:u","cnt":6528745054.0},{"name":"task-clock","cnt":1709.759444},{"name":"cpu-clock","cnt":1709.742149},{"name":"faults","cnt":9290.0},{"name":"max-rss","cnt":348224.0}]}]}]},"regex-opt-0.1.80":{"Ok":[{"name":"regex-opt-0.1.80@010-baseline","runs":[{"stats":[{"name":"instructions:u","cnt":75702117700.0},{"name":"cycles:u","cnt":58049341808.0},{"name":"task-clock","cnt":14614.788374},{"name":"cpu-clock","cnt":14614.793377},{"name":"faults","cnt":17248.0},{"name":"max-rss","cnt":249604.0}]}]},{"name":"regex-opt-0.1.80@020-incr-from-scratch","runs":[{"stats":[{"name":"instructions:u","cnt":90672990152.0},{"name":"cycles:u","cnt":109405176871.0},{"name":"task-clock","cnt":28954.481338},{"name":"cpu-clock","cnt":28954.497898},{"name":"faults","cnt":28338.0},{"name":"max-rss","cnt":392564.0}]}]},{"name":"regex-opt-0.1.80@030-compile_one","runs":[{"stats":[{"name":"instructions:u","cnt":19760184068.0},{"name":"cycles:u","cnt":17174899978.0},{"name":"task-clock","cnt":4467.464994},{"name":"cpu-clock","cnt":4467.444996},{"name":"faults","cnt":9147.0},{"name":"max-rss","cnt":372832.0}]}]},{"name":"regex-opt-0.1.80@040-is_valid_cap_letter","runs":[{"stats":[{"name":"instructions:u","cnt":7946905288.0},{"name":"cycles:u","cnt":6453461441.0},{"name":"task-clock","cnt":1673.03927},{"name":"cpu-clock","cnt":1672.992946},{"name":"faults","cnt":10693.0},{"name":"max-rss","cnt":355996.0}]}]},{"name":"regex-opt-0.1.80@050-expand","runs":[{"stats":[{"name":"instructions:u","cnt":7949540582.0},{"name":"cycles:u","cnt":6431702402.0},{"name":"task-clock","cnt":1671.916067},{"name":"cpu-clock","cnt":1671.86634},{"name":"faults","cnt":10788.0},{"name":"max-rss","cnt":353992.0}]}]},{"name":"regex-opt-0.1.80@060-Compiler-new","runs":[{"stats":[{"name":"instructions:u","cnt":19690602541.0},{"name":"cycles:u","cnt":17265849031.0},{"name":"task-clock","cnt":4500.967975},{"name":"cpu-clock","cnt":4500.943749},{"name":"faults","cnt":9154.0},{"name":"max-rss","cnt":369020.0}]}]},{"name":"regex-opt-0.1.80@070-BYTE_FREQUENCIES","runs":[{"stats":[{"name":"instructions:u","cnt":8731963681.0},{"name":"cycles:u","cnt":7141386037.0},{"name":"task-clock","cnt":1857.428973},{"name":"cpu-clock","cnt":1857.395135},{"name":"faults","cnt":9627.0},{"name":"max-rss","cnt":349332.0}]}]},{"name":"regex-opt-0.1.80@080-SparseSet","runs":[{"stats":[{"name":"instructions:u","cnt":89212580534.0},{"name":"cycles:u","cnt":106754383512.0},{"name":"task-clock","cnt":28218.480295},{"name":"cpu-clock","cnt":28218.517524},{"name":"faults","cnt":29727.0},{"name":"max-rss","cnt":399908.0}]}]},{"name":"regex-opt-0.1.80@090-Job","runs":[{"stats":[{"name":"instructions:u","cnt":90012607653.0},{"name":"cycles:u","cnt":108185837150.0},{"name":"task-clock","cnt":28636.399364},{"name":"cpu-clock","cnt":28636.426314},{"name":"faults","cnt":29644.0},{"name":"max-rss","cnt":404872.0}]}]},{"name":"regex-opt-0.1.80@100-incr-no-change","runs":[{"stats":[{"name":"instructions:u","cnt":7751693975.0},{"name":"cycles:u","cnt":6268134413.0},{"name":"task-clock","cnt":1626.452038},{"name":"cpu-clock","cnt":1626.433816},{"name":"faults","cnt":10568.0},{"name":"max-rss","cnt":347152.0}]}]}]},"regex-opt.0.1.30":{"Ok":[{"name":"regex-opt.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":28974910732.0},{"name":"cycles:u","cnt":21519401141.0},{"name":"task-clock","cnt":5431.401531},{"name":"cpu-clock","cnt":5431.407765},{"name":"faults","cnt":11418.0},{"name":"max-rss","cnt":210884.0}]}]}]},"regex.0.1.30":{"Ok":[{"name":"regex.0.1.30","runs":[{"stats":[{"name":"instructions:u","cnt":11662232431.0},{"name":"cycles:u","cnt":9119297312.0},{"name":"task-clock","cnt":2327.040011},{"name":"cpu-clock","cnt":2327.037678},{"name":"faults","cnt":8911.0},{"name":"max-rss","cnt":224940.0}]}]}]},"rust-encoding-0.3.0":{"Ok":[{"name":"rust-encoding-0.3.0","runs":[{"stats":[{"name":"instructions:u","cnt":9581152406.0},{"name":"cycles:u","cnt":7114787426.0},{"name":"task-clock","cnt":1822.738885},{"name":"cpu-clock","cnt":1822.738642},{"name":"faults","cnt":8262.0},{"name":"max-rss","cnt":208572.0}]}]}]},"style-9b276565":{"Err":"Error(Msg(\"expected success, got exit code: 2\\n\\nstderr=   Compiling nsstring_vendor v0.1.0 (file:///tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/components/style/gecko_bindings/nsstring_vendor)\\n   Compiling log v0.3.8\\n   Compiling heapsize v0.4.1\\n   Compiling stable_deref_trait v1.0.0\\n   Compiling futures v0.1.14\\n   Compiling byteorder v1.1.0\\n   Compiling bit-vec v0.4.4\\n   Compiling rayon-core v1.2.1\\n   Compiling itoa v0.3.1\\n   Compiling quote v0.3.15\\n   Compiling procedural-masquerade v0.1.2\\n   Compiling bitflags v0.7.0\\n   Compiling unicode-segmentation v1.2.0\\n   Compiling scopeguard v0.3.2\\n   Compiling libc v0.2.28\\n   Compiling fnv v1.0.5\\n   Compiling precomputed-hash v0.1.0\\n   Compiling void v1.0.2\\n   Compiling atomic_refcell v0.1.1\\n   Compiling serde v1.0.10\\n   Compiling same-file v0.1.3\\n   Compiling either v1.1.0\\n   Compiling unicode-xid v0.0.4\\n   Compiling pdqsort v0.1.2\\n   Compiling rustc-serialize v0.3.24\\n   Compiling cfg-if v0.1.2\\n   Compiling odds v0.2.25\\n   Compiling lazy_static v0.2.8\\n   Compiling siphasher v0.2.2\\n   Compiling smallvec v0.4.1\\n   Compiling num-traits v0.1.40\\n   Compiling matches v0.1.6\\n   Compiling owning_ref v0.3.3\\n   Compiling unreachable v0.1.1\\n   Compiling synom v0.11.3\\n   Compiling walkdir v1.0.7\\n   Compiling coco v0.1.1\\n   Compiling thread-id v3.2.0\\n   Compiling num_cpus v1.6.2\\n   Compiling rand v0.3.15\\n   Compiling time v0.1.38\\n   Compiling phf_shared v0.7.21\\n   Compiling unicode-bidi v0.3.4\\n   Compiling nodrop v0.1.9\\n   Compiling syn v0.11.11\\n   Compiling ordered-float v0.4.0\\n   Compiling num-integer v0.1.35\\n   Compiling phf v0.7.21\\n   Compiling style v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/components/style)\\n   Compiling arrayvec v0.3.23\\n   Compiling arraydeque v0.2.3\\n   Compiling servo_arc v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/components/servo_arc)\\n   Compiling parking_lot_core v0.2.2\\n   Compiling phf_generator v0.7.21\\n   Compiling phf_codegen v0.7.21\\n   Compiling selectors v0.19.0 (file:///tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/components/selectors)\\n   Compiling parking_lot v0.4.4\\n   Compiling rayon v0.8.2\\n   Compiling app_units v0.5.1\\n   Compiling euclid v0.15.1\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:165:5\\n    |\\n165 | /     pub fn post_mul<NewDst>(&self, mat: &TypedTransform2D<T, Dst, NewDst>) -> TypedTransform2D<T, Src, NewDst> {\\n166 | |         TypedTransform2D::row_major(\\n167 | |             self.m11 * mat.m11 + self.m12 * mat.m21,\\n168 | |             self.m11 * mat.m12 + self.m12 * mat.m22,\\n...   |\\n173 | |         )\\n174 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:179:5\\n    |\\n179 | /     pub fn pre_mul<NewSrc>(&self, mat: &TypedTransform2D<T, NewSrc, Src>) -> TypedTransform2D<T, NewSrc, Dst> {\\n180 | |         mat.post_mul(self)\\n181 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:195:5\\n    |\\n195 | /     pub fn post_translate(&self, v: TypedVector2D<T, Dst>) -> Self {\\n196 | |         self.post_mul(&TypedTransform2D::create_translation(v.x, v.y))\\n197 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:201:5\\n    |\\n201 | /     pub fn pre_translate(&self, v: TypedVector2D<T, Src>) -> Self {\\n202 | |         self.pre_mul(&TypedTransform2D::create_translation(v.x, v.y))\\n203 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:217:5\\n    |\\n217 | /     pub fn post_scale(&self, x: T, y: T) -> Self {\\n218 | |         self.post_mul(&TypedTransform2D::create_scale(x, y))\\n219 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:223:5\\n    |\\n223 | /     pub fn pre_scale(&self, x: T, y: T) -> Self {\\n224 | |         TypedTransform2D::row_major(\\n225 | |             self.m11 * x, self.m12,\\n226 | |             self.m21,     self.m22 * y,\\n227 | |             self.m31,     self.m32\\n228 | |         )\\n229 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:245:5\\n    |\\n245 | /     pub fn post_rotate(&self, theta: Radians<T>) -> Self {\\n246 | |         self.post_mul(&TypedTransform2D::create_rotation(theta))\\n247 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:251:5\\n    |\\n251 | /     pub fn pre_rotate(&self, theta: Radians<T>) -> Self {\\n252 | |         self.pre_mul(&TypedTransform2D::create_rotation(theta))\\n253 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:258:5\\n    |\\n258 | /     pub fn transform_point(&self, point: &TypedPoint2D<T, Src>) -> TypedPoint2D<T, Dst> {\\n259 | |         TypedPoint2D::new(point.x * self.m11 + point.y * self.m21 + self.m31,\\n260 | |                           point.x * self.m12 + point.y * self.m22 + self.m32)\\n261 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:266:5\\n    |\\n266 | /     pub fn transform_vector(&self, vec: &TypedVector2D<T, Src>) -> TypedVector2D<T, Dst> {\\n267 | |         vec2(vec.x * self.m11 + vec.y * self.m21,\\n268 | |              vec.x * self.m12 + vec.y * self.m22)\\n269 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:275:5\\n    |\\n275 | /     pub fn transform_rect(&self, rect: &TypedRect<T, Src>) -> TypedRect<T, Dst> {\\n276 | |         TypedRect::from_points(&[\\n277 | |             self.transform_point(&rect.origin),\\n278 | |             self.transform_point(&rect.top_right()),\\n...   |\\n281 | |         ])\\n282 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform2d.rs:291:5\\n    |\\n291 | /     pub fn inverse(&self) -> Option<TypedTransform2D<T, Dst, Src>> {\\n292 | |         let det = self.determinant();\\n293 | |\\n294 | |         let _0: T = Zero::zero();\\n...   |\\n309 | |         ))\\n310 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:374:5\\n    |\\n374 | /     pub fn mul_s(&self, x: T) -> Self {\\n375 | |         TypedTransform3D::row_major(\\n376 | |             self.m11 * x, self.m12 * x, self.m13 * x, self.m14 * x,\\n377 | |             self.m21 * x, self.m22 * x, self.m23 * x, self.m24 * x,\\n...   |\\n380 | |         )\\n381 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:461:5\\n    |\\n461 | /     pub fn pre_translate(&self, v: TypedVector3D<T, Src>) -> Self {\\n462 | |         self.pre_mul(&TypedTransform3D::create_translation(v.x, v.y, v.z))\\n463 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:467:5\\n    |\\n467 | /     pub fn post_translate(&self, v: TypedVector3D<T, Dst>) -> Self {\\n468 | |         self.post_mul(&TypedTransform3D::create_translation(v.x, v.y, v.z))\\n469 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:484:5\\n    |\\n484 | /     pub fn pre_scale(&self, x: T, y: T, z: T) -> Self {\\n485 | |         TypedTransform3D::row_major(\\n486 | |             self.m11 * x, self.m12,     self.m13,     self.m14,\\n487 | |             self.m21    , self.m22 * y, self.m23,     self.m24,\\n...   |\\n490 | |         )\\n491 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:495:5\\n    |\\n495 | /     pub fn post_scale(&self, x: T, y: T, z: T) -> Self {\\n496 | |         self.post_mul(&TypedTransform3D::create_scale(x, y, z))\\n497 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:538:5\\n    |\\n538 | /     pub fn post_rotate(&self, x: T, y: T, z: T, theta: Radians<T>) -> Self {\\n539 | |         self.post_mul(&TypedTransform3D::create_rotation(x, y, z, theta))\\n540 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/transform3d.rs:544:5\\n    |\\n544 | /     pub fn pre_rotate(&self, x: T, y: T, z: T, theta: Radians<T>) -> Self {\\n545 | |         self.pre_mul(&TypedTransform3D::create_rotation(x, y, z, theta))\\n546 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:237:5\\n    |\\n237 | /     pub fn round(&self) -> Self {\\n238 | |         point2(self.x.round(), self.y.round())\\n239 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:249:5\\n    |\\n249 | /     pub fn ceil(&self) -> Self {\\n250 | |         point2(self.x.ceil(), self.y.ceil())\\n251 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:261:5\\n    |\\n261 | /     pub fn floor(&self) -> Self {\\n262 | |         point2(self.x.floor(), self.y.floor())\\n263 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:548:5\\n    |\\n548 | /     pub fn round(&self) -> Self {\\n549 | |         point3(self.x.round(), self.y.round(), self.z.round())\\n550 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:559:5\\n    |\\n559 | /     pub fn ceil(&self) -> Self {\\n560 | |         point3(self.x.ceil(), self.y.ceil(), self.z.ceil())\\n561 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/point.rs:570:5\\n    |\\n570 | /     pub fn floor(&self) -> Self {\\n571 | |         point3(self.x.floor(), self.y.floor(), self.z.floor())\\n572 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:171:5\\n    |\\n171 | /     pub fn translate(&self, by: &TypedVector2D<T, U>) -> Self {\\n172 | |         Self::new(self.origin + *by, self.size)\\n173 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:196:5\\n    |\\n196 | /     pub fn inflate(&self, width: T, height: T) -> Self {\\n197 | |         TypedRect::new(\\n198 | |             TypedPoint2D::new(self.origin.x - width, self.origin.y - height),\\n199 | |             TypedSize2D::new(self.size.width + width + width, self.size.height + height + height),\\n200 | |         )\\n201 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:205:5\\n    |\\n205 | /     pub fn inflate_typed(&self, width: Length<T, U>, height: Length<T, U>) -> Self {\\n206 | |         self.inflate(width.get(), height.get())\\n207 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:226:5\\n    |\\n226 | /     pub fn translate_by_size(&self, size: &TypedSize2D<T, U>) -> Self {\\n227 | |         self.translate(&size.to_vector())\\n228 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:398:5\\n    |\\n398 | /     pub fn round(&self) -> Self {\\n399 | |         let origin = self.origin.round();\\n400 | |         let size = self.origin.add_size(&self.size).round() - origin;\\n401 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n402 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:407:5\\n    |\\n407 | /     pub fn round_in(&self) -> Self {\\n408 | |         let origin = self.origin.ceil();\\n409 | |         let size = self.origin.add_size(&self.size).floor() - origin;\\n410 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n411 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/rect.rs:416:5\\n    |\\n416 | /     pub fn round_out(&self) -> Self {\\n417 | |         let origin = self.origin.floor();\\n418 | |         let size = self.origin.add_size(&self.size).ceil() - origin;\\n419 | |         TypedRect::new(origin, TypedSize2D::new(size.x, size.y))\\n420 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:270:5\\n    |\\n270 | /     pub fn round(&self) -> Self {\\n271 | |         vec2(self.x.round(), self.y.round())\\n272 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:282:5\\n    |\\n282 | /     pub fn ceil(&self) -> Self {\\n283 | |         vec2(self.x.ceil(), self.y.ceil())\\n284 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:294:5\\n    |\\n294 | /     pub fn floor(&self) -> Self {\\n295 | |         vec2(self.x.floor(), self.y.floor())\\n296 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:617:5\\n    |\\n617 | /     pub fn round(&self) -> Self {\\n618 | |         vec3(self.x.round(), self.y.round(), self.z.round())\\n619 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:628:5\\n    |\\n628 | /     pub fn ceil(&self) -> Self {\\n629 | |         vec3(self.x.ceil(), self.y.ceil(), self.z.ceil())\\n630 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\nwarning: `#[must_use]` on methods is experimental (see issue #43302)\\n   --> /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/euclid-0.15.1/src/vector.rs:639:5\\n    |\\n639 | /     pub fn floor(&self) -> Self {\\n640 | |         vec3(self.x.floor(), self.y.floor(), self.z.floor())\\n641 | |     }\\n    | |_____^\\n    |\\n    = help: add #![feature(fn_must_use)] to the crate attributes to enable\\n\\n   Compiling synstructure v0.5.2\\n   Compiling cssparser v0.17.0\\n   Compiling cssparser-macros v0.3.0\\n   Compiling style_derive v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/components/style_derive)\\nwarning: variable does not need to be mutable\\n   --> components/selectors/matching.rs:461:39\\n    |\\n461 |                                       mut context: &mut LocalMatchingContext<E::Impl>,\\n    |                                       ^^^^^^^^^^^\\n    |\\n    = note: #[warn(unused_mut)] on by default\\n\\nwarning: variable does not need to be mutable\\n    --> components/selectors/parser.rs:1472:5\\n     |\\n1472 |     mut builder: &mut SelectorBuilder<Impl>)\\n     |     ^^^^^^^^^^^\\n\\n   Compiling style_traits v0.0.1 (file:///tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/components/style_traits)\\nwarning: doc comment not used by rustdoc\\n   --> components/style/values/specified/image.rs:688:17\\n    |\\n688 |                 /// `to` keyword is mandatory in modern syntax.\\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n    |\\n    = note: #[warn(unused_doc_comment)] on by default\\n\\nwarning: doc comment not used by rustdoc\\n   --> components/style/values/specified/image.rs:694:17\\n    |\\n694 |                 /// There is no `to` keyword in webkit prefixed syntax. If it\\'s consumed,\\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nwarning: doc comment not used by rustdoc\\n    --> /tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/target/debug/build/style-69dbc239b294c6bd/out/gecko_properties.rs:8443:9\\n     |\\n8443 |         /// XXXManishearth this should also handle text zoom\\n     |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\\nerror[E0106]: missing lifetime specifier\\n   --> /tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/target/debug/build/style-69dbc239b294c6bd/out/gecko/bindings.rs:558:9\\n    |\\n558 |      -> RawGeckoNodeBorrowedOrNull;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter\\n    |\\n    = help: this function\\'s return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\\n    = help: consider giving it an explicit bounded or \\'static lifetime\\n\\nerror[E0106]: missing lifetime specifier\\n   --> /tmp/rustc-benchmark-style-9b276565.TIzaHQyh2ZS5/target/debug/build/style-69dbc239b294c6bd/out/gecko/bindings.rs:827:9\\n    |\\n827 |      -> RawServoAnimationValueBorrowedOrNull;\\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected lifetime parameter\\n    |\\n    = help: this function\\'s return type contains a borrowed value with an elided lifetime, but the lifetime cannot be derived from the arguments\\n    = help: consider giving it an explicit bounded or \\'static lifetime\\n\\nerror: aborting due to 2 previous errors\\n\\nthread \\'main\\' panicked at \\'assertion failed: cmd.status().expect(\\\"failed to spawn\\\").success()\\', collector/src/bin/rustc-fake.rs:30:8\\nnote: Run with `RUST_BACKTRACE=1` for a backtrace.\\nerror: Could not compile `style`.\\n\\nTo learn more, run the command again with --verbose.\\nmake: *** [all@000-base] Error 101\\n\\n\\n stdout=/home/alex/code/rustc-perf/cache/5caca6fa0213cadca1584db43dd71fb5f82b41b9/cargo/bin/cargo rustc  --features gecko --manifest-path components/style/Cargo.toml -- -Ztime-passes\\n39373527869;;instructions:u;6594233305;100.00;1.52;insn per cycle\\n25984126312;;cycles:u;6594233305;100.00;3.940;GHz\\n6594.235364;;task-clock;6594235364;100.00;1.000;CPUs utilized\\n6594.240917;;cpu-clock;6594235364;100.00;1.000;CPUs utilized\\n5213;;faults;6594235364;100.00;0.791;K/sec\\nmakefile:6: recipe for target \\'all@000-base\\' failed\\n\"), State { next_error: None, backtrace: None })"},"syntex-0.42.2":{"Ok":[{"name":"syntex-0.42.2@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":135565183815.0},{"name":"cycles:u","cnt":110801164439.0},{"name":"task-clock","cnt":28081.363651},{"name":"cpu-clock","cnt":28081.413576},{"name":"faults","cnt":30930.0},{"name":"max-rss","cnt":930596.0}]}]},{"name":"syntex-0.42.2@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":211567920380.0},{"name":"cycles:u","cnt":200872607309.0},{"name":"task-clock","cnt":53107.669733},{"name":"cpu-clock","cnt":53107.62668},{"name":"faults","cnt":229862.0},{"name":"max-rss","cnt":965852.0}]}]},{"name":"syntex-0.42.2@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":55606673284.0},{"name":"cycles:u","cnt":39788635296.0},{"name":"task-clock","cnt":10231.28773},{"name":"cpu-clock","cnt":10231.095088},{"name":"faults","cnt":25313.0},{"name":"max-rss","cnt":952920.0}]}]}]},"tokio-webpush-simple":{"Ok":[{"name":"tokio-webpush-simple@000-base","runs":[{"stats":[{"name":"instructions:u","cnt":28390530919.0},{"name":"cycles:u","cnt":23662130609.0},{"name":"task-clock","cnt":5463.953461},{"name":"cpu-clock","cnt":6100.833629},{"name":"faults","cnt":42671.0},{"name":"max-rss","cnt":386400.0}]}]},{"name":"tokio-webpush-simple@010-incr","runs":[{"stats":[{"name":"instructions:u","cnt":43466230082.0},{"name":"cycles:u","cnt":39527114985.0},{"name":"task-clock","cnt":10357.538968},{"name":"cpu-clock","cnt":10497.61166},{"name":"faults","cnt":77899.0},{"name":"max-rss","cnt":407932.0}]}]},{"name":"tokio-webpush-simple@020-clean","runs":[{"stats":[{"name":"instructions:u","cnt":9634658636.0},{"name":"cycles:u","cnt":7483100414.0},{"name":"task-clock","cnt":2025.733308},{"name":"cpu-clock","cnt":2056.011238},{"name":"faults","cnt":49175.0},{"name":"max-rss","cnt":381636.0}]}]},{"name":"tokio-webpush-simple@030-minor-change","runs":[{"stats":[{"name":"instructions:u","cnt":43865035024.0},{"name":"cycles:u","cnt":39903643781.0},{"name":"task-clock","cnt":10583.575943},{"name":"cpu-clock","cnt":10602.285769},{"name":"faults","cnt":78904.0},{"name":"max-rss","cnt":408408.0}]}]}]},"tuple-stress":{"Ok":[{"name":"tuple-stress","runs":[{"stats":[{"name":"instructions:u","cnt":23684668260.0},{"name":"cycles:u","cnt":16652396137.0},{"name":"task-clock","cnt":4151.143784},{"name":"cpu-clock","cnt":4271.013974},{"name":"faults","cnt":36334.0},{"name":"max-rss","cnt":423320.0}]}]}]}},"triple":"x86_64-unknown-linux-gnu"}