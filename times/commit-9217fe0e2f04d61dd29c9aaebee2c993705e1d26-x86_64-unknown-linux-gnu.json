{"commit":{"sha":"9217fe0e2f04d61dd29c9aaebee2c993705e1d26","date":"2019-04-15T13:24:15+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":7193.573368},{"name":"cpu-clock","cnt":7193.557441},{"name":"cycles:u","cnt":28171127720.0},{"name":"wall-time","cnt":7.24287328},{"name":"instructions:u","cnt":33903286904.0},{"name":"faults","cnt":79526.0},{"name":"max-rss","cnt":424512.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":34065238184.0},{"name":"cpu-clock","cnt":8698.674668},{"name":"wall-time","cnt":8.717029692},{"name":"faults","cnt":119413.0},{"name":"max-rss","cnt":582244.0},{"name":"instructions:u","cnt":41500189284.0},{"name":"task-clock","cnt":8698.671658}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2435.788012},{"name":"instructions:u","cnt":11711619375.0},{"name":"cycles:u","cnt":9145744178.0},{"name":"wall-time","cnt":2.370797993},{"name":"max-rss","cnt":538868.0},{"name":"task-clock","cnt":2435.786914},{"name":"faults","cnt":109470.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":10527053768.0},{"name":"max-rss","cnt":552556.0},{"name":"cpu-clock","cnt":2784.302509},{"name":"task-clock","cnt":2784.301761},{"name":"faults","cnt":111172.0},{"name":"instructions:u","cnt":13200098296.0},{"name":"wall-time","cnt":2.720833411}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":46185.162555},{"name":"instructions:u","cnt":180761000045.0},{"name":"faults","cnt":396271.0},{"name":"cycles:u","cnt":174610015088.0},{"name":"cpu-clock","cnt":46185.198475},{"name":"max-rss","cnt":1595764.0},{"name":"wall-time","cnt":18.5031116}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":51725.268962},{"name":"faults","cnt":428380.0},{"name":"task-clock","cnt":51725.055824},{"name":"max-rss","cnt":1522296.0},{"name":"cycles:u","cnt":195381802914.0},{"name":"wall-time","cnt":21.845483636},{"name":"instructions:u","cnt":206372619995.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":4.20503863},{"name":"max-rss","cnt":1156868.0},{"name":"cycles:u","cnt":15524604105.0},{"name":"cpu-clock","cnt":4305.772333},{"name":"faults","cnt":213293.0},{"name":"instructions:u","cnt":19005450311.0},{"name":"task-clock","cnt":4305.993777}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1503764.0},{"name":"cpu-clock","cnt":14711.117189},{"name":"wall-time","cnt":7.678435865},{"name":"faults","cnt":318302.0},{"name":"instructions:u","cnt":59630165425.0},{"name":"cycles:u","cnt":54681752082.0},{"name":"task-clock","cnt":14711.252792}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":214337.205339},{"name":"wall-time","cnt":37.608916666},{"name":"instructions:u","cnt":630181736204.0},{"name":"max-rss","cnt":1344880.0},{"name":"faults","cnt":425533.0},{"name":"task-clock","cnt":214337.046999},{"name":"cycles:u","cnt":808823040951.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":257704.917062},{"name":"cycles:u","cnt":971296724786.0},{"name":"cpu-clock","cnt":257705.390998},{"name":"instructions:u","cnt":752766293885.0},{"name":"max-rss","cnt":1314772.0},{"name":"faults","cnt":452052.0},{"name":"wall-time","cnt":43.148710318}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":13246178127.0},{"name":"task-clock","cnt":3664.351689},{"name":"faults","cnt":215512.0},{"name":"instructions:u","cnt":14841958406.0},{"name":"cpu-clock","cnt":3664.155144},{"name":"max-rss","cnt":1006624.0},{"name":"wall-time","cnt":3.362021486}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":456452394386.0},{"name":"max-rss","cnt":1384140.0},{"name":"task-clock","cnt":153186.092174},{"name":"faults","cnt":386869.0},{"name":"cpu-clock","cnt":153186.355464},{"name":"wall-time","cnt":24.440923169},{"name":"cycles:u","cnt":576265879776.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":3.685402281},{"name":"cycles:u","cnt":14327247597.0},{"name":"instructions:u","cnt":18755929741.0},{"name":"max-rss","cnt":256916.0},{"name":"faults","cnt":47380.0},{"name":"cpu-clock","cnt":3649.664696},{"name":"task-clock","cnt":3649.66473}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.223430562},{"name":"faults","cnt":95536.0},{"name":"instructions:u","cnt":39429026598.0},{"name":"max-rss","cnt":447300.0},{"name":"cycles:u","cnt":24146301805.0},{"name":"task-clock","cnt":6188.087063},{"name":"cpu-clock","cnt":6188.106526}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":812016.0},{"name":"cycles:u","cnt":6250577966.0},{"name":"instructions:u","cnt":10169473823.0},{"name":"faults","cnt":182036.0},{"name":"task-clock","cnt":1794.327456},{"name":"wall-time","cnt":1.791996938},{"name":"cpu-clock","cnt":1794.327258}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2615.580719},{"name":"instructions:u","cnt":13945888401.0},{"name":"max-rss","cnt":825688.0},{"name":"wall-time","cnt":2.609954747},{"name":"faults","cnt":183909.0},{"name":"cycles:u","cnt":9512077599.0},{"name":"cpu-clock","cnt":2615.601073}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":980736.0},{"name":"cycles:u","cnt":58858380223.0},{"name":"instructions:u","cnt":71449542345.0},{"name":"cpu-clock","cnt":15425.645852},{"name":"faults","cnt":246686.0},{"name":"task-clock","cnt":15425.63038},{"name":"wall-time","cnt":9.2498083}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":237346.0},{"name":"task-clock","cnt":20791.051457},{"name":"cpu-clock","cnt":20791.071491},{"name":"cycles:u","cnt":79263614728.0},{"name":"max-rss","cnt":939928.0},{"name":"instructions:u","cnt":96233256229.0},{"name":"wall-time","cnt":11.897961823}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2417.282559},{"name":"cpu-clock","cnt":2417.188756},{"name":"wall-time","cnt":2.37376778},{"name":"instructions:u","cnt":12873408949.0},{"name":"faults","cnt":205654.0},{"name":"max-rss","cnt":944476.0},{"name":"cycles:u","cnt":8439465770.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.509022502},{"name":"task-clock","cnt":11394.282053},{"name":"cpu-clock","cnt":11394.239899},{"name":"cycles:u","cnt":42763457267.0},{"name":"instructions:u","cnt":51094659297.0},{"name":"faults","cnt":339778.0},{"name":"max-rss","cnt":1417260.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":482708.0},{"name":"cycles:u","cnt":209414102468.0},{"name":"task-clock","cnt":54458.138796},{"name":"faults","cnt":146912.0},{"name":"cpu-clock","cnt":54458.210073},{"name":"wall-time","cnt":25.831106622},{"name":"instructions:u","cnt":202921183601.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":62959.181174},{"name":"wall-time","cnt":26.786396384},{"name":"cycles:u","cnt":240935704182.0},{"name":"instructions:u","cnt":232435880988.0},{"name":"faults","cnt":198259.0},{"name":"max-rss","cnt":655764.0},{"name":"task-clock","cnt":62959.038949}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":915088.0},{"name":"task-clock","cnt":2363.35824},{"name":"cpu-clock","cnt":2363.269898},{"name":"cycles:u","cnt":8303229451.0},{"name":"faults","cnt":205327.0},{"name":"instructions:u","cnt":12792868616.0},{"name":"wall-time","cnt":2.307732954}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1170588.0},{"name":"cycles:u","cnt":130284303316.0},{"name":"task-clock","cnt":34368.652636},{"name":"instructions:u","cnt":126433408053.0},{"name":"cpu-clock","cnt":34368.688543},{"name":"faults","cnt":274157.0},{"name":"wall-time","cnt":13.462580209}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.810903538},{"name":"faults","cnt":27428.0},{"name":"instructions:u","cnt":5423377530.0},{"name":"task-clock","cnt":774.803851},{"name":"cycles:u","cnt":2953807673.0},{"name":"max-rss","cnt":184132.0},{"name":"cpu-clock","cnt":774.79223}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":194392.0},{"name":"faults","cnt":28958.0},{"name":"wall-time","cnt":1.027388604},{"name":"task-clock","cnt":1009.344314},{"name":"cycles:u","cnt":3869549684.0},{"name":"instructions:u","cnt":7122936321.0},{"name":"cpu-clock","cnt":1009.343893}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":23491.0},{"name":"cpu-clock","cnt":266.566438},{"name":"max-rss","cnt":158268.0},{"name":"wall-time","cnt":0.30326105},{"name":"cycles:u","cnt":919429445.0},{"name":"instructions:u","cnt":1731278196.0},{"name":"task-clock","cnt":266.57773}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":992219701.0},{"name":"cpu-clock","cnt":285.112032},{"name":"faults","cnt":23777.0},{"name":"instructions:u","cnt":1890290577.0},{"name":"max-rss","cnt":176112.0},{"name":"wall-time","cnt":0.302942013},{"name":"task-clock","cnt":285.103412}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":3834520895.0},{"name":"wall-time","cnt":1.021156472},{"name":"max-rss","cnt":202508.0},{"name":"instructions:u","cnt":7159378315.0},{"name":"faults","cnt":31180.0},{"name":"task-clock","cnt":1003.355774},{"name":"cpu-clock","cnt":1003.353883}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1149.764574},{"name":"task-clock","cnt":1149.769586},{"name":"wall-time","cnt":1.173188939},{"name":"instructions:u","cnt":7248386309.0},{"name":"max-rss","cnt":279444.0},{"name":"faults","cnt":56340.0},{"name":"cycles:u","cnt":4187152913.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":8979189097.0},{"name":"task-clock","cnt":1363.245051},{"name":"wall-time","cnt":1.330363087},{"name":"cpu-clock","cnt":1363.242252},{"name":"cycles:u","cnt":5014812523.0},{"name":"max-rss","cnt":290252.0},{"name":"faults","cnt":59247.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1227703159.0},{"name":"max-rss","cnt":177940.0},{"name":"instructions:u","cnt":2230282193.0},{"name":"task-clock","cnt":380.44124},{"name":"faults","cnt":33005.0},{"name":"wall-time","cnt":0.413341926},{"name":"cpu-clock","cnt":380.444151}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2252657050.0},{"name":"max-rss","cnt":274456.0},{"name":"faults","cnt":55108.0},{"name":"instructions:u","cnt":3723451440.0},{"name":"task-clock","cnt":665.949121},{"name":"cpu-clock","cnt":665.944902},{"name":"wall-time","cnt":0.595569224}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":4997852377.0},{"name":"instructions:u","cnt":8944340342.0},{"name":"task-clock","cnt":1367.654767},{"name":"wall-time","cnt":1.31924357},{"name":"max-rss","cnt":288196.0},{"name":"cpu-clock","cnt":1367.660136},{"name":"faults","cnt":61736.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"cycles:u","cnt":3475809970.0},{"name":"cpu-clock","cnt":929.265865},{"name":"faults","cnt":35574.0},{"name":"wall-time","cnt":0.953535612},{"name":"instructions:u","cnt":6181949896.0},{"name":"task-clock","cnt":929.27086},{"name":"max-rss","cnt":207328.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":38234.0},{"name":"wall-time","cnt":1.152914844},{"name":"task-clock","cnt":1153.677545},{"name":"max-rss","cnt":221008.0},{"name":"cycles:u","cnt":4324684078.0},{"name":"cpu-clock","cnt":1153.663996},{"name":"instructions:u","cnt":7910186886.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":30241.0},{"name":"instructions:u","cnt":2039160301.0},{"name":"cpu-clock","cnt":330.749614},{"name":"wall-time","cnt":0.36191391},{"name":"cycles:u","cnt":1091513913.0},{"name":"task-clock","cnt":330.753726},{"name":"max-rss","cnt":177656.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":32361.0},{"name":"max-rss","cnt":200628.0},{"name":"task-clock","cnt":435.084035},{"name":"cycles:u","cnt":1491639037.0},{"name":"wall-time","cnt":0.427027882},{"name":"cpu-clock","cnt":435.081912},{"name":"instructions:u","cnt":2640313569.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1138.776594},{"name":"faults","cnt":40660.0},{"name":"wall-time","cnt":1.130529928},{"name":"cycles:u","cnt":4266035639.0},{"name":"task-clock","cnt":1138.780126},{"name":"instructions:u","cnt":7864746000.0},{"name":"max-rss","cnt":217988.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":515908.0},{"name":"task-clock","cnt":5997.403052},{"name":"instructions:u","cnt":30059804782.0},{"name":"wall-time","cnt":6.052492968},{"name":"cpu-clock","cnt":5997.41563},{"name":"cycles:u","cnt":23403659783.0},{"name":"faults","cnt":113237.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":36407241116.0},{"name":"faults","cnt":121776.0},{"name":"max-rss","cnt":579572.0},{"name":"cycles:u","cnt":28001408117.0},{"name":"task-clock","cnt":7209.518913},{"name":"wall-time","cnt":7.271245486},{"name":"cpu-clock","cnt":7209.51133}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.485800531},{"name":"max-rss","cnt":436568.0},{"name":"faults","cnt":86741.0},{"name":"cpu-clock","cnt":1517.097024},{"name":"instructions:u","cnt":6990277051.0},{"name":"cycles:u","cnt":5553713599.0},{"name":"task-clock","cnt":1517.095507}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":69192342582.0},{"name":"max-rss","cnt":794180.0},{"name":"faults","cnt":176362.0},{"name":"task-clock","cnt":15641.910471},{"name":"cycles:u","cnt":59890195311.0},{"name":"wall-time","cnt":9.180513032},{"name":"cpu-clock","cnt":15641.914284}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":11.284348512},{"name":"faults","cnt":193451.0},{"name":"task-clock","cnt":18707.397371},{"name":"cycles:u","cnt":71371699661.0},{"name":"instructions:u","cnt":85816214538.0},{"name":"cpu-clock","cnt":18707.431353},{"name":"max-rss","cnt":838592.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2453.706808},{"name":"cycles:u","cnt":8599222794.0},{"name":"instructions:u","cnt":12022061403.0},{"name":"faults","cnt":151072.0},{"name":"max-rss","cnt":736940.0},{"name":"cpu-clock","cnt":2453.565183},{"name":"wall-time","cnt":2.370387128}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1141592.0},{"name":"cycles:u","cnt":266978280866.0},{"name":"faults","cnt":281948.0},{"name":"cpu-clock","cnt":70369.502256},{"name":"task-clock","cnt":70369.419458},{"name":"wall-time","cnt":20.220124378},{"name":"instructions:u","cnt":226492688751.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":260521873182.0},{"name":"task-clock","cnt":83771.365061},{"name":"wall-time","cnt":20.822417855},{"name":"max-rss","cnt":1063936.0},{"name":"faults","cnt":285736.0},{"name":"cycles:u","cnt":316075822699.0},{"name":"cpu-clock","cnt":83771.557939}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":11858323953.0},{"name":"cycles:u","cnt":8597091882.0},{"name":"max-rss","cnt":731772.0},{"name":"cpu-clock","cnt":2444.18799},{"name":"faults","cnt":145935.0},{"name":"task-clock","cnt":2444.332582},{"name":"wall-time","cnt":2.321701223}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":32289876444.0},{"name":"faults","cnt":65980.0},{"name":"task-clock","cnt":6304.739396},{"name":"max-rss","cnt":380424.0},{"name":"cpu-clock","cnt":6304.740928},{"name":"wall-time","cnt":6.336168597},{"name":"cycles:u","cnt":24785528151.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":38693139388.0},{"name":"cycles:u","cnt":29718538245.0},{"name":"wall-time","cnt":7.636394844},{"name":"cpu-clock","cnt":7596.125193},{"name":"task-clock","cnt":7596.122722},{"name":"faults","cnt":105548.0},{"name":"max-rss","cnt":538472.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":7141633043.0},{"name":"max-rss","cnt":527544.0},{"name":"task-clock","cnt":1926.397297},{"name":"wall-time","cnt":1.838006834},{"name":"cpu-clock","cnt":1926.401551},{"name":"faults","cnt":103909.0},{"name":"instructions:u","cnt":9021046101.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":7864909153.0},{"name":"cpu-clock","cnt":2138.448611},{"name":"instructions:u","cnt":9985724618.0},{"name":"task-clock","cnt":2138.452517},{"name":"max-rss","cnt":537320.0},{"name":"faults","cnt":104638.0},{"name":"wall-time","cnt":2.052646582}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":106950570356.0},{"name":"instructions:u","cnt":116258646143.0},{"name":"faults","cnt":264437.0},{"name":"wall-time","cnt":12.979990612},{"name":"cpu-clock","cnt":28203.454867},{"name":"task-clock","cnt":28203.44057},{"name":"max-rss","cnt":1155996.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":16.129980876},{"name":"cycles:u","cnt":121355681124.0},{"name":"faults","cnt":273748.0},{"name":"instructions:u","cnt":130582781203.0},{"name":"max-rss","cnt":1195640.0},{"name":"task-clock","cnt":32085.240847},{"name":"cpu-clock","cnt":32085.266405}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":3187.565297},{"name":"cpu-clock","cnt":3187.336379},{"name":"wall-time","cnt":3.047041147},{"name":"faults","cnt":164987.0},{"name":"max-rss","cnt":924112.0},{"name":"instructions:u","cnt":14041403905.0},{"name":"cycles:u","cnt":11387303525.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":181574.0},{"name":"cycles:u","cnt":15963270312.0},{"name":"cpu-clock","cnt":4362.481128},{"name":"max-rss","cnt":992140.0},{"name":"instructions:u","cnt":19297306633.0},{"name":"wall-time","cnt":3.743342707},{"name":"task-clock","cnt":4362.658905}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":954396.0},{"name":"wall-time","cnt":23.505762636},{"name":"instructions:u","cnt":350167431406.0},{"name":"cpu-clock","cnt":115232.471354},{"name":"task-clock","cnt":115232.373492},{"name":"faults","cnt":237210.0},{"name":"cycles:u","cnt":435782956754.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":495576054895.0},{"name":"max-rss","cnt":1083492.0},{"name":"wall-time","cnt":25.443204077},{"name":"task-clock","cnt":131297.72989},{"name":"instructions:u","cnt":394230289876.0},{"name":"cpu-clock","cnt":131297.996906},{"name":"faults","cnt":274186.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3117.185541},{"name":"wall-time","cnt":2.891095052},{"name":"cycles:u","cnt":11288109470.0},{"name":"faults","cnt":162876.0},{"name":"max-rss","cnt":808516.0},{"name":"instructions:u","cnt":13706773127.0},{"name":"task-clock","cnt":3117.389332}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":58270618925.0},{"name":"instructions:u","cnt":58683359656.0},{"name":"faults","cnt":201757.0},{"name":"task-clock","cnt":15499.065697},{"name":"wall-time","cnt":6.148869948},{"name":"cpu-clock","cnt":15498.939618},{"name":"max-rss","cnt":954648.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":7852.506122},{"name":"faults","cnt":42963.0},{"name":"instructions:u","cnt":67425943214.0},{"name":"task-clock","cnt":7852.507928},{"name":"cycles:u","cnt":31122157965.0},{"name":"wall-time","cnt":7.87427177},{"name":"max-rss","cnt":252076.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":501964.0},{"name":"cpu-clock","cnt":9893.87889},{"name":"wall-time","cnt":9.930362612},{"name":"instructions:u","cnt":90773121150.0},{"name":"faults","cnt":107596.0},{"name":"cycles:u","cnt":38828506883.0},{"name":"task-clock","cnt":9893.867643}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":547956.0},{"name":"cpu-clock","cnt":857.960672},{"name":"faults","cnt":119683.0},{"name":"task-clock","cnt":857.95371},{"name":"instructions:u","cnt":5652819862.0},{"name":"wall-time","cnt":0.892388537},{"name":"cycles:u","cnt":2583453330.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":7772.729353},{"name":"task-clock","cnt":7772.702826},{"name":"faults","cnt":43284.0},{"name":"instructions:u","cnt":67396537580.0},{"name":"max-rss","cnt":254612.0},{"name":"wall-time","cnt":7.805651755},{"name":"cycles:u","cnt":30800361941.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":763760.0},{"name":"instructions:u","cnt":99740113762.0},{"name":"cpu-clock","cnt":10640.908558},{"name":"cycles:u","cnt":41465939697.0},{"name":"task-clock","cnt":10640.890307},{"name":"faults","cnt":176171.0},{"name":"wall-time","cnt":10.673371515}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":971008.0},{"name":"cycles:u","cnt":3968750579.0},{"name":"wall-time","cnt":1.379490128},{"name":"task-clock","cnt":1343.827921},{"name":"cpu-clock","cnt":1343.822961},{"name":"faults","cnt":231560.0},{"name":"instructions:u","cnt":8397722308.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":260332.0},{"name":"wall-time","cnt":6.532285695},{"name":"instructions:u","cnt":54842040940.0},{"name":"faults","cnt":43393.0},{"name":"task-clock","cnt":6498.227544},{"name":"cycles:u","cnt":25717289466.0},{"name":"cpu-clock","cnt":6498.223511}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":9.40074792},{"name":"task-clock","cnt":9370.520363},{"name":"cpu-clock","cnt":9370.541702},{"name":"faults","cnt":189693.0},{"name":"max-rss","cnt":738468.0},{"name":"cycles:u","cnt":36281888218.0},{"name":"instructions:u","cnt":86901494704.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":231507.0},{"name":"cpu-clock","cnt":1349.049615},{"name":"instructions:u","cnt":8396220009.0},{"name":"cycles:u","cnt":3982076931.0},{"name":"wall-time","cnt":1.38306955},{"name":"max-rss","cnt":970964.0},{"name":"task-clock","cnt":1349.051656}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1094.489008},{"name":"cycles:u","cnt":4090208212.0},{"name":"max-rss","cnt":287212.0},{"name":"instructions:u","cnt":6994921698.0},{"name":"faults","cnt":52463.0},{"name":"wall-time","cnt":1.131343214},{"name":"task-clock","cnt":1094.499225}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":7974385611.0},{"name":"cycles:u","cnt":4544474507.0},{"name":"max-rss","cnt":298200.0},{"name":"task-clock","cnt":1198.494514},{"name":"cpu-clock","cnt":1198.493113},{"name":"faults","cnt":54884.0},{"name":"wall-time","cnt":1.232516402}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1273909246.0},{"name":"task-clock","cnt":355.937525},{"name":"faults","cnt":30304.0},{"name":"max-rss","cnt":187036.0},{"name":"cpu-clock","cnt":355.936352},{"name":"instructions:u","cnt":2508419840.0},{"name":"wall-time","cnt":0.390580461}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":4544831930.0},{"name":"faults","cnt":51940.0},{"name":"cpu-clock","cnt":1210.340443},{"name":"instructions:u","cnt":7996696627.0},{"name":"wall-time","cnt":1.228048798},{"name":"task-clock","cnt":1210.340161},{"name":"max-rss","cnt":291352.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7993675339.0},{"name":"wall-time","cnt":1.240412462},{"name":"task-clock","cnt":1205.812672},{"name":"faults","cnt":52108.0},{"name":"max-rss","cnt":292516.0},{"name":"cpu-clock","cnt":1205.822057},{"name":"cycles:u","cnt":4563332555.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"max-rss","cnt":383400.0},{"name":"cpu-clock","cnt":1701.881299},{"name":"cycles:u","cnt":6270208507.0},{"name":"instructions:u","cnt":10128253330.0},{"name":"task-clock","cnt":1701.888632},{"name":"faults","cnt":81660.0},{"name":"wall-time","cnt":1.698536398}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1842.120201},{"name":"faults","cnt":86288.0},{"name":"wall-time","cnt":1.820661337},{"name":"instructions:u","cnt":11547702423.0},{"name":"task-clock","cnt":1842.170753},{"name":"cycles:u","cnt":6874834363.0},{"name":"max-rss","cnt":396660.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":481.278862},{"name":"faults","cnt":42915.0},{"name":"instructions:u","cnt":3201010003.0},{"name":"max-rss","cnt":225876.0},{"name":"cpu-clock","cnt":481.237033},{"name":"cycles:u","cnt":1638031921.0},{"name":"wall-time","cnt":0.510676489}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":11555944301.0},{"name":"max-rss","cnt":388200.0},{"name":"cpu-clock","cnt":1832.59007},{"name":"faults","cnt":82245.0},{"name":"task-clock","cnt":1832.579018},{"name":"cycles:u","cnt":6849432673.0},{"name":"wall-time","cnt":1.78913558}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1840.008348},{"name":"faults","cnt":83476.0},{"name":"wall-time","cnt":1.811765008},{"name":"max-rss","cnt":392388.0},{"name":"cycles:u","cnt":6811853113.0},{"name":"cpu-clock","cnt":1840.015965},{"name":"instructions:u","cnt":11543402661.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"cycles:u","cnt":11678958485.0},{"name":"faults","cnt":140731.0},{"name":"instructions:u","cnt":17289261503.0},{"name":"cpu-clock","cnt":3138.279035},{"name":"wall-time","cnt":3.136536056},{"name":"max-rss","cnt":594780.0},{"name":"task-clock","cnt":3138.286211}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":141231.0},{"name":"task-clock","cnt":3320.663773},{"name":"cpu-clock","cnt":3320.624971},{"name":"wall-time","cnt":3.286207186},{"name":"instructions:u","cnt":18589225985.0},{"name":"cycles:u","cnt":12545285029.0},{"name":"max-rss","cnt":597504.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.501992102},{"name":"faults","cnt":42292.0},{"name":"instructions:u","cnt":3159303064.0},{"name":"cycles:u","cnt":1616487078.0},{"name":"cpu-clock","cnt":471.308368},{"name":"max-rss","cnt":225228.0},{"name":"task-clock","cnt":471.316941}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":12195320078.0},{"name":"instructions:u","cnt":18539203450.0},{"name":"cpu-clock","cnt":3227.047171},{"name":"wall-time","cnt":3.173950769},{"name":"max-rss","cnt":599212.0},{"name":"faults","cnt":142090.0},{"name":"task-clock","cnt":3227.07088}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":3261.276529},{"name":"max-rss","cnt":604604.0},{"name":"instructions:u","cnt":18651706448.0},{"name":"cpu-clock","cnt":3261.228389},{"name":"cycles:u","cnt":12174467301.0},{"name":"faults","cnt":143038.0},{"name":"wall-time","cnt":3.223534054}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.101859619},{"name":"max-rss","cnt":112276.0},{"name":"cpu-clock","cnt":83.871218},{"name":"instructions:u","cnt":429086906.0},{"name":"cycles:u","cnt":276950271.0},{"name":"task-clock","cnt":83.882233},{"name":"faults","cnt":5815.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":117392.0},{"name":"task-clock","cnt":96.757294},{"name":"instructions:u","cnt":487525093.0},{"name":"cycles:u","cnt":321437176.0},{"name":"faults","cnt":7221.0},{"name":"cpu-clock","cnt":96.754552},{"name":"wall-time","cnt":0.114803336}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":46.206869},{"name":"faults","cnt":6031.0},{"name":"wall-time","cnt":0.063339305},{"name":"max-rss","cnt":92268.0},{"name":"task-clock","cnt":46.209625},{"name":"instructions:u","cnt":179227364.0},{"name":"cycles:u","cnt":128447583.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":167.693876},{"name":"wall-time","cnt":0.157811735},{"name":"task-clock","cnt":167.723446},{"name":"instructions:u","cnt":775912453.0},{"name":"faults","cnt":8628.0},{"name":"cycles:u","cnt":578358375.0},{"name":"max-rss","cnt":127740.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":10271.0},{"name":"cycles:u","cnt":640342891.0},{"name":"wall-time","cnt":0.17140148},{"name":"instructions:u","cnt":849749238.0},{"name":"task-clock","cnt":186.579613},{"name":"max-rss","cnt":137484.0},{"name":"cpu-clock","cnt":186.568796}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":112068.0},{"name":"cycles:u","cnt":189189430.0},{"name":"wall-time","cnt":0.080948386},{"name":"task-clock","cnt":65.617418},{"name":"cpu-clock","cnt":65.627677},{"name":"instructions:u","cnt":270188339.0},{"name":"faults","cnt":7457.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":7786.0},{"name":"max-rss","cnt":128968.0},{"name":"instructions:u","cnt":1278773936.0},{"name":"wall-time","cnt":0.206752686},{"name":"cycles:u","cnt":906914631.0},{"name":"cpu-clock","cnt":249.787188},{"name":"task-clock","cnt":249.82361}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":264.039707},{"name":"faults","cnt":9369.0},{"name":"task-clock","cnt":264.044491},{"name":"cycles:u","cnt":961475267.0},{"name":"instructions:u","cnt":1348767759.0},{"name":"max-rss","cnt":132872.0},{"name":"wall-time","cnt":0.219671101}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":189844298.0},{"name":"task-clock","cnt":64.806069},{"name":"max-rss","cnt":108608.0},{"name":"wall-time","cnt":0.080770402},{"name":"instructions:u","cnt":267863181.0},{"name":"cpu-clock","cnt":64.80198},{"name":"faults","cnt":7342.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":1604588745.0},{"name":"wall-time","cnt":0.443657535},{"name":"cpu-clock","cnt":425.342349},{"name":"task-clock","cnt":425.333132},{"name":"instructions:u","cnt":1908528908.0},{"name":"faults","cnt":12206.0},{"name":"max-rss","cnt":141280.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":18763.0},{"name":"max-rss","cnt":169164.0},{"name":"instructions:u","cnt":2444593198.0},{"name":"cycles:u","cnt":2055014893.0},{"name":"wall-time","cnt":0.563157299},{"name":"cpu-clock","cnt":545.282149},{"name":"task-clock","cnt":545.293512}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":159996.0},{"name":"cycles:u","cnt":622012852.0},{"name":"cpu-clock","cnt":185.557081},{"name":"faults","cnt":18279.0},{"name":"task-clock","cnt":185.568766},{"name":"instructions:u","cnt":858541151.0},{"name":"wall-time","cnt":0.19372119}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":202.897506},{"name":"cycles:u","cnt":691711072.0},{"name":"max-rss","cnt":166376.0},{"name":"faults","cnt":18268.0},{"name":"instructions:u","cnt":925490633.0},{"name":"wall-time","cnt":0.21113695},{"name":"cpu-clock","cnt":202.905082}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1830.154173},{"name":"faults","cnt":31061.0},{"name":"cpu-clock","cnt":1830.166737},{"name":"wall-time","cnt":0.907119799},{"name":"cycles:u","cnt":6858426345.0},{"name":"instructions:u","cnt":7705968153.0},{"name":"max-rss","cnt":228252.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2341.594989},{"name":"faults","cnt":37388.0},{"name":"cpu-clock","cnt":2341.601087},{"name":"cycles:u","cnt":8679409206.0},{"name":"wall-time","cnt":1.132197187},{"name":"max-rss","cnt":248692.0},{"name":"instructions:u","cnt":9436305657.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.269296615},{"name":"faults","cnt":22902.0},{"name":"cpu-clock","cnt":280.562503},{"name":"task-clock","cnt":280.624869},{"name":"cycles:u","cnt":890481208.0},{"name":"max-rss","cnt":186292.0},{"name":"instructions:u","cnt":1181670558.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.313089015},{"name":"cpu-clock","cnt":304.043069},{"name":"faults","cnt":23523.0},{"name":"max-rss","cnt":194212.0},{"name":"task-clock","cnt":304.093876},{"name":"instructions:u","cnt":1288184249.0},{"name":"cycles:u","cnt":977769102.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":5313.228212},{"name":"cpu-clock","cnt":5313.234131},{"name":"wall-time","cnt":1.45145258},{"name":"max-rss","cnt":236712.0},{"name":"faults","cnt":33552.0},{"name":"cycles:u","cnt":20028240414.0},{"name":"instructions:u","cnt":18110339104.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":20177179953.0},{"name":"task-clock","cnt":5943.841608},{"name":"cpu-clock","cnt":5943.8664},{"name":"cycles:u","cnt":22300026672.0},{"name":"faults","cnt":39656.0},{"name":"wall-time","cnt":1.636709454},{"name":"max-rss","cnt":261136.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1193965825.0},{"name":"cpu-clock","cnt":271.262697},{"name":"cycles:u","cnt":891038856.0},{"name":"task-clock","cnt":271.318116},{"name":"wall-time","cnt":0.263020892},{"name":"max-rss","cnt":184856.0},{"name":"faults","cnt":22979.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":385.661581},{"name":"max-rss","cnt":198152.0},{"name":"cycles:u","cnt":1322263130.0},{"name":"instructions:u","cnt":1690490967.0},{"name":"wall-time","cnt":0.374171151},{"name":"cpu-clock","cnt":385.598013},{"name":"faults","cnt":24247.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":763.735944},{"name":"max-rss","cnt":140708.0},{"name":"cycles:u","cnt":2952860073.0},{"name":"task-clock","cnt":763.736963},{"name":"wall-time","cnt":0.781927204},{"name":"instructions:u","cnt":3992992904.0},{"name":"faults","cnt":11842.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":926.414026},{"name":"instructions:u","cnt":4688525169.0},{"name":"max-rss","cnt":169200.0},{"name":"faults","cnt":19209.0},{"name":"cpu-clock","cnt":926.411739},{"name":"wall-time","cnt":0.944532565},{"name":"cycles:u","cnt":3565481556.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":936893909.0},{"name":"task-clock","cnt":201.369819},{"name":"wall-time","cnt":0.220807079},{"name":"max-rss","cnt":162196.0},{"name":"faults","cnt":18637.0},{"name":"cycles:u","cnt":681601905.0},{"name":"cpu-clock","cnt":201.378578}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":210.378384},{"name":"cycles:u","cnt":714125922.0},{"name":"wall-time","cnt":0.216863157},{"name":"cpu-clock","cnt":210.376941},{"name":"instructions:u","cnt":947556705.0},{"name":"max-rss","cnt":159896.0},{"name":"faults","cnt":18642.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1094.973378},{"name":"instructions:u","cnt":5239173860.0},{"name":"cpu-clock","cnt":1094.968554},{"name":"faults","cnt":15800.0},{"name":"cycles:u","cnt":4180231844.0},{"name":"wall-time","cnt":0.913719629},{"name":"max-rss","cnt":162424.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":192192.0},{"name":"task-clock","cnt":1330.813856},{"name":"cycles:u","cnt":5040750549.0},{"name":"wall-time","cnt":1.11507963},{"name":"instructions:u","cnt":6219477674.0},{"name":"faults","cnt":23715.0},{"name":"cpu-clock","cnt":1330.810714}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":250.728395},{"name":"faults","cnt":21688.0},{"name":"wall-time","cnt":0.265479472},{"name":"cpu-clock","cnt":250.718975},{"name":"instructions:u","cnt":1112799222.0},{"name":"max-rss","cnt":180312.0},{"name":"cycles:u","cnt":828199906.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":21713.0},{"name":"cycles:u","cnt":853802410.0},{"name":"task-clock","cnt":258.466891},{"name":"cpu-clock","cnt":258.449118},{"name":"instructions:u","cnt":1124944223.0},{"name":"max-rss","cnt":180592.0},{"name":"wall-time","cnt":0.256677149}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":173624.0},{"name":"cycles:u","cnt":6185067385.0},{"name":"cpu-clock","cnt":1629.852186},{"name":"wall-time","cnt":0.985253429},{"name":"instructions:u","cnt":6601154927.0},{"name":"task-clock","cnt":1629.864497},{"name":"faults","cnt":17965.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.1750283},{"name":"faults","cnt":25412.0},{"name":"cpu-clock","cnt":1900.852111},{"name":"instructions:u","cnt":7652852827.0},{"name":"cycles:u","cnt":7180818761.0},{"name":"max-rss","cnt":202692.0},{"name":"task-clock","cnt":1900.860111}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.268045444},{"name":"instructions:u","cnt":1106570948.0},{"name":"cpu-clock","cnt":249.688994},{"name":"max-rss","cnt":179732.0},{"name":"cycles:u","cnt":830309527.0},{"name":"faults","cnt":21687.0},{"name":"task-clock","cnt":249.712063}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":251.77108},{"name":"faults","cnt":21696.0},{"name":"instructions:u","cnt":1118144775.0},{"name":"cycles:u","cnt":838715699.0},{"name":"wall-time","cnt":0.250761951},{"name":"max-rss","cnt":177388.0},{"name":"task-clock","cnt":251.777922}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":191704009.0},{"name":"max-rss","cnt":100392.0},{"name":"task-clock","cnt":45.1008},{"name":"cpu-clock","cnt":45.098786},{"name":"wall-time","cnt":0.063500523},{"name":"faults","cnt":4928.0},{"name":"cycles:u","cnt":129546353.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":216321261.0},{"name":"cpu-clock","cnt":52.733814},{"name":"max-rss","cnt":102456.0},{"name":"wall-time","cnt":0.07070446},{"name":"task-clock","cnt":52.727329},{"name":"faults","cnt":6130.0},{"name":"cycles:u","cnt":153444115.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":90092.0},{"name":"cycles:u","cnt":119911633.0},{"name":"wall-time","cnt":0.060956724},{"name":"instructions:u","cnt":169034104.0},{"name":"cpu-clock","cnt":42.993292},{"name":"task-clock","cnt":42.99672},{"name":"faults","cnt":5564.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.06972599},{"name":"max-rss","cnt":103820.0},{"name":"faults","cnt":6237.0},{"name":"instructions:u","cnt":209893781.0},{"name":"cycles:u","cnt":150733039.0},{"name":"cpu-clock","cnt":51.998983},{"name":"task-clock","cnt":51.989664}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":123.680519},{"name":"faults","cnt":12077.0},{"name":"instructions:u","cnt":523084079.0},{"name":"task-clock","cnt":123.687519},{"name":"wall-time","cnt":0.136084547},{"name":"max-rss","cnt":119576.0},{"name":"cycles:u","cnt":356056700.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":397582384.0},{"name":"task-clock","cnt":136.514736},{"name":"cpu-clock","cnt":136.511456},{"name":"faults","cnt":13477.0},{"name":"instructions:u","cnt":570983910.0},{"name":"wall-time","cnt":0.143624418},{"name":"max-rss","cnt":125000.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":115.193885},{"name":"wall-time","cnt":0.129303335},{"name":"faults","cnt":12712.0},{"name":"max-rss","cnt":108696.0},{"name":"instructions:u","cnt":473431070.0},{"name":"cycles:u","cnt":318958213.0},{"name":"task-clock","cnt":115.205649}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":126756.0},{"name":"cpu-clock","cnt":137.529747},{"name":"cycles:u","cnt":397987593.0},{"name":"faults","cnt":13778.0},{"name":"wall-time","cnt":0.143679966},{"name":"task-clock","cnt":137.535501},{"name":"instructions:u","cnt":550617498.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":549105663.0},{"name":"faults","cnt":12030.0},{"name":"wall-time","cnt":0.136688805},{"name":"cycles:u","cnt":377889646.0},{"name":"max-rss","cnt":121700.0},{"name":"cpu-clock","cnt":128.224294},{"name":"task-clock","cnt":128.228578}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":596115327.0},{"name":"cpu-clock","cnt":140.037604},{"name":"task-clock","cnt":140.042647},{"name":"cycles:u","cnt":415665241.0},{"name":"faults","cnt":13377.0},{"name":"wall-time","cnt":0.145957741},{"name":"max-rss","cnt":124628.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":105604.0},{"name":"faults","cnt":12482.0},{"name":"wall-time","cnt":0.127816474},{"name":"cycles:u","cnt":316009104.0},{"name":"instructions:u","cnt":470488896.0},{"name":"cpu-clock","cnt":112.880834},{"name":"task-clock","cnt":112.895765}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":577966546.0},{"name":"cycles:u","cnt":408672565.0},{"name":"max-rss","cnt":126072.0},{"name":"faults","cnt":13672.0},{"name":"task-clock","cnt":139.439589},{"name":"cpu-clock","cnt":139.423653},{"name":"wall-time","cnt":0.144684996}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":1638.943484},{"name":"instructions:u","cnt":9331322933.0},{"name":"wall-time","cnt":1.691530134},{"name":"faults","cnt":35505.0},{"name":"max-rss","cnt":228452.0},{"name":"task-clock","cnt":1638.943733},{"name":"cycles:u","cnt":6353669106.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":7767136088.0},{"name":"faults","cnt":42175.0},{"name":"instructions:u","cnt":11816950074.0},{"name":"task-clock","cnt":2005.427505},{"name":"wall-time","cnt":2.060845077},{"name":"cpu-clock","cnt":2005.426419},{"name":"max-rss","cnt":257816.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":619.542511},{"name":"max-rss","cnt":238168.0},{"name":"wall-time","cnt":0.62062625},{"name":"task-clock","cnt":619.543226},{"name":"cycles:u","cnt":2259704548.0},{"name":"faults","cnt":37165.0},{"name":"instructions:u","cnt":3965937331.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":38360.0},{"name":"wall-time","cnt":0.738552558},{"name":"task-clock","cnt":736.016747},{"name":"cpu-clock","cnt":736.015506},{"name":"instructions:u","cnt":4486161911.0},{"name":"cycles:u","cnt":2712689630.0},{"name":"max-rss","cnt":245924.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":2.08009415},{"name":"faults","cnt":49987.0},{"name":"task-clock","cnt":2611.19011},{"name":"instructions:u","cnt":13435092044.0},{"name":"max-rss","cnt":297764.0},{"name":"cycles:u","cnt":9991701777.0},{"name":"cpu-clock","cnt":2611.186136}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":61919.0},{"name":"task-clock","cnt":3138.548725},{"name":"cycles:u","cnt":11912191542.0},{"name":"cpu-clock","cnt":3138.548529},{"name":"max-rss","cnt":342840.0},{"name":"wall-time","cnt":2.529853663},{"name":"instructions:u","cnt":16640105036.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.745544194},{"name":"max-rss","cnt":295880.0},{"name":"cycles:u","cnt":2694953548.0},{"name":"faults","cnt":48359.0},{"name":"cpu-clock","cnt":760.92605},{"name":"task-clock","cnt":760.979559},{"name":"instructions:u","cnt":4504087954.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.86554205},{"name":"faults","cnt":49607.0},{"name":"cycles:u","cnt":3156113543.0},{"name":"task-clock","cnt":886.677899},{"name":"max-rss","cnt":306504.0},{"name":"instructions:u","cnt":5059118091.0},{"name":"cpu-clock","cnt":886.616172}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":7265.607561},{"name":"wall-time","cnt":2.788281322},{"name":"cpu-clock","cnt":7265.594203},{"name":"max-rss","cnt":386372.0},{"name":"instructions:u","cnt":27112892805.0},{"name":"cycles:u","cnt":27363132776.0},{"name":"faults","cnt":78584.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7390.662209},{"name":"max-rss","cnt":374124.0},{"name":"cycles:u","cnt":27895812559.0},{"name":"instructions:u","cnt":28200946125.0},{"name":"wall-time","cnt":3.024523047},{"name":"faults","cnt":70065.0},{"name":"cpu-clock","cnt":7390.659778}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":789.988659},{"name":"faults","cnt":50544.0},{"name":"wall-time","cnt":0.757991809},{"name":"max-rss","cnt":303184.0},{"name":"cycles:u","cnt":2800215156.0},{"name":"instructions:u","cnt":4631549902.0},{"name":"task-clock","cnt":790.035643}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":52244.0},{"name":"max-rss","cnt":317708.0},{"name":"cycles:u","cnt":3408914184.0},{"name":"wall-time","cnt":0.877493274},{"name":"instructions:u","cnt":5301366609.0},{"name":"cpu-clock","cnt":944.124784},{"name":"task-clock","cnt":944.186941}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":21339.0},{"name":"cycles:u","cnt":4320979014.0},{"name":"wall-time","cnt":1.139878374},{"name":"max-rss","cnt":180412.0},{"name":"cpu-clock","cnt":1121.058519},{"name":"instructions:u","cnt":4733242976.0},{"name":"task-clock","cnt":1121.058653}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":5513024430.0},{"name":"instructions:u","cnt":6058145468.0},{"name":"max-rss","cnt":232308.0},{"name":"faults","cnt":34419.0},{"name":"task-clock","cnt":1434.228937},{"name":"wall-time","cnt":1.470239335},{"name":"cpu-clock","cnt":1434.202655}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1914024534.0},{"name":"task-clock","cnt":433.114778},{"name":"cpu-clock","cnt":433.114373},{"name":"wall-time","cnt":0.443554448},{"name":"cycles:u","cnt":1527944843.0},{"name":"faults","cnt":33385.0},{"name":"max-rss","cnt":223036.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":231996.0},{"name":"faults","cnt":34088.0},{"name":"task-clock","cnt":460.034907},{"name":"wall-time","cnt":0.452689753},{"name":"cpu-clock","cnt":460.034334},{"name":"instructions:u","cnt":2001902337.0},{"name":"cycles:u","cnt":1624113569.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":4313.095707},{"name":"max-rss","cnt":308376.0},{"name":"faults","cnt":50467.0},{"name":"cpu-clock","cnt":4313.072912},{"name":"instructions:u","cnt":17241221139.0},{"name":"wall-time","cnt":2.256747024},{"name":"cycles:u","cnt":16354793601.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":20581480355.0},{"name":"cycles:u","cnt":19778303100.0},{"name":"cpu-clock","cnt":5270.000622},{"name":"task-clock","cnt":5269.948015},{"name":"faults","cnt":63933.0},{"name":"max-rss","cnt":364768.0},{"name":"wall-time","cnt":2.752141004}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":46341.0},{"name":"cpu-clock","cnt":700.933725},{"name":"instructions:u","cnt":2872041790.0},{"name":"cycles:u","cnt":2363970539.0},{"name":"task-clock","cnt":701.030905},{"name":"max-rss","cnt":298384.0},{"name":"wall-time","cnt":0.681369588}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2549815397.0},{"name":"cpu-clock","cnt":749.807873},{"name":"task-clock","cnt":749.923911},{"name":"instructions:u","cnt":2996963859.0},{"name":"max-rss","cnt":308220.0},{"name":"faults","cnt":47263.0},{"name":"wall-time","cnt":0.696527255}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":15620.854763},{"name":"max-rss","cnt":296980.0},{"name":"instructions:u","cnt":47087487663.0},{"name":"faults","cnt":49348.0},{"name":"cpu-clock","cnt":15620.88781},{"name":"wall-time","cnt":3.493726968},{"name":"cycles:u","cnt":59043493006.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":55098019840.0},{"name":"cpu-clock","cnt":18410.71637},{"name":"max-rss","cnt":346300.0},{"name":"wall-time","cnt":4.070350523},{"name":"task-clock","cnt":18410.705337},{"name":"faults","cnt":63132.0},{"name":"cycles:u","cnt":69277130926.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":716.118321},{"name":"cycles:u","cnt":2456887270.0},{"name":"instructions:u","cnt":2938097749.0},{"name":"cpu-clock","cnt":716.003239},{"name":"max-rss","cnt":289288.0},{"name":"faults","cnt":48139.0},{"name":"wall-time","cnt":0.679314716}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.195360145},{"name":"cycles:u","cnt":6420717167.0},{"name":"max-rss","cnt":322740.0},{"name":"task-clock","cnt":1755.089631},{"name":"cpu-clock","cnt":1755.033899},{"name":"instructions:u","cnt":6929312309.0},{"name":"faults","cnt":54711.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":180024.0},{"name":"cycles:u","cnt":6171568306.0},{"name":"task-clock","cnt":1583.39753},{"name":"cpu-clock","cnt":1583.375961},{"name":"instructions:u","cnt":12104765786.0},{"name":"wall-time","cnt":1.635870524},{"name":"faults","cnt":28463.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":31422.0},{"name":"wall-time","cnt":1.713882665},{"name":"max-rss","cnt":192364.0},{"name":"instructions:u","cnt":12848779488.0},{"name":"task-clock","cnt":1677.043831},{"name":"cycles:u","cnt":6533071844.0},{"name":"cpu-clock","cnt":1677.04197}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":133840.0},{"name":"wall-time","cnt":0.187260581},{"name":"cpu-clock","cnt":158.086516},{"name":"instructions:u","cnt":827848097.0},{"name":"cycles:u","cnt":536777574.0},{"name":"task-clock","cnt":158.0878},{"name":"faults","cnt":13405.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":201148.0},{"name":"cycles:u","cnt":6593534539.0},{"name":"cpu-clock","cnt":1695.149318},{"name":"wall-time","cnt":1.708298403},{"name":"task-clock","cnt":1695.151341},{"name":"faults","cnt":33606.0},{"name":"instructions:u","cnt":12706179841.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":56623.0},{"name":"max-rss","cnt":276068.0},{"name":"task-clock","cnt":2640.821277},{"name":"cpu-clock","cnt":2640.808835},{"name":"instructions:u","cnt":16643598217.0},{"name":"cycles:u","cnt":10173277358.0},{"name":"wall-time","cnt":2.463153671}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2873.255587},{"name":"max-rss","cnt":310324.0},{"name":"cycles:u","cnt":11030535408.0},{"name":"cpu-clock","cnt":2873.257971},{"name":"wall-time","cnt":2.600187617},{"name":"faults","cnt":59876.0},{"name":"instructions:u","cnt":17843098594.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":223.063833},{"name":"instructions:u","cnt":1149913056.0},{"name":"cycles:u","cnt":735913902.0},{"name":"faults","cnt":18124.0},{"name":"max-rss","cnt":159224.0},{"name":"wall-time","cnt":0.246704034},{"name":"task-clock","cnt":223.082032}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":322460.0},{"name":"cpu-clock","cnt":2823.089254},{"name":"task-clock","cnt":2823.098219},{"name":"wall-time","cnt":2.523172765},{"name":"faults","cnt":63194.0},{"name":"instructions:u","cnt":17636343756.0},{"name":"cycles:u","cnt":10825999209.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":321376.0},{"name":"wall-time","cnt":8.07834722},{"name":"cpu-clock","cnt":8332.377718},{"name":"instructions:u","cnt":51783036990.0},{"name":"task-clock","cnt":8332.411288},{"name":"cycles:u","cnt":32709777297.0},{"name":"faults","cnt":70935.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":33184765391.0},{"name":"cpu-clock","cnt":8439.271066},{"name":"task-clock","cnt":8439.273668},{"name":"faults","cnt":73016.0},{"name":"instructions:u","cnt":52867704024.0},{"name":"max-rss","cnt":342276.0},{"name":"wall-time","cnt":8.150036431}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":211.328378},{"name":"wall-time","cnt":0.236928408},{"name":"faults","cnt":17490.0},{"name":"instructions:u","cnt":1121210135.0},{"name":"cycles:u","cnt":710566330.0},{"name":"cpu-clock","cnt":211.311706},{"name":"max-rss","cnt":156204.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":31136445438.0},{"name":"wall-time","cnt":7.901043895},{"name":"cpu-clock","cnt":7924.739786},{"name":"faults","cnt":73297.0},{"name":"instructions:u","cnt":50526907573.0},{"name":"max-rss","cnt":325736.0},{"name":"task-clock","cnt":7924.721471}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.091922052},{"name":"max-rss","cnt":113536.0},{"name":"faults","cnt":6134.0},{"name":"task-clock","cnt":73.364297},{"name":"cpu-clock","cnt":73.362561},{"name":"cycles:u","cnt":235962617.0},{"name":"instructions:u","cnt":346286246.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":87.956506},{"name":"max-rss","cnt":121220.0},{"name":"instructions:u","cnt":418530057.0},{"name":"wall-time","cnt":0.105782933},{"name":"task-clock","cnt":87.970233},{"name":"faults","cnt":7864.0},{"name":"cycles:u","cnt":284217639.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":59.397015},{"name":"cpu-clock","cnt":59.403827},{"name":"faults","cnt":7589.0},{"name":"max-rss","cnt":107276.0},{"name":"cycles:u","cnt":172846924.0},{"name":"wall-time","cnt":0.076366027},{"name":"instructions:u","cnt":257811302.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.102213486},{"name":"cycles:u","cnt":270281759.0},{"name":"faults","cnt":8235.0},{"name":"task-clock","cnt":85.262193},{"name":"max-rss","cnt":123932.0},{"name":"instructions:u","cnt":382165314.0},{"name":"cpu-clock","cnt":85.259354}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"wall-time","cnt":0.102124317},{"name":"task-clock","cnt":85.525779},{"name":"faults","cnt":8208.0},{"name":"cpu-clock","cnt":85.523665},{"name":"instructions:u","cnt":381564003.0},{"name":"cycles:u","cnt":271841886.0},{"name":"max-rss","cnt":124336.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":244132128.0},{"name":"wall-time","cnt":0.095657755},{"name":"task-clock","cnt":78.844269},{"name":"faults","cnt":8213.0},{"name":"max-rss","cnt":125812.0},{"name":"cpu-clock","cnt":78.851947},{"name":"instructions:u","cnt":344177149.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":84.797958},{"name":"max-rss","cnt":124056.0},{"name":"faults","cnt":8217.0},{"name":"cycles:u","cnt":268383130.0},{"name":"task-clock","cnt":84.801437},{"name":"wall-time","cnt":0.101722771},{"name":"instructions:u","cnt":381851257.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":383554411.0},{"name":"cycles:u","cnt":272761544.0},{"name":"task-clock","cnt":85.921372},{"name":"max-rss","cnt":123584.0},{"name":"faults","cnt":8218.0},{"name":"cpu-clock","cnt":85.918912},{"name":"wall-time","cnt":0.103064883}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"task-clock","cnt":236.94502},{"name":"instructions:u","cnt":958163687.0},{"name":"cycles:u","cnt":814660765.0},{"name":"cpu-clock","cnt":236.913687},{"name":"wall-time","cnt":0.150658434},{"name":"faults","cnt":9971.0},{"name":"max-rss","cnt":138752.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":933240944.0},{"name":"instructions:u","cnt":1086739253.0},{"name":"max-rss","cnt":144968.0},{"name":"faults","cnt":11918.0},{"name":"wall-time","cnt":0.171930992},{"name":"task-clock","cnt":270.208697},{"name":"cpu-clock","cnt":270.20935}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":228171815.0},{"name":"cpu-clock","cnt":79.490443},{"name":"instructions:u","cnt":320500007.0},{"name":"wall-time","cnt":0.092125796},{"name":"max-rss","cnt":119252.0},{"name":"task-clock","cnt":79.519979},{"name":"faults","cnt":8722.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":876485646.0},{"name":"instructions:u","cnt":1028056300.0},{"name":"task-clock","cnt":257.125537},{"name":"faults","cnt":12264.0},{"name":"wall-time","cnt":0.162136163},{"name":"max-rss","cnt":146728.0},{"name":"cpu-clock","cnt":257.124686}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":145672.0},{"name":"instructions:u","cnt":956992249.0},{"name":"cpu-clock","cnt":241.00562},{"name":"faults","cnt":12167.0},{"name":"task-clock","cnt":241.002907},{"name":"cycles:u","cnt":815973343.0},{"name":"wall-time","cnt":0.151251261}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":234.14063},{"name":"task-clock","cnt":234.127899},{"name":"faults","cnt":12040.0},{"name":"wall-time","cnt":0.144274406},{"name":"cycles:u","cnt":790591121.0},{"name":"instructions:u","cnt":909463055.0},{"name":"max-rss","cnt":145468.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":846757516.0},{"name":"cpu-clock","cnt":248.266882},{"name":"instructions:u","cnt":959703715.0},{"name":"task-clock","cnt":248.254915},{"name":"max-rss","cnt":146516.0},{"name":"wall-time","cnt":0.155225402},{"name":"faults","cnt":12065.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":12094.0},{"name":"instructions:u","cnt":965398951.0},{"name":"max-rss","cnt":146164.0},{"name":"wall-time","cnt":0.155468278},{"name":"task-clock","cnt":246.734824},{"name":"cpu-clock","cnt":246.730855},{"name":"cycles:u","cnt":836588411.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":2297737836.0},{"name":"faults","cnt":11674.0},{"name":"wall-time","cnt":0.274957972},{"name":"max-rss","cnt":143264.0},{"name":"cpu-clock","cnt":633.52713},{"name":"task-clock","cnt":633.555307},{"name":"cycles:u","cnt":2325177380.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":686.032157},{"name":"cycles:u","cnt":2507617646.0},{"name":"instructions:u","cnt":2434380501.0},{"name":"max-rss","cnt":151368.0},{"name":"faults","cnt":13700.0},{"name":"cpu-clock","cnt":686.012125},{"name":"wall-time","cnt":0.292982862}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":322329862.0},{"name":"task-clock","cnt":78.164232},{"name":"faults","cnt":8758.0},{"name":"cpu-clock","cnt":78.15729},{"name":"wall-time","cnt":0.091166038},{"name":"max-rss","cnt":118344.0},{"name":"cycles:u","cnt":227740805.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":641.350738},{"name":"cpu-clock","cnt":641.332933},{"name":"max-rss","cnt":153848.0},{"name":"instructions:u","cnt":2360670928.0},{"name":"wall-time","cnt":0.299660036},{"name":"cycles:u","cnt":2338363290.0},{"name":"faults","cnt":13942.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"instructions:u","cnt":1426602268.0},{"name":"faults","cnt":13147.0},{"name":"cycles:u","cnt":1428641192.0},{"name":"cpu-clock","cnt":404.900623},{"name":"max-rss","cnt":149860.0},{"name":"wall-time","cnt":0.19054621},{"name":"task-clock","cnt":404.898282}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":367.867651},{"name":"wall-time","cnt":0.181190166},{"name":"instructions:u","cnt":1325936269.0},{"name":"max-rss","cnt":148860.0},{"name":"faults","cnt":12998.0},{"name":"cycles:u","cnt":1291850213.0},{"name":"cpu-clock","cnt":367.877955}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"wall-time","cnt":0.189552172},{"name":"max-rss","cnt":149256.0},{"name":"cpu-clock","cnt":376.035291},{"name":"cycles:u","cnt":1319620113.0},{"name":"faults","cnt":12964.0},{"name":"task-clock","cnt":376.02424},{"name":"instructions:u","cnt":1358434161.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"cpu-clock","cnt":379.451256},{"name":"faults","cnt":13002.0},{"name":"instructions:u","cnt":1366729249.0},{"name":"cycles:u","cnt":1337521506.0},{"name":"task-clock","cnt":379.448096},{"name":"wall-time","cnt":0.191997959},{"name":"max-rss","cnt":149664.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":5312.322981},{"name":"wall-time","cnt":5.330285949},{"name":"instructions:u","cnt":40664262482.0},{"name":"faults","cnt":144103.0},{"name":"max-rss","cnt":511908.0},{"name":"cycles:u","cnt":20639633685.0},{"name":"cpu-clock","cnt":5312.324545}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":22127796447.0},{"name":"faults","cnt":148082.0},{"name":"max-rss","cnt":523760.0},{"name":"wall-time","cnt":5.729191855},{"name":"task-clock","cnt":5694.91793},{"name":"cpu-clock","cnt":5694.916798},{"name":"instructions:u","cnt":43103815887.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.467408725},{"name":"task-clock","cnt":462.890288},{"name":"faults","cnt":34094.0},{"name":"max-rss","cnt":202212.0},{"name":"instructions:u","cnt":2009601909.0},{"name":"cpu-clock","cnt":462.879717},{"name":"cycles:u","cnt":1667497664.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.548374764},{"name":"instructions:u","cnt":51506796542.0},{"name":"max-rss","cnt":1076620.0},{"name":"faults","cnt":312305.0},{"name":"cpu-clock","cnt":7554.197355},{"name":"task-clock","cnt":7554.215336},{"name":"cycles:u","cnt":28868240558.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7958.433525},{"name":"instructions:u","cnt":54789520739.0},{"name":"wall-time","cnt":7.914118583},{"name":"cycles:u","cnt":30490970652.0},{"name":"max-rss","cnt":1245092.0},{"name":"faults","cnt":336240.0},{"name":"task-clock","cnt":7958.422901}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.583151125},{"name":"cycles:u","cnt":2002286642.0},{"name":"cpu-clock","cnt":568.636048},{"name":"max-rss","cnt":238928.0},{"name":"instructions:u","cnt":2718111420.0},{"name":"faults","cnt":42462.0},{"name":"task-clock","cnt":568.661857}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":6821.300558},{"name":"wall-time","cnt":6.821663647},{"name":"faults","cnt":279608.0},{"name":"max-rss","cnt":1025240.0},{"name":"cycles:u","cnt":26198075086.0},{"name":"cpu-clock","cnt":6821.300523},{"name":"instructions:u","cnt":51899018692.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":7.193151857},{"name":"cycles:u","cnt":27738161104.0},{"name":"task-clock","cnt":7224.22036},{"name":"faults","cnt":284939.0},{"name":"instructions:u","cnt":55077685336.0},{"name":"cpu-clock","cnt":7224.22033},{"name":"max-rss","cnt":1051796.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2659068316.0},{"name":"cpu-clock","cnt":559.348419},{"name":"cycles:u","cnt":1963758841.0},{"name":"wall-time","cnt":0.573309984},{"name":"faults","cnt":43585.0},{"name":"max-rss","cnt":242992.0},{"name":"task-clock","cnt":559.350282}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmpxWy9dp)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x55db6480d3bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x55db6480d552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x55db6480c86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x55db647a8470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x55db64496afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x55db6449e722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x55db644b0541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x55db644bfa1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x55db644b596e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x55db64469e22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x55db648340d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x55db6483ed39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x55db64834c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x55db644c3d57 - main\n  14:     0x7f5b0de0982f - __libc_start_main\n  15:     0x55db6445f518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":1.873542429},{"name":"max-rss","cnt":203880.0},{"name":"cpu-clock","cnt":1826.258379},{"name":"instructions:u","cnt":8651074836.0},{"name":"cycles:u","cnt":7125250108.0},{"name":"task-clock","cnt":1826.258689},{"name":"faults","cnt":26795.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":2263.479649},{"name":"wall-time","cnt":2.29880808},{"name":"cycles:u","cnt":8794446346.0},{"name":"max-rss","cnt":258744.0},{"name":"instructions:u","cnt":10650932860.0},{"name":"faults","cnt":40498.0},{"name":"task-clock","cnt":2263.480884}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1737374441.0},{"name":"cpu-clock","cnt":487.615317},{"name":"task-clock","cnt":487.615292},{"name":"faults","cnt":37131.0},{"name":"instructions:u","cnt":2176303789.0},{"name":"wall-time","cnt":0.495102293},{"name":"max-rss","cnt":238564.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":37572.0},{"name":"instructions:u","cnt":2269143731.0},{"name":"cycles:u","cnt":1827769459.0},{"name":"max-rss","cnt":247904.0},{"name":"wall-time","cnt":0.499193334},{"name":"task-clock","cnt":510.866159},{"name":"cpu-clock","cnt":510.862377}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":34455572747.0},{"name":"max-rss","cnt":475576.0},{"name":"faults","cnt":95057.0},{"name":"task-clock","cnt":9119.488552},{"name":"instructions:u","cnt":36574760997.0},{"name":"wall-time","cnt":3.988745062},{"name":"cpu-clock","cnt":9119.480526}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":498080.0},{"name":"task-clock","cnt":10396.937441},{"name":"wall-time","cnt":4.708281881},{"name":"cpu-clock","cnt":10396.89748},{"name":"cycles:u","cnt":39270978740.0},{"name":"instructions:u","cnt":40985067478.0},{"name":"faults","cnt":100315.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":380804.0},{"name":"cpu-clock","cnt":935.624756},{"name":"wall-time","cnt":0.902908945},{"name":"task-clock","cnt":935.72628},{"name":"cycles:u","cnt":3222651861.0},{"name":"faults","cnt":63018.0},{"name":"instructions:u","cnt":3947728034.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":391456.0},{"name":"wall-time","cnt":0.934683848},{"name":"instructions:u","cnt":4242151165.0},{"name":"faults","cnt":64213.0},{"name":"cpu-clock","cnt":997.047179},{"name":"task-clock","cnt":997.165626},{"name":"cycles:u","cnt":3455871917.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":86831.0},{"name":"instructions:u","cnt":120401956705.0},{"name":"wall-time","cnt":8.005274621},{"name":"cycles:u","cnt":147528933353.0},{"name":"max-rss","cnt":435236.0},{"name":"task-clock","cnt":38993.159595},{"name":"cpu-clock","cnt":38993.207828}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":43067.979691},{"name":"cpu-clock","cnt":43068.083696},{"name":"faults","cnt":104536.0},{"name":"wall-time","cnt":8.276979317},{"name":"cycles:u","cnt":162503001595.0},{"name":"max-rss","cnt":494276.0},{"name":"instructions:u","cnt":128436463611.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.889939768},{"name":"cpu-clock","cnt":937.174489},{"name":"max-rss","cnt":363008.0},{"name":"cycles:u","cnt":3281219660.0},{"name":"instructions:u","cnt":4036961433.0},{"name":"faults","cnt":64819.0},{"name":"task-clock","cnt":937.255088}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":5132895280.0},{"name":"wall-time","cnt":1.272485509},{"name":"faults","cnt":66682.0},{"name":"cpu-clock","cnt":1415.999054},{"name":"instructions:u","cnt":6250377229.0},{"name":"max-rss","cnt":379316.0},{"name":"task-clock","cnt":1416.078508}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":924.537743},{"name":"task-clock","cnt":924.54778},{"name":"cycles:u","cnt":3566496763.0},{"name":"faults","cnt":19063.0},{"name":"wall-time","cnt":0.954811139},{"name":"max-rss","cnt":169960.0},{"name":"instructions:u","cnt":3956211068.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":4537950140.0},{"name":"wall-time","cnt":1.24011094},{"name":"task-clock","cnt":1184.58276},{"name":"max-rss","cnt":214632.0},{"name":"instructions:u","cnt":5064122739.0},{"name":"faults","cnt":29847.0},{"name":"cpu-clock","cnt":1184.581172}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":26279.0},{"name":"wall-time","cnt":0.328755166},{"name":"cycles:u","cnt":1158004685.0},{"name":"max-rss","cnt":191224.0},{"name":"cpu-clock","cnt":330.713826},{"name":"task-clock","cnt":330.716008},{"name":"instructions:u","cnt":1501315296.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":508.786568},{"name":"wall-time","cnt":0.526939524},{"name":"max-rss","cnt":213344.0},{"name":"cycles:u","cnt":1841584983.0},{"name":"task-clock","cnt":508.78728},{"name":"instructions:u","cnt":2251120359.0},{"name":"faults","cnt":29929.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"max-rss","cnt":199740.0},{"name":"task-clock","cnt":343.395748},{"name":"instructions:u","cnt":1552794568.0},{"name":"cycles:u","cnt":1197729666.0},{"name":"faults","cnt":26720.0},{"name":"cpu-clock","cnt":343.395342},{"name":"wall-time","cnt":0.341643384}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cycles:u","cnt":1254925392.0},{"name":"cpu-clock","cnt":357.39985},{"name":"task-clock","cnt":357.400622},{"name":"faults","cnt":27039.0},{"name":"instructions:u","cnt":1599229452.0},{"name":"max-rss","cnt":201728.0},{"name":"wall-time","cnt":0.371665851}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cpu-clock","cnt":517.749706},{"name":"max-rss","cnt":213300.0},{"name":"task-clock","cnt":517.738483},{"name":"instructions:u","cnt":2273582844.0},{"name":"faults","cnt":29976.0},{"name":"wall-time","cnt":0.514765473},{"name":"cycles:u","cnt":1893079459.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"faults","cnt":29969.0},{"name":"wall-time","cnt":0.523976925},{"name":"max-rss","cnt":216084.0},{"name":"task-clock","cnt":510.084766},{"name":"cpu-clock","cnt":510.08344},{"name":"cycles:u","cnt":1862684765.0},{"name":"instructions:u","cnt":2271245990.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"task-clock","cnt":338.428733},{"name":"max-rss","cnt":199520.0},{"name":"cpu-clock","cnt":338.419363},{"name":"cycles:u","cnt":1186062396.0},{"name":"faults","cnt":26719.0},{"name":"wall-time","cnt":0.337733855},{"name":"instructions:u","cnt":1538387810.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"cpu-clock","cnt":443.766473},{"name":"max-rss","cnt":211508.0},{"name":"instructions:u","cnt":1981109929.0},{"name":"cycles:u","cnt":1588756030.0},{"name":"wall-time","cnt":0.469732159},{"name":"task-clock","cnt":443.767816},{"name":"faults","cnt":29519.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":1723564380.0},{"name":"cycles:u","cnt":1357306331.0},{"name":"faults","cnt":27233.0},{"name":"wall-time","cnt":0.381785432},{"name":"cpu-clock","cnt":381.840411},{"name":"task-clock","cnt":381.84091},{"name":"max-rss","cnt":202892.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"instructions:u","cnt":1774863584.0},{"name":"faults","cnt":29403.0},{"name":"cycles:u","cnt":1418135495.0},{"name":"cpu-clock","cnt":400.776956},{"name":"wall-time","cnt":0.433801252},{"name":"task-clock","cnt":400.777559},{"name":"max-rss","cnt":210592.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":27269159939.0},{"name":"max-rss","cnt":409756.0},{"name":"faults","cnt":78346.0},{"name":"instructions:u","cnt":22852429038.0},{"name":"task-clock","cnt":7292.132378},{"name":"cpu-clock","cnt":7292.149498},{"name":"wall-time","cnt":2.215748108}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":417308.0},{"name":"wall-time","cnt":2.647711915},{"name":"faults","cnt":79096.0},{"name":"cycles:u","cnt":29146870594.0},{"name":"instructions:u","cnt":25683390387.0},{"name":"task-clock","cnt":7795.39697},{"name":"cpu-clock","cnt":7795.405181}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2258904354.0},{"name":"max-rss","cnt":276028.0},{"name":"cpu-clock","cnt":538.025275},{"name":"wall-time","cnt":0.513091444},{"name":"task-clock","cnt":538.078497},{"name":"faults","cnt":41776.0},{"name":"cycles:u","cnt":1809936344.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":54788.0},{"name":"instructions:u","cnt":6862288023.0},{"name":"task-clock","cnt":1716.679986},{"name":"wall-time","cnt":1.000169836},{"name":"cycles:u","cnt":6255481447.0},{"name":"cpu-clock","cnt":1716.64173},{"name":"max-rss","cnt":327724.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"max-rss","cnt":281920.0},{"name":"cycles:u","cnt":1889866462.0},{"name":"faults","cnt":42170.0},{"name":"task-clock","cnt":560.713566},{"name":"cpu-clock","cnt":560.646616},{"name":"wall-time","cnt":0.524829035},{"name":"instructions:u","cnt":2342229578.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"cycles:u","cnt":2562078086.0},{"name":"cpu-clock","cnt":737.141394},{"name":"faults","cnt":44915.0},{"name":"max-rss","cnt":291956.0},{"name":"task-clock","cnt":737.21211},{"name":"instructions:u","cnt":3074619185.0},{"name":"wall-time","cnt":0.629941139}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"max-rss","cnt":331436.0},{"name":"cpu-clock","cnt":1771.173343},{"name":"task-clock","cnt":1771.245044},{"name":"faults","cnt":55589.0},{"name":"wall-time","cnt":0.991779182},{"name":"cycles:u","cnt":6460617066.0},{"name":"instructions:u","cnt":6892069775.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"faults","cnt":56009.0},{"name":"instructions:u","cnt":6886532778.0},{"name":"cpu-clock","cnt":1729.457777},{"name":"task-clock","cnt":1729.490783},{"name":"wall-time","cnt":0.995502547},{"name":"max-rss","cnt":335648.0},{"name":"cycles:u","cnt":6308572567.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"wall-time","cnt":0.524677784},{"name":"instructions:u","cnt":2283601996.0},{"name":"task-clock","cnt":552.360226},{"name":"max-rss","cnt":276312.0},{"name":"cycles:u","cnt":1845186329.0},{"name":"cpu-clock","cnt":552.294832},{"name":"faults","cnt":41906.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"task-clock","cnt":5505.979405},{"name":"faults","cnt":82698.0},{"name":"cpu-clock","cnt":5505.950305},{"name":"max-rss","cnt":430740.0},{"name":"instructions:u","cnt":17607349541.0},{"name":"cycles:u","cnt":20363622220.0},{"name":"wall-time","cnt":1.485304886}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":16938209417.0},{"name":"max-rss","cnt":429436.0},{"name":"cycles:u","cnt":19676941765.0},{"name":"faults","cnt":81480.0},{"name":"wall-time","cnt":1.408865234},{"name":"task-clock","cnt":5330.684552},{"name":"cpu-clock","cnt":5330.665451}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":47849.0},{"name":"wall-time","cnt":0.663421376},{"name":"instructions:u","cnt":3678586699.0},{"name":"cpu-clock","cnt":872.971875},{"name":"task-clock","cnt":873.033461},{"name":"cycles:u","cnt":3050248612.0},{"name":"max-rss","cnt":303692.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"faults","cnt":63341.0},{"name":"cycles:u","cnt":82934006220.0},{"name":"wall-time","cnt":4.553364568},{"name":"task-clock","cnt":21932.045229},{"name":"instructions:u","cnt":66176912898.0},{"name":"max-rss","cnt":348304.0},{"name":"cpu-clock","cnt":21932.058071}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":71790199945.0},{"name":"cycles:u","cnt":91124303961.0},{"name":"cpu-clock","cnt":24152.799798},{"name":"wall-time","cnt":4.928736645},{"name":"faults","cnt":74782.0},{"name":"task-clock","cnt":24152.71776},{"name":"max-rss","cnt":387416.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.504505406},{"name":"cycles:u","cnt":1837107108.0},{"name":"task-clock","cnt":535.427089},{"name":"cpu-clock","cnt":535.348155},{"name":"faults","cnt":41229.0},{"name":"max-rss","cnt":258772.0},{"name":"instructions:u","cnt":2283501731.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":51990442959.0},{"name":"instructions:u","cnt":41849447873.0},{"name":"faults","cnt":74819.0},{"name":"task-clock","cnt":13818.116296},{"name":"cpu-clock","cnt":13818.151889},{"name":"max-rss","cnt":393496.0},{"name":"wall-time","cnt":2.984603854}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"cpu-clock","cnt":608.53585},{"name":"faults","cnt":42237.0},{"name":"wall-time","cnt":0.524984775},{"name":"cycles:u","cnt":2107103569.0},{"name":"task-clock","cnt":608.596449},{"name":"max-rss","cnt":271964.0},{"name":"instructions:u","cnt":2569646104.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"task-clock","cnt":620.358656},{"name":"cpu-clock","cnt":620.293321},{"name":"wall-time","cnt":0.538941158},{"name":"max-rss","cnt":271940.0},{"name":"cycles:u","cnt":2144095062.0},{"name":"instructions:u","cnt":2614043459.0},{"name":"faults","cnt":42318.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"faults","cnt":74791.0},{"name":"max-rss","cnt":392752.0},{"name":"cpu-clock","cnt":13806.909908},{"name":"cycles:u","cnt":51907188174.0},{"name":"task-clock","cnt":13806.895809},{"name":"instructions:u","cnt":41893419480.0},{"name":"wall-time","cnt":2.942603768}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"faults","cnt":74919.0},{"name":"cycles:u","cnt":52233489899.0},{"name":"wall-time","cnt":2.952731291},{"name":"cpu-clock","cnt":13880.936413},{"name":"max-rss","cnt":393484.0},{"name":"task-clock","cnt":13880.889049},{"name":"instructions:u","cnt":41863935283.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"max-rss","cnt":261512.0},{"name":"faults","cnt":41459.0},{"name":"cpu-clock","cnt":544.120284},{"name":"task-clock","cnt":544.161782},{"name":"instructions:u","cnt":2309688888.0},{"name":"wall-time","cnt":0.511861621},{"name":"cycles:u","cnt":1863292080.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"instructions:u","cnt":58089735697.0},{"name":"max-rss","cnt":403936.0},{"name":"cycles:u","cnt":71304513940.0},{"name":"faults","cnt":77273.0},{"name":"wall-time","cnt":3.559339345},{"name":"task-clock","cnt":18947.811892},{"name":"cpu-clock","cnt":18947.861319}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"instructions:u","cnt":57823743102.0},{"name":"task-clock","cnt":19005.229415},{"name":"faults","cnt":77152.0},{"name":"max-rss","cnt":400904.0},{"name":"cycles:u","cnt":71538248005.0},{"name":"cpu-clock","cnt":19005.300808},{"name":"wall-time","cnt":3.507904397}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":56648.0},{"name":"cpu-clock","cnt":2574.465835},{"name":"cycles:u","cnt":9755959496.0},{"name":"instructions:u","cnt":12844506843.0},{"name":"wall-time","cnt":1.912608976},{"name":"task-clock","cnt":2574.519221},{"name":"max-rss","cnt":326984.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":240.069466},{"name":"max-rss","cnt":126776.0},{"name":"faults","cnt":8036.0},{"name":"cpu-clock","cnt":240.068025},{"name":"instructions:u","cnt":1221158582.0},{"name":"cycles:u","cnt":888892191.0},{"name":"wall-time","cnt":0.259563642}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":300.284406},{"name":"task-clock","cnt":300.295499},{"name":"faults","cnt":11219.0},{"name":"wall-time","cnt":0.318829356},{"name":"instructions:u","cnt":1490161534.0},{"name":"max-rss","cnt":137924.0},{"name":"cycles:u","cnt":1113390657.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":398337849.0},{"name":"task-clock","cnt":89.340264},{"name":"faults","cnt":10681.0},{"name":"wall-time","cnt":0.102611998},{"name":"max-rss","cnt":120508.0},{"name":"cycles:u","cnt":276774698.0},{"name":"cpu-clock","cnt":89.352462}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":140068.0},{"name":"instructions:u","cnt":513859103.0},{"name":"task-clock","cnt":114.852002},{"name":"faults","cnt":11311.0},{"name":"wall-time","cnt":0.128412633},{"name":"cpu-clock","cnt":114.840095},{"name":"cycles:u","cnt":373113049.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":7612946347.0},{"name":"wall-time","cnt":0.881210153},{"name":"cpu-clock","cnt":1904.688579},{"name":"faults","cnt":27675.0},{"name":"cycles:u","cnt":7108757110.0},{"name":"task-clock","cnt":1904.692786},{"name":"max-rss","cnt":213924.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":32957.0},{"name":"cpu-clock","cnt":2127.735583},{"name":"wall-time","cnt":1.01517703},{"name":"max-rss","cnt":231568.0},{"name":"instructions:u","cnt":8499429888.0},{"name":"task-clock","cnt":2127.745281},{"name":"cycles:u","cnt":7945345567.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":852998147.0},{"name":"wall-time","cnt":0.222710036},{"name":"max-rss","cnt":165348.0},{"name":"faults","cnt":17505.0},{"name":"cpu-clock","cnt":204.442241},{"name":"cycles:u","cnt":656107957.0},{"name":"task-clock","cnt":204.474576}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":19648.0},{"name":"task-clock","cnt":252.787176},{"name":"max-rss","cnt":187368.0},{"name":"wall-time","cnt":0.237543442},{"name":"cycles:u","cnt":828777449.0},{"name":"cpu-clock","cnt":252.769642},{"name":"instructions:u","cnt":1058977643.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":2.661644961},{"name":"faults","cnt":29046.0},{"name":"task-clock","cnt":6956.866901},{"name":"max-rss","cnt":215016.0},{"name":"cycles:u","cnt":26554021259.0},{"name":"cpu-clock","cnt":6956.862509},{"name":"instructions:u","cnt":24870505299.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":34938.0},{"name":"wall-time","cnt":2.781007749},{"name":"task-clock","cnt":7359.941542},{"name":"cycles:u","cnt":28000417316.0},{"name":"cpu-clock","cnt":7359.939868},{"name":"max-rss","cnt":236660.0},{"name":"instructions:u","cnt":26032045627.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":162188.0},{"name":"cpu-clock","cnt":205.36412},{"name":"cycles:u","cnt":672515725.0},{"name":"faults","cnt":18638.0},{"name":"instructions:u","cnt":858455903.0},{"name":"wall-time","cnt":0.221887585},{"name":"task-clock","cnt":205.379248}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":30617.0},{"name":"wall-time","cnt":1.38115165},{"name":"instructions:u","cnt":10127955919.0},{"name":"task-clock","cnt":2516.146542},{"name":"cycles:u","cnt":9522204430.0},{"name":"cpu-clock","cnt":2516.121933},{"name":"max-rss","cnt":221048.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":760.172211},{"name":"faults","cnt":17526.0},{"name":"task-clock","cnt":760.173213},{"name":"wall-time","cnt":0.803818681},{"name":"instructions:u","cnt":3472501656.0},{"name":"cycles:u","cnt":2899129360.0},{"name":"max-rss","cnt":167244.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.019186504},{"name":"cycles:u","cnt":3751374369.0},{"name":"cpu-clock","cnt":980.416777},{"name":"instructions:u","cnt":4455988655.0},{"name":"task-clock","cnt":980.417866},{"name":"max-rss","cnt":205988.0},{"name":"faults","cnt":26968.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":240.635729},{"name":"instructions:u","cnt":1159072875.0},{"name":"wall-time","cnt":0.24189123},{"name":"cpu-clock","cnt":240.63453},{"name":"max-rss","cnt":184964.0},{"name":"cycles:u","cnt":809729711.0},{"name":"faults","cnt":23684.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":974370866.0},{"name":"wall-time","cnt":0.317685463},{"name":"cpu-clock","cnt":282.533709},{"name":"instructions:u","cnt":1346433824.0},{"name":"task-clock","cnt":282.519996},{"name":"faults","cnt":25053.0},{"name":"max-rss","cnt":199340.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":5482.705226},{"name":"max-rss","cnt":343072.0},{"name":"cycles:u","cnt":19999792562.0},{"name":"faults","cnt":107862.0},{"name":"wall-time","cnt":3.046768656},{"name":"cpu-clock","cnt":5482.679033},{"name":"instructions:u","cnt":21144331550.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":6262.987128},{"name":"max-rss","cnt":375280.0},{"name":"task-clock","cnt":6262.979517},{"name":"instructions:u","cnt":24680444776.0},{"name":"wall-time","cnt":3.584409744},{"name":"faults","cnt":120951.0},{"name":"cycles:u","cnt":22620001238.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1622.623026},{"name":"faults","cnt":95330.0},{"name":"cycles:u","cnt":5124873652.0},{"name":"instructions:u","cnt":6424591424.0},{"name":"wall-time","cnt":1.589258236},{"name":"cpu-clock","cnt":1622.56549},{"name":"max-rss","cnt":283784.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":5230487365.0},{"name":"task-clock","cnt":1681.099091},{"name":"max-rss","cnt":290616.0},{"name":"faults","cnt":95862.0},{"name":"cpu-clock","cnt":1681.00957},{"name":"instructions:u","cnt":6603512725.0},{"name":"wall-time","cnt":1.6382017}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":183842.0},{"name":"max-rss","cnt":636316.0},{"name":"cpu-clock","cnt":41076.79593},{"name":"cycles:u","cnt":154356983903.0},{"name":"task-clock","cnt":41076.756308},{"name":"instructions:u","cnt":122449679381.0},{"name":"wall-time","cnt":7.838767942}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":185457.0},{"name":"cpu-clock","cnt":45571.647005},{"name":"cycles:u","cnt":170725425021.0},{"name":"task-clock","cnt":45571.49528},{"name":"wall-time","cnt":8.237748763},{"name":"max-rss","cnt":638132.0},{"name":"instructions:u","cnt":132899581057.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":89964.0},{"name":"cycles:u","cnt":4346612515.0},{"name":"instructions:u","cnt":6780491702.0},{"name":"wall-time","cnt":1.281356728},{"name":"cpu-clock","cnt":1332.263266},{"name":"task-clock","cnt":1332.350711},{"name":"max-rss","cnt":302608.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":7318732194.0},{"name":"wall-time","cnt":1.760089936},{"name":"cpu-clock","cnt":2096.298953},{"name":"faults","cnt":99286.0},{"name":"task-clock","cnt":2096.404441},{"name":"instructions:u","cnt":10294857552.0},{"name":"max-rss","cnt":355564.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":44.548732919},{"name":"faults","cnt":706085.0},{"name":"cycles:u","cnt":173963679989.0},{"name":"max-rss","cnt":2428076.0},{"name":"instructions:u","cnt":189495390416.0},{"name":"cpu-clock","cnt":44479.144224},{"name":"task-clock","cnt":44479.117305}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":55.852563053},{"name":"max-rss","cnt":3891372.0},{"name":"cycles:u","cnt":214994955856.0},{"name":"cpu-clock","cnt":55808.32292},{"name":"instructions:u","cnt":245407825387.0},{"name":"faults","cnt":1105330.0},{"name":"task-clock","cnt":55808.326015}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":1066060.0},{"name":"cycles:u","cnt":76092782004.0},{"name":"cpu-clock","cnt":20387.894768},{"name":"max-rss","cnt":4312872.0},{"name":"instructions:u","cnt":88554665224.0},{"name":"task-clock","cnt":20387.899876},{"name":"wall-time","cnt":19.642946363}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":20572.72849},{"name":"instructions:u","cnt":88702482056.0},{"name":"faults","cnt":1055592.0},{"name":"wall-time","cnt":19.830908674},{"name":"max-rss","cnt":4235564.0},{"name":"cpu-clock","cnt":20572.743968},{"name":"cycles:u","cnt":75265797027.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"cycles:u","cnt":78827145120.0},{"name":"faults","cnt":1056312.0},{"name":"max-rss","cnt":4223964.0},{"name":"instructions:u","cnt":91512657870.0},{"name":"cpu-clock","cnt":21054.068054},{"name":"wall-time","cnt":20.311306087},{"name":"task-clock","cnt":21054.061729}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"task-clock","cnt":44288.088623},{"name":"faults","cnt":1329361.0},{"name":"max-rss","cnt":4802588.0},{"name":"instructions:u","cnt":188011970228.0},{"name":"wall-time","cnt":43.541907053},{"name":"cpu-clock","cnt":44288.071635},{"name":"cycles:u","cnt":167972301373.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"faults","cnt":2101201.0},{"name":"instructions:u","cnt":773788369216.0},{"name":"cycles:u","cnt":797707595631.0},{"name":"cpu-clock","cnt":210771.103914},{"name":"task-clock","cnt":210770.933818},{"name":"max-rss","cnt":6046184.0},{"name":"wall-time","cnt":91.912715513}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":188.578903598},{"name":"faults","cnt":3058303.0},{"name":"max-rss","cnt":8565840.0},{"name":"instructions:u","cnt":1695474677196.0},{"name":"cpu-clock","cnt":390711.437219},{"name":"cycles:u","cnt":1478640165959.0},{"name":"task-clock","cnt":390710.313516}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":119818095603.0},{"name":"wall-time","cnt":41.989791754},{"name":"task-clock","cnt":30453.726266},{"name":"cycles:u","cnt":104145752604.0},{"name":"cpu-clock","cnt":30451.705898},{"name":"faults","cnt":1488659.0},{"name":"max-rss","cnt":9105360.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":9373016.0},{"name":"cycles:u","cnt":123236328580.0},{"name":"cpu-clock","cnt":34832.144411},{"name":"wall-time","cnt":42.168668134},{"name":"instructions:u","cnt":139098939306.0},{"name":"task-clock","cnt":34834.545626},{"name":"faults","cnt":1544779.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"faults","cnt":1484944.0},{"name":"cycles:u","cnt":110514886126.0},{"name":"wall-time","cnt":43.836197097},{"name":"instructions:u","cnt":126567276913.0},{"name":"cpu-clock","cnt":31707.378925},{"name":"task-clock","cnt":31709.419489},{"name":"max-rss","cnt":9070060.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":344393.733987},{"name":"faults","cnt":3161162.0},{"name":"instructions:u","cnt":1502023168651.0},{"name":"wall-time","cnt":162.864757632},{"name":"task-clock","cnt":344393.134789},{"name":"max-rss","cnt":9391500.0},{"name":"cycles:u","cnt":1296327535686.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"wall-time","cnt":183.060079665},{"name":"cycles:u","cnt":2974380416658.0},{"name":"cpu-clock","cnt":787722.813056},{"name":"task-clock","cnt":787722.255176},{"name":"max-rss","cnt":4327300.0},{"name":"faults","cnt":2504812.0},{"name":"instructions:u","cnt":2245340834303.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":5485560.0},{"name":"task-clock","cnt":1110921.680139},{"name":"cycles:u","cnt":4178586531558.0},{"name":"cpu-clock","cnt":1110924.58937},{"name":"instructions:u","cnt":3219203668534.0},{"name":"wall-time","cnt":214.081830847},{"name":"faults","cnt":3278688.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":113598167443.0},{"name":"cpu-clock","cnt":27897.6897},{"name":"faults","cnt":1388216.0},{"name":"cycles:u","cnt":103158625318.0},{"name":"task-clock","cnt":27898.573628},{"name":"max-rss","cnt":5624108.0},{"name":"wall-time","cnt":25.918706051}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":396741.973127},{"name":"instructions:u","cnt":1148125200883.0},{"name":"cycles:u","cnt":1488946208672.0},{"name":"max-rss","cnt":7216248.0},{"name":"cpu-clock","cnt":396742.110937},{"name":"faults","cnt":2154558.0},{"name":"wall-time","cnt":85.070020386}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"wall-time","cnt":68.266690839},{"name":"cycles:u","cnt":412836267029.0},{"name":"max-rss","cnt":6648592.0},{"name":"cpu-clock","cnt":108923.186623},{"name":"faults","cnt":1746249.0},{"name":"instructions:u","cnt":420498071967.0},{"name":"task-clock","cnt":108923.34224}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":3112333860734.0},{"name":"max-rss","cnt":6683856.0},{"name":"cpu-clock","cnt":1075160.632451},{"name":"task-clock","cnt":1075157.910013},{"name":"faults","cnt":3508993.0},{"name":"cycles:u","cnt":4037803284938.0},{"name":"wall-time","cnt":195.900982478}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":2309.768333},{"name":"cycles:u","cnt":9007515269.0},{"name":"instructions:u","cnt":11378981734.0},{"name":"task-clock","cnt":2309.777961},{"name":"wall-time","cnt":2.327525235},{"name":"faults","cnt":35120.0},{"name":"max-rss","cnt":249644.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.903422573},{"name":"instructions:u","cnt":14358293975.0},{"name":"task-clock","cnt":2886.076578},{"name":"cycles:u","cnt":11207636047.0},{"name":"faults","cnt":53906.0},{"name":"cpu-clock","cnt":2886.076146},{"name":"max-rss","cnt":325792.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":719.308573},{"name":"faults","cnt":47817.0},{"name":"max-rss","cnt":296456.0},{"name":"instructions:u","cnt":3602260295.0},{"name":"wall-time","cnt":0.704664407},{"name":"cycles:u","cnt":2597465609.0},{"name":"task-clock","cnt":719.309048}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":313104.0},{"name":"wall-time","cnt":0.901966075},{"name":"cycles:u","cnt":3296799090.0},{"name":"task-clock","cnt":896.664328},{"name":"cpu-clock","cnt":896.66347},{"name":"faults","cnt":50199.0},{"name":"instructions:u","cnt":4305902615.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":14292.904351},{"name":"cycles:u","cnt":53451004310.0},{"name":"instructions:u","cnt":61372434474.0},{"name":"max-rss","cnt":956264.0},{"name":"faults","cnt":334715.0},{"name":"wall-time","cnt":10.516116985},{"name":"task-clock","cnt":14292.912116}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":67743583822.0},{"name":"faults","cnt":281867.0},{"name":"instructions:u","cnt":71375332849.0},{"name":"cpu-clock","cnt":18340.203649},{"name":"max-rss","cnt":703676.0},{"name":"wall-time","cnt":9.564258082},{"name":"task-clock","cnt":18340.200799}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":3858.069986},{"name":"faults","cnt":212490.0},{"name":"cpu-clock","cnt":3857.983723},{"name":"max-rss","cnt":497988.0},{"name":"instructions:u","cnt":14472255804.0},{"name":"cycles:u","cnt":12475140900.0},{"name":"wall-time","cnt":3.780416605}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":17614758508.0},{"name":"max-rss","cnt":597348.0},{"name":"instructions:u","cnt":19573877860.0},{"name":"cpu-clock","cnt":5185.844699},{"name":"wall-time","cnt":4.306606632},{"name":"faults","cnt":238124.0},{"name":"task-clock","cnt":5185.987815}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":290275771729.0},{"name":"cpu-clock","cnt":94462.588288},{"name":"task-clock","cnt":94462.494291},{"name":"cycles:u","cnt":357085574212.0},{"name":"faults","cnt":238703.0},{"name":"max-rss","cnt":773176.0},{"name":"wall-time","cnt":19.337928756}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":242596.0},{"name":"instructions:u","cnt":315879817217.0},{"name":"task-clock","cnt":105604.04554},{"name":"cycles:u","cnt":398516451685.0},{"name":"cpu-clock","cnt":105604.372674},{"name":"max-rss","cnt":757904.0},{"name":"wall-time","cnt":20.96456891}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8072296931.0},{"name":"instructions:u","cnt":8955779651.0},{"name":"cpu-clock","cnt":2365.881895},{"name":"max-rss","cnt":515804.0},{"name":"wall-time","cnt":2.224529446},{"name":"task-clock","cnt":2366.082933},{"name":"faults","cnt":153424.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":174382421406.0},{"name":"faults","cnt":226239.0},{"name":"cpu-clock","cnt":58516.899652},{"name":"cycles:u","cnt":220079956636.0},{"name":"wall-time","cnt":11.574314604},{"name":"task-clock","cnt":58516.833791},{"name":"max-rss","cnt":718396.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":4995.138631},{"name":"wall-time","cnt":5.045620279},{"name":"cycles:u","cnt":19698065857.0},{"name":"max-rss","cnt":256852.0},{"name":"instructions:u","cnt":29575813159.0},{"name":"cpu-clock","cnt":4995.137729},{"name":"faults","cnt":41551.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":5796.618655},{"name":"cpu-clock","cnt":5796.632104},{"name":"wall-time","cnt":5.83173993},{"name":"instructions:u","cnt":33429014001.0},{"name":"faults","cnt":65321.0},{"name":"max-rss","cnt":352056.0},{"name":"cycles:u","cnt":22767951108.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4217043040.0},{"name":"max-rss","cnt":334488.0},{"name":"faults","cnt":63876.0},{"name":"cpu-clock","cnt":927.604143},{"name":"task-clock","cnt":927.604095},{"name":"wall-time","cnt":0.914798726},{"name":"cycles:u","cnt":3373378555.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":21812831641.0},{"name":"cpu-clock","cnt":5550.060328},{"name":"wall-time","cnt":5.453756171},{"name":"task-clock","cnt":5550.051052},{"name":"instructions:u","cnt":32424678658.0},{"name":"max-rss","cnt":298832.0},{"name":"faults","cnt":49479.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":37304147761.0},{"name":"cycles:u","cnt":25649928991.0},{"name":"faults","cnt":78530.0},{"name":"max-rss","cnt":410368.0},{"name":"task-clock","cnt":6565.19803},{"name":"cpu-clock","cnt":6565.196133},{"name":"wall-time","cnt":6.44127667}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1077.540178},{"name":"instructions:u","cnt":5143217453.0},{"name":"wall-time","cnt":1.057405471},{"name":"cycles:u","cnt":3873122892.0},{"name":"cpu-clock","cnt":1077.496731},{"name":"max-rss","cnt":380988.0},{"name":"faults","cnt":73050.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5906.457322},{"name":"cycles:u","cnt":23125072887.0},{"name":"faults","cnt":51324.0},{"name":"cpu-clock","cnt":5906.43483},{"name":"wall-time","cnt":5.453157614},{"name":"instructions:u","cnt":33373060333.0},{"name":"max-rss","cnt":306900.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":79771.0},{"name":"max-rss","cnt":417828.0},{"name":"cycles:u","cnt":27040951706.0},{"name":"cpu-clock","cnt":6937.093966},{"name":"instructions:u","cnt":38242457266.0},{"name":"wall-time","cnt":6.428815828},{"name":"task-clock","cnt":6937.096865}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":377044.0},{"name":"cpu-clock","cnt":1072.822379},{"name":"task-clock","cnt":1072.85707},{"name":"faults","cnt":72225.0},{"name":"instructions:u","cnt":5138536778.0},{"name":"cycles:u","cnt":3871219564.0},{"name":"wall-time","cnt":1.049867267}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":106624912833.0},{"name":"task-clock","cnt":27103.642807},{"name":"wall-time","cnt":27.151984215},{"name":"faults","cnt":332087.0},{"name":"instructions:u","cnt":121555891803.0},{"name":"cpu-clock","cnt":27103.669285},{"name":"max-rss","cnt":1368636.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":152583944688.0},{"name":"faults","cnt":597273.0},{"name":"wall-time","cnt":33.713552142},{"name":"max-rss","cnt":2253888.0},{"name":"cycles:u","cnt":131471834822.0},{"name":"cpu-clock","cnt":33673.032439},{"name":"task-clock","cnt":33673.019526}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":2123896.0},{"name":"task-clock","cnt":10770.707001},{"name":"faults","cnt":508271.0},{"name":"wall-time","cnt":10.353893233},{"name":"cpu-clock","cnt":10770.714031},{"name":"cycles:u","cnt":39691238331.0},{"name":"instructions:u","cnt":47749177519.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":92417011699.0},{"name":"max-rss","cnt":2355828.0},{"name":"cycles:u","cnt":77810011083.0},{"name":"task-clock","cnt":20466.628865},{"name":"cpu-clock","cnt":20466.63335},{"name":"faults","cnt":575482.0},{"name":"wall-time","cnt":20.080329219}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":21.3239802},{"name":"cycles:u","cnt":82791944300.0},{"name":"instructions:u","cnt":95299682011.0},{"name":"cpu-clock","cnt":21716.450316},{"name":"task-clock","cnt":21716.443738},{"name":"max-rss","cnt":2447164.0},{"name":"faults","cnt":592329.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"wall-time","cnt":42.055424619},{"name":"cycles:u","cnt":278211215251.0},{"name":"instructions:u","cnt":296705751621.0},{"name":"max-rss","cnt":2846968.0},{"name":"task-clock","cnt":72991.677283},{"name":"cpu-clock","cnt":72991.737313},{"name":"faults","cnt":753698.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":116566.947852},{"name":"max-rss","cnt":3363104.0},{"name":"cycles:u","cnt":441911526135.0},{"name":"wall-time","cnt":66.169811975},{"name":"cpu-clock","cnt":116568.09373},{"name":"instructions:u","cnt":531781046323.0},{"name":"faults","cnt":1049937.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":14471.660699},{"name":"instructions:u","cnt":62229670709.0},{"name":"faults","cnt":701763.0},{"name":"cycles:u","cnt":51445594655.0},{"name":"wall-time","cnt":16.900552901},{"name":"max-rss","cnt":3617536.0},{"name":"cpu-clock","cnt":14471.123284}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":40.626766277},{"name":"cpu-clock","cnt":67117.595599},{"name":"max-rss","cnt":3920680.0},{"name":"instructions:u","cnt":301181712632.0},{"name":"faults","cnt":1021601.0},{"name":"cycles:u","cnt":250731663315.0},{"name":"task-clock","cnt":67117.984467}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":92907.769545},{"name":"wall-time","cnt":49.680443089},{"name":"cycles:u","cnt":348630494452.0},{"name":"max-rss","cnt":4039520.0},{"name":"task-clock","cnt":92907.793836},{"name":"faults","cnt":1151118.0},{"name":"instructions:u","cnt":423279740905.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"instructions:u","cnt":792625686146.0},{"name":"max-rss","cnt":2381304.0},{"name":"wall-time","cnt":61.204350212},{"name":"cycles:u","cnt":969724338309.0},{"name":"faults","cnt":728459.0},{"name":"cpu-clock","cnt":256418.016342},{"name":"task-clock","cnt":256417.824603}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":3015916.0},{"name":"instructions:u","cnt":1251861022835.0},{"name":"wall-time","cnt":83.100743862},{"name":"faults","cnt":1070761.0},{"name":"cpu-clock","cnt":395305.386393},{"name":"cycles:u","cnt":1488544079014.0},{"name":"task-clock","cnt":395304.510867}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":673928.0},{"name":"task-clock","cnt":12912.818682},{"name":"cycles:u","cnt":46070088060.0},{"name":"max-rss","cnt":2787984.0},{"name":"instructions:u","cnt":53977051049.0},{"name":"cpu-clock","cnt":12912.182803},{"name":"wall-time","cnt":11.997112491}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1057328609083.0},{"name":"task-clock","cnt":335139.24012},{"name":"max-rss","cnt":3481700.0},{"name":"cpu-clock","cnt":335139.956855},{"name":"wall-time","cnt":61.835900473},{"name":"cycles:u","cnt":1258666703124.0},{"name":"faults","cnt":1121517.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":362089.49403},{"name":"instructions:u","cnt":1128494860876.0},{"name":"cycles:u","cnt":1360538947409.0},{"name":"max-rss","cnt":3546044.0},{"name":"task-clock","cnt":362088.682059},{"name":"wall-time","cnt":66.682251621},{"name":"faults","cnt":1138633.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":699.086092},{"name":"faults","cnt":14825.0},{"name":"max-rss","cnt":152128.0},{"name":"instructions:u","cnt":3228884773.0},{"name":"wall-time","cnt":0.716995217},{"name":"task-clock","cnt":699.086908},{"name":"cycles:u","cnt":2653370055.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":890.554707},{"name":"wall-time","cnt":0.908815385},{"name":"cpu-clock","cnt":890.552754},{"name":"cycles:u","cnt":3392175421.0},{"name":"faults","cnt":22869.0},{"name":"max-rss","cnt":184520.0},{"name":"instructions:u","cnt":4084581789.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1324930547.0},{"name":"task-clock","cnt":274.561628},{"name":"cpu-clock","cnt":274.559967},{"name":"faults","cnt":21431.0},{"name":"cycles:u","cnt":951951749.0},{"name":"max-rss","cnt":165880.0},{"name":"wall-time","cnt":0.279623599}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1182503042.0},{"name":"task-clock","cnt":333.129812},{"name":"max-rss","cnt":185092.0},{"name":"wall-time","cnt":0.338313673},{"name":"instructions:u","cnt":1535584034.0},{"name":"cpu-clock","cnt":333.129094},{"name":"faults","cnt":22720.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":10804844382.0},{"name":"instructions:u","cnt":11895462149.0},{"name":"task-clock","cnt":2879.598948},{"name":"cpu-clock","cnt":2879.617581},{"name":"wall-time","cnt":1.467912816},{"name":"faults","cnt":36401.0},{"name":"max-rss","cnt":243900.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3524.78989},{"name":"faults","cnt":48401.0},{"name":"max-rss","cnt":293532.0},{"name":"wall-time","cnt":1.740220658},{"name":"cpu-clock","cnt":3524.829251},{"name":"cycles:u","cnt":13208067538.0},{"name":"instructions:u","cnt":14448221359.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":227948.0},{"name":"faults","cnt":32822.0},{"name":"instructions:u","cnt":1906698828.0},{"name":"wall-time","cnt":0.423388105},{"name":"cycles:u","cnt":1472733217.0},{"name":"cpu-clock","cnt":436.654711},{"name":"task-clock","cnt":436.692845}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2157116397.0},{"name":"max-rss","cnt":258352.0},{"name":"cpu-clock","cnt":622.644992},{"name":"faults","cnt":37075.0},{"name":"instructions:u","cnt":2687748046.0},{"name":"task-clock","cnt":622.705695},{"name":"wall-time","cnt":0.518788284}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":262544.0},{"name":"wall-time","cnt":2.945650829},{"name":"instructions:u","cnt":44717625695.0},{"name":"task-clock","cnt":14511.094758},{"name":"faults","cnt":41459.0},{"name":"cycles:u","cnt":54811805083.0},{"name":"cpu-clock","cnt":14511.126359}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":3.199510474},{"name":"cycles:u","cnt":60420530468.0},{"name":"cpu-clock","cnt":16031.955934},{"name":"faults","cnt":52701.0},{"name":"max-rss","cnt":304804.0},{"name":"task-clock","cnt":16031.946465},{"name":"instructions:u","cnt":48241646257.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1470956502.0},{"name":"max-rss","cnt":219640.0},{"name":"cpu-clock","cnt":429.651847},{"name":"faults","cnt":32995.0},{"name":"wall-time","cnt":0.41297517},{"name":"task-clock","cnt":429.691381},{"name":"instructions:u","cnt":1925432614.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":1.687756022},{"name":"max-rss","cnt":298636.0},{"name":"task-clock","cnt":8277.55776},{"name":"faults","cnt":50579.0},{"name":"instructions:u","cnt":24463378487.0},{"name":"cycles:u","cnt":31065600449.0},{"name":"cpu-clock","cnt":8277.549913}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":11291.0},{"name":"max-rss","cnt":147516.0},{"name":"cycles:u","cnt":1290483596.0},{"name":"wall-time","cnt":0.363652255},{"name":"task-clock","cnt":345.57368},{"name":"cpu-clock","cnt":345.572684},{"name":"instructions:u","cnt":1758046423.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":452.333625},{"name":"faults","cnt":17378.0},{"name":"max-rss","cnt":173504.0},{"name":"instructions:u","cnt":2266785768.0},{"name":"wall-time","cnt":0.47062878},{"name":"cpu-clock","cnt":452.344579},{"name":"cycles:u","cnt":1682395420.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":135.791755},{"name":"max-rss","cnt":148892.0},{"name":"cycles:u","cnt":435793503.0},{"name":"wall-time","cnt":0.145438474},{"name":"task-clock","cnt":135.793982},{"name":"faults","cnt":16182.0},{"name":"instructions:u","cnt":634641989.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":1116769226.0},{"name":"max-rss","cnt":183376.0},{"name":"wall-time","cnt":0.32228827},{"name":"cpu-clock","cnt":312.763984},{"name":"instructions:u","cnt":1451037377.0},{"name":"faults","cnt":19637.0},{"name":"task-clock","cnt":312.757592}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":1045066624.0},{"name":"wall-time","cnt":0.302654615},{"name":"task-clock","cnt":293.729632},{"name":"cpu-clock","cnt":293.726943},{"name":"faults","cnt":19763.0},{"name":"instructions:u","cnt":1383003094.0},{"name":"max-rss","cnt":183476.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cpu-clock","cnt":4266.38857},{"name":"cycles:u","cnt":15579690035.0},{"name":"wall-time","cnt":2.445702112},{"name":"faults","cnt":90961.0},{"name":"max-rss","cnt":302132.0},{"name":"instructions:u","cnt":17577533775.0},{"name":"task-clock","cnt":4266.403394}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":18704092330.0},{"name":"wall-time","cnt":2.846638015},{"name":"faults","cnt":105113.0},{"name":"cpu-clock","cnt":5157.558483},{"name":"instructions:u","cnt":20919903295.0},{"name":"task-clock","cnt":5157.58117},{"name":"max-rss","cnt":343240.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":5212865770.0},{"name":"max-rss","cnt":271724.0},{"name":"faults","cnt":85469.0},{"name":"wall-time","cnt":1.330806983},{"name":"cpu-clock","cnt":1338.337618},{"name":"task-clock","cnt":1338.419272},{"name":"cycles:u","cnt":4198870972.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4840.974323},{"name":"instructions:u","cnt":19418716871.0},{"name":"task-clock","cnt":4840.926284},{"name":"faults","cnt":108770.0},{"name":"wall-time","cnt":2.569623799},{"name":"cycles:u","cnt":17416862277.0},{"name":"max-rss","cnt":362748.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":110296.0},{"name":"cycles:u","cnt":17328746230.0},{"name":"task-clock","cnt":4818.651559},{"name":"cpu-clock","cnt":4818.723151},{"name":"wall-time","cnt":2.538243069},{"name":"max-rss","cnt":363692.0},{"name":"instructions:u","cnt":19396822030.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"cycles:u","cnt":85912235691.0},{"name":"instructions:u","cnt":68049916245.0},{"name":"wall-time","cnt":4.130601183},{"name":"max-rss","cnt":338160.0},{"name":"cpu-clock","cnt":22819.470486},{"name":"task-clock","cnt":22819.460166},{"name":"faults","cnt":78327.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":368996.0},{"name":"faults","cnt":87204.0},{"name":"instructions:u","cnt":78324084033.0},{"name":"task-clock","cnt":27076.375995},{"name":"cpu-clock","cnt":27076.432922},{"name":"cycles:u","cnt":101679438576.0},{"name":"wall-time","cnt":4.626548064}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2741756733.0},{"name":"cycles:u","cnt":2279374906.0},{"name":"task-clock","cnt":714.235736},{"name":"wall-time","cnt":0.694598921},{"name":"faults","cnt":59658.0},{"name":"cpu-clock","cnt":714.118125},{"name":"max-rss","cnt":259624.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":26760.133591},{"name":"cycles:u","cnt":100367408139.0},{"name":"max-rss","cnt":380628.0},{"name":"wall-time","cnt":4.266405895},{"name":"instructions:u","cnt":76738177005.0},{"name":"task-clock","cnt":26760.035352},{"name":"faults","cnt":89930.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":18088.726002},{"name":"max-rss","cnt":378296.0},{"name":"cpu-clock","cnt":18088.74722},{"name":"faults","cnt":87710.0},{"name":"wall-time","cnt":3.337508316},{"name":"cycles:u","cnt":67806899805.0},{"name":"instructions:u","cnt":53402864367.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":434544.0},{"name":"cpu-clock","cnt":3265.326129},{"name":"cycles:u","cnt":12398219351.0},{"name":"wall-time","cnt":3.331178722},{"name":"instructions:u","cnt":18194692795.0},{"name":"task-clock","cnt":3265.326258},{"name":"faults","cnt":90104.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":15202016022.0},{"name":"cpu-clock","cnt":3919.445766},{"name":"faults","cnt":97447.0},{"name":"task-clock","cnt":3919.446707},{"name":"instructions:u","cnt":23604123297.0},{"name":"wall-time","cnt":3.956077892},{"name":"max-rss","cnt":465776.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":6925132978.0},{"name":"cpu-clock","cnt":1150.069639},{"name":"cycles:u","cnt":4215197142.0},{"name":"task-clock","cnt":1150.071562},{"name":"faults","cnt":75242.0},{"name":"wall-time","cnt":1.184630219},{"name":"max-rss","cnt":367056.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3942.81056},{"name":"wall-time","cnt":3.977096292},{"name":"cycles:u","cnt":15225067549.0},{"name":"max-rss","cnt":513964.0},{"name":"instructions:u","cnt":23649516195.0},{"name":"faults","cnt":108818.0},{"name":"task-clock","cnt":3942.79887}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"task-clock","cnt":3419.12126},{"name":"cpu-clock","cnt":3419.093661},{"name":"cycles:u","cnt":12834375376.0},{"name":"wall-time","cnt":3.443460568},{"name":"max-rss","cnt":458704.0},{"name":"instructions:u","cnt":18722902916.0},{"name":"faults","cnt":100293.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":497672.0},{"name":"instructions:u","cnt":24165716187.0},{"name":"cycles:u","cnt":15575285339.0},{"name":"task-clock","cnt":4055.778033},{"name":"wall-time","cnt":4.049627824},{"name":"cpu-clock","cnt":4055.768768},{"name":"faults","cnt":110030.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":7301066669.0},{"name":"task-clock","cnt":1173.33581},{"name":"wall-time","cnt":1.20371015},{"name":"cpu-clock","cnt":1173.292608},{"name":"max-rss","cnt":386680.0},{"name":"faults","cnt":83565.0},{"name":"cycles:u","cnt":4171044483.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4044.431743},{"name":"instructions:u","cnt":24121803698.0},{"name":"task-clock","cnt":4044.460528},{"name":"cycles:u","cnt":15465603144.0},{"name":"wall-time","cnt":4.037479596},{"name":"max-rss","cnt":525764.0},{"name":"faults","cnt":117351.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"task-clock","cnt":3422.031598},{"name":"instructions:u","cnt":18747360788.0},{"name":"cpu-clock","cnt":3422.017352},{"name":"max-rss","cnt":440896.0},{"name":"wall-time","cnt":3.440163339},{"name":"cycles:u","cnt":12908316328.0},{"name":"faults","cnt":94109.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4047.426656},{"name":"instructions:u","cnt":24089470650.0},{"name":"max-rss","cnt":488028.0},{"name":"wall-time","cnt":4.041094788},{"name":"cycles:u","cnt":15575019993.0},{"name":"faults","cnt":106400.0},{"name":"cpu-clock","cnt":4047.414397}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1153.381419},{"name":"instructions:u","cnt":7227016016.0},{"name":"cycles:u","cnt":4085400597.0},{"name":"cpu-clock","cnt":1153.386939},{"name":"faults","cnt":82475.0},{"name":"wall-time","cnt":1.185550757},{"name":"max-rss","cnt":387160.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":4022.698146},{"name":"faults","cnt":114726.0},{"name":"instructions:u","cnt":24054985057.0},{"name":"cycles:u","cnt":15120592240.0},{"name":"wall-time","cnt":4.017042177},{"name":"task-clock","cnt":4022.702408},{"name":"max-rss","cnt":526120.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":5237.079586},{"name":"instructions:u","cnt":34556929499.0},{"name":"faults","cnt":114588.0},{"name":"max-rss","cnt":535064.0},{"name":"cycles:u","cnt":20384943806.0},{"name":"task-clock","cnt":5237.089396},{"name":"wall-time","cnt":5.301477586}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":23897148431.0},{"name":"cpu-clock","cnt":6141.320476},{"name":"max-rss","cnt":577228.0},{"name":"instructions:u","cnt":44157356207.0},{"name":"wall-time","cnt":6.177008449},{"name":"task-clock","cnt":6141.320174},{"name":"faults","cnt":124634.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":568608.0},{"name":"wall-time","cnt":1.751920637},{"name":"cpu-clock","cnt":1726.322626},{"name":"faults","cnt":125388.0},{"name":"cycles:u","cnt":6270064453.0},{"name":"instructions:u","cnt":12296722276.0},{"name":"task-clock","cnt":1726.31352}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":626172.0},{"name":"wall-time","cnt":5.481347938},{"name":"faults","cnt":132140.0},{"name":"instructions:u","cnt":37658179461.0},{"name":"cycles:u","cnt":22469013757.0},{"name":"cpu-clock","cnt":5824.929592},{"name":"task-clock","cnt":5824.933515}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":26320578783.0},{"name":"wall-time","cnt":6.390359095},{"name":"cpu-clock","cnt":6818.768993},{"name":"max-rss","cnt":675332.0},{"name":"instructions:u","cnt":47495915471.0},{"name":"faults","cnt":143571.0},{"name":"task-clock","cnt":6818.743528}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.803346327},{"name":"cpu-clock","cnt":1781.612264},{"name":"task-clock","cnt":1781.636204},{"name":"faults","cnt":127363.0},{"name":"instructions:u","cnt":12441782461.0},{"name":"cycles:u","cnt":6399070356.0},{"name":"max-rss","cnt":605672.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":645792.0},{"name":"wall-time","cnt":5.798621072},{"name":"task-clock","cnt":6982.867894},{"name":"cycles:u","cnt":26819064818.0},{"name":"cpu-clock","cnt":6982.874539},{"name":"instructions:u","cnt":42542407580.0},{"name":"faults","cnt":141556.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":153768.0},{"name":"task-clock","cnt":8131.89114},{"name":"cycles:u","cnt":31190825150.0},{"name":"max-rss","cnt":708404.0},{"name":"instructions:u","cnt":52192404627.0},{"name":"wall-time","cnt":6.505156286},{"name":"cpu-clock","cnt":8131.900806}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":12552271042.0},{"name":"task-clock","cnt":1790.519177},{"name":"cycles:u","cnt":6426120044.0},{"name":"cpu-clock","cnt":1790.510059},{"name":"wall-time","cnt":1.797596081},{"name":"faults","cnt":129257.0},{"name":"max-rss","cnt":613364.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":3.728721708},{"name":"max-rss","cnt":188408.0},{"name":"cycles:u","cnt":14568315395.0},{"name":"faults","cnt":26328.0},{"name":"cpu-clock","cnt":3690.928264},{"name":"instructions:u","cnt":31020893189.0},{"name":"task-clock","cnt":3690.928439}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":25952.0},{"name":"max-rss","cnt":194180.0},{"name":"wall-time","cnt":4.012373673},{"name":"instructions:u","cnt":34987169666.0},{"name":"cycles:u","cnt":15700742315.0},{"name":"task-clock","cnt":3976.712244},{"name":"cpu-clock","cnt":3976.71005}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":665250289.0},{"name":"task-clock","cnt":191.800825},{"name":"max-rss","cnt":147104.0},{"name":"wall-time","cnt":0.223865523},{"name":"cpu-clock","cnt":191.798933},{"name":"instructions:u","cnt":1217656108.0},{"name":"faults","cnt":15679.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":3.665400162},{"name":"instructions:u","cnt":32284254224.0},{"name":"task-clock","cnt":3650.455218},{"name":"cpu-clock","cnt":3650.453181},{"name":"cycles:u","cnt":14403302645.0},{"name":"max-rss","cnt":195952.0},{"name":"faults","cnt":26403.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":15246257419.0},{"name":"faults","cnt":35157.0},{"name":"cpu-clock","cnt":3877.175998},{"name":"max-rss","cnt":230276.0},{"name":"task-clock","cnt":3877.183231},{"name":"wall-time","cnt":3.880343147},{"name":"instructions:u","cnt":32314279042.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4214.897971},{"name":"cpu-clock","cnt":4214.901712},{"name":"max-rss","cnt":233824.0},{"name":"cycles:u","cnt":16602160983.0},{"name":"faults","cnt":34188.0},{"name":"instructions:u","cnt":36661614309.0},{"name":"wall-time","cnt":4.190464665}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":260.704234},{"name":"instructions:u","cnt":1701931270.0},{"name":"cpu-clock","cnt":260.714973},{"name":"max-rss","cnt":175400.0},{"name":"cycles:u","cnt":889216914.0},{"name":"faults","cnt":21229.0},{"name":"wall-time","cnt":0.290825662}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":221944.0},{"name":"instructions:u","cnt":33578450298.0},{"name":"wall-time","cnt":3.842313609},{"name":"cpu-clock","cnt":3829.858811},{"name":"faults","cnt":32038.0},{"name":"cycles:u","cnt":15070178320.0},{"name":"task-clock","cnt":3829.888934}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":33503359078.0},{"name":"cycles:u","cnt":15747051027.0},{"name":"wall-time","cnt":4.026622978},{"name":"faults","cnt":36683.0},{"name":"cpu-clock","cnt":3998.276952},{"name":"task-clock","cnt":3998.278625},{"name":"max-rss","cnt":235740.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":37838836023.0},{"name":"max-rss","cnt":239900.0},{"name":"wall-time","cnt":4.298423508},{"name":"cycles:u","cnt":17015852443.0},{"name":"faults","cnt":35902.0},{"name":"cpu-clock","cnt":4319.346503},{"name":"task-clock","cnt":4319.339416}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":263.700598},{"name":"task-clock","cnt":263.695599},{"name":"max-rss","cnt":178848.0},{"name":"faults","cnt":21329.0},{"name":"cycles:u","cnt":913805254.0},{"name":"instructions:u","cnt":1701387281.0},{"name":"wall-time","cnt":0.295733304}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":32304.0},{"name":"max-rss","cnt":222948.0},{"name":"wall-time","cnt":3.827724341},{"name":"instructions:u","cnt":33570203898.0},{"name":"cycles:u","cnt":15032783692.0},{"name":"cpu-clock","cnt":3814.384148},{"name":"task-clock","cnt":3814.385746}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":70.189032},{"name":"max-rss","cnt":100212.0},{"name":"task-clock","cnt":70.190742},{"name":"cycles:u","cnt":227453254.0},{"name":"faults","cnt":5408.0},{"name":"wall-time","cnt":0.087961428},{"name":"instructions:u","cnt":345782081.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":391454205.0},{"name":"cycles:u","cnt":268804308.0},{"name":"task-clock","cnt":82.233086},{"name":"cpu-clock","cnt":82.230638},{"name":"max-rss","cnt":106164.0},{"name":"wall-time","cnt":0.100577349},{"name":"faults","cnt":6732.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":91444.0},{"name":"instructions:u","cnt":177531449.0},{"name":"cycles:u","cnt":120363792.0},{"name":"faults","cnt":5864.0},{"name":"task-clock","cnt":43.207876},{"name":"cpu-clock","cnt":43.205393},{"name":"wall-time","cnt":0.060415847}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":54.197227},{"name":"cycles:u","cnt":155571229.0},{"name":"task-clock","cnt":54.200103},{"name":"max-rss","cnt":108100.0},{"name":"instructions:u","cnt":228045346.0},{"name":"faults","cnt":6636.0},{"name":"wall-time","cnt":0.071689682}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"task-clock","cnt":168.073598},{"name":"max-rss","cnt":121364.0},{"name":"cpu-clock","cnt":168.065517},{"name":"instructions:u","cnt":748724059.0},{"name":"cycles:u","cnt":522672985.0},{"name":"faults","cnt":13101.0},{"name":"wall-time","cnt":0.166587949}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":15063.0},{"name":"cycles:u","cnt":592603641.0},{"name":"max-rss","cnt":131980.0},{"name":"instructions:u","cnt":824161378.0},{"name":"wall-time","cnt":0.184277835},{"name":"task-clock","cnt":189.44861},{"name":"cpu-clock","cnt":189.440962}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":113740.0},{"name":"wall-time","cnt":0.135912261},{"name":"faults","cnt":13477.0},{"name":"instructions:u","cnt":515561004.0},{"name":"cycles:u","cnt":341984992.0},{"name":"task-clock","cnt":121.277924},{"name":"cpu-clock","cnt":121.26637}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":155.71419},{"name":"max-rss","cnt":132340.0},{"name":"wall-time","cnt":0.152320489},{"name":"task-clock","cnt":155.704193},{"name":"cycles:u","cnt":461794666.0},{"name":"instructions:u","cnt":641099905.0},{"name":"faults","cnt":14939.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":12327.0},{"name":"wall-time","cnt":0.168282622},{"name":"instructions:u","cnt":751404540.0},{"name":"task-clock","cnt":160.603181},{"name":"cpu-clock","cnt":160.59002},{"name":"cycles:u","cnt":505475349.0},{"name":"max-rss","cnt":123856.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":184.674084},{"name":"max-rss","cnt":132092.0},{"name":"task-clock","cnt":184.680075},{"name":"faults","cnt":14349.0},{"name":"wall-time","cnt":0.184082129},{"name":"instructions:u","cnt":840800713.0},{"name":"cycles:u","cnt":584784577.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":334906303.0},{"name":"task-clock","cnt":117.813496},{"name":"faults","cnt":13180.0},{"name":"cpu-clock","cnt":117.808387},{"name":"max-rss","cnt":110640.0},{"name":"wall-time","cnt":0.132483209},{"name":"instructions:u","cnt":505725941.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":376083151.0},{"name":"task-clock","cnt":129.346384},{"name":"cpu-clock","cnt":129.32944},{"name":"instructions:u","cnt":541556492.0},{"name":"max-rss","cnt":120312.0},{"name":"faults","cnt":13657.0},{"name":"wall-time","cnt":0.141351588}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":486.822967},{"name":"instructions:u","cnt":2456845151.0},{"name":"faults","cnt":34692.0},{"name":"cycles:u","cnt":1784185556.0},{"name":"max-rss","cnt":213852.0},{"name":"task-clock","cnt":486.82391},{"name":"wall-time","cnt":0.505227352}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":57870.0},{"name":"task-clock","cnt":728.626581},{"name":"instructions:u","cnt":3415902076.0},{"name":"cpu-clock","cnt":728.62461},{"name":"cycles:u","cnt":2638032163.0},{"name":"wall-time","cnt":0.746695021},{"name":"max-rss","cnt":308380.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":641.433587},{"name":"max-rss","cnt":324392.0},{"name":"instructions:u","cnt":2919488508.0},{"name":"faults","cnt":64735.0},{"name":"cpu-clock","cnt":641.421732},{"name":"wall-time","cnt":0.618802924},{"name":"cycles:u","cnt":2254661066.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2489842920.0},{"name":"cpu-clock","cnt":715.685331},{"name":"instructions:u","cnt":3127771460.0},{"name":"faults","cnt":64910.0},{"name":"max-rss","cnt":336824.0},{"name":"wall-time","cnt":0.691712704},{"name":"task-clock","cnt":715.676844}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"faults","cnt":40603.0},{"name":"cycles:u","cnt":2046596011.0},{"name":"task-clock","cnt":580.039874},{"name":"max-rss","cnt":230140.0},{"name":"cpu-clock","cnt":580.045921},{"name":"wall-time","cnt":0.587495409},{"name":"instructions:u","cnt":2787883025.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":65724.0},{"name":"cpu-clock","cnt":834.889543},{"name":"max-rss","cnt":326664.0},{"name":"task-clock","cnt":834.895995},{"name":"instructions:u","cnt":3783296103.0},{"name":"cycles:u","cnt":2919847174.0},{"name":"wall-time","cnt":0.843306782}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":71658.0},{"name":"cpu-clock","cnt":773.214382},{"name":"instructions:u","cnt":3237260806.0},{"name":"cycles:u","cnt":2665857639.0},{"name":"max-rss","cnt":340824.0},{"name":"task-clock","cnt":773.232191},{"name":"wall-time","cnt":0.744255025}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":860.454455},{"name":"wall-time","cnt":0.825784654},{"name":"faults","cnt":72388.0},{"name":"instructions:u","cnt":3474047021.0},{"name":"cycles:u","cnt":2944494591.0},{"name":"max-rss","cnt":357388.0},{"name":"cpu-clock","cnt":860.471137}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"max-rss","cnt":236820.0},{"name":"cycles:u","cnt":2042394331.0},{"name":"faults","cnt":41649.0},{"name":"task-clock","cnt":573.53106},{"name":"wall-time","cnt":0.58306693},{"name":"cpu-clock","cnt":573.53784},{"name":"instructions:u","cnt":2815483465.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":817.109223},{"name":"cpu-clock","cnt":817.097002},{"name":"cycles:u","cnt":2891166937.0},{"name":"max-rss","cnt":326780.0},{"name":"instructions:u","cnt":3809805413.0},{"name":"wall-time","cnt":0.819549061},{"name":"faults","cnt":65101.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":729.238472},{"name":"wall-time","cnt":0.70399001},{"name":"faults","cnt":71535.0},{"name":"max-rss","cnt":340784.0},{"name":"task-clock","cnt":729.241394},{"name":"cycles:u","cnt":2500737366.0},{"name":"instructions:u","cnt":3234929188.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":800.227032},{"name":"faults","cnt":71983.0},{"name":"cycles:u","cnt":2788148218.0},{"name":"max-rss","cnt":344576.0},{"name":"task-clock","cnt":800.240816},{"name":"instructions:u","cnt":3441981360.0},{"name":"wall-time","cnt":0.765672003}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":3.314883341},{"name":"cpu-clock","cnt":3251.457914},{"name":"cycles:u","cnt":12711460570.0},{"name":"task-clock","cnt":3251.457875},{"name":"max-rss","cnt":302796.0},{"name":"faults","cnt":49000.0},{"name":"instructions:u","cnt":14054368196.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":16327364358.0},{"name":"instructions:u","cnt":18468950419.0},{"name":"faults","cnt":77781.0},{"name":"wall-time","cnt":4.264376479},{"name":"max-rss","cnt":417940.0},{"name":"task-clock","cnt":4195.596672},{"name":"cpu-clock","cnt":4195.597181}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.090646153},{"name":"cpu-clock","cnt":1090.571749},{"name":"instructions:u","cnt":4824986796.0},{"name":"max-rss","cnt":396136.0},{"name":"cycles:u","cnt":3959138098.0},{"name":"faults","cnt":73520.0},{"name":"task-clock","cnt":1090.570876}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":4932854223.0},{"name":"instructions:u","cnt":5747817791.0},{"name":"wall-time","cnt":1.342582366},{"name":"max-rss","cnt":410864.0},{"name":"task-clock","cnt":1332.0811},{"name":"cpu-clock","cnt":1332.080311},{"name":"faults","cnt":75681.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":240316.0},{"name":"instructions:u","cnt":99014604907.0},{"name":"max-rss","cnt":992848.0},{"name":"cycles:u","cnt":96883168810.0},{"name":"task-clock","cnt":25668.908974},{"name":"cpu-clock","cnt":25668.92602},{"name":"wall-time","cnt":9.708150201}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":11.763391371},{"name":"instructions:u","cnt":115423329792.0},{"name":"cycles:u","cnt":108611913678.0},{"name":"task-clock","cnt":28810.848655},{"name":"max-rss","cnt":1060528.0},{"name":"cpu-clock","cnt":28810.862408},{"name":"faults","cnt":260050.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":133004.0},{"name":"instructions:u","cnt":9177220480.0},{"name":"max-rss","cnt":747884.0},{"name":"cycles:u","cnt":7581031021.0},{"name":"task-clock","cnt":2161.77059},{"name":"wall-time","cnt":2.093717098},{"name":"cpu-clock","cnt":2161.547001}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":767060.0},{"name":"cpu-clock","cnt":2457.835477},{"name":"cycles:u","cnt":8657812553.0},{"name":"wall-time","cnt":2.339219482},{"name":"faults","cnt":135925.0},{"name":"instructions:u","cnt":10387118648.0},{"name":"task-clock","cnt":2457.952036}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":20.451832846},{"name":"cycles:u","cnt":403829190799.0},{"name":"max-rss","cnt":1362956.0},{"name":"cpu-clock","cnt":107175.763647},{"name":"task-clock","cnt":107175.664797},{"name":"instructions:u","cnt":315259411308.0},{"name":"faults","cnt":337689.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1282464.0},{"name":"faults","cnt":345425.0},{"name":"wall-time","cnt":22.316762975},{"name":"instructions:u","cnt":354688347053.0},{"name":"cycles:u","cnt":455440057383.0},{"name":"task-clock","cnt":121018.816415},{"name":"cpu-clock","cnt":121019.093681}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2199.217955},{"name":"instructions:u","cnt":9041828108.0},{"name":"task-clock","cnt":2199.338831},{"name":"faults","cnt":136418.0},{"name":"max-rss","cnt":762136.0},{"name":"wall-time","cnt":2.085478223},{"name":"cycles:u","cnt":7717161842.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":992644.0},{"name":"task-clock","cnt":10166.962412},{"name":"cpu-clock","cnt":10166.923087},{"name":"cycles:u","cnt":37658273666.0},{"name":"wall-time","cnt":4.143821127},{"name":"faults","cnt":198541.0},{"name":"instructions:u","cnt":40466709825.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":2249.185375},{"name":"wall-time","cnt":2.306440101},{"name":"cycles:u","cnt":8832226751.0},{"name":"instructions:u","cnt":14208430008.0},{"name":"faults","cnt":24358.0},{"name":"max-rss","cnt":180572.0},{"name":"task-clock","cnt":2249.185718}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":26534.0},{"name":"cpu-clock","cnt":2486.565099},{"name":"instructions:u","cnt":15626719407.0},{"name":"task-clock","cnt":2486.565574},{"name":"max-rss","cnt":189612.0},{"name":"cycles:u","cnt":9757662126.0},{"name":"wall-time","cnt":2.522904053}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":19054.0},{"name":"wall-time","cnt":0.24506941},{"name":"max-rss","cnt":154888.0},{"name":"cpu-clock","cnt":219.194817},{"name":"task-clock","cnt":219.205992},{"name":"cycles:u","cnt":750728916.0},{"name":"instructions:u","cnt":1203250025.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":2333.384635},{"name":"cpu-clock","cnt":2333.383471},{"name":"instructions:u","cnt":14702190636.0},{"name":"cycles:u","cnt":9149542208.0},{"name":"max-rss","cnt":206092.0},{"name":"wall-time","cnt":2.386198055},{"name":"faults","cnt":26460.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":10134377447.0},{"name":"wall-time","cnt":2.601002386},{"name":"max-rss","cnt":214592.0},{"name":"instructions:u","cnt":16282948769.0},{"name":"faults","cnt":28727.0},{"name":"task-clock","cnt":2586.642563},{"name":"cpu-clock","cnt":2586.64795}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":245.815479},{"name":"task-clock","cnt":245.82874},{"name":"faults","cnt":22564.0},{"name":"wall-time","cnt":0.272454427},{"name":"max-rss","cnt":176364.0},{"name":"instructions:u","cnt":1370516081.0},{"name":"cycles:u","cnt":836694412.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":9480127652.0},{"name":"wall-time","cnt":2.446063811},{"name":"instructions:u","cnt":15318771071.0},{"name":"cpu-clock","cnt":2421.708667},{"name":"max-rss","cnt":212320.0},{"name":"task-clock","cnt":2421.692849},{"name":"faults","cnt":27444.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":2.637927621},{"name":"max-rss","cnt":222744.0},{"name":"cycles:u","cnt":10513006981.0},{"name":"task-clock","cnt":2688.223112},{"name":"faults","cnt":30069.0},{"name":"instructions:u","cnt":16907960347.0},{"name":"cpu-clock","cnt":2688.217967}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1387613002.0},{"name":"task-clock","cnt":250.094561},{"name":"faults","cnt":22675.0},{"name":"cycles:u","cnt":849987864.0},{"name":"wall-time","cnt":0.274422428},{"name":"max-rss","cnt":177068.0},{"name":"cpu-clock","cnt":250.098191}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}