{"commit":{"sha":"e302f39c5b0a323ba6b2a13a8ebd8aa2938fa777","date":"2000-01-01T00:00:00+00:00"},"benchmarks":{"await-call-tree":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking await-call-tree v0.1.0 (/tmp/.tmp0lvfdf)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: impl std::future::Future } }\n- dep-node: implied_outlives_bounds(b58ebc7713dff2be-37d9bb07df4782b9)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp0lvfdf/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `await-call-tree`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=220187484;;instructions:u;53211519;100.00;1.41;insn per cycle\n155617162;;cycles:u;53211519;100.00;2.925;GHz\n53.193600;;task-clock;53193600;100.00;0.996;CPUs utilized\n53.193126;;cpu-clock;53193600;100.00;0.996;CPUs utilized\n6330;;faults;53193600;100.00;0.119;M/sec\n\n"},"cargo":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking crates-io v0.17.0 (/tmp/.tmpqQAUD8/src/crates-io)\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/crates-io/lib.rs:292:41\n    |\n292 | fn handle(handle: &mut Easy, read: &mut FnMut(&mut [u8]) -> usize) -> Result<String> {\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn FnMut(&mut [u8]) -> usize`\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::io::Cursor<std::vec::Vec<u8>> as std::io::Read>)) } }\n- dep-node: evaluate_obligation(4391a16885e5b501-6b5e7a365e4ee0d6)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `crates-io`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"clap-rs":{"Err":"expected success, got exit code: 101\n\nstderr=warning: profile `doc` is deprecated and has no effect\n    Checking clap v2.29.0 (/tmp/.tmp42d4Bw)\nwarning: trait objects without an explicit `dyn` are deprecated\n    --> src/app/parser.rs:1975:55\n     |\n1975 |     pub fn find_any_arg(&self, name: &str) -> Option<&AnyArg> {\n     |                                                       ^^^^^^ help: use `dyn`: `dyn AnyArg`\n     |\n     = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/app/help.rs:43:27\n   |\n43 |     fn as_base(&self) -> &ArgWithDisplay<'b, 'c>;\n   |                           ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/app/help.rs:49:27\n   |\n49 |     fn as_base(&self) -> &ArgWithDisplay<'b, 'c> { self }\n   |                           ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/app/help.rs:52:61\n   |\n52 | fn as_arg_trait<'a, 'b, T: ArgWithOrder<'a, 'b>>(x: &T) -> &ArgWithOrder<'a, 'b> { x }\n   |                                                             ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithOrder<'a, 'b>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/app/help.rs:79:21\n   |\n79 |     writer: &'a mut Write,\n   |                     ^^^^^ help: use `dyn`: `dyn Write`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/app/help.rs:95:20\n   |\n95 |         w: &'a mut Write,\n   |                    ^^^^^ help: use `dyn`: `dyn Write`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:133:38\n    |\n133 |     pub fn write_app_help(w: &'a mut Write, app: &App, use_long: bool) -> ClapResult<()> {\n    |                                      ^^^^^ help: use `dyn`: `dyn Write`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:140:41\n    |\n140 |     pub fn write_parser_help(w: &'a mut Write, parser: &Parser, use_long: bool) -> ClapResult<()> {\n    |                                         ^^^^^ help: use `dyn`: `dyn Write`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:148:51\n    |\n148 |     pub fn write_parser_help_to_stderr(w: &'a mut Write, parser: &Parser) -> ClapResult<()> {\n    |                                                   ^^^^^ help: use `dyn`: `dyn Write`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:155:20\n    |\n155 |         w: &'a mut Write,\n    |                    ^^^^^ help: use `dyn`: `dyn Write`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:199:32\n    |\n199 |         I: Iterator<Item = &'d ArgWithOrder<'b, 'c>>,\n    |                                ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithOrder<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:228:32\n    |\n228 |         I: Iterator<Item = &'d ArgWithOrder<'b, 'c>>,\n    |                                ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithOrder<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:264:43\n    |\n264 |     fn write_arg<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {\n    |                                           ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:274:39\n    |\n274 |     fn short<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:287:38\n    |\n287 |     fn long<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> io::Result<()> {\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:316:37\n    |\n316 |     fn val<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>) -> Result<String, io::Error> {\n    |                                     ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:443:38\n    |\n443 |     fn help<'b, 'c>(&mut self, arg: &ArgWithDisplay<'b, 'c>, spec_vals: &str) -> io::Result<()> {\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay<'b, 'c>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/app/help.rs:499:29\n    |\n499 |     fn spec_vals(&self, a: &ArgWithDisplay) -> String {\n    |                             ^^^^^^^^^^^^^^ help: use `dyn`: `dyn ArgWithDisplay`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n    --> src/app/mod.rs:1809:39\n     |\n1809 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> { None }\n     |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n    --> src/app/mod.rs:1810:42\n     |\n1810 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> { None }\n     |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/args/any_arg.rs:25:39\n   |\n25 |     fn validator(&self) -> Option<&Rc<Fn(String) -> Result<(), String>>>;\n   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> Result<(), String>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/args/any_arg.rs:26:42\n   |\n26 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> Result<(), OsString>>>;\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> Result<(), OsString>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/args/arg_builder/flag.rs:79:39\n   |\n79 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> { None }\n   |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/args/arg_builder/flag.rs:80:42\n   |\n80 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> { None }\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/args/arg_builder/positional.rs:150:39\n    |\n150 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/args/arg_builder/positional.rs:153:42\n    |\n153 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/args/arg_builder/option.rs:132:39\n    |\n132 |     fn validator(&self) -> Option<&Rc<Fn(String) -> StdResult<(), String>>> {\n    |                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> StdResult<(), String>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/args/arg_builder/option.rs:135:42\n    |\n135 |     fn validator_os(&self) -> Option<&Rc<Fn(&OsStr) -> StdResult<(), OsString>>> {\n    |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> StdResult<(), OsString>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/args/arg_builder/valued.rs:19:30\n   |\n19 |     pub validator: Option<Rc<Fn(String) -> Result<(), String>>>,\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(String) -> Result<(), String>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/args/arg_builder/valued.rs:20:33\n   |\n20 |     pub validator_os: Option<Rc<Fn(&OsStr) -> Result<(), OsString>>>,\n   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&OsStr) -> Result<(), OsString>`\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp42d4Bw/self-profile-output -C codegen-units=4 -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `clap`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=2528585811;;instructions:u;485831302;100.00;1.41;insn per cycle\n1791629367;;cycles:u;485831302;100.00;3.688;GHz\n485.817286;;task-clock;485817286;100.00;0.961;CPUs utilized\n485.827634;;cpu-clock;485817286;100.00;0.961;CPUs utilized\n23450;;faults;485817286;100.00;0.048;M/sec\n\n"},"coercions":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking issue-32278-big-array-of-strings v0.1.0 (/tmp/.tmp5c6a8F)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: () } }\n- dep-node: implied_outlives_bounds(6b7bfad94e52d1d1-8ac435f52469f5d1)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp5c6a8F/self-profile-output -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `issue-32278-big-array-of-strings`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=4112146109;;instructions:u;581509962;100.00;1.87;insn per cycle\n2202219083;;cycles:u;581509962;100.00;3.787;GHz\n581.502105;;task-clock;581502105;100.00;1.000;CPUs utilized\n581.502304;;cpu-clock;581502105;100.00;1.000;CPUs utilized\n21899;;faults;581502105;100.00;0.038;M/sec\n\n"},"cranelift-codegen":{"Err":"expected success, got exit code: 101\n\nstderr=   Compiling cranelift-entity v0.30.0 (/tmp/.tmpvl4inu/cranelift-entity)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<T as packed_option::ReservedValue>)), Binder(TraitPredicate(<T as core::cmp::Eq>)), Binder(TraitPredicate(<T as core::cmp::PartialEq>)), Binder(TraitPredicate(<T as EntityRef>)), Binder(TraitPredicate(<T as core::marker::Copy>)), Binder(TraitPredicate(<T as core::clone::Clone>)), Binder(TraitPredicate(<T as core::marker::Sized>))], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<core::ops::Range<usize> as core::iter::Iterator>)) } }\n- dep-node: evaluate_obligation(55d0da7f26e67850-2e2ba7977f7730b4)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<T as packed_option::ReservedValue>)), Binder(TraitPredicate(<T as core::cmp::Eq>)), Binder(TraitPredicate(<T as core::cmp::PartialEq>)), Binder(TraitPredicate(<T as EntityRef>)), Binder(TraitPredicate(<T as core::marker::Copy>)), Binder(TraitPredicate(<T as core::clone::Clone>)), Binder(TraitPredicate(<T as core::marker::Sized>))], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<core::ops::Range<usize> as core::iter::Iterator>)) } }\n- dep-node: evaluate_obligation(974a6aef77da0de1-a959f56f465d08cd)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: the compiler unexpectedly panicked. this is a bug.\n\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `cranelift-entity`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `cranelift-entity`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"crates.io":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking cargo-registry-s3 v0.2.0 (/tmp/.tmpXKVQKE/src/s3)\n   Compiling cargo-registry v0.2.1 (/tmp/.tmpXKVQKE)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<diesel::PgConnection as diesel::Connection>)) } }\n- dep-node: evaluate_obligation(ab0733189f2ba6bd-72f0ff5dcf6cd604)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<str as std::string::ToString>)) } }\n- dep-node: evaluate_obligation(901de068cf29e9e0-d0215c0b26999e50)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `cargo-registry`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `cargo-registry-s3`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"ctfe-stress-3":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking ctfe-stress-3 v0.1.0 (/tmp/.tmpJGy6Ua)\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/lib.rs:63:42\n   |\n63 | expensive_static!(UNSIZE_TRAIT: &'static Trait = &42u32; [4 16 16 16 16 16]);\n   |                                          ^^^^^ help: use `dyn`: `dyn Trait`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/lib.rs:63:42\n   |\n63 | expensive_static!(UNSIZE_TRAIT: &'static Trait = &42u32; [4 16 16 16 16 16]);\n   |                                          ^^^^^ help: use `dyn`: `dyn Trait`\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpJGy6Ua/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `ctfe-stress-3`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=230833647;;instructions:u;52647631;100.00;1.47;insn per cycle\n156673007;;cycles:u;52647631;100.00;2.976;GHz\n52.643478;;task-clock;52643478;100.00;0.728;CPUs utilized\n52.632393;;cpu-clock;52643478;100.00;0.728;CPUs utilized\n6307;;faults;52643478;100.00;0.120;M/sec\n\n"},"deep-vector":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking issue-20936-deep-vector v0.1.0 (/tmp/.tmprVk1pg)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: () } }\n- dep-node: implied_outlives_bounds(6b7bfad94e52d1d1-8ac435f52469f5d1)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmprVk1pg/self-profile-output -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `issue-20936-deep-vector`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=5876859018;;instructions:u;828266841;100.00;1.88;insn per cycle\n3132316655;;cycles:u;828266841;100.00;3.782;GHz\n828.261861;;task-clock;828261861;100.00;1.000;CPUs utilized\n828.262954;;cpu-clock;828261861;100.00;1.000;CPUs utilized\n38426;;faults;828261861;100.00;0.046;M/sec\n\n"},"deeply-nested":{"Err":"expected success, got exit code: 101\n\nstderr=   Compiling deeply-nested v0.1.0 (/tmp/.tmpQoXqgV)\nwarning: trait objects without an explicit `dyn` are deprecated\n --> src/lib.rs:5:21\n  |\n5 | pub fn foo() -> Box<Iterator<Item = ()>> {\n  |                     ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Iterator<Item = ()>`\n  |\n  = note: `#[warn(bare_trait_objects)]` on by default\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: (ParamEnv { caller_bounds: [], reveal: All, def_id: None }, Binder(<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Chain<std::iter::Empty<()>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>>, std::iter::Empty<()>> as std::iter::Iterator>))\n- dep-node: codegen_fulfill_obligation(380559f9d685f9c4-4b141c3445b6579d)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpQoXqgV/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `deeply-nested`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=420108832;;instructions:u;88067506;100.00;1.45;insn per cycle\n289147998;;cycles:u;88067506;100.00;3.285;GHz\n88.028274;;task-clock;88028274;100.00;0.997;CPUs utilized\n88.026653;;cpu-clock;88028274;100.00;0.997;CPUs utilized\n7310;;faults;88028274;100.00;0.083;M/sec\n\n"},"encoding":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking encoding_index_tests v0.1.5 (/tmp/.tmpsToSHQ/src/index/tests)\n    Checking encoding-types v0.2.0 (/tmp/.tmpsToSHQ/src/types)\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:137:32\n    |\n137 |     fn from_self(&self) -> Box<RawEncoder>;\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:148:54\n    |\n148 |     fn raw_feed(&mut self, input: &str, output: &mut ByteWriter) -> (usize, Option<CodecError>);\n    |                                                      ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:154:43\n    |\n154 |     fn raw_finish(&mut self, output: &mut ByteWriter) -> Option<CodecError>;\n    |                                           ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:161:32\n    |\n161 |     fn from_self(&self) -> Box<RawDecoder>;\n    |                                ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:172:55\n    |\n172 |     fn raw_feed(&mut self, input: &[u8], output: &mut StringWriter) -> (usize, Option<CodecError>);\n    |                                                       ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:177:43\n    |\n177 |     fn raw_finish(&mut self, output: &mut StringWriter) -> Option<CodecError>;\n    |                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:182:34\n    |\n182 | pub type EncodingRef = &'static (Encoding + Send + Sync);\n    |                                  ^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Encoding + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:196:34\n    |\n196 |     fn raw_encoder(&self) -> Box<RawEncoder>;\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:199:34\n    |\n199 |     fn raw_decoder(&self) -> Box<RawDecoder>;\n    |                                  ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:211:67\n    |\n211 |     fn encode_to(&self, input: &str, trap: EncoderTrap, ret: &mut ByteWriter)\n    |                                                                   ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:259:68\n    |\n259 |     fn decode_to(&self, input: &[u8], trap: DecoderTrap, ret: &mut StringWriter)\n    |                                                                    ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:295:29\n    |\n295 | impl<'a> fmt::Debug for &'a Encoding {\n    |                             ^^^^^^^^ help: use `dyn`: `dyn Encoding`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:306:36\n    |\n306 |     extern \"Rust\" fn(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool;\n    |                                    ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:306:74\n    |\n306 |     extern \"Rust\" fn(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool;\n    |                                                                          ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:310:36\n    |\n310 |     extern \"Rust\" fn(decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool;\n    |                                    ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:310:75\n    |\n310 |     extern \"Rust\" fn(decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool;\n    |                                                                           ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:332:38\n    |\n332 |     pub fn trap(&self, decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool {\n    |                                      ^^^^^^^^^^ help: use `dyn`: `dyn RawDecoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:332:77\n    |\n332 |     pub fn trap(&self, decoder: &mut RawDecoder, input: &[u8], output: &mut StringWriter) -> bool {\n    |                                                                             ^^^^^^^^^^^^ help: use `dyn`: `dyn StringWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:377:38\n    |\n377 |     pub fn trap(&self, encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool {\n    |                                      ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:377:76\n    |\n377 |     pub fn trap(&self, encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter) -> bool {\n    |                                                                            ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:378:35\n    |\n378 |         fn reencode(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter,\n    |                                   ^^^^^^^^^^ help: use `dyn`: `dyn RawEncoder`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/types/lib.rs:378:73\n    |\n378 |         fn reencode(encoder: &mut RawEncoder, input: &str, output: &mut ByteWriter,\n    |                                                                         ^^^^^^^^^^ help: use `dyn`: `dyn ByteWriter`\n\n    Checking encoding-index-simpchinese v1.20160120.0 (/tmp/.tmpsToSHQ/src/index/simpchinese)\n    Checking encoding-index-korean v1.20141219.6 (/tmp/.tmpsToSHQ/src/index/korean)\n    Checking encoding-index-tradchinese v1.20141219.6 (/tmp/.tmpsToSHQ/src/index/tradchinese)\n    Checking encoding-index-japanese v1.20141219.6 (/tmp/.tmpsToSHQ/src/index/japanese)\n    Checking encoding-index-singlebyte v1.20160120.0 (/tmp/.tmpsToSHQ/src/index/singlebyte)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<Self as ByteWriter>))], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(333454c4ea5aca4c-7964d27ac6512ac)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `encoding-types`.\nwarning: build failed, waiting for other jobs to finish...\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:19:14\n   |\n19 |             0...43 => 0,\n   |              ^^^ help: use `..=` for an inclusive range\n   |\n   = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:20:15\n   |\n20 |             44...46 => return X,\n   |               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:21:15\n   |\n21 |             47...71 => 3,\n   |               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:23:15\n   |\n23 |             73...124 => 4,\n   |               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:29:14\n   |\n29 |             0...25 => 0,\n   |              ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:30:15\n   |\n30 |             26...31 => return X,\n   |               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:31:15\n   |\n31 |             32...57 => 6,\n   |               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/korean/euc_kr.rs:32:15\n   |\n32 |             58...63 => return X,\n   |               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:16:10\n   |\n16 |         0...689 => code,\n   |          ^^^ help: use `..=` for an inclusive range\n   |\n   = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:17:12\n   |\n17 |         690...1127 => X,\n   |            ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:18:13\n   |\n18 |         1128...1219 => code - 438,\n   |             ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:19:13\n   |\n19 |         1220...1409 => X,\n   |             ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:20:13\n   |\n20 |         1410...7807 => code - 628,\n   |             ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:21:13\n   |\n21 |         7808...8271 => X,\n   |             ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:22:13\n   |\n22 |         8272...8647 => code - 1092,\n   |             ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0208.rs:23:13\n   |\n23 |         8648...10715 => X,\n   |             ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0212.rs:16:10\n   |\n16 |         0...174 => code,\n   |          ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0212.rs:17:12\n   |\n17 |         175...533 => X,\n   |            ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0212.rs:18:12\n   |\n18 |         534...1026 => code - 359,\n   |            ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n  --> src/index/japanese/jis0212.rs:19:13\n   |\n19 |         1027...1409 => X,\n   |             ^^^ help: use `..=` for an inclusive range\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: u16 } }\n- dep-node: implied_outlives_bounds(b7a3bfd58a443fed-35be2e1dc1651d72)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `encoding-index-singlebyte`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: u16 } }\n- dep-node: implied_outlives_bounds(b7a3bfd58a443fed-35be2e1dc1651d72)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `encoding-index-simpchinese`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: u16 } }\n- dep-node: implied_outlives_bounds(b7a3bfd58a443fed-35be2e1dc1651d72)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `encoding-index-korean`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: u16 } }\n- dep-node: implied_outlives_bounds(b7a3bfd58a443fed-35be2e1dc1651d72)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `encoding-index-japanese`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: u16 } }\n- dep-node: implied_outlives_bounds(b7a3bfd58a443fed-35be2e1dc1651d72)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `encoding-index-tradchinese`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"futures":{"Err":"expected success, got exit code: 101\n\nstderr=warning: package replacement is not used: https://github.com/rust-lang/crates.io-index#openssl:0.7.14\n    Checking futures v0.1.0 (/tmp/.tmp0BcwzB)\nwarning: unused `#[macro_use]` import\n  --> src/lib.rs:17:1\n   |\n17 | #[macro_use]\n   | ^^^^^^^^^^^^\n   |\n   = note: `#[warn(unused_imports)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/slot.rs:63:30\n   |\n63 |     on_full: Lock<Option<Box<FnBox<T>>>>,\n   |                              ^^^^^^^^ help: use `dyn`: `dyn FnBox<T>`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/slot.rs:64:31\n   |\n64 |     on_empty: Lock<Option<Box<FnBox<T>>>>,\n   |                               ^^^^^^^^ help: use `dyn`: `dyn FnBox<T>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n --> src/util.rs:5:14\n  |\n5 |     Tail(Box<Future<Item=T::Item, Error=T::Error>>),\n  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=T::Item, Error=T::Error>`\n\nwarning: unused imports: `ATOMIC_USIZE_INIT`, `AtomicUsize`\n  --> src/task.rs:54:25\n   |\n54 | use std::sync::atomic::{AtomicUsize, AtomicBool, ATOMIC_USIZE_INIT, Ordering};\n   |                         ^^^^^^^^^^^              ^^^^^^^^^^^^^^^^^\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/task.rs:96:27\n   |\n96 |     slot: Slot<(Task, Box<Future<Item=(), Error=()>>)>,\n   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=(), Error=()>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/task.rs:225:38\n    |\n225 |     pub fn run(self, mut future: Box<Future<Item=(), Error=()>>) {\n    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=(), Error=()>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/executor.rs:30:36\n   |\n30 |     fn execute_boxed(&self, f: Box<ExecuteCallback>);\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/executor.rs:37:36\n   |\n37 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/executor.rs:43:36\n   |\n43 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/executor.rs:69:36\n   |\n69 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/executor.rs:84:31\n   |\n84 |     deferred: RefCell<Vec<Box<ExecuteCallback>>>,\n   |                               ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/executor.rs:91:36\n   |\n91 |     fn execute_boxed(&self, f: Box<ExecuteCallback>) {\n   |                                    ^^^^^^^^^^^^^^^ help: use `dyn`: `dyn ExecuteCallback`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/collect.rs:116:31\n    |\n116 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/lazy.rs:83:42\n   |\n83 |     fn tailcall(&mut self) -> Option<Box<Future<Item=R::Item, Error=R::Error>>> {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=R::Item, Error=R::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/and_then.rs:43:31\n   |\n43 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/flatten.rs:41:31\n   |\n41 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/join.rs:88:39\n    |\n88  |                           -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n...\n97  | / generate! {\n98  | |     (Join, new, <A, B>),\n99  | |     (Join3, new3, <A, B, C>),\n100 | |     (Join4, new4, <A, B, C, D>),\n101 | |     (Join5, new5, <A, B, C, D, E>),\n102 | | }\n    | |_- in this macro invocation\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/map.rs:39:31\n   |\n39 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/map_err.rs:39:31\n   |\n39 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/or_else.rs:44:31\n   |\n44 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/select.rs:77:31\n   |\n77 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/select.rs:108:31\n    |\n108 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/select_all.rs:81:31\n   |\n81 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/select_all.rs:104:31\n    |\n104 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/then.rs:41:31\n   |\n41 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/stream/mod.rs:178:27\n    |\n178 |     fn boxed(self) -> Box<Stream<Item = Self::Item, Error = Self::Error>>\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Stream<Item = Self::Item, Error = Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/chain.rs:54:35\n   |\n54 |                     -> Option<Box<Future<Item=B::Item, Error=B::Error>>> {\n   |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=B::Item, Error=B::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n --> src/impls.rs:5:27\n  |\n5 | impl<T, E> Future for Box<Future<Item=T, Error=E>>\n  |                           ^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=T, Error=E>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/impls.rs:21:31\n   |\n21 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/impls.rs:42:31\n   |\n42 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/forget.rs:11:16\n   |\n11 |     inner: Box<Future<Item=T, Error=E>>,\n   |                ^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=T, Error=E>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/forget.rs:26:42\n   |\n26 |     fn tailcall(&mut self) -> Option<Box<Future<Item=(), Error=()>>> {\n   |                                          ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=(), Error=()>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/lib.rs:263:31\n    |\n263 |                 -> Option<Box<Future<Item=Self::Item, Error=Self::Error>>> {\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/lib.rs:279:27\n    |\n279 |     fn boxed(self) -> Box<Future<Item=Self::Item, Error=Self::Error>>\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item=Self::Item, Error=Self::Error>`\n\nwarning: unused imports: `TryRecvError`, `channel`\n --> src/all/mod.rs:1:23\n  |\n1 | use std::sync::mpsc::{channel, TryRecvError};\n  |                       ^^^^^^^  ^^^^^^^^^^^^\n\nwarning: unused import: `*`\n --> src/all/mod.rs:3:5\n  |\n3 | use *;\n  |     ^\n\nwarning: unused import: `self::support::*`\n --> src/all/mod.rs:6:5\n  |\n6 | use self::support::*;\n  |     ^^^^^^^^^^^^^^^^\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::sync::Arc<task::Inner> as std::clone::Clone>)) } }\n- dep-node: evaluate_obligation(731a28c73c88dcf4-871e94a64a6762e7)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp0BcwzB/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `futures`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=1611642641;;instructions:u;304548135;100.00;1.45;insn per cycle\n1114112201;;cycles:u;304548135;100.00;3.658;GHz\n304.535509;;task-clock;304535509;100.00;0.999;CPUs utilized\n304.535169;;cpu-clock;304535509;100.00;0.999;CPUs utilized\n11788;;faults;304535509;100.00;0.039;M/sec\n\n"},"helloworld":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking helloworld v0.1.0 (/tmp/.tmptZpDxA)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: () } }\n- dep-node: implied_outlives_bounds(6b7bfad94e52d1d1-8ac435f52469f5d1)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmptZpDxA/self-profile-output -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `helloworld`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=146201163;;instructions:u;38192906;100.00;1.44;insn per cycle\n101629850;;cycles:u;38192906;100.00;2.663;GHz\n38.160585;;task-clock;38160585;100.00;0.993;CPUs utilized\n38.160095;;cpu-clock;38160585;100.00;0.993;CPUs utilized\n5606;;faults;38160585;100.00;0.147;M/sec\n\n"},"html5ever":{"Err":"expected success, got exit code: 101\n\nstderr=   Compiling html5ever v0.5.4 (/tmp/.tmpkYwTps)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::io::Stderr as std::io::Write>)) } }\n- dep-node: evaluate_obligation(99b5eaa2ebaac77b-6ec1de0a7f5b4094)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `html5ever`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"hyper":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking hyper v0.5.0 (/tmp/.tmpO1R6GA)\nwarning: unused macro definition\n   --> src/lib.rs:164:1\n    |\n164 | / macro_rules! inspect(\n165 | |     ($name:expr, $value:expr) => ({\n166 | |         let v = $value;\n167 | |         trace!(\"inspect: {:?} = {:?}\", $name, v);\n168 | |         v\n169 | |     })\n170 | | );\n    | |__^\n    |\n    = note: `#[warn(unused_macros)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/client/request.rs:25:36\n   |\n25 |     body: HttpWriter<BufWriter<Box<NetworkStream + Send>>>,\n   |                                    ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/client/request.rs:53:21\n   |\n53 |         S: Into<Box<NetworkStream + Send>> {\n   |                     ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/client/response.rs:26:36\n   |\n26 |     body: HttpReader<BufReader<Box<NetworkStream + Send>>>,\n   |                                    ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/client/response.rs:34:28\n   |\n34 |     pub fn new(stream: Box<NetworkStream + Send>) -> ::Result<Response> {\n   |                            ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/client/response.rs:92:36\n   |\n92 |     pub fn into_inner(self) -> Box<NetworkStream + Send> {\n   |                                    ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:141:23\n    |\n141 |     type Stream = Box<NetworkStream + Send>;\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:144:25\n    |\n144 |         -> ::Result<Box<NetworkStream + Send>> {\n    |                         ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:153:22\n    |\n153 | struct Connector(Box<NetworkConnector<Stream=Box<NetworkStream + Send>> + Send>);\n    |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkConnector<Stream=Box<NetworkStream + Send>> + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:153:50\n    |\n153 | struct Connector(Box<NetworkConnector<Stream=Box<NetworkStream + Send>> + Send>);\n    |                                                  ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:156:23\n    |\n156 |     type Stream = Box<NetworkStream + Send>;\n    |                       ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:159:25\n    |\n159 |         -> ::Result<Box<NetworkStream + Send>> {\n    |                         ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:284:26\n    |\n284 |     ChunkedBody(&'a mut (Read + 'a)),\n    |                          ^^^^^^^^^ help: use `dyn`: `dyn Read + 'a`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/client/mod.rs:286:24\n    |\n286 |     SizedBody(&'a mut (Read + 'a), u64),\n    |                        ^^^^^^^^^ help: use `dyn`: `dyn Read + 'a`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/error.rs:66:32\n   |\n66 |     fn cause(&self) -> Option<&StdError> {\n   |                                ^^^^^^^^ help: use `dyn`: `dyn StdError`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/internals/item.rs:15:23\n   |\n15 |     typed: PtrMapCell<HeaderFormat + Send + Sync>\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/internals/item.rs:28:30\n   |\n28 |     pub fn new_typed(ty: Box<HeaderFormat + Send + Sync>) -> Item {\n   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/internals/item.rs:88:70\n   |\n88 | fn parse<H: Header + HeaderFormat>(raw: &Vec<Vec<u8>>) -> Option<Box<HeaderFormat + Send + Sync>> {\n   |                                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/internals/item.rs:91:20\n   |\n91 |         let h: Box<HeaderFormat + Send + Sync> = Box::new(h);\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/mod.rs:65:32\n   |\n65 |     fn clone_box(&self) -> Box<HeaderFormat + Send + Sync>;\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/mod.rs:70:32\n   |\n70 |     fn clone_box(&self) -> Box<HeaderFormat + Send + Sync> {\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/mod.rs:75:6\n   |\n75 | impl HeaderFormat + Send + Sync {\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/mod.rs:87:20\n   |\n87 | impl Clone for Box<HeaderFormat + Send + Sync> {\n   |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/header/mod.rs:89:28\n   |\n89 |     fn clone(&self) -> Box<HeaderFormat + Send + Sync> {\n   |                            ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/header/mod.rs:314:32\n    |\n314 | impl<'a> fmt::Display for &'a (HeaderFormat + Send + Sync) {\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn HeaderFormat + Send + Sync`\n\nwarning: `...` range patterns are deprecated\n   --> src/http.rs:162:19\n    |\n162 |             b@b'0'...b'9' if in_chunk_size => {\n    |                   ^^^ help: use `..=` for an inclusive range\n    |\n    = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> src/http.rs:166:19\n    |\n166 |             b@b'a'...b'f' if in_chunk_size => {\n    |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/http.rs:170:19\n    |\n170 |             b@b'A'...b'F' if in_chunk_size => {\n    |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/net.rs:70:27\n   |\n70 |     type Stream: Into<Box<NetworkStream + Send>>;\n   |                           ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/net.rs:78:47\n   |\n78 | impl<T: NetworkStream + Send> From<T> for Box<NetworkStream + Send> {\n   |                                               ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/net.rs:79:26\n   |\n79 |     fn from(s: T) -> Box<NetworkStream + Send> {\n   |                          ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/net.rs:84:25\n   |\n84 | impl fmt::Debug for Box<NetworkStream + Send> {\n   |                         ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/net.rs:90:6\n   |\n90 | impl NetworkStream + Send {\n   |      ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/net.rs:99:56\n   |\n99 |     unsafe fn downcast_unchecked<T: 'static>(self: Box<NetworkStream + Send>) -> Box<T>  {\n   |                                                        ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/net.rs:100:23\n    |\n100 |         let raw: *mut NetworkStream = mem::transmute(self);\n    |                       ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/net.rs:105:6\n    |\n105 | impl NetworkStream + Send {\n    |      ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/net.rs:135:39\n    |\n135 |     pub fn downcast<T: Any>(self: Box<NetworkStream + Send>)\n    |                                       ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/net.rs:136:35\n    |\n136 |             -> Result<Box<T>, Box<NetworkStream + Send>> {\n    |                                   ^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/net.rs:320:32\n    |\n320 | pub type ContextVerifier = Box<Fn(&mut SslContext) -> () + Send>;\n    |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(&mut SslContext) -> () + Send`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/server/request.rs:29:48\n   |\n29 |     body: HttpReader<&'a mut BufReader<&'b mut NetworkStream>>\n   |                                                ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/server/request.rs:36:54\n   |\n36 |     pub fn new(mut stream: &'a mut BufReader<&'b mut NetworkStream>, addr: SocketAddr)\n   |                                                      ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/server/request.rs:70:71\n   |\n70 | ...                   HttpReader<&'a mut BufReader<&'b mut NetworkStream>>) {\n   |                                                            ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/server/response.rs:27:31\n   |\n27 |     body: HttpWriter<&'a mut (Write + 'a)>,\n   |                               ^^^^^^^^^^ help: use `dyn`: `dyn Write + 'a`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/server/response.rs:46:48\n   |\n46 |                      body: HttpWriter<&'a mut (Write + 'a)>,\n   |                                                ^^^^^^^^^^ help: use `dyn`: `dyn Write + 'a`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/server/response.rs:59:76\n   |\n59 |     pub fn deconstruct(self) -> (version::HttpVersion, HttpWriter<&'a mut (Write + 'a)>,\n   |                                                                            ^^^^^^^^^^ help: use `dyn`: `dyn Write + 'a`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/server/response.rs:117:33\n    |\n117 |     pub fn new(stream: &'a mut (Write + 'a), headers: &'a mut header::Headers) -> Response<'a, Fresh> {\n    |                                 ^^^^^^^^^^ help: use `dyn`: `dyn Write + 'a`\n\nwarning: unused macro definition\n  --> src/server/mod.rs:68:1\n   |\n68 | / macro_rules! try_option(\n69 | |     ($e:expr) => {{\n70 | |         match $e {\n71 | |             Some(v) => v,\n...  |\n74 | |     }}\n75 | | );\n   | |__^\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/server/mod.rs:170:32\n    |\n170 |         let stream_clone: &mut NetworkStream = &mut stream.clone();\n    |                                ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/server/mod.rs:178:65\n    |\n178 |     fn keep_alive_loop<W: Write>(&self, mut rdr: BufReader<&mut NetworkStream>, mut wrt: W, addr: SocketAddr) {\n    |                                                                 ^^^^^^^^^^^^^ help: use `dyn`: `dyn NetworkStream`\n\nwarning: `...` range patterns are deprecated\n   --> src/status.rs:443:16\n    |\n443 |             100...199 => StatusClass::Informational,\n    |                ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/status.rs:444:16\n    |\n444 |             200...299 => StatusClass::Success,\n    |                ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/status.rs:445:16\n    |\n445 |             300...399 => StatusClass::Redirection,\n    |                ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/status.rs:446:16\n    |\n446 |             400...499 => StatusClass::ClientError,\n    |                ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/status.rs:447:16\n    |\n447 |             500...599 => StatusClass::ServerError,\n    |                ^^^ help: use `..=` for an inclusive range\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<client::Connector as net::NetworkConnector>)) } }\n- dep-node: evaluate_obligation(eadbf5512d33192c-bda77a40926098df)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpO1R6GA/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `hyper`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=1796335035;;instructions:u;394074618;100.00;1.29;insn per cycle\n1397670318;;cycles:u;394074618;100.00;3.547;GHz\n394.059004;;task-clock;394059004;100.00;0.955;CPUs utilized\n394.058667;;cpu-clock;394059004;100.00;0.955;CPUs utilized\n18726;;faults;394059004;100.00;0.048;M/sec\n\n"},"inflate":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking inflate v0.1.0 (/tmp/.tmpqnf340)\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:274:18\n    |\n274 |                 0...15 => self.result.push(code),\n    |                  ^^^ help: use `..=` for an inclusive range\n    |\n    = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:768:38\n    |\n768 | ...                   1...8 => len!(code, 0),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:769:38\n    |\n769 | ...                   9...12 => len!(code, 1),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:770:39\n    |\n770 | ...                   13...16 => len!(code, 2),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:771:39\n    |\n771 | ...                   17...20 => len!(code, 3),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:772:39\n    |\n772 | ...                   21...23 => len!(code, 4),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:796:39\n    |\n796 | ...                   25...28 => len!(code, 5),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:853:38\n    |\n853 | ...                   0...255 => {\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:857:40\n    |\n857 | ...                   256...285 => {}\n    |                          ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:878:38\n    |\n878 | ...                   1...8 => len!(code, 0),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:879:38\n    |\n879 | ...                   9...12 => len!(code, 1),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:880:39\n    |\n880 | ...                   13...16 => len!(code, 2),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:881:39\n    |\n881 | ...                   17...20 => len!(code, 3),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:882:39\n    |\n882 | ...                   21...24 => len!(code, 4),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:883:39\n    |\n883 | ...                   25...28 => len!(code, 5),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:898:34\n    |\n898 | ...                   0...3 => len_dist_case!(0),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:899:34\n    |\n899 | ...                   4...5 => len_dist_case!(1),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:900:34\n    |\n900 | ...                   6...7 => len_dist_case!(2),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:901:34\n    |\n901 | ...                   8...9 => len_dist_case!(3),\n    |                        ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:902:35\n    |\n902 | ...                   10...11 => len_dist_case!(4),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:903:35\n    |\n903 | ...                   12...13 => len_dist_case!(5),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:904:35\n    |\n904 | ...                   14...15 => len_dist_case!(6),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:905:35\n    |\n905 | ...                   16...17 => len_dist_case!(7),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:906:35\n    |\n906 | ...                   18...19 => len_dist_case!(8),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:907:35\n    |\n907 | ...                   20...21 => len_dist_case!(9),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:908:35\n    |\n908 | ...                   22...23 => len_dist_case!(10),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:909:35\n    |\n909 | ...                   24...25 => len_dist_case!(11),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:910:35\n    |\n910 | ...                   26...27 => len_dist_case!(12),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:911:35\n    |\n911 | ...                   28...29 => len_dist_case!(13),\n    |                         ^^^ help: use `..=` for an inclusive range\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<str as std::borrow::ToOwned>)) } }\n- dep-node: evaluate_obligation(2a250280f290610b-32b81611dd09774)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpqnf340/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `inflate`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=851905525;;instructions:u;160884364;100.00;1.53;insn per cycle\n555770253;;cycles:u;160884364;100.00;3.454;GHz\n160.886306;;task-clock;160886306;100.00;0.893;CPUs utilized\n160.886116;;cpu-clock;160886306;100.00;0.893;CPUs utilized\n11001;;faults;160886306;100.00;0.068;M/sec\n\n"},"issue-46449":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking issue-46649-byte-filling-slowing-down-sroa v0.1.0 (/tmp/.tmp2DPADF)\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/lib.rs:17:21\n   |\n17 | pub fn run() -> Box<Future<Item = (), Error = Error>> {\n   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item = (), Error = Error>`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<Dummy<[u8; 1]> as futures::Future>)) } }\n- dep-node: evaluate_obligation(dfc7602c92a5a4ca-33171e6e23705b35)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp2DPADF/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `issue-46649-byte-filling-slowing-down-sroa`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=169026966;;instructions:u;42285977;100.00;1.47;insn per cycle\n114950630;;cycles:u;42285977;100.00;2.720;GHz\n42.257270;;task-clock;42257270;100.00;0.995;CPUs utilized\n42.255811;;cpu-clock;42257270;100.00;0.995;CPUs utilized\n6112;;faults;42257270;100.00;0.145;M/sec\n\n"},"keccak":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking keccak v0.1.0 (/tmp/.tmpmlPEfg)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: GlobalId { instance: Instance { def: Item(DefId(0:27 ~ keccak[9fc5]::f1600[0]::{{constant}}[4])), substs: [] }, promoted: None } }\n- dep-node: const_eval(a265d98a9702c821-e5803be06dbb2943)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpmlPEfg/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `keccak`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=24657759099;;instructions:u;3820353130;100.00;1.66;insn per cycle\n14843141628;;cycles:u;3820353130;100.00;3.885;GHz\n3820.334022;;task-clock;3820334022;100.00;0.995;CPUs utilized\n3820.323012;;cpu-clock;3820334022;100.00;0.995;CPUs utilized\n90966;;faults;3820334022;100.00;0.024;M/sec\n\n"},"packed-simd":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking packed_simd v0.3.0 (/tmp/.tmpRgV0ZZ)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpRgV0ZZ/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `packed_simd`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=11316836444;;instructions:u;2138617778;100.00;1.38;insn per cycle\n8184931032;;cycles:u;2138617778;100.00;3.827;GHz\n2138.617573;;task-clock;2138617573;100.00;0.992;CPUs utilized\n2138.617397;;cpu-clock;2138617573;100.00;0.992;CPUs utilized\n74086;;faults;2138617573;100.00;0.035;M/sec\n\n"},"piston-image":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking image v0.10.3 (/tmp/.tmp6hVTOW)\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/imageops/sample.rs:37:21\n   |\n37 |     pub kernel: Box<Fn(f32) -> f32 + 'a>,\n   |                     ^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Fn(f32) -> f32 + 'a`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: `...` range patterns are deprecated\n    --> src/webp/vp8.rs:1277:34\n     |\n1277 |                 literal  @ DCT_1 ... DCT_4 => literal as i16,\n     |                                  ^^^ help: use `..=` for an inclusive range\n     |\n     = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n    --> src/webp/vp8.rs:1279:37\n     |\n1279 |                 category @ DCT_CAT1 ... DCT_CAT6 => {\n     |                                     ^^^ help: use `..=` for an inclusive range\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/tiff/decoder/mod.rs:391:46\n    |\n391 |         let (bytes, mut reader): (usize, Box<EndianReader>) = match self.compression_method {\n    |                                              ^^^^^^^^^^^^ help: use `dyn`: `dyn EndianReader`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/tga/decoder.rs:110:28\n    |\n110 |     fn from_reader(r: &mut Read) -> ImageResult<Header> {\n    |                            ^^^^ help: use `dyn`: `dyn Read`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/tga/decoder.rs:136:32\n    |\n136 |     pub fn from_reader(r: &mut Read,\n    |                                ^^^^ help: use `dyn`: `dyn Read`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/image.rs:70:33\n   |\n70 |     fn cause (&self) -> Option<&Error> {\n   |                                 ^^^^^ help: use `dyn`: `dyn Error`\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp6hVTOW/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: isize } }\n- dep-node: implied_outlives_bounds(436967c8a4eb8cb1-d7ca68f130421c49)', src/librustc/ty/query/plumbing.rs:499:9\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp6hVTOW/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `image`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=2041313763;;instructions:u;415232802;100.00;1.33;insn per cycle\n1529858467;;cycles:u;415232802;100.00;3.684;GHz\n415.223592;;task-clock;415223592;100.00;0.954;CPUs utilized\n415.222958;;cpu-clock;415223592;100.00;0.954;CPUs utilized\n20562;;faults;415223592;100.00;0.050;M/sec\n\n"},"regex":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking regex-syntax v0.3.9 (/tmp/.tmpK3BG3L/regex-syntax)\nwarning: `...` range patterns are deprecated\n    --> regex-syntax/src/lib.rs:1670:19\n     |\n1670 |         '_' | '0' ... '9' | 'a' ... 'z' | 'A' ... 'Z'  => true,\n     |                   ^^^ help: use `..=` for an inclusive range\n     |\n     = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n    --> regex-syntax/src/lib.rs:1670:33\n     |\n1670 |         '_' | '0' ... '9' | 'a' ... 'z' | 'A' ... 'Z'  => true,\n     |                                 ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> regex-syntax/src/lib.rs:1670:47\n     |\n1670 |         '_' | '0' ... '9' | 'a' ... 'z' | 'A' ... 'Z'  => true,\n     |                                               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> regex-syntax/src/lib.rs:1687:21\n     |\n1687 |         b'_' | b'0' ... b'9' | b'a' ... b'z' | b'A' ... b'Z'  => true,\n     |                     ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> regex-syntax/src/lib.rs:1687:37\n     |\n1687 |         b'_' | b'0' ... b'9' | b'a' ... b'z' | b'A' ... b'Z'  => true,\n     |                                     ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> regex-syntax/src/lib.rs:1687:53\n     |\n1687 |         b'_' | b'0' ... b'9' | b'a' ... b'z' | b'A' ... b'Z'  => true,\n     |                                                     ^^^ help: use `..=` for an inclusive range\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<parser::Flags as std::default::Default>)) } }\n- dep-node: evaluate_obligation(1cd6aae0a89513c1-897fb90c77b620c6)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `regex-syntax`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"regression-31157":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking parser v0.1.0 (/tmp/.tmpbksiow)\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/lexer.rs:11:23\n   |\n11 | pub fn token() -> Box<Parser<I=str, O=Vec<Token>>> {\n   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=str, O=Vec<Token>>`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n --> src/parser.rs:7:25\n  |\n7 | pub fn program() -> Box<Parser<I=[Token], O=Block>> {\n  |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Block>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n --> src/parser.rs:9:28\n  |\n9 |     fn expression() -> Box<Parser<I=[Token], O=Expr>> {\n  |                            ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Expr>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/parser.rs:84:32\n   |\n84 |         fn code_block() -> Box<Parser<I=[Token], O=Block>> {\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Block>`\n\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/parser.rs:90:29\n   |\n90 |         fn if_stmt() -> Box<Parser<I=[Token], O=Statement>> {\n   |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Parser<I=[Token], O=Statement>`\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::string::String as std::str::FromStr>)) } }\n- dep-node: evaluate_obligation(1190cbc5bb87d890-1e72a573ded29adb)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpbksiow/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `parser`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=436975149;;instructions:u;95621333;100.00;1.40;insn per cycle\n312849928;;cycles:u;95621333;100.00;3.272;GHz\n95.613952;;task-clock;95613952;100.00;0.999;CPUs utilized\n95.613442;;cpu-clock;95613952;100.00;0.999;CPUs utilized\n8724;;faults;95613952;100.00;0.091;M/sec\n\n"},"ripgrep":{"Err":"expected success, got exit code: 101\n\nstderr=warning: /tmp/.tmpjRVDWW/Cargo.toml: An explicit [[test]] section is specified in Cargo.toml which currently\ndisables Cargo from automatically inferring other test targets.\nThis inference behavior will change in the Rust 2018 edition and the following\nfiles will be included as a test target:\n\n* /tmp/.tmpjRVDWW/tests/hay.rs\n* /tmp/.tmpjRVDWW/tests/workdir.rs\n\nThis is likely to break cargo build or cargo test as these files may not be\nready to be compiled as a test target today. You can future-proof yourself\nand disable this warning by adding `autotests = false` to your [package]\nsection. You may also move the files to a location where Cargo would not\nautomatically infer them to be a target, such as in subfolders.\n\nFor more information on this warning you can consult\nhttps://github.com/rust-lang/cargo/issues/5330\nwarning: Pattern matching for Cargo's include/exclude fields has changed and file `HomebrewFormula/ripgrep-bin.rb` is now excluded.\nSee <https://github.com/rust-lang/cargo/issues/4268> for more information.\n    Checking termcolor v0.3.6 (/tmp/.tmpjRVDWW/termcolor)\n   Compiling ripgrep v0.8.1 (/tmp/.tmpjRVDWW)\n    Checking globset v0.4.0 (/tmp/.tmpjRVDWW/globset)\n    Checking grep v0.1.8 (/tmp/.tmpjRVDWW/grep)\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> grep/src/lib.rs:54:32\n   |\n54 |     fn cause(&self) -> Option<&error::Error> {\n   |                                ^^^^^^^^^^^^ help: use `dyn`: `dyn error::Error`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::io::Stdout as std::io::Write>)) } }\n- dep-node: evaluate_obligation(2f775b50e03d1c0b-ea767d80c9f1fa05)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<regex::Error as std::error::Error>)) } }\n- dep-node: evaluate_obligation(2bbf9b87247070a1-6b00fc4fe6d0893)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<str as std::string::ToString>)) } }\n- dep-node: evaluate_obligation(901de068cf29e9e0-d0215c0b26999e50)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `termcolor`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `grep`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `ripgrep`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<ErrorKind as std::fmt::Display>)) } }\n- dep-node: evaluate_obligation(a0c59b92e632f3a4-e60f7d5befc939fb)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `globset`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"script-servo":{"Err":"expected success, got exit code: 101\n\nstderr=   Compiling dom_struct v0.0.1 (/tmp/.tmpiq7jrh/components/dom_struct)\n    Checking hashglobe v0.1.0 (/tmp/.tmpiq7jrh/components/hashglobe)\n    Checking servo_allocator v0.0.1 (/tmp/.tmpiq7jrh/components/allocator)\n    Checking servo_arc v0.0.1 (/tmp/.tmpiq7jrh/components/servo_arc)\n    Checking servo_rand v0.0.1 (/tmp/.tmpiq7jrh/components/rand)\n   Compiling style v0.0.1 (/tmp/.tmpiq7jrh/components/style)\n    Checking lru_cache v0.0.1 (/tmp/.tmpiq7jrh/components/lru_cache)\n   Compiling cssparser v0.22.1 (/tmp/.tmpiq7jrh/rust-cssparser)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: *const std::ffi::c_void } }\n- dep-node: implied_outlives_bounds(90a4b99e7225c23d-d7be60f52d7ddb00)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<str as std::borrow::ToOwned>)) } }\n- dep-node: evaluate_obligation(2a250280f290610b-32b81611dd09774)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `servo_allocator`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `style`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<proc_macro::TokenStream as std::string::ToString>)) } }\n- dep-node: evaluate_obligation(b5b54daef5b2434d-3eada09787882dd3)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C prefer-dynamic -C debuginfo=2 -C incremental --crate-type proc-macro\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<rand::reseeding::ReseedingRng<rand::Isaac64Rng, ServoReseeder> as rand::Rng>)) } }\n- dep-node: evaluate_obligation(feadf786c31442d3-d2c591b90d15d5cc)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `servo_rand`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `dom_struct`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::fs::File as std::io::Read>)) } }\n- dep-node: evaluate_obligation(7956a76a76c63699-9893b117028e228d)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<T as std::marker::Sized>)), Binder(TraitPredicate(<A as arrayvec::Array>)), Binder(TraitPredicate(<A as std::marker::Sized>)), Binder(ProjectionPredicate(ProjectionTy { substs: [A], item_def_id: DefId(15:35 ~ arrayvec[5b13]::array[0]::Array[0]::Item[0]) }, Entry<T>))], reveal: UserFacing, def_id: None }, value: LRUCache<T, A> } }\n- dep-node: implied_outlives_bounds(eba4a2e8c8f51138-522f0b7d981e7e29)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `cssparser`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `lru_cache`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `servo_arc`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<str as std::fmt::Display>)) } }\n- dep-node: evaluate_obligation(c108b334fae7a48c-3fe8a150c29580e6)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `hashglobe`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"sentry-cli":{"Err":"expected success, got exit code: 101\n\nstderr=   Compiling sentry-cli v1.21.0 (/tmp/.tmpHIXBgj)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::fs::File as std::io::Write>)) } }\n- dep-node: evaluate_obligation(256481f55f7ece9-f8956dfba55c5091)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C codegen-units=2 -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `sentry-cli`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"serde":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking serde v1.0.37 (/tmp/.tmpO0E5PV/serde)\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> serde/src/de/mod.rs:199:54\n    |\n199 |             fn invalid_type(unexp: Unexpected, exp: &Expected) -> Self {\n    |                                                      ^^^^^^^^ help: use `dyn`: `dyn Expected`\n...\n276 | declare_error_trait!(Error: Sized + error::Error);\n    | -------------------------------------------------- in this macro invocation\n    |\n    = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> serde/src/de/mod.rs:216:55\n    |\n216 |             fn invalid_value(unexp: Unexpected, exp: &Expected) -> Self {\n    |                                                       ^^^^^^^^ help: use `dyn`: `dyn Expected`\n...\n276 | declare_error_trait!(Error: Sized + error::Error);\n    | -------------------------------------------------- in this macro invocation\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> serde/src/de/mod.rs:229:49\n    |\n229 |             fn invalid_length(len: usize, exp: &Expected) -> Self {\n    |                                                 ^^^^^^^^ help: use `dyn`: `dyn Expected`\n...\n276 | declare_error_trait!(Error: Sized + error::Error);\n    | -------------------------------------------------- in this macro invocation\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> serde/src/de/mod.rs:466:22\n    |\n466 | impl<'a> Display for Expected + 'a {\n    |                      ^^^^^^^^^^^^^ help: use `dyn`: `dyn Expected + 'a`\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpO0E5PV/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `serde`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=8593695101;;instructions:u;1372978563;100.00;1.62;insn per cycle\n5311086634;;cycles:u;1372978563;100.00;3.868;GHz\n1372.981155;;task-clock;1372981155;100.00;0.987;CPUs utilized\n1372.981642;;cpu-clock;1372981155;100.00;0.987;CPUs utilized\n28503;;faults;1372981155;100.00;0.021;M/sec\n\n"},"style-servo":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking nsstring_vendor v0.1.0 (/tmp/.tmpnTGasA/components/style/gecko_bindings/nsstring_vendor)\n    Checking servo_arc v0.0.1 (/tmp/.tmpnTGasA/components/servo_arc)\n   Compiling style v0.0.1 (/tmp/.tmpnTGasA/components/style)\n   Compiling cssparser v0.22.1 (/tmp/.tmpnTGasA/rust-cssparser)\n    Checking hashglobe v0.1.0 (/tmp/.tmpnTGasA/components/hashglobe)\n    Checking lru_cache v0.0.1 (/tmp/.tmpnTGasA/components/lru_cache)\n   Compiling selectors v0.19.0 (/tmp/.tmpnTGasA/components/selectors)\n   Compiling malloc_size_of_derive v0.0.1 (/tmp/.tmpnTGasA/components/malloc_size_of_derive)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<T as std::marker::Sized>)), Binder(TraitPredicate(<A as arrayvec::Array>)), Binder(TraitPredicate(<A as std::marker::Sized>)), Binder(ProjectionPredicate(ProjectionTy { substs: [A], item_def_id: DefId(15:35 ~ arrayvec[c07b]::array[0]::Array[0]::Item[0]) }, Entry<T>))], reveal: UserFacing, def_id: None }, value: LRUCache<T, A> } }\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::io::BufWriter<std::fs::File> as std::io::Write>)) } }\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<proc_macro::TokenStream as std::string::ToString>)) } }\n- dep-node: implied_outlives_bounds(5b99b4a424e4c792-8cca276671f1c323)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\n- dep-node: evaluate_obligation(b5b54daef5b2434d-3eada09787882dd3)', src/librustc/ty/query/plumbing.rs:499:9\n- dep-node: evaluate_obligation(49fd182289900f2e-66d67f8335bf2235)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: internal compiler error: unexpected panic\n\n\n\nerror: internal compiler error: unexpected panic\nerror: internal compiler error: unexpected panic\n\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\nnote: the compiler unexpectedly panicked. this is a bug.\nnote: the compiler unexpectedly panicked. this is a bug.\n\n\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\n\n\nnote: some of the compiler flags provided by cargo are hidden\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\nnote: compiler flags: -C prefer-dynamic -C debuginfo=2 -C incremental --crate-type proc-macro\n\n\n\nnote: some of the compiler flags provided by cargo are hidden\nnote: some of the compiler flags provided by cargo are hidden\n\n\nerror: Could not compile `malloc_size_of_derive`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `selectors`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<str as std::borrow::ToOwned>)) } }\n- dep-node: evaluate_obligation(2a250280f290610b-32b81611dd09774)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `lru_cache`.\nwarning: build failed, waiting for other jobs to finish...\nerror: Could not compile `style`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::fs::File as std::io::Read>)) } }\n- dep-node: evaluate_obligation(7956a76a76c63699-9893b117028e228d)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `cssparser`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `servo_arc`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<nsACString as std::fmt::Write>)) } }\n- dep-node: evaluate_obligation(4437dce1b4683ae9-df5acc49778ed19c)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `nsstring_vendor`.\nwarning: build failed, waiting for other jobs to finish...\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<str as std::fmt::Display>)) } }\n- dep-node: evaluate_obligation(c108b334fae7a48c-3fe8a150c29580e6)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `hashglobe`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"syn":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking synom v0.11.3 (/tmp/.tmpWBQnsF/synom)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<ParseError as std::error::Error>)) } }\n- dep-node: evaluate_obligation(9b0af87a803dc887-9e263cf753a84fbd)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `synom`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"token-stream-stress":{"Err":"expected success, got exit code: 101\n\nstderr=   Compiling token-stream-stress v0.0.0 (/tmp/.tmpce30UH)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: proc_macro::TokenStream } }\n- dep-node: implied_outlives_bounds(d8aa3f2e1a96212d-216e428db5844fa)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C prefer-dynamic -C debuginfo=2 -C incremental --crate-type proc-macro\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `token-stream-stress`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"tokio-webpush-simple":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking webpush-server v0.1.0 (/tmp/.tmptFyC3M)\nwarning: trait objects without an explicit `dyn` are deprecated\n  --> src/main.rs:51:32\n   |\n51 |     pub type MyFuture<T> = Box<Future<Item = T, Error = Error>>;\n   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item = T, Error = Error>`\n   |\n   = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> src/main.rs:374:23\n    |\n374 |     type Future = Box<Future<Item = hyper::Response, Error = hyper::Error>>;\n    |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn Future<Item = hyper::Response, Error = hyper::Error>`\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<tokio_core::net::Incoming as futures::Stream>)) } }\n- dep-node: evaluate_obligation(a5d0f176c4641698-4dd8c97dae2add25)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmptFyC3M/self-profile-output -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `webpush-server`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=934784031;;instructions:u;179235043;100.00;1.50;insn per cycle\n621776678;;cycles:u;179235043;100.00;3.469;GHz\n179.231327;;task-clock;179231327;100.00;0.999;CPUs utilized\n179.231173;;cpu-clock;179231327;100.00;0.999;CPUs utilized\n12991;;faults;179231327;100.00;0.072;M/sec\n\n"},"tuple-stress":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking tuple-stress v0.1.0 (/tmp/.tmp2wC6Jv)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: () } }\n- dep-node: implied_outlives_bounds(6b7bfad94e52d1d1-8ac435f52469f5d1)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp2wC6Jv/self-profile-output -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `tuple-stress`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=15368584254;;instructions:u;2362585376;100.00;1.69;insn per cycle\n9117224466;;cycles:u;2362585376;100.00;3.859;GHz\n2362.576482;;task-clock;2362576482;100.00;0.992;CPUs utilized\n2362.576440;;cpu-clock;2362576482;100.00;0.992;CPUs utilized\n75612;;faults;2362576482;100.00;0.032;M/sec\n\n"},"ucd":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking ucd v0.1.1 (/tmp/.tmpe7bdvF)\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:267:23\n    |\n267 |                   8298...8303 | 9001 | 9002 | 917505 => true,\n    |                       ^^^ help: use `..=` for an inclusive range\n    |\n    = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:370:29\n    |\n370 |             183 | 903 | 4969...4977 | 6618 => true,\n    |                             ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:396:14\n    |\n396 |             9...13 | 32 | 133 | 8206\n    |              ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:414:17\n    |\n414 |             4352...4447 | 43360...43388 => Some(HangulSyllableType::LeadingJamo),\n    |                 ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:414:32\n    |\n414 |             4352...4447 | 43360...43388 => Some(HangulSyllableType::LeadingJamo),\n    |                                ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:415:17\n    |\n415 |             4448...4519 | 55216...55238 => Some(HangulSyllableType::VowelJamo),\n    |                 ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:415:32\n    |\n415 |             4448...4519 | 55216...55238 => Some(HangulSyllableType::VowelJamo),\n    |                                ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:416:17\n    |\n416 |             4520...4607 | 55243...55291 => Some(HangulSyllableType::TrailingJamo),\n    |                 ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:416:32\n    |\n416 |             4520...4607 | 55243...55291 => Some(HangulSyllableType::TrailingJamo),\n    |                                ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:417:18\n    |\n417 |             44032...55203 => Some({\n    |                  ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:444:34\n    |\n444 |             12272 | 12273 | 12276...12283 => true,\n    |                                  ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:451:18\n    |\n451 |             11904...11929 | 11931...12019 | 12032...12245 => true,\n    |                  ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:451:34\n    |\n451 |             11904...11929 | 11931...12019 | 12032...12245 => true,\n    |                                  ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:451:50\n    |\n451 |             11904...11929 | 11931...12019 | 12032...12245 => true,\n    |                                                  ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:503:38\n    |\n503 |             1564 | 8206 | 8207 | 8234...8238 | 8294...8297 => true,\n    |                                      ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:503:52\n    |\n503 |             1564 | 8206 | 8207 | 8234...8238 | 8294...8297 => true,\n    |                                                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:593:17\n    |\n593 |             8544...8559 | 9398...9423 | 127280...127305\n    |                 ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:593:31\n    |\n593 |             8544...8559 | 9398...9423 | 127280...127305\n    |                               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:593:47\n    |\n593 |             8544...8559 | 9398...9423 | 127280...127305\n    |                                               ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:594:33\n    |\n594 |                         | 127312...127337 | 127344...127369 => true,\n    |                                 ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/lib.rs:594:51\n    |\n594 |                         | 127312...127337 | 127344...127369 => true,\n    |                                                   ^^^ help: use `..=` for an inclusive range\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<isize as core::cmp::Ord>)) } }\n- dep-node: evaluate_obligation(b4b31ab2b59b9c94-f66dfe4e7fd67dfb)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpe7bdvF/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `ucd`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=16478751420;;instructions:u;2340876960;100.00;1.83;insn per cycle\n9004837964;;cycles:u;2340876960;100.00;3.847;GHz\n2340.864163;;task-clock;2340864163;100.00;0.992;CPUs utilized\n2340.864330;;cpu-clock;2340864163;100.00;0.992;CPUs utilized\n71073;;faults;2340864163;100.00;0.030;M/sec\n\n"},"unicode_normalization":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking unicode-normalization v0.1.7 (/tmp/.tmp5oLrLh)\nwarning: `...` range patterns are deprecated\n   --> src/normalize.rs:126:17\n    |\n126 |         (L_BASE ... L_LAST, V_BASE ... V_LAST) => {\n    |                 ^^^ help: use `..=` for an inclusive range\n    |\n    = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> src/normalize.rs:126:36\n    |\n126 |         (L_BASE ... L_LAST, V_BASE ... V_LAST) => {\n    |                                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/normalize.rs:134:17\n    |\n134 |         (S_BASE ... S_LAST, T_FIRST ... T_LAST) if (a - S_BASE) % T_COUNT == 0 => {\n    |                 ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> src/normalize.rs:134:37\n    |\n134 |         (S_BASE ... S_LAST, T_FIRST ... T_LAST) if (a - S_BASE) % T_COUNT == 0 => {\n    |                                     ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9647:19\n     |\n9647 |         '\\u{0340}'...'\\u{0341}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9648:19\n     |\n9648 |         '\\u{0343}'...'\\u{0344}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9652:19\n     |\n9652 |         '\\u{0958}'...'\\u{095F}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9653:19\n     |\n9653 |         '\\u{09DC}'...'\\u{09DD}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9657:19\n     |\n9657 |         '\\u{0A59}'...'\\u{0A5B}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9659:19\n     |\n9659 |         '\\u{0B5C}'...'\\u{0B5D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9667:19\n     |\n9667 |         '\\u{0F75}'...'\\u{0F76}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9691:19\n     |\n9691 |         '\\u{1FEE}'...'\\u{1FEF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9695:19\n     |\n9695 |         '\\u{2000}'...'\\u{2001}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9697:19\n     |\n9697 |         '\\u{212A}'...'\\u{212B}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9701:19\n     |\n9701 |         '\\u{F900}'...'\\u{FA0D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9704:19\n     |\n9704 |         '\\u{FA15}'...'\\u{FA1E}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9707:19\n     |\n9707 |         '\\u{FA25}'...'\\u{FA26}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9708:19\n     |\n9708 |         '\\u{FA2A}'...'\\u{FA6D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9709:19\n     |\n9709 |         '\\u{FA70}'...'\\u{FAD9}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9712:19\n     |\n9712 |         '\\u{FB2A}'...'\\u{FB36}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9713:19\n     |\n9713 |         '\\u{FB38}'...'\\u{FB3C}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9715:19\n     |\n9715 |         '\\u{FB40}'...'\\u{FB41}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9716:19\n     |\n9716 |         '\\u{FB43}'...'\\u{FB44}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9717:19\n     |\n9717 |         '\\u{FB46}'...'\\u{FB4E}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9718:20\n     |\n9718 |         '\\u{1D15E}'...'\\u{1D164}' => No,\n     |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9719:20\n     |\n9719 |         '\\u{1D1BB}'...'\\u{1D1C0}' => No,\n     |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9720:20\n     |\n9720 |         '\\u{2F800}'...'\\u{2FA1D}' => No,\n     |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9721:19\n     |\n9721 |         '\\u{0300}'...'\\u{0304}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9722:19\n     |\n9722 |         '\\u{0306}'...'\\u{030C}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9725:19\n     |\n9725 |         '\\u{0313}'...'\\u{0314}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9727:19\n     |\n9727 |         '\\u{0323}'...'\\u{0328}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9728:19\n     |\n9728 |         '\\u{032D}'...'\\u{032E}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9729:19\n     |\n9729 |         '\\u{0330}'...'\\u{0331}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9733:19\n     |\n9733 |         '\\u{0653}'...'\\u{0655}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9744:19\n     |\n9744 |         '\\u{0CD5}'...'\\u{0CD6}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9751:19\n     |\n9751 |         '\\u{1161}'...'\\u{1175}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9752:19\n     |\n9752 |         '\\u{11A8}'...'\\u{11C2}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9754:19\n     |\n9754 |         '\\u{3099}'...'\\u{309A}' => Maybe,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9770:19\n     |\n9770 |         '\\u{00C0}'...'\\u{00C5}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9771:19\n     |\n9771 |         '\\u{00C7}'...'\\u{00CF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9772:19\n     |\n9772 |         '\\u{00D1}'...'\\u{00D6}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9773:19\n     |\n9773 |         '\\u{00D9}'...'\\u{00DD}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9774:19\n     |\n9774 |         '\\u{00E0}'...'\\u{00E5}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9775:19\n     |\n9775 |         '\\u{00E7}'...'\\u{00EF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9776:19\n     |\n9776 |         '\\u{00F1}'...'\\u{00F6}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9777:19\n     |\n9777 |         '\\u{00F9}'...'\\u{00FD}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9778:19\n     |\n9778 |         '\\u{00FF}'...'\\u{010F}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9779:19\n     |\n9779 |         '\\u{0112}'...'\\u{0125}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9780:19\n     |\n9780 |         '\\u{0128}'...'\\u{0130}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9781:19\n     |\n9781 |         '\\u{0134}'...'\\u{0137}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9782:19\n     |\n9782 |         '\\u{0139}'...'\\u{013E}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9783:19\n     |\n9783 |         '\\u{0143}'...'\\u{0148}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9784:19\n     |\n9784 |         '\\u{014C}'...'\\u{0151}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9785:19\n     |\n9785 |         '\\u{0154}'...'\\u{0165}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9786:19\n     |\n9786 |         '\\u{0168}'...'\\u{017E}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9787:19\n     |\n9787 |         '\\u{01A0}'...'\\u{01A1}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9788:19\n     |\n9788 |         '\\u{01AF}'...'\\u{01B0}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9789:19\n     |\n9789 |         '\\u{01CD}'...'\\u{01DC}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9790:19\n     |\n9790 |         '\\u{01DE}'...'\\u{01E3}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9791:19\n     |\n9791 |         '\\u{01E6}'...'\\u{01F0}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9792:19\n     |\n9792 |         '\\u{01F4}'...'\\u{01F5}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9793:19\n     |\n9793 |         '\\u{01F8}'...'\\u{021B}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9794:19\n     |\n9794 |         '\\u{021E}'...'\\u{021F}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9795:19\n     |\n9795 |         '\\u{0226}'...'\\u{0233}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9796:19\n     |\n9796 |         '\\u{0340}'...'\\u{0341}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9797:19\n     |\n9797 |         '\\u{0343}'...'\\u{0344}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9803:19\n     |\n9803 |         '\\u{0388}'...'\\u{038A}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9805:19\n     |\n9805 |         '\\u{038E}'...'\\u{0390}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9806:19\n     |\n9806 |         '\\u{03AA}'...'\\u{03B0}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9807:19\n     |\n9807 |         '\\u{03CA}'...'\\u{03CE}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9808:19\n     |\n9808 |         '\\u{03D3}'...'\\u{03D4}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9809:19\n     |\n9809 |         '\\u{0400}'...'\\u{0401}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9812:19\n     |\n9812 |         '\\u{040C}'...'\\u{040E}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9815:19\n     |\n9815 |         '\\u{0450}'...'\\u{0451}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9818:19\n     |\n9818 |         '\\u{045C}'...'\\u{045E}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9819:19\n     |\n9819 |         '\\u{0476}'...'\\u{0477}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9820:19\n     |\n9820 |         '\\u{04C1}'...'\\u{04C2}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9821:19\n     |\n9821 |         '\\u{04D0}'...'\\u{04D3}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9822:19\n     |\n9822 |         '\\u{04D6}'...'\\u{04D7}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9823:19\n     |\n9823 |         '\\u{04DA}'...'\\u{04DF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9824:19\n     |\n9824 |         '\\u{04E2}'...'\\u{04E7}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9825:19\n     |\n9825 |         '\\u{04EA}'...'\\u{04F5}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9826:19\n     |\n9826 |         '\\u{04F8}'...'\\u{04F9}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9827:19\n     |\n9827 |         '\\u{0622}'...'\\u{0626}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9834:19\n     |\n9834 |         '\\u{0958}'...'\\u{095F}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9835:19\n     |\n9835 |         '\\u{09CB}'...'\\u{09CC}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9836:19\n     |\n9836 |         '\\u{09DC}'...'\\u{09DD}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9840:19\n     |\n9840 |         '\\u{0A59}'...'\\u{0A5B}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9843:19\n     |\n9843 |         '\\u{0B4B}'...'\\u{0B4C}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9844:19\n     |\n9844 |         '\\u{0B5C}'...'\\u{0B5D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9846:19\n     |\n9846 |         '\\u{0BCA}'...'\\u{0BCC}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9849:19\n     |\n9849 |         '\\u{0CC7}'...'\\u{0CC8}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9850:19\n     |\n9850 |         '\\u{0CCA}'...'\\u{0CCB}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9851:19\n     |\n9851 |         '\\u{0D4A}'...'\\u{0D4C}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9853:19\n     |\n9853 |         '\\u{0DDC}'...'\\u{0DDE}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9861:19\n     |\n9861 |         '\\u{0F75}'...'\\u{0F76}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9879:19\n     |\n9879 |         '\\u{1B40}'...'\\u{1B41}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9881:19\n     |\n9881 |         '\\u{1E00}'...'\\u{1E99}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9883:19\n     |\n9883 |         '\\u{1EA0}'...'\\u{1EF9}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9884:19\n     |\n9884 |         '\\u{1F00}'...'\\u{1F15}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9885:19\n     |\n9885 |         '\\u{1F18}'...'\\u{1F1D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9886:19\n     |\n9886 |         '\\u{1F20}'...'\\u{1F45}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9887:19\n     |\n9887 |         '\\u{1F48}'...'\\u{1F4D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9888:19\n     |\n9888 |         '\\u{1F50}'...'\\u{1F57}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9892:19\n     |\n9892 |         '\\u{1F5F}'...'\\u{1F7D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9893:19\n     |\n9893 |         '\\u{1F80}'...'\\u{1FB4}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9894:19\n     |\n9894 |         '\\u{1FB6}'...'\\u{1FBC}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9897:19\n     |\n9897 |         '\\u{1FC2}'...'\\u{1FC4}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9898:19\n     |\n9898 |         '\\u{1FC6}'...'\\u{1FCC}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9899:19\n     |\n9899 |         '\\u{1FCD}'...'\\u{1FCF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9900:19\n     |\n9900 |         '\\u{1FD0}'...'\\u{1FD3}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9901:19\n     |\n9901 |         '\\u{1FD6}'...'\\u{1FDB}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9902:19\n     |\n9902 |         '\\u{1FDD}'...'\\u{1FDF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9903:19\n     |\n9903 |         '\\u{1FE0}'...'\\u{1FEC}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9904:19\n     |\n9904 |         '\\u{1FED}'...'\\u{1FEF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9905:19\n     |\n9905 |         '\\u{1FF2}'...'\\u{1FF4}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9906:19\n     |\n9906 |         '\\u{1FF6}'...'\\u{1FFC}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9908:19\n     |\n9908 |         '\\u{2000}'...'\\u{2001}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9910:19\n     |\n9910 |         '\\u{212A}'...'\\u{212B}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9911:19\n     |\n9911 |         '\\u{219A}'...'\\u{219B}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9914:19\n     |\n9914 |         '\\u{21CE}'...'\\u{21CF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9926:19\n     |\n9926 |         '\\u{226D}'...'\\u{2271}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9927:19\n     |\n9927 |         '\\u{2274}'...'\\u{2275}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9928:19\n     |\n9928 |         '\\u{2278}'...'\\u{2279}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9929:19\n     |\n9929 |         '\\u{2280}'...'\\u{2281}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9930:19\n     |\n9930 |         '\\u{2284}'...'\\u{2285}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9931:19\n     |\n9931 |         '\\u{2288}'...'\\u{2289}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9932:19\n     |\n9932 |         '\\u{22AC}'...'\\u{22AF}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9933:19\n     |\n9933 |         '\\u{22E0}'...'\\u{22E3}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9934:19\n     |\n9934 |         '\\u{22EA}'...'\\u{22ED}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9953:19\n     |\n9953 |         '\\u{3070}'...'\\u{3071}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9954:19\n     |\n9954 |         '\\u{3073}'...'\\u{3074}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9955:19\n     |\n9955 |         '\\u{3076}'...'\\u{3077}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9956:19\n     |\n9956 |         '\\u{3079}'...'\\u{307A}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9957:19\n     |\n9957 |         '\\u{307C}'...'\\u{307D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9975:19\n     |\n9975 |         '\\u{30D0}'...'\\u{30D1}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9976:19\n     |\n9976 |         '\\u{30D3}'...'\\u{30D4}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9977:19\n     |\n9977 |         '\\u{30D6}'...'\\u{30D7}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9978:19\n     |\n9978 |         '\\u{30D9}'...'\\u{30DA}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9979:19\n     |\n9979 |         '\\u{30DC}'...'\\u{30DD}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9981:19\n     |\n9981 |         '\\u{30F7}'...'\\u{30FA}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9983:19\n     |\n9983 |         '\\u{AC00}'...'\\u{D7A3}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9984:19\n     |\n9984 |         '\\u{F900}'...'\\u{FA0D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9987:19\n     |\n9987 |         '\\u{FA15}'...'\\u{FA1E}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9990:19\n     |\n9990 |         '\\u{FA25}'...'\\u{FA26}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9991:19\n     |\n9991 |         '\\u{FA2A}'...'\\u{FA6D}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9992:19\n     |\n9992 |         '\\u{FA70}'...'\\u{FAD9}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9995:19\n     |\n9995 |         '\\u{FB2A}'...'\\u{FB36}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9996:19\n     |\n9996 |         '\\u{FB38}'...'\\u{FB3C}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9998:19\n     |\n9998 |         '\\u{FB40}'...'\\u{FB41}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n    --> src/tables.rs:9999:19\n     |\n9999 |         '\\u{FB43}'...'\\u{FB44}' => No,\n     |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10000:19\n      |\n10000 |         '\\u{FB46}'...'\\u{FB4E}' => No,\n      |                   ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10004:20\n      |\n10004 |         '\\u{1112E}'...'\\u{1112F}' => No,\n      |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10005:20\n      |\n10005 |         '\\u{1134B}'...'\\u{1134C}' => No,\n      |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10006:20\n      |\n10006 |         '\\u{114BB}'...'\\u{114BC}' => No,\n      |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10008:20\n      |\n10008 |         '\\u{115BA}'...'\\u{115BB}' => No,\n      |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10009:20\n      |\n10009 |         '\\u{1D15E}'...'\\u{1D164}' => No,\n      |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10010:20\n      |\n10010 |         '\\u{1D1BB}'...'\\u{1D1C0}' => No,\n      |                    ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n     --> src/tables.rs:10011:20\n      |\n10011 |         '\\u{2F800}'...'\\u{2FA1D}' => No,\n      |                    ^^^ help: use `..=` for an inclusive range\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<I as std::marker::Sized>))], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::vec::Vec<(u8, char)> as std::ops::IndexMut<std::ops::RangeFrom<usize>>>)) } }\n- dep-node: evaluate_obligation(21ea1ac12824b80b-8e5f4dc2dcb2265b)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp5oLrLh/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `unicode-normalization`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=1041786663;;instructions:u;173099547;100.00;1.75;insn per cycle\n594855478;;cycles:u;173099547;100.00;3.436;GHz\n173.101200;;task-clock;173101200;100.00;0.908;CPUs utilized\n173.100302;;cpu-clock;173101200;100.00;0.908;CPUs utilized\n13968;;faults;173101200;100.00;0.081;M/sec\n\n"},"unify-linearly":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking issue-32062-equality-relations-complexity v0.1.0 (/tmp/.tmp3XQgaL)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: () } }\n- dep-node: implied_outlives_bounds(6b7bfad94e52d1d1-8ac435f52469f5d1)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmp3XQgaL/self-profile-output -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `issue-32062-equality-relations-complexity`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=242538433;;instructions:u;55340900;100.00;1.45;insn per cycle\n167265914;;cycles:u;55340900;100.00;3.023;GHz\n55.335169;;task-clock;55335169;100.00;0.997;CPUs utilized\n55.334236;;cpu-clock;55335169;100.00;0.997;CPUs utilized\n6257;;faults;55335169;100.00;0.113;M/sec\n\n"},"unused-warnings":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking issue-43572-unused-uses v0.1.0 (/tmp/.tmpTAJQYa)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: () } }\n- dep-node: implied_outlives_bounds(6b7bfad94e52d1d1-8ac435f52469f5d1)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpTAJQYa/self-profile-output -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `issue-43572-unused-uses`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=1694172514;;instructions:u;332574875;100.00;1.40;insn per cycle\n1207033075;;cycles:u;332574875;100.00;3.630;GHz\n332.552063;;task-clock;332552063;100.00;1.000;CPUs utilized\n332.550787;;cpu-clock;332552063;100.00;1.000;CPUs utilized\n24955;;faults;332552063;100.00;0.075;M/sec\n\n"},"webrender":{"Err":"expected success, got exit code: 101\n\nstderr=warning: /tmp/.tmpIZZa46/Cargo.toml: unused manifest key: patch.crates-io.serde_derive.feature\nwarning: /tmp/.tmpIZZa46/Cargo.toml: unused manifest key: workspace.license\n   Compiling webrender v0.57.2 (/tmp/.tmpIZZa46/webrender)\n    Checking webrender_api v0.57.2 (/tmp/.tmpIZZa46/webrender_api)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<std::fs::File as std::io::Write>)) } }\n- dep-node: evaluate_obligation(256481f55f7ece9-f8956dfba55c5091)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type bin\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `webrender`.\nwarning: build failed, waiting for other jobs to finish...\nwarning: trait objects without an explicit `dyn` are deprecated\n    --> webrender_api/src/api.rs:1114:28\n     |\n1114 |     fn clone(&self) -> Box<RenderNotifier>;\n     |                            ^^^^^^^^^^^^^^ help: use `dyn`: `dyn RenderNotifier`\n     |\n     = note: `#[warn(bare_trait_objects)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> webrender_api/src/font.rs:121:14\n    |\n121 |             1...2 => SubpixelOffset::Quarter,\n    |              ^^^ help: use `..=` for an inclusive range\n    |\n    = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default\n\nwarning: `...` range patterns are deprecated\n   --> webrender_api/src/font.rs:122:14\n    |\n122 |             3...4 => SubpixelOffset::Half,\n    |              ^^^ help: use `..=` for an inclusive range\n\nwarning: `...` range patterns are deprecated\n   --> webrender_api/src/font.rs:123:14\n    |\n123 |             5...6 => SubpixelOffset::ThreeQuarters,\n    |              ^^^ help: use `..=` for an inclusive range\n\nwarning: trait objects without an explicit `dyn` are deprecated\n   --> webrender_api/src/image.rs:181:20\n    |\n181 |         services: &BlobImageResources,\n    |                    ^^^^^^^^^^^^^^^^^^ help: use `dyn`: `dyn BlobImageResources`\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: u8 } }\n- dep-node: implied_outlives_bounds(6b0d2c4420ab2e8f-3dc851249c52fbe7)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: u32 } }\n- dep-node: implied_outlives_bounds(c7e287b4e78513c3-afb381a149269221)', src/librustc/ty/query/plumbing.rs:499:9\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: UserFacing, def_id: None }, value: usize } }\n- dep-node: implied_outlives_bounds(8b311dff2da5d17-4d804991a2a9316c)', src/librustc/ty/query/plumbing.rs:499:9\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nerror: Could not compile `webrender_api`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=\n"},"wg-grammar":{"Err":"expected success, got exit code: 101\n\nstderr=    Checking rust-grammar v0.1.0 (/tmp/.tmpYLPG4l)\nthread 'rustc' panicked at 'forcing query with already existing `DepNode`\n- query-key: Canonical { max_universe: U0, variables: [], value: ParamEnvAnd { param_env: ParamEnv { caller_bounds: [Binder(TraitPredicate(<T as std::marker::Sized>)), Binder(TraitPredicate(<I as gll::runtime::Input>)), Binder(TraitPredicate(<I as std::marker::Sized>))], reveal: UserFacing, def_id: None }, value: Binder(TraitPredicate(<parse::_P as gll::runtime::ParseNodeKind>)) } }\n- dep-node: evaluate_obligation(84934b4f6c902ae9-6b8d89b3d0322c39)', src/librustc/ty/query/plumbing.rs:499:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\n\nerror: internal compiler error: unexpected panic\n\nnote: the compiler unexpectedly panicked. this is a bug.\n\nnote: we would appreciate a bug report: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md#bug-reports\n\nnote: rustc 1.40.0-nightly (e302f39c5 2019-10-21) running on x86_64-unknown-linux-gnu\n\nnote: compiler flags: -Z self-profile=/tmp/.tmpYLPG4l/self-profile-output -C debuginfo=2 -C incremental --crate-type lib\n\nnote: some of the compiler flags provided by cargo are hidden\n\nthread 'main' panicked at 'assertion failed: status.success()', collector/src/bin/rustc-fake.rs:54:17\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.\nerror: Could not compile `rust-grammar`.\n\nTo learn more, run the command again with --verbose.\n\n\n stdout=981895455;;instructions:u;171987832;100.00;1.61;insn per cycle\n608108327;;cycles:u;171987832;100.00;3.536;GHz\n171.992628;;task-clock;171992628;100.00;0.907;CPUs utilized\n171.992878;;cpu-clock;171992628;100.00;0.907;CPUs utilized\n11009;;faults;171992628;100.00;0.064;M/sec\n\n"}},"triple":"x86_64-unknown-linux-gnu"}