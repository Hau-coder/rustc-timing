{"commit":{"sha":"aa99abeb262307d5e9aa11a792312fd620b7f89a","date":"2019-04-14T19:47:40+00:00"},"benchmarks":{"cargo":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":34018717872.0},{"name":"faults","cnt":79475.0},{"name":"cpu-clock","cnt":7176.153773},{"name":"max-rss","cnt":423284.0},{"name":"cycles:u","cnt":28211114858.0},{"name":"task-clock","cnt":7176.151509},{"name":"wall-time","cnt":7.203666328}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":41539465717.0},{"name":"max-rss","cnt":561524.0},{"name":"task-clock","cnt":8727.534056},{"name":"wall-time","cnt":8.745975908},{"name":"faults","cnt":113773.0},{"name":"cycles:u","cnt":34090475864.0},{"name":"cpu-clock","cnt":8727.536701}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.398533182},{"name":"cpu-clock","cnt":2462.389949},{"name":"cycles:u","cnt":9207406785.0},{"name":"task-clock","cnt":2462.390699},{"name":"max-rss","cnt":547004.0},{"name":"instructions:u","cnt":11776437624.0},{"name":"faults","cnt":111484.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":10632282233.0},{"name":"faults","cnt":114782.0},{"name":"instructions:u","cnt":13255779747.0},{"name":"cpu-clock","cnt":2812.405953},{"name":"max-rss","cnt":567156.0},{"name":"wall-time","cnt":2.749366315},{"name":"task-clock","cnt":2812.406296}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":179551113060.0},{"name":"max-rss","cnt":1614308.0},{"name":"instructions:u","cnt":180811762261.0},{"name":"task-clock","cnt":47581.336099},{"name":"faults","cnt":408605.0},{"name":"cpu-clock","cnt":47581.370911},{"name":"wall-time","cnt":18.552445808}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":206636780652.0},{"name":"cpu-clock","cnt":53464.574873},{"name":"task-clock","cnt":53464.492688},{"name":"wall-time","cnt":21.839649117},{"name":"faults","cnt":436801.0},{"name":"cycles:u","cnt":201691974372.0},{"name":"max-rss","cnt":1528880.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":4387.776114},{"name":"task-clock","cnt":4387.977357},{"name":"cycles:u","cnt":15765784833.0},{"name":"faults","cnt":201081.0},{"name":"max-rss","cnt":1108512.0},{"name":"instructions:u","cnt":19123648855.0},{"name":"wall-time","cnt":4.274450721}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":337413.0},{"name":"cycles:u","cnt":54768957546.0},{"name":"instructions:u","cnt":59733472947.0},{"name":"task-clock","cnt":14769.869281},{"name":"wall-time","cnt":7.659855465},{"name":"max-rss","cnt":1576824.0},{"name":"cpu-clock","cnt":14769.748075}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":1367192.0},{"name":"cycles:u","cnt":808322319890.0},{"name":"wall-time","cnt":38.133069821},{"name":"instructions:u","cnt":630782033691.0},{"name":"cpu-clock","cnt":214119.481934},{"name":"task-clock","cnt":214119.355155},{"name":"faults","cnt":430691.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":444709.0},{"name":"instructions:u","cnt":753290166413.0},{"name":"max-rss","cnt":1314020.0},{"name":"cpu-clock","cnt":257891.568419},{"name":"task-clock","cnt":257891.135202},{"name":"wall-time","cnt":43.171911784},{"name":"cycles:u","cnt":972193277968.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3605.775384},{"name":"faults","cnt":202578.0},{"name":"instructions:u","cnt":14935624259.0},{"name":"cycles:u","cnt":13026335565.0},{"name":"max-rss","cnt":959648.0},{"name":"wall-time","cnt":3.311857793},{"name":"task-clock","cnt":3605.999535}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":1250340.0},{"name":"instructions:u","cnt":456668628432.0},{"name":"task-clock","cnt":152694.47213},{"name":"cpu-clock","cnt":152694.74688},{"name":"faults","cnt":375379.0},{"name":"wall-time","cnt":24.414159959},{"name":"cycles:u","cnt":574736415292.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"cargo"}},"clap-rs":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":18897639169.0},{"name":"cpu-clock","cnt":3672.264606},{"name":"max-rss","cnt":256576.0},{"name":"task-clock","cnt":3672.263962},{"name":"wall-time","cnt":3.706888617},{"name":"cycles:u","cnt":14416156234.0},{"name":"faults","cnt":47440.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.300463098},{"name":"instructions:u","cnt":39600371058.0},{"name":"faults","cnt":93644.0},{"name":"task-clock","cnt":6264.765762},{"name":"cpu-clock","cnt":6264.775173},{"name":"max-rss","cnt":440440.0},{"name":"cycles:u","cnt":24465640242.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":184578.0},{"name":"instructions:u","cnt":10407405402.0},{"name":"cpu-clock","cnt":1824.982389},{"name":"max-rss","cnt":821956.0},{"name":"cycles:u","cnt":6325137925.0},{"name":"wall-time","cnt":1.825195886},{"name":"task-clock","cnt":1824.981519}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":185083.0},{"name":"task-clock","cnt":2623.824744},{"name":"cycles:u","cnt":9536649787.0},{"name":"cpu-clock","cnt":2623.834686},{"name":"max-rss","cnt":830888.0},{"name":"instructions:u","cnt":14126263761.0},{"name":"wall-time","cnt":2.625246335}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":15401.076106},{"name":"cycles:u","cnt":58812315749.0},{"name":"task-clock","cnt":15401.077714},{"name":"faults","cnt":245764.0},{"name":"instructions:u","cnt":71596067462.0},{"name":"max-rss","cnt":982908.0},{"name":"wall-time","cnt":9.256188073}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":966652.0},{"name":"faults","cnt":236062.0},{"name":"instructions:u","cnt":96412604684.0},{"name":"wall-time","cnt":12.040226924},{"name":"cycles:u","cnt":78688934256.0},{"name":"task-clock","cnt":20639.734202},{"name":"cpu-clock","cnt":20639.773544}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":8576218437.0},{"name":"cpu-clock","cnt":2470.116902},{"name":"faults","cnt":221171.0},{"name":"task-clock","cnt":2470.217383},{"name":"instructions:u","cnt":13089764710.0},{"name":"max-rss","cnt":1001128.0},{"name":"wall-time","cnt":2.427050313}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":42685861529.0},{"name":"faults","cnt":346987.0},{"name":"instructions:u","cnt":51263824368.0},{"name":"task-clock","cnt":11416.393587},{"name":"max-rss","cnt":1443848.0},{"name":"wall-time","cnt":7.5311105},{"name":"cpu-clock","cnt":11416.343639}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":54573.915114},{"name":"faults","cnt":148093.0},{"name":"cycles:u","cnt":209885007606.0},{"name":"max-rss","cnt":485072.0},{"name":"wall-time","cnt":25.821346418},{"name":"instructions:u","cnt":203114373709.0},{"name":"task-clock","cnt":54573.911217}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":662464.0},{"name":"instructions:u","cnt":232555250105.0},{"name":"wall-time","cnt":26.821451},{"name":"task-clock","cnt":63082.177941},{"name":"cpu-clock","cnt":63082.246688},{"name":"faults","cnt":200296.0},{"name":"cycles:u","cnt":241520100079.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":914476.0},{"name":"cpu-clock","cnt":2391.70931},{"name":"wall-time","cnt":2.336540897},{"name":"task-clock","cnt":2391.807581},{"name":"cycles:u","cnt":8417919647.0},{"name":"faults","cnt":205351.0},{"name":"instructions:u","cnt":12902844951.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":126511065282.0},{"name":"task-clock","cnt":34339.835924},{"name":"wall-time","cnt":13.407106961},{"name":"max-rss","cnt":1173184.0},{"name":"faults","cnt":274327.0},{"name":"cycles:u","cnt":130276324608.0},{"name":"cpu-clock","cnt":34339.841348}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"clap-rs"}},"coercions":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":789.057656},{"name":"wall-time","cnt":0.808741386},{"name":"cpu-clock","cnt":789.056231},{"name":"faults","cnt":28180.0},{"name":"max-rss","cnt":185324.0},{"name":"instructions:u","cnt":5429248363.0},{"name":"cycles:u","cnt":3006774178.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"faults","cnt":28890.0},{"name":"cycles:u","cnt":3828941950.0},{"name":"instructions:u","cnt":7123778944.0},{"name":"max-rss","cnt":191020.0},{"name":"task-clock","cnt":998.613552},{"name":"wall-time","cnt":1.018398162},{"name":"cpu-clock","cnt":998.612331}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":265.91076},{"name":"cycles:u","cnt":925456922.0},{"name":"instructions:u","cnt":1731068833.0},{"name":"cpu-clock","cnt":265.909667},{"name":"faults","cnt":23404.0},{"name":"max-rss","cnt":156700.0},{"name":"wall-time","cnt":0.300641061}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1876034885.0},{"name":"task-clock","cnt":288.328951},{"name":"cpu-clock","cnt":288.327223},{"name":"faults","cnt":23512.0},{"name":"max-rss","cnt":171572.0},{"name":"cycles:u","cnt":1013174118.0},{"name":"wall-time","cnt":0.306180932}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":201368.0},{"name":"instructions:u","cnt":7139371674.0},{"name":"wall-time","cnt":1.019699882},{"name":"cpu-clock","cnt":1001.716317},{"name":"cycles:u","cnt":3804681628.0},{"name":"faults","cnt":31106.0},{"name":"task-clock","cnt":1001.71713}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"task-clock","cnt":1135.146562},{"name":"faults","cnt":55322.0},{"name":"instructions:u","cnt":7243065886.0},{"name":"cpu-clock","cnt":1135.139378},{"name":"wall-time","cnt":1.159428822},{"name":"cycles:u","cnt":4145343962.0},{"name":"max-rss","cnt":272180.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":1364.752725},{"name":"instructions:u","cnt":9007395608.0},{"name":"wall-time","cnt":1.338382393},{"name":"cycles:u","cnt":5014920184.0},{"name":"max-rss","cnt":290832.0},{"name":"faults","cnt":59785.0},{"name":"cpu-clock","cnt":1364.756179}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2234885726.0},{"name":"task-clock","cnt":379.310136},{"name":"cycles:u","cnt":1226317064.0},{"name":"wall-time","cnt":0.411300693},{"name":"max-rss","cnt":175232.0},{"name":"faults","cnt":32903.0},{"name":"cpu-clock","cnt":379.309536}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":651.852577},{"name":"max-rss","cnt":273308.0},{"name":"task-clock","cnt":651.84734},{"name":"instructions:u","cnt":3758900522.0},{"name":"faults","cnt":55106.0},{"name":"cycles:u","cnt":2203594340.0},{"name":"wall-time","cnt":0.58530261}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1370.198048},{"name":"max-rss","cnt":287252.0},{"name":"faults","cnt":61633.0},{"name":"instructions:u","cnt":8916953172.0},{"name":"cycles:u","cnt":5026516997.0},{"name":"wall-time","cnt":1.324889982},{"name":"cpu-clock","cnt":1370.193548}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}},{"stats":[{"name":"max-rss","cnt":206728.0},{"name":"cpu-clock","cnt":926.006897},{"name":"faults","cnt":35327.0},{"name":"instructions:u","cnt":6184791081.0},{"name":"cycles:u","cnt":3464082810.0},{"name":"task-clock","cnt":925.99753},{"name":"wall-time","cnt":0.950370343}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":1137.51747},{"name":"task-clock","cnt":1137.521765},{"name":"wall-time","cnt":1.144770251},{"name":"instructions:u","cnt":7926527168.0},{"name":"faults","cnt":36937.0},{"name":"max-rss","cnt":213288.0},{"name":"cycles:u","cnt":4282132572.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":30194.0},{"name":"cpu-clock","cnt":329.530959},{"name":"wall-time","cnt":0.361078954},{"name":"max-rss","cnt":174624.0},{"name":"task-clock","cnt":329.536342},{"name":"instructions:u","cnt":2044492479.0},{"name":"cycles:u","cnt":1094317236.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":435.539181},{"name":"task-clock","cnt":435.54255},{"name":"instructions:u","cnt":2638810208.0},{"name":"faults","cnt":32523.0},{"name":"max-rss","cnt":198356.0},{"name":"cycles:u","cnt":1490864850.0},{"name":"wall-time","cnt":0.427577687}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":4295143009.0},{"name":"instructions:u","cnt":7855432902.0},{"name":"cpu-clock","cnt":1145.267175},{"name":"task-clock","cnt":1145.289804},{"name":"wall-time","cnt":1.136146035},{"name":"faults","cnt":40612.0},{"name":"max-rss","cnt":218276.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add static arr item","path":"1-add-static-arr-item.patch"}}}],"name":"coercions"}},"cranelift-codegen":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":6.048974729},{"name":"cycles:u","cnt":23461114894.0},{"name":"task-clock","cnt":6002.559407},{"name":"instructions:u","cnt":30303109727.0},{"name":"cpu-clock","cnt":6002.561145},{"name":"max-rss","cnt":516792.0},{"name":"faults","cnt":106335.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7184.16137},{"name":"instructions:u","cnt":36627638387.0},{"name":"wall-time","cnt":7.219124154},{"name":"task-clock","cnt":7184.160258},{"name":"faults","cnt":135346.0},{"name":"cycles:u","cnt":28016309247.0},{"name":"max-rss","cnt":605300.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":7241213227.0},{"name":"faults","cnt":86836.0},{"name":"cycles:u","cnt":5570560951.0},{"name":"cpu-clock","cnt":1506.631298},{"name":"wall-time","cnt":1.475651272},{"name":"max-rss","cnt":436540.0},{"name":"task-clock","cnt":1506.623173}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":9.258798659},{"name":"instructions:u","cnt":69432601671.0},{"name":"cycles:u","cnt":59738098247.0},{"name":"faults","cnt":169488.0},{"name":"cpu-clock","cnt":15612.520364},{"name":"max-rss","cnt":770780.0},{"name":"task-clock","cnt":15612.487956}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":86042353967.0},{"name":"max-rss","cnt":841340.0},{"name":"wall-time","cnt":11.432705627},{"name":"cycles:u","cnt":71687452914.0},{"name":"task-clock","cnt":18833.03069},{"name":"cpu-clock","cnt":18833.05294},{"name":"faults","cnt":199886.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2459.248411},{"name":"faults","cnt":141415.0},{"name":"cycles:u","cnt":8699728999.0},{"name":"wall-time","cnt":2.367488545},{"name":"max-rss","cnt":702240.0},{"name":"instructions:u","cnt":12243894787.0},{"name":"task-clock","cnt":2459.412917}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":70317.60742},{"name":"wall-time","cnt":20.16076747},{"name":"faults","cnt":277496.0},{"name":"cpu-clock","cnt":70317.65432},{"name":"instructions:u","cnt":226513173166.0},{"name":"max-rss","cnt":1147416.0},{"name":"cycles:u","cnt":266712556059.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":260844513323.0},{"name":"cpu-clock","cnt":83500.428148},{"name":"wall-time","cnt":21.00412712},{"name":"max-rss","cnt":1099368.0},{"name":"task-clock","cnt":83500.33679},{"name":"faults","cnt":290463.0},{"name":"cycles:u","cnt":315216801730.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":2439.807089},{"name":"task-clock","cnt":2439.958262},{"name":"instructions:u","cnt":12089654495.0},{"name":"max-rss","cnt":725928.0},{"name":"faults","cnt":143844.0},{"name":"wall-time","cnt":2.301023883},{"name":"cycles:u","cnt":8606046413.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"cranelift-codegen"}},"crates.io":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":65374.0},{"name":"task-clock","cnt":6262.826673},{"name":"wall-time","cnt":6.29984311},{"name":"cycles:u","cnt":24608987042.0},{"name":"max-rss","cnt":377864.0},{"name":"instructions:u","cnt":32473681572.0},{"name":"cpu-clock","cnt":6262.828455}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":539004.0},{"name":"task-clock","cnt":7696.294764},{"name":"wall-time","cnt":7.736746024},{"name":"cycles:u","cnt":30108746744.0},{"name":"faults","cnt":105982.0},{"name":"cpu-clock","cnt":7696.297609},{"name":"instructions:u","cnt":38863033595.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":104571.0},{"name":"cycles:u","cnt":7136190806.0},{"name":"instructions:u","cnt":9194820843.0},{"name":"max-rss","cnt":529948.0},{"name":"task-clock","cnt":1957.077936},{"name":"wall-time","cnt":1.883215341},{"name":"cpu-clock","cnt":1957.075951}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2159.821004},{"name":"wall-time","cnt":2.08525466},{"name":"instructions:u","cnt":10165387081.0},{"name":"faults","cnt":106419.0},{"name":"task-clock","cnt":2159.822855},{"name":"max-rss","cnt":542996.0},{"name":"cycles:u","cnt":8045922121.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":257981.0},{"name":"cpu-clock","cnt":27708.179229},{"name":"task-clock","cnt":27708.165193},{"name":"wall-time","cnt":12.95896658},{"name":"max-rss","cnt":1132268.0},{"name":"instructions:u","cnt":116353641950.0},{"name":"cycles:u","cnt":105099220600.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1194380.0},{"name":"instructions:u","cnt":130727910789.0},{"name":"wall-time","cnt":14.84808638},{"name":"cycles:u","cnt":120663810849.0},{"name":"faults","cnt":271255.0},{"name":"task-clock","cnt":31893.274269},{"name":"cpu-clock","cnt":31893.408843}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3245.932134},{"name":"instructions:u","cnt":14212775737.0},{"name":"faults","cnt":161679.0},{"name":"task-clock","cnt":3246.156022},{"name":"cycles:u","cnt":11553038055.0},{"name":"wall-time","cnt":3.079132798},{"name":"max-rss","cnt":910476.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":16051888216.0},{"name":"instructions:u","cnt":19476027979.0},{"name":"task-clock","cnt":4401.234451},{"name":"cpu-clock","cnt":4401.034235},{"name":"faults","cnt":187123.0},{"name":"max-rss","cnt":1008584.0},{"name":"wall-time","cnt":3.753674822}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":115394.32281},{"name":"wall-time","cnt":23.833576554},{"name":"faults","cnt":240109.0},{"name":"instructions:u","cnt":351175127400.0},{"name":"cpu-clock","cnt":115394.414133},{"name":"cycles:u","cnt":436341797039.0},{"name":"max-rss","cnt":972780.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":131580.689841},{"name":"faults","cnt":269402.0},{"name":"max-rss","cnt":1057436.0},{"name":"task-clock","cnt":131580.484272},{"name":"cycles:u","cnt":496619068865.0},{"name":"instructions:u","cnt":395757905497.0},{"name":"wall-time","cnt":25.483246567}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":2.924864083},{"name":"max-rss","cnt":810412.0},{"name":"instructions:u","cnt":13873034439.0},{"name":"cycles:u","cnt":11437804274.0},{"name":"cpu-clock","cnt":3158.171997},{"name":"task-clock","cnt":3158.378524},{"name":"faults","cnt":163750.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":58680769972.0},{"name":"instructions:u","cnt":58901688192.0},{"name":"wall-time","cnt":6.243229236},{"name":"task-clock","cnt":15645.452877},{"name":"faults","cnt":201570.0},{"name":"max-rss","cnt":952916.0},{"name":"cpu-clock","cnt":15645.355857}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"crates.io"}},"ctfe-stress-2":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":7.854131932},{"name":"max-rss","cnt":250868.0},{"name":"cycles:u","cnt":31062555324.0},{"name":"cpu-clock","cnt":7835.812341},{"name":"instructions:u","cnt":67400986334.0},{"name":"task-clock","cnt":7835.814318},{"name":"faults","cnt":42946.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":91161470493.0},{"name":"max-rss","cnt":501860.0},{"name":"cycles:u","cnt":38870770008.0},{"name":"faults","cnt":107641.0},{"name":"wall-time","cnt":9.945210463},{"name":"cpu-clock","cnt":9907.555809},{"name":"task-clock","cnt":9907.557642}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":554292.0},{"name":"cycles:u","cnt":2581134765.0},{"name":"cpu-clock","cnt":860.649809},{"name":"wall-time","cnt":0.895614691},{"name":"task-clock","cnt":860.638231},{"name":"faults","cnt":121449.0},{"name":"instructions:u","cnt":5652857103.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":31080324322.0},{"name":"wall-time","cnt":7.88606744},{"name":"faults","cnt":43278.0},{"name":"task-clock","cnt":7843.428889},{"name":"max-rss","cnt":254932.0},{"name":"cpu-clock","cnt":7843.426545},{"name":"instructions:u","cnt":67217481982.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":99969992891.0},{"name":"task-clock","cnt":10694.199472},{"name":"cpu-clock","cnt":10694.19828},{"name":"faults","cnt":176262.0},{"name":"max-rss","cnt":761016.0},{"name":"wall-time","cnt":10.728560718},{"name":"cycles:u","cnt":41685056199.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":8397513290.0},{"name":"cpu-clock","cnt":1339.817652},{"name":"cycles:u","cnt":3967806048.0},{"name":"task-clock","cnt":1339.82278},{"name":"faults","cnt":233189.0},{"name":"max-rss","cnt":976488.0},{"name":"wall-time","cnt":1.372822329}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":43401.0},{"name":"cpu-clock","cnt":6547.527562},{"name":"max-rss","cnt":257400.0},{"name":"wall-time","cnt":6.583082039},{"name":"instructions:u","cnt":54803773516.0},{"name":"task-clock","cnt":6547.541115},{"name":"cycles:u","cnt":25913680374.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":175581.0},{"name":"cycles:u","cnt":36149168827.0},{"name":"task-clock","cnt":9312.520439},{"name":"wall-time","cnt":9.344189767},{"name":"max-rss","cnt":764592.0},{"name":"cpu-clock","cnt":9312.517127},{"name":"instructions:u","cnt":86686551699.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3980281637.0},{"name":"wall-time","cnt":1.38197441},{"name":"faults","cnt":233128.0},{"name":"task-clock","cnt":1346.466576},{"name":"cpu-clock","cnt":1346.464388},{"name":"instructions:u","cnt":8396306332.0},{"name":"max-rss","cnt":976268.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ctfe-stress-2"}},"deep-vector":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":287496.0},{"name":"faults","cnt":52387.0},{"name":"cpu-clock","cnt":1100.018395},{"name":"instructions:u","cnt":7002094536.0},{"name":"task-clock","cnt":1100.02008},{"name":"cycles:u","cnt":4115521971.0},{"name":"wall-time","cnt":1.135297597}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.241166388},{"name":"cycles:u","cnt":4580816977.0},{"name":"instructions:u","cnt":8019981931.0},{"name":"faults","cnt":53829.0},{"name":"max-rss","cnt":292792.0},{"name":"task-clock","cnt":1206.728677},{"name":"cpu-clock","cnt":1206.728398}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.398044389},{"name":"max-rss","cnt":185264.0},{"name":"cpu-clock","cnt":360.881956},{"name":"cycles:u","cnt":1284842351.0},{"name":"instructions:u","cnt":2507624811.0},{"name":"task-clock","cnt":360.883542},{"name":"faults","cnt":30711.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":1196.539619},{"name":"max-rss","cnt":290108.0},{"name":"cycles:u","cnt":4539941918.0},{"name":"instructions:u","cnt":8002418575.0},{"name":"wall-time","cnt":1.213743131},{"name":"faults","cnt":52608.0},{"name":"cpu-clock","cnt":1196.538191}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":53808.0},{"name":"max-rss","cnt":297576.0},{"name":"cycles:u","cnt":4531790090.0},{"name":"cpu-clock","cnt":1195.449179},{"name":"task-clock","cnt":1195.44701},{"name":"wall-time","cnt":1.229740905},{"name":"instructions:u","cnt":7979782702.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1682.854681},{"name":"task-clock","cnt":1682.831543},{"name":"faults","cnt":82016.0},{"name":"wall-time","cnt":1.680713369},{"name":"instructions:u","cnt":10135441614.0},{"name":"max-rss","cnt":381192.0},{"name":"cycles:u","cnt":6259974774.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":11525329504.0},{"name":"cycles:u","cnt":6838216741.0},{"name":"cpu-clock","cnt":1835.740463},{"name":"max-rss","cnt":393892.0},{"name":"wall-time","cnt":1.816744036},{"name":"task-clock","cnt":1835.75293},{"name":"faults","cnt":84681.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1618896293.0},{"name":"instructions:u","cnt":3204481057.0},{"name":"max-rss","cnt":220136.0},{"name":"wall-time","cnt":0.504667717},{"name":"faults","cnt":42151.0},{"name":"task-clock","cnt":475.611963},{"name":"cpu-clock","cnt":475.612961}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":83183.0},{"name":"wall-time","cnt":1.777161264},{"name":"task-clock","cnt":1820.746015},{"name":"cpu-clock","cnt":1820.754863},{"name":"max-rss","cnt":389248.0},{"name":"instructions:u","cnt":11549242940.0},{"name":"cycles:u","cnt":6795001338.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1838.917151},{"name":"max-rss","cnt":389860.0},{"name":"task-clock","cnt":1838.916526},{"name":"faults","cnt":83510.0},{"name":"cycles:u","cnt":6865179464.0},{"name":"wall-time","cnt":1.813283291},{"name":"instructions:u","cnt":11543575058.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}},{"stats":[{"name":"instructions:u","cnt":17169535659.0},{"name":"cpu-clock","cnt":3094.272452},{"name":"wall-time","cnt":3.073829712},{"name":"cycles:u","cnt":11657516911.0},{"name":"max-rss","cnt":556468.0},{"name":"faults","cnt":141150.0},{"name":"task-clock","cnt":3094.275587}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3267.058427},{"name":"max-rss","cnt":602676.0},{"name":"cycles:u","cnt":12290480324.0},{"name":"faults","cnt":144624.0},{"name":"instructions:u","cnt":18770242365.0},{"name":"cpu-clock","cnt":3267.054703},{"name":"wall-time","cnt":3.232978247}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":222652.0},{"name":"wall-time","cnt":0.498975785},{"name":"instructions:u","cnt":3155443349.0},{"name":"cycles:u","cnt":1606648309.0},{"name":"cpu-clock","cnt":468.131942},{"name":"task-clock","cnt":468.139705},{"name":"faults","cnt":42024.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":3259.935143},{"name":"wall-time","cnt":3.206518185},{"name":"instructions:u","cnt":18498945310.0},{"name":"task-clock","cnt":3259.94336},{"name":"cycles:u","cnt":12317916261.0},{"name":"max-rss","cnt":600536.0},{"name":"faults","cnt":141975.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":12260235230.0},{"name":"faults","cnt":141970.0},{"name":"max-rss","cnt":600312.0},{"name":"instructions:u","cnt":18588486796.0},{"name":"task-clock","cnt":3247.105323},{"name":"cpu-clock","cnt":3247.105417},{"name":"wall-time","cnt":3.212065982}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"add vec item","path":"1-add-vec-item.patch"}}}],"name":"deep-vector"}},"deeply-nested":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.099609895},{"name":"task-clock","cnt":81.934941},{"name":"faults","cnt":5740.0},{"name":"instructions:u","cnt":429221388.0},{"name":"max-rss","cnt":107564.0},{"name":"cycles:u","cnt":272208784.0},{"name":"cpu-clock","cnt":81.933157}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":310171814.0},{"name":"instructions:u","cnt":487199799.0},{"name":"task-clock","cnt":93.628908},{"name":"wall-time","cnt":0.111525794},{"name":"faults","cnt":7212.0},{"name":"cpu-clock","cnt":93.625936},{"name":"max-rss","cnt":116412.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":6100.0},{"name":"cpu-clock","cnt":43.161555},{"name":"wall-time","cnt":0.060164981},{"name":"task-clock","cnt":43.164285},{"name":"max-rss","cnt":88988.0},{"name":"cycles:u","cnt":119460488.0},{"name":"instructions:u","cnt":178682640.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":575901067.0},{"name":"task-clock","cnt":167.465731},{"name":"wall-time","cnt":0.155438821},{"name":"max-rss","cnt":127552.0},{"name":"instructions:u","cnt":777185375.0},{"name":"faults","cnt":8615.0},{"name":"cpu-clock","cnt":167.456513}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":627493597.0},{"name":"instructions:u","cnt":849791198.0},{"name":"cpu-clock","cnt":182.828378},{"name":"wall-time","cnt":0.169224772},{"name":"faults","cnt":10287.0},{"name":"max-rss","cnt":135332.0},{"name":"task-clock","cnt":182.837801}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":109132.0},{"name":"cycles:u","cnt":183091055.0},{"name":"wall-time","cnt":0.079004786},{"name":"instructions:u","cnt":270065978.0},{"name":"cpu-clock","cnt":63.941927},{"name":"faults","cnt":7472.0},{"name":"task-clock","cnt":63.957599}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":7748.0},{"name":"cycles:u","cnt":900690297.0},{"name":"task-clock","cnt":245.852412},{"name":"wall-time","cnt":0.204584232},{"name":"instructions:u","cnt":1278689256.0},{"name":"cpu-clock","cnt":245.857599},{"name":"max-rss","cnt":125612.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.219508884},{"name":"instructions:u","cnt":1349981354.0},{"name":"cycles:u","cnt":961427092.0},{"name":"cpu-clock","cnt":264.293426},{"name":"faults","cnt":9355.0},{"name":"max-rss","cnt":132900.0},{"name":"task-clock","cnt":264.288139}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":179998840.0},{"name":"faults","cnt":7351.0},{"name":"cpu-clock","cnt":61.600879},{"name":"instructions:u","cnt":267605534.0},{"name":"wall-time","cnt":0.077583927},{"name":"max-rss","cnt":108416.0},{"name":"task-clock","cnt":61.595606}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"deeply-nested"}},"encoding":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":140644.0},{"name":"wall-time","cnt":0.438269239},{"name":"cycles:u","cnt":1588421949.0},{"name":"task-clock","cnt":420.285334},{"name":"faults","cnt":12209.0},{"name":"instructions:u","cnt":1927018383.0},{"name":"cpu-clock","cnt":420.284713}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":2462926198.0},{"name":"max-rss","cnt":169128.0},{"name":"task-clock","cnt":549.775235},{"name":"wall-time","cnt":0.568255585},{"name":"faults","cnt":19006.0},{"name":"cpu-clock","cnt":549.772457},{"name":"cycles:u","cnt":2066045454.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":159192.0},{"name":"cycles:u","cnt":618170973.0},{"name":"instructions:u","cnt":874563215.0},{"name":"faults","cnt":17546.0},{"name":"wall-time","cnt":0.191848081},{"name":"task-clock","cnt":183.5711},{"name":"cpu-clock","cnt":183.569018}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":676878991.0},{"name":"wall-time","cnt":0.209212863},{"name":"instructions:u","cnt":941564404.0},{"name":"cpu-clock","cnt":199.912315},{"name":"task-clock","cnt":199.903544},{"name":"max-rss","cnt":164416.0},{"name":"faults","cnt":17878.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.895417908},{"name":"max-rss","cnt":228344.0},{"name":"instructions:u","cnt":7708941368.0},{"name":"task-clock","cnt":1872.387754},{"name":"cycles:u","cnt":7006321950.0},{"name":"cpu-clock","cnt":1872.373521},{"name":"faults","cnt":31837.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.123438766},{"name":"instructions:u","cnt":9450236910.0},{"name":"task-clock","cnt":2312.129363},{"name":"faults","cnt":36842.0},{"name":"cpu-clock","cnt":2312.138099},{"name":"max-rss","cnt":247152.0},{"name":"cycles:u","cnt":8577689876.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":185300.0},{"name":"task-clock","cnt":276.033815},{"name":"faults","cnt":22723.0},{"name":"cycles:u","cnt":879368484.0},{"name":"cpu-clock","cnt":275.961353},{"name":"wall-time","cnt":0.266090348},{"name":"instructions:u","cnt":1198165220.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":192444.0},{"name":"cycles:u","cnt":967979190.0},{"name":"wall-time","cnt":0.293640566},{"name":"instructions:u","cnt":1304537108.0},{"name":"faults","cnt":23341.0},{"name":"task-clock","cnt":301.161985},{"name":"cpu-clock","cnt":301.112583}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":18129472974.0},{"name":"max-rss","cnt":235444.0},{"name":"wall-time","cnt":1.449863939},{"name":"faults","cnt":33786.0},{"name":"task-clock","cnt":5347.038896},{"name":"cpu-clock","cnt":5347.033048},{"name":"cycles:u","cnt":20137628021.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.626234719},{"name":"task-clock","cnt":5972.837839},{"name":"cycles:u","cnt":22405498387.0},{"name":"max-rss","cnt":257124.0},{"name":"instructions:u","cnt":20222472964.0},{"name":"cpu-clock","cnt":5972.85836},{"name":"faults","cnt":39178.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":270.635684},{"name":"faults","cnt":22855.0},{"name":"cycles:u","cnt":889470010.0},{"name":"wall-time","cnt":0.262327087},{"name":"instructions:u","cnt":1209017577.0},{"name":"max-rss","cnt":183620.0},{"name":"task-clock","cnt":270.689855}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":382.503279},{"name":"cycles:u","cnt":1316408073.0},{"name":"task-clock","cnt":382.571087},{"name":"faults","cnt":24249.0},{"name":"instructions:u","cnt":1708084762.0},{"name":"wall-time","cnt":0.377120277},{"name":"max-rss","cnt":197980.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"encoding"}},"futures":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":759.921576},{"name":"instructions:u","cnt":4022680932.0},{"name":"task-clock","cnt":759.922251},{"name":"cycles:u","cnt":2939346273.0},{"name":"faults","cnt":11805.0},{"name":"max-rss","cnt":137104.0},{"name":"wall-time","cnt":0.779388074}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.941712147},{"name":"instructions:u","cnt":4720920442.0},{"name":"max-rss","cnt":166460.0},{"name":"cpu-clock","cnt":923.872778},{"name":"task-clock","cnt":923.857246},{"name":"faults","cnt":18811.0},{"name":"cycles:u","cnt":3555329550.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":19024.0},{"name":"cpu-clock","cnt":203.419898},{"name":"max-rss","cnt":160200.0},{"name":"cycles:u","cnt":683858150.0},{"name":"instructions:u","cnt":963895592.0},{"name":"task-clock","cnt":203.421393},{"name":"wall-time","cnt":0.226525345}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":206.263651},{"name":"faults","cnt":19035.0},{"name":"max-rss","cnt":163688.0},{"name":"cycles:u","cnt":699149808.0},{"name":"wall-time","cnt":0.212675607},{"name":"instructions:u","cnt":974431555.0},{"name":"task-clock","cnt":206.254331}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":162720.0},{"name":"instructions:u","cnt":5268007455.0},{"name":"cycles:u","cnt":4146352481.0},{"name":"faults","cnt":16127.0},{"name":"wall-time","cnt":0.916260844},{"name":"cpu-clock","cnt":1085.290666},{"name":"task-clock","cnt":1085.29535}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":194880.0},{"name":"task-clock","cnt":1342.924642},{"name":"cpu-clock","cnt":1342.926218},{"name":"faults","cnt":24205.0},{"name":"wall-time","cnt":1.130621196},{"name":"instructions:u","cnt":6252385466.0},{"name":"cycles:u","cnt":5085683734.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":253.807709},{"name":"faults","cnt":21600.0},{"name":"instructions:u","cnt":1140427526.0},{"name":"max-rss","cnt":176732.0},{"name":"task-clock","cnt":253.823998},{"name":"cycles:u","cnt":838249279.0},{"name":"wall-time","cnt":0.268904499}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":177036.0},{"name":"cpu-clock","cnt":255.559286},{"name":"wall-time","cnt":0.254684636},{"name":"cycles:u","cnt":845333920.0},{"name":"instructions:u","cnt":1152193521.0},{"name":"faults","cnt":21594.0},{"name":"task-clock","cnt":255.571053}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.982508589},{"name":"faults","cnt":17989.0},{"name":"instructions:u","cnt":6636456101.0},{"name":"task-clock","cnt":1617.217337},{"name":"cpu-clock","cnt":1617.193804},{"name":"cycles:u","cnt":6129891706.0},{"name":"max-rss","cnt":170572.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":201788.0},{"name":"faults","cnt":25496.0},{"name":"instructions:u","cnt":7693300744.0},{"name":"cycles:u","cnt":7218176565.0},{"name":"wall-time","cnt":1.175528873},{"name":"task-clock","cnt":1912.555665},{"name":"cpu-clock","cnt":1912.557719}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.265016352},{"name":"instructions:u","cnt":1133786475.0},{"name":"faults","cnt":21658.0},{"name":"task-clock","cnt":247.55112},{"name":"cpu-clock","cnt":247.546796},{"name":"max-rss","cnt":176592.0},{"name":"cycles:u","cnt":822728742.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":176960.0},{"name":"faults","cnt":21685.0},{"name":"task-clock","cnt":250.869573},{"name":"cycles:u","cnt":838751469.0},{"name":"wall-time","cnt":0.25091946},{"name":"cpu-clock","cnt":250.844588},{"name":"instructions:u","cnt":1145519490.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"futures"}},"helloworld":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":44.124268},{"name":"max-rss","cnt":96496.0},{"name":"instructions:u","cnt":191476305.0},{"name":"wall-time","cnt":0.062392187},{"name":"cycles:u","cnt":127191161.0},{"name":"faults","cnt":4917.0},{"name":"task-clock","cnt":44.125814}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":102004.0},{"name":"wall-time","cnt":0.069687663},{"name":"faults","cnt":6102.0},{"name":"cpu-clock","cnt":51.751645},{"name":"instructions:u","cnt":216160633.0},{"name":"task-clock","cnt":51.755151},{"name":"cycles:u","cnt":148856893.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.058919126},{"name":"task-clock","cnt":41.092159},{"name":"instructions:u","cnt":168867959.0},{"name":"cpu-clock","cnt":41.089218},{"name":"cycles:u","cnt":113195017.0},{"name":"faults","cnt":5555.0},{"name":"max-rss","cnt":89480.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":0.06759451},{"name":"task-clock","cnt":49.751237},{"name":"cycles:u","cnt":142390184.0},{"name":"instructions:u","cnt":209646053.0},{"name":"max-rss","cnt":102624.0},{"name":"cpu-clock","cnt":49.748315},{"name":"faults","cnt":6220.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":523010719.0},{"name":"task-clock","cnt":124.239554},{"name":"cycles:u","cnt":357265527.0},{"name":"faults","cnt":12049.0},{"name":"wall-time","cnt":0.131891244},{"name":"cpu-clock","cnt":124.243518},{"name":"max-rss","cnt":116532.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":570949167.0},{"name":"cycles:u","cnt":391630649.0},{"name":"task-clock","cnt":134.478545},{"name":"cpu-clock","cnt":134.481625},{"name":"max-rss","cnt":122496.0},{"name":"wall-time","cnt":0.141694145},{"name":"faults","cnt":13473.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.125707813},{"name":"cpu-clock","cnt":111.726692},{"name":"cycles:u","cnt":308330226.0},{"name":"instructions:u","cnt":473605694.0},{"name":"max-rss","cnt":105876.0},{"name":"task-clock","cnt":111.755},{"name":"faults","cnt":12715.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":123560.0},{"name":"wall-time","cnt":0.139193106},{"name":"instructions:u","cnt":550408412.0},{"name":"task-clock","cnt":132.937101},{"name":"cycles:u","cnt":382151672.0},{"name":"cpu-clock","cnt":132.941534},{"name":"faults","cnt":13745.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":373813746.0},{"name":"task-clock","cnt":127.148732},{"name":"faults","cnt":11929.0},{"name":"max-rss","cnt":118736.0},{"name":"cpu-clock","cnt":127.143678},{"name":"wall-time","cnt":0.134763604},{"name":"instructions:u","cnt":548986217.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":137.475558},{"name":"max-rss","cnt":124564.0},{"name":"cycles:u","cnt":406306765.0},{"name":"faults","cnt":13355.0},{"name":"wall-time","cnt":0.143777484},{"name":"task-clock","cnt":137.461886},{"name":"instructions:u","cnt":596310673.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":109.734269},{"name":"faults","cnt":12491.0},{"name":"cycles:u","cnt":306278580.0},{"name":"wall-time","cnt":0.125101793},{"name":"max-rss","cnt":105656.0},{"name":"task-clock","cnt":109.740218},{"name":"instructions:u","cnt":470684949.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":136.012076},{"name":"wall-time","cnt":0.141947126},{"name":"max-rss","cnt":126704.0},{"name":"faults","cnt":13652.0},{"name":"cycles:u","cnt":398787185.0},{"name":"task-clock","cnt":136.02626},{"name":"instructions:u","cnt":577373170.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"helloworld"}},"html5ever":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":1.698852638},{"name":"task-clock","cnt":1646.698634},{"name":"faults","cnt":35979.0},{"name":"cpu-clock","cnt":1646.698443},{"name":"cycles:u","cnt":6382589559.0},{"name":"max-rss","cnt":227692.0},{"name":"instructions:u","cnt":9374587869.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":7807759553.0},{"name":"task-clock","cnt":2015.178988},{"name":"wall-time","cnt":2.071238721},{"name":"instructions:u","cnt":11862885410.0},{"name":"faults","cnt":42804.0},{"name":"max-rss","cnt":256956.0},{"name":"cpu-clock","cnt":2015.196475}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4004429431.0},{"name":"cpu-clock","cnt":634.191795},{"name":"wall-time","cnt":0.635719098},{"name":"max-rss","cnt":233488.0},{"name":"cycles:u","cnt":2315338412.0},{"name":"faults","cnt":36775.0},{"name":"task-clock","cnt":634.193445}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":252196.0},{"name":"task-clock","cnt":736.294883},{"name":"wall-time","cnt":0.739043403},{"name":"faults","cnt":39477.0},{"name":"cpu-clock","cnt":736.29439},{"name":"cycles:u","cnt":2711700507.0},{"name":"instructions:u","cnt":4520281475.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":2630.232821},{"name":"instructions:u","cnt":13429505479.0},{"name":"task-clock","cnt":2630.220982},{"name":"faults","cnt":50135.0},{"name":"max-rss","cnt":295112.0},{"name":"wall-time","cnt":2.095060714},{"name":"cycles:u","cnt":10043350383.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":3146.351093},{"name":"cpu-clock","cnt":3146.421269},{"name":"wall-time","cnt":2.554067791},{"name":"instructions:u","cnt":16705169846.0},{"name":"faults","cnt":61320.0},{"name":"cycles:u","cnt":11952569119.0},{"name":"max-rss","cnt":339768.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4545405757.0},{"name":"faults","cnt":48249.0},{"name":"wall-time","cnt":0.7533384},{"name":"cycles:u","cnt":2718076692.0},{"name":"cpu-clock","cnt":768.470964},{"name":"task-clock","cnt":768.522543},{"name":"max-rss","cnt":292644.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":883.295353},{"name":"faults","cnt":50547.0},{"name":"max-rss","cnt":309840.0},{"name":"wall-time","cnt":0.864485146},{"name":"task-clock","cnt":883.331318},{"name":"instructions:u","cnt":5097287164.0},{"name":"cycles:u","cnt":3161112841.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":27098451137.0},{"name":"wall-time","cnt":2.750552808},{"name":"task-clock","cnt":7247.633135},{"name":"faults","cnt":78225.0},{"name":"cycles:u","cnt":27282803649.0},{"name":"cpu-clock","cnt":7247.62384},{"name":"max-rss","cnt":382648.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":7403.969838},{"name":"cycles:u","cnt":27947544909.0},{"name":"max-rss","cnt":369360.0},{"name":"wall-time","cnt":3.036839308},{"name":"instructions:u","cnt":28203646461.0},{"name":"task-clock","cnt":7403.920186},{"name":"faults","cnt":70023.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":49309.0},{"name":"instructions:u","cnt":4656657477.0},{"name":"max-rss","cnt":296128.0},{"name":"cycles:u","cnt":2793583275.0},{"name":"cpu-clock","cnt":782.633574},{"name":"wall-time","cnt":0.751593758},{"name":"task-clock","cnt":782.682919}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":52111.0},{"name":"cycles:u","cnt":3368940854.0},{"name":"task-clock","cnt":938.055135},{"name":"max-rss","cnt":314512.0},{"name":"wall-time","cnt":0.868920712},{"name":"cpu-clock","cnt":938.006757},{"name":"instructions:u","cnt":5325166819.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"html5ever"}},"hyper":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":4798538001.0},{"name":"wall-time","cnt":1.145307342},{"name":"cycles:u","cnt":4335463747.0},{"name":"task-clock","cnt":1122.087103},{"name":"cpu-clock","cnt":1122.087541},{"name":"faults","cnt":21312.0},{"name":"max-rss","cnt":179284.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":239036.0},{"name":"cpu-clock","cnt":1442.271609},{"name":"wall-time","cnt":1.476561912},{"name":"cycles:u","cnt":5547853980.0},{"name":"task-clock","cnt":1442.28598},{"name":"faults","cnt":35992.0},{"name":"instructions:u","cnt":6120323119.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":438.180332},{"name":"faults","cnt":34154.0},{"name":"cycles:u","cnt":1550327783.0},{"name":"max-rss","cnt":224840.0},{"name":"wall-time","cnt":0.451148572},{"name":"instructions:u","cnt":1975080068.0},{"name":"task-clock","cnt":438.181889}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":459.362913},{"name":"cycles:u","cnt":1626519776.0},{"name":"instructions:u","cnt":2063037369.0},{"name":"cpu-clock","cnt":459.362721},{"name":"max-rss","cnt":231168.0},{"name":"wall-time","cnt":0.453121481},{"name":"faults","cnt":34302.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":49842.0},{"name":"wall-time","cnt":2.254896804},{"name":"cpu-clock","cnt":4374.783203},{"name":"instructions:u","cnt":17310107392.0},{"name":"max-rss","cnt":305660.0},{"name":"cycles:u","cnt":16586369604.0},{"name":"task-clock","cnt":4374.774701}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":364504.0},{"name":"task-clock","cnt":5385.056492},{"name":"instructions:u","cnt":20646657244.0},{"name":"faults","cnt":63715.0},{"name":"wall-time","cnt":2.779415947},{"name":"cpu-clock","cnt":5385.107808},{"name":"cycles:u","cnt":20205058862.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2932663276.0},{"name":"faults","cnt":46340.0},{"name":"cpu-clock","cnt":712.426605},{"name":"wall-time","cnt":0.686038541},{"name":"cycles:u","cnt":2410230365.0},{"name":"task-clock","cnt":712.522707},{"name":"max-rss","cnt":298324.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":3048967743.0},{"name":"task-clock","cnt":753.566821},{"name":"cpu-clock","cnt":753.428268},{"name":"wall-time","cnt":0.703737843},{"name":"cycles:u","cnt":2552770258.0},{"name":"max-rss","cnt":318380.0},{"name":"faults","cnt":49903.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.53042253},{"name":"instructions:u","cnt":47206602740.0},{"name":"cycles:u","cnt":59663456826.0},{"name":"task-clock","cnt":15778.523715},{"name":"cpu-clock","cnt":15778.551136},{"name":"faults","cnt":49604.0},{"name":"max-rss","cnt":297312.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":69517432000.0},{"name":"faults","cnt":62381.0},{"name":"cpu-clock","cnt":18474.41833},{"name":"instructions:u","cnt":55167950323.0},{"name":"wall-time","cnt":4.094999659},{"name":"task-clock","cnt":18474.364721},{"name":"max-rss","cnt":342208.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.694575073},{"name":"cpu-clock","cnt":733.383559},{"name":"faults","cnt":49840.0},{"name":"cycles:u","cnt":2497041284.0},{"name":"task-clock","cnt":733.473732},{"name":"max-rss","cnt":294984.0},{"name":"instructions:u","cnt":2987724394.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":56857.0},{"name":"max-rss","cnt":331020.0},{"name":"instructions:u","cnt":6985562506.0},{"name":"wall-time","cnt":1.209120984},{"name":"task-clock","cnt":1791.740474},{"name":"cpu-clock","cnt":1791.647608},{"name":"cycles:u","cnt":6542439815.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"hyper"}},"inflate":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":1.667838321},{"name":"instructions:u","cnt":12117823121.0},{"name":"task-clock","cnt":1630.161147},{"name":"faults","cnt":28893.0},{"name":"max-rss","cnt":179476.0},{"name":"cycles:u","cnt":6356134713.0},{"name":"cpu-clock","cnt":1630.160104}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":12856450899.0},{"name":"cpu-clock","cnt":1741.099062},{"name":"max-rss","cnt":194340.0},{"name":"task-clock","cnt":1741.100569},{"name":"cycles:u","cnt":6782879361.0},{"name":"faults","cnt":32213.0},{"name":"wall-time","cnt":1.776978632}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":839738951.0},{"name":"max-rss","cnt":133240.0},{"name":"task-clock","cnt":160.409689},{"name":"cycles:u","cnt":547611507.0},{"name":"cpu-clock","cnt":160.408066},{"name":"faults","cnt":13388.0},{"name":"wall-time","cnt":0.192523066}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":1731.818286},{"name":"task-clock","cnt":1731.828719},{"name":"faults","cnt":33287.0},{"name":"cycles:u","cnt":6739544545.0},{"name":"wall-time","cnt":1.745381871},{"name":"instructions:u","cnt":12719172234.0},{"name":"max-rss","cnt":200372.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":10167101673.0},{"name":"task-clock","cnt":2638.933409},{"name":"cpu-clock","cnt":2638.942194},{"name":"instructions:u","cnt":16651360693.0},{"name":"max-rss","cnt":290824.0},{"name":"faults","cnt":55614.0},{"name":"wall-time","cnt":2.454766694}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2862.79374},{"name":"instructions:u","cnt":17870930074.0},{"name":"max-rss","cnt":311156.0},{"name":"faults","cnt":60389.0},{"name":"cpu-clock","cnt":2862.808945},{"name":"cycles:u","cnt":11012853030.0},{"name":"wall-time","cnt":2.593763865}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.245038378},{"name":"faults","cnt":18269.0},{"name":"max-rss","cnt":159352.0},{"name":"cpu-clock","cnt":222.744987},{"name":"task-clock","cnt":222.760799},{"name":"instructions:u","cnt":1161446779.0},{"name":"cycles:u","cnt":738884845.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":58481.0},{"name":"max-rss","cnt":304872.0},{"name":"task-clock","cnt":2833.951144},{"name":"cpu-clock","cnt":2833.953724},{"name":"wall-time","cnt":2.535758164},{"name":"cycles:u","cnt":10847403629.0},{"name":"instructions:u","cnt":17651916812.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":8355.583635},{"name":"max-rss","cnt":335800.0},{"name":"instructions:u","cnt":51866911471.0},{"name":"cycles:u","cnt":32808102421.0},{"name":"wall-time","cnt":8.103274599},{"name":"faults","cnt":71774.0},{"name":"task-clock","cnt":8355.578313}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":349748.0},{"name":"task-clock","cnt":8453.434004},{"name":"cycles:u","cnt":33150758859.0},{"name":"wall-time","cnt":8.165831475},{"name":"instructions:u","cnt":52896233751.0},{"name":"faults","cnt":74375.0},{"name":"cpu-clock","cnt":8453.42066}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":213.54494},{"name":"instructions:u","cnt":1134506598.0},{"name":"cycles:u","cnt":718029123.0},{"name":"max-rss","cnt":157400.0},{"name":"task-clock","cnt":213.549936},{"name":"faults","cnt":17862.0},{"name":"wall-time","cnt":0.238664076}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":7.956390069},{"name":"task-clock","cnt":7980.729456},{"name":"cycles:u","cnt":31350159543.0},{"name":"cpu-clock","cnt":7980.712867},{"name":"instructions:u","cnt":50510847443.0},{"name":"max-rss","cnt":342628.0},{"name":"faults","cnt":74387.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"inflate"}},"issue-46449":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":72.441787},{"name":"cycles:u","cnt":230728250.0},{"name":"wall-time","cnt":0.090294217},{"name":"cpu-clock","cnt":72.44013},{"name":"instructions:u","cnt":346038415.0},{"name":"faults","cnt":6117.0},{"name":"max-rss","cnt":112704.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":88.443259},{"name":"max-rss","cnt":120708.0},{"name":"task-clock","cnt":88.445238},{"name":"faults","cnt":7887.0},{"name":"instructions:u","cnt":418999716.0},{"name":"cycles:u","cnt":286424100.0},{"name":"wall-time","cnt":0.106749788}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":257746045.0},{"name":"cycles:u","cnt":173830136.0},{"name":"max-rss","cnt":109364.0},{"name":"cpu-clock","cnt":59.209419},{"name":"faults","cnt":7551.0},{"name":"task-clock","cnt":59.211781},{"name":"wall-time","cnt":0.076010548}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":122968.0},{"name":"wall-time","cnt":0.099231401},{"name":"cycles:u","cnt":260999971.0},{"name":"cpu-clock","cnt":82.519902},{"name":"task-clock","cnt":82.531243},{"name":"instructions:u","cnt":382498884.0},{"name":"faults","cnt":8212.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"faults","cnt":8210.0},{"name":"cpu-clock","cnt":83.555392},{"name":"task-clock","cnt":83.558224},{"name":"cycles:u","cnt":264511925.0},{"name":"max-rss","cnt":125692.0},{"name":"wall-time","cnt":0.100171671},{"name":"instructions:u","cnt":381283217.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":122352.0},{"name":"faults","cnt":8195.0},{"name":"task-clock","cnt":75.212938},{"name":"wall-time","cnt":0.092404824},{"name":"cycles:u","cnt":232433931.0},{"name":"cpu-clock","cnt":75.210189},{"name":"instructions:u","cnt":343898604.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":261675804.0},{"name":"faults","cnt":8198.0},{"name":"task-clock","cnt":82.833329},{"name":"max-rss","cnt":122488.0},{"name":"wall-time","cnt":0.099391192},{"name":"instructions:u","cnt":381708778.0},{"name":"cpu-clock","cnt":82.830578}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":8209.0},{"name":"cycles:u","cnt":269720544.0},{"name":"task-clock","cnt":84.903746},{"name":"cpu-clock","cnt":84.900584},{"name":"instructions:u","cnt":383240852.0},{"name":"wall-time","cnt":0.101681129},{"name":"max-rss","cnt":122652.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"cpu-clock","cnt":236.803857},{"name":"faults","cnt":10132.0},{"name":"task-clock","cnt":236.798693},{"name":"wall-time","cnt":0.149134333},{"name":"instructions:u","cnt":957584078.0},{"name":"cycles:u","cnt":811415598.0},{"name":"max-rss","cnt":137236.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":267.751524},{"name":"cycles:u","cnt":922932517.0},{"name":"wall-time","cnt":0.171009529},{"name":"max-rss","cnt":145972.0},{"name":"instructions:u","cnt":1086144033.0},{"name":"faults","cnt":11967.0},{"name":"cpu-clock","cnt":267.753841}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":226578329.0},{"name":"cpu-clock","cnt":79.315293},{"name":"faults","cnt":8719.0},{"name":"wall-time","cnt":0.091593837},{"name":"task-clock","cnt":79.335128},{"name":"max-rss","cnt":119044.0},{"name":"instructions:u","cnt":320328252.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1028320406.0},{"name":"task-clock","cnt":262.53165},{"name":"wall-time","cnt":0.162191822},{"name":"cycles:u","cnt":895373975.0},{"name":"max-rss","cnt":146656.0},{"name":"faults","cnt":12311.0},{"name":"cpu-clock","cnt":262.540712}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":145984.0},{"name":"cycles:u","cnt":827713813.0},{"name":"task-clock","cnt":244.470929},{"name":"wall-time","cnt":0.154432067},{"name":"instructions:u","cnt":956964118.0},{"name":"cpu-clock","cnt":244.505093},{"name":"faults","cnt":12112.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"max-rss","cnt":145880.0},{"name":"cycles:u","cnt":783242849.0},{"name":"wall-time","cnt":0.142807426},{"name":"cpu-clock","cnt":232.286348},{"name":"task-clock","cnt":232.293562},{"name":"faults","cnt":12141.0},{"name":"instructions:u","cnt":909237676.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":249.402084},{"name":"cycles:u","cnt":848107477.0},{"name":"wall-time","cnt":0.154703422},{"name":"cpu-clock","cnt":249.404653},{"name":"max-rss","cnt":147544.0},{"name":"instructions:u","cnt":959656871.0},{"name":"faults","cnt":12314.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"instructions:u","cnt":965617929.0},{"name":"wall-time","cnt":0.153526443},{"name":"task-clock","cnt":244.145518},{"name":"faults","cnt":12120.0},{"name":"max-rss","cnt":148144.0},{"name":"cycles:u","cnt":829120225.0},{"name":"cpu-clock","cnt":244.150696}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":143472.0},{"name":"cpu-clock","cnt":637.092641},{"name":"instructions:u","cnt":2299858687.0},{"name":"cycles:u","cnt":2333096622.0},{"name":"faults","cnt":11769.0},{"name":"wall-time","cnt":0.270941524},{"name":"task-clock","cnt":637.109766}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":2436767874.0},{"name":"task-clock","cnt":685.624687},{"name":"faults","cnt":13599.0},{"name":"cycles:u","cnt":2506864195.0},{"name":"wall-time","cnt":0.295193462},{"name":"max-rss","cnt":154436.0},{"name":"cpu-clock","cnt":685.618243}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":77.869302},{"name":"task-clock","cnt":77.885908},{"name":"cycles:u","cnt":228041129.0},{"name":"instructions:u","cnt":321354443.0},{"name":"max-rss","cnt":118260.0},{"name":"faults","cnt":8856.0},{"name":"wall-time","cnt":0.091190436}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":2362101259.0},{"name":"cycles:u","cnt":2326649770.0},{"name":"max-rss","cnt":154192.0},{"name":"task-clock","cnt":637.857587},{"name":"faults","cnt":14132.0},{"name":"cpu-clock","cnt":637.845027},{"name":"wall-time","cnt":0.293384582}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"io error 6144","path":"0-io-error-6144.patch"}}},{"stats":[{"name":"max-rss","cnt":150940.0},{"name":"cpu-clock","cnt":402.526943},{"name":"task-clock","cnt":402.524775},{"name":"instructions:u","cnt":1427579360.0},{"name":"faults","cnt":13309.0},{"name":"wall-time","cnt":0.192066674},{"name":"cycles:u","cnt":1419145632.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"u32 3072","path":"1-u32-3072.patch"}}},{"stats":[{"name":"task-clock","cnt":369.126355},{"name":"cpu-clock","cnt":369.114084},{"name":"faults","cnt":13111.0},{"name":"max-rss","cnt":149404.0},{"name":"instructions:u","cnt":1326008710.0},{"name":"cycles:u","cnt":1294160566.0},{"name":"wall-time","cnt":0.179607842}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"u8 3072","path":"2-u8-3072.patch"}}},{"stats":[{"name":"cycles:u","cnt":1316168547.0},{"name":"faults","cnt":13155.0},{"name":"instructions:u","cnt":1358025131.0},{"name":"task-clock","cnt":374.156115},{"name":"max-rss","cnt":150544.0},{"name":"wall-time","cnt":0.191896361},{"name":"cpu-clock","cnt":374.134455}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"empty 3072","path":"3-empty-3072.patch"}}},{"stats":[{"name":"faults","cnt":12958.0},{"name":"wall-time","cnt":0.188644546},{"name":"cpu-clock","cnt":378.757452},{"name":"max-rss","cnt":149148.0},{"name":"task-clock","cnt":378.780617},{"name":"instructions:u","cnt":1368369838.0},{"name":"cycles:u","cnt":1332221439.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"static str 6144","path":"4-static-str-6144.patch"}}}],"name":"issue-46449"}},"keccak":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":40656138127.0},{"name":"cycles:u","cnt":20743706278.0},{"name":"faults","cnt":140657.0},{"name":"max-rss","cnt":497716.0},{"name":"wall-time","cnt":5.372597219},{"name":"task-clock","cnt":5334.018712},{"name":"cpu-clock","cnt":5334.00838}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":5754.734029},{"name":"max-rss","cnt":520044.0},{"name":"cycles:u","cnt":22286090132.0},{"name":"instructions:u","cnt":43200154315.0},{"name":"cpu-clock","cnt":5754.734122},{"name":"faults","cnt":146546.0},{"name":"wall-time","cnt":5.79093594}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.489004885},{"name":"cpu-clock","cnt":472.876048},{"name":"max-rss","cnt":204208.0},{"name":"task-clock","cnt":472.866015},{"name":"faults","cnt":35587.0},{"name":"cycles:u","cnt":1697149499.0},{"name":"instructions:u","cnt":2017074533.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":7497.551725},{"name":"wall-time","cnt":7.534920807},{"name":"max-rss","cnt":1234064.0},{"name":"faults","cnt":335456.0},{"name":"cpu-clock","cnt":7497.544191},{"name":"instructions:u","cnt":51456458299.0},{"name":"cycles:u","cnt":28704515415.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":7.990171091},{"name":"instructions:u","cnt":54694799318.0},{"name":"task-clock","cnt":8039.827776},{"name":"cycles:u","cnt":30713596154.0},{"name":"faults","cnt":336047.0},{"name":"cpu-clock","cnt":8039.818882},{"name":"max-rss","cnt":1243328.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":42440.0},{"name":"max-rss","cnt":236096.0},{"name":"instructions:u","cnt":2724302948.0},{"name":"cycles:u","cnt":2019818609.0},{"name":"cpu-clock","cnt":572.088111},{"name":"wall-time","cnt":0.58691363},{"name":"task-clock","cnt":572.084372}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":6764.991276},{"name":"cpu-clock","cnt":6764.981075},{"name":"wall-time","cnt":6.764477126},{"name":"cycles:u","cnt":26009358294.0},{"name":"instructions:u","cnt":51887751799.0},{"name":"faults","cnt":279492.0},{"name":"max-rss","cnt":1012164.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":270204.0},{"name":"cycles:u","cnt":28062623897.0},{"name":"task-clock","cnt":7301.793365},{"name":"max-rss","cnt":979212.0},{"name":"instructions:u","cnt":55130640505.0},{"name":"wall-time","cnt":7.267765507},{"name":"cpu-clock","cnt":7301.792234}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":2664415744.0},{"name":"cpu-clock","cnt":565.762054},{"name":"cycles:u","cnt":2020076089.0},{"name":"max-rss","cnt":239944.0},{"name":"wall-time","cnt":0.582879483},{"name":"faults","cnt":43558.0},{"name":"task-clock","cnt":565.763917}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"keccak"}},"packed-simd":{"Err":"ErrorMessage { msg: \"expected success, got exit code: 101\\n\\nstderr=    Checking cfg-if v0.1.6\\n    Checking packed_simd v0.3.0 (/tmp/.tmp339zCs)\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:525:36\\n    |\\n525 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:5:1\\n    |\\n5   | / impl_const_p!(\\n6   | |     [*const T; 2]: cptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n7   | |     /// A vector with 2 `*const T` lanes\\n8   | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:10:1\\n    |\\n10  | / impl_mut_p!(\\n11  | |     [*mut T; 2]: mptrx2, msizex2, usizex2, isizex2 | test_v128 | x0, x1 | From: |\\n12  | |     /// A vector with 2 `*mut T` lanes\\n13  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:15:1\\n    |\\n15  | / impl_const_p!(\\n16  | |     [*const T; 4]: cptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n17  | |     /// A vector with 4 `*const T` lanes\\n18  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:20:1\\n    |\\n20  | / impl_mut_p!(\\n21  | |     [*mut T; 4]: mptrx4, msizex4, usizex4, isizex4 | test_v256 | x0, x1, x2, x3 | From: |\\n22  | |     /// A vector with 4 `*mut T` lanes\\n23  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:25:1\\n    |\\n25  | / impl_const_p!(\\n26  | |     [*const T; 8]: cptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n27  | |     /// A vector with 8 `*const T` lanes\\n28  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n   --> src/api/minimal/ptr.rs:711:36\\n    |\\n711 |                           target_ptr.align_offset(crate::mem::align_of::<Self>())\\n    |                                      ^^^^^^^^^^^^\\n    | \\n   ::: src/vPtr.rs:30:1\\n    |\\n30  | / impl_mut_p!(\\n31  | |     [*mut T; 8]: mptrx8, msizex8, usizex8, isizex8 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 | From: |\\n32  | |     /// A vector with 8 `*mut T` lanes\\n33  | | );\\n    | |__- in this macro invocation\\n    |\\n    = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n    = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:18:36\\n   |\\n18 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/from_slice.rs:49:32\\n   |\\n49 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:19:36\\n   |\\n19 |                           target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                      ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:5:1\\n   |\\n5  | / impl_i!([i8; 2]: i8x2, m8x2 | i8 | test_v16 | x0, x1 |\\n6  | |         From: |\\n7  | |         /// A 16-bit vector with 2 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v16.rs:9:1\\n   |\\n9  | / impl_u!([u8; 2]: u8x2, m8x2 | u8 | test_v16 | x0, x1 |\\n10 | |         From: |\\n11 | |         /// A 16-bit vector with 2 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:5:1\\n   |\\n5  | / impl_i!([i8; 4]: i8x4, m8x4 | i8 | test_v32 | x0, x1, x2, x3 |\\n6  | |         From: |\\n7  | |         /// A 32-bit vector with 4 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:9:1\\n   |\\n9  | / impl_u!([u8; 4]: u8x4, m8x4 | u8 | test_v32 | x0, x1, x2, x3 |\\n10 | |         From: |\\n11 | |         /// A 32-bit vector with 4 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:18:1\\n   |\\n18 | / impl_i!([i16; 2]: i16x2, m16x2 | i16 | test_v32 | x0, x1 |\\n19 | |         From: i8x2, u8x2 |\\n20 | |         /// A 32-bit vector with 2 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v32.rs:22:1\\n   |\\n22 | / impl_u!([u16; 2]: u16x2, m16x2 | u16 | test_v32 | x0, x1 |\\n23 | |         From: u8x2 |\\n24 | |         /// A 32-bit vector with 2 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:5:1\\n   |\\n5  | / impl_i!([i8; 8]: i8x8, m8x8 | i8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n6  | |         From: |\\n7  | |         /// A 64-bit vector with 8 `i8` lanes.\\n8  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:9:1\\n   |\\n9  | / impl_u!([u8; 8]: u8x8, m8x8 | u8 | test_v64 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n10 | |         From: |\\n11 | |         /// A 64-bit vector with 8 `u8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:18:1\\n   |\\n18 | / impl_i!([i16; 4]: i16x4, m16x4 | i16 | test_v64 | x0, x1, x2, x3 |\\n19 | |         From: i8x4, u8x4 |\\n20 | |         /// A 64-bit vector with 4 `i16` lanes.\\n21 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:22:1\\n   |\\n22 | / impl_u!([u16; 4]: u16x4, m16x4 | u16 | test_v64 | x0, x1, x2, x3 |\\n23 | |         From: u8x4 |\\n24 | |         /// A 64-bit vector with 4 `u16` lanes.\\n25 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:31:1\\n   |\\n31 | / impl_i!([i32; 2]: i32x2, m32x2 | i32 | test_v64 | x0, x1 |\\n32 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n33 | |         /// A 64-bit vector with 2 `i32` lanes.\\n34 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:35:1\\n   |\\n35 | / impl_u!([u32; 2]: u32x2, m32x2 | u32 | test_v64 | x0, x1 |\\n36 | |         From: u8x2, u16x2 |\\n37 | |         /// A 64-bit vector with 2 `u32` lanes.\\n38 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v64.rs:43:1\\n   |\\n43 | / impl_f!([f32; 2]: f32x2, m32x2 | f32 | test_v64 | x0, x1 |\\n44 | |         From: i8x2, u8x2, i16x2, u16x2 |\\n45 | |         /// A 64-bit vector with 2 `f32` lanes.\\n46 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:5:1\\n   |\\n5  | / impl_i!([i8; 16]: i8x16, m8x16 | i8 | test_v128 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n7  | |         From: |\\n8  | |         /// A 128-bit vector with 16 `i8` lanes.\\n9  | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:10:1\\n   |\\n10 | / impl_u!([u8; 16]: u8x16, m8x16 | u8 | test_v128 |\\n11 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n12 | |         From: |\\n13 | |         /// A 128-bit vector with 16 `u8` lanes.\\n14 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:21:1\\n   |\\n21 | / impl_i!([i16; 8]: i16x8, m16x8 | i16 | test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n22 | |         From: i8x8, u8x8 |\\n23 | |         /// A 128-bit vector with 8 `i16` lanes.\\n24 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:25:1\\n   |\\n25 | / impl_u!([u16; 8]: u16x8, m16x8 | u16| test_v128 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n26 | |         From: u8x8 |\\n27 | |         /// A 128-bit vector with 8 `u16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:34:1\\n   |\\n34 | / impl_i!([i32; 4]: i32x4, m32x4 | i32 | test_v128 | x0, x1, x2, x3 |\\n35 | |         From: i8x4, u8x4, i16x4, u16x4  |\\n36 | |         /// A 128-bit vector with 4 `i32` lanes.\\n37 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:38:1\\n   |\\n38 | / impl_u!([u32; 4]: u32x4, m32x4 | u32| test_v128 | x0, x1, x2, x3 |\\n39 | |         From: u8x4, u16x4 |\\n40 | |         /// A 128-bit vector with 4 `u32` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:42:1\\n   |\\n42 | / impl_f!([f32; 4]: f32x4, m32x4 | f32 | test_v128 | x0, x1, x2, x3 |\\n43 | |         From: i8x4, u8x4, i16x4, u16x4 |\\n44 | |         /// A 128-bit vector with 4 `f32` lanes.\\n45 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:51:1\\n   |\\n51 | / impl_i!([i64; 2]: i64x2, m64x2 | i64 | test_v128 | x0, x1 |\\n52 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2 |\\n53 | |         /// A 128-bit vector with 2 `i64` lanes.\\n54 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:55:1\\n   |\\n55 | / impl_u!([u64; 2]: u64x2, m64x2 | u64 | test_v128 | x0, x1 |\\n56 | |         From: u8x2, u16x2, u32x2 |\\n57 | |         /// A 128-bit vector with 2 `u64` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:59:1\\n   |\\n59 | / impl_f!([f64; 2]: f64x2, m64x2 | f64 | test_v128 | x0, x1 |\\n60 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, f32x2 |\\n61 | |         /// A 128-bit vector with 2 `f64` lanes.\\n62 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:68:1\\n   |\\n68 | / impl_i!([i128; 1]: i128x1, m128x1 | i128 | test_v128 | x0 |\\n69 | |         From: /*i8x1, u8x1, i16x1, u16x1, i32x1, u32x1, i64x1, u64x1 */ | // FIXME: unary small vector types\\n70 | |         /// A 128-bit vector with 1 `i128` lane.\\n71 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v128.rs:72:1\\n   |\\n72 | / impl_u!([u128; 1]: u128x1, m128x1 | u128 | test_v128 | x0 |\\n73 | |         From: /*u8x1, u16x1, u32x1, u64x1 */ | // FIXME: unary small vector types\\n74 | |         /// A 128-bit vector with 1 `u128` lane.\\n75 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:5:1\\n   |\\n5  | / impl_i!([i8; 32]: i8x32, m8x32 | i8 | test_v256 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n8  | |         From: |\\n9  | |         /// A 256-bit vector with 32 `i8` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:11:1\\n   |\\n11 | / impl_u!([u8; 32]: u8x32, m8x32 | u8 | test_v256 |\\n12 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n13 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n14 | |         From: |\\n15 | |         /// A 256-bit vector with 32 `u8` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:24:1\\n   |\\n24 | / impl_i!([i16; 16]: i16x16, m16x16 | i16 | test_v256 |\\n25 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n26 | |         From: i8x16, u8x16 |\\n27 | |         /// A 256-bit vector with 16 `i16` lanes.\\n28 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:29:1\\n   |\\n29 | / impl_u!([u16; 16]: u16x16, m16x16 | u16 | test_v256 |\\n30 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n31 | |         From: u8x16 |\\n32 | |         /// A 256-bit vector with 16 `u16` lanes.\\n33 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:40:1\\n   |\\n40 | / impl_i!([i32; 8]: i32x8, m32x8 | i32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7  |\\n41 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n42 | |         /// A 256-bit vector with 8 `i32` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:44:1\\n   |\\n44 | / impl_u!([u32; 8]: u32x8, m32x8 | u32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n45 | |         From: u8x8, u16x8 |\\n46 | |         /// A 256-bit vector with 8 `u32` lanes.\\n47 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:48:1\\n   |\\n48 | / impl_f!([f32; 8]: f32x8, m32x8 | f32 | test_v256 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n49 | |         From: i8x8, u8x8, i16x8, u16x8 |\\n50 | |         /// A 256-bit vector with 8 `f32` lanes.\\n51 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:57:1\\n   |\\n57 | / impl_i!([i64; 4]: i64x4, m64x4 | i64 | test_v256 | x0, x1, x2, x3 |\\n58 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4 |\\n59 | |         /// A 256-bit vector with 4 `i64` lanes.\\n60 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:61:1\\n   |\\n61 | / impl_u!([u64; 4]: u64x4, m64x4 | u64 | test_v256 | x0, x1, x2, x3 |\\n62 | |         From: u8x4, u16x4, u32x4 |\\n63 | |         /// A 256-bit vector with 4 `u64` lanes.\\n64 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:65:1\\n   |\\n65 | / impl_f!([f64; 4]: f64x4, m64x4 | f64 | test_v256 | x0, x1, x2, x3 |\\n66 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, f32x4 |\\n67 | |         /// A 256-bit vector with 4 `f64` lanes.\\n68 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:74:1\\n   |\\n74 | / impl_i!([i128; 2]: i128x2, m128x2 | i128 | test_v256 | x0, x1 |\\n75 | |         From: i8x2, u8x2, i16x2, u16x2, i32x2, u32x2, i64x2, u64x2 |\\n76 | |         /// A 256-bit vector with 2 `i128` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v256.rs:78:1\\n   |\\n78 | / impl_u!([u128; 2]: u128x2, m128x2 | u128 | test_v256 | x0, x1 |\\n79 | |         From: u8x2, u16x2, u32x2, u64x2 |\\n80 | |         /// A 256-bit vector with 2 `u128` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:5:1\\n   |\\n5  | / impl_i!([i8; 64]: i8x64, m8x64 | i8 | test_v512 |\\n6  | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n7  | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n8  | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n11 | |         /// A 512-bit vector with 64 `i8` lanes.\\n12 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:13:1\\n   |\\n13 | / impl_u!([u8; 64]: u8x64, m8x64 | u8 | test_v512 |\\n14 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n15 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31,\\n16 | |         x32, x33, x34, x35, x36, x37, x38, x39, x40, x41, x42, x43, x44, x45, x46, x47,\\n...  |\\n19 | |         /// A 512-bit vector with 64 `u8` lanes.\\n20 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:30:1\\n   |\\n30 | / impl_i!([i16; 32]: i16x32, m16x32 | i16 | test_v512 |\\n31 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n32 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n33 | |         From: i8x32, u8x32 |\\n34 | |         /// A 512-bit vector with 32 `i16` lanes.\\n35 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:36:1\\n   |\\n36 | / impl_u!([u16; 32]: u16x32, m16x32 | u16 | test_v512 |\\n37 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15,\\n38 | |         x16, x17, x18, x19, x20, x21, x22, x23, x24, x25, x26, x27, x28, x29, x30, x31 |\\n39 | |         From: u8x32 |\\n40 | |         /// A 512-bit vector with 32 `u16` lanes.\\n41 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:49:1\\n   |\\n49 | / impl_i!([i32; 16]: i32x16, m32x16 | i32 | test_v512 |\\n50 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n51 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n52 | |         /// A 512-bit vector with 16 `i32` lanes.\\n53 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:54:1\\n   |\\n54 | / impl_u!([u32; 16]: u32x16, m32x16 | u32 | test_v512 |\\n55 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n56 | |         From: u8x16, u16x16 |\\n57 | |         /// A 512-bit vector with 16 `u32` lanes.\\n58 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:59:1\\n   |\\n59 | / impl_f!([f32; 16]: f32x16, m32x16 | f32 | test_v512 |\\n60 | |         x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15 |\\n61 | |         From: i8x16, u8x16, i16x16, u16x16 |\\n62 | |         /// A 512-bit vector with 16 `f32` lanes.\\n63 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:70:1\\n   |\\n70 | / impl_i!([i64; 8]: i64x8, m64x8 | i64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n71 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8 |\\n72 | |         /// A 512-bit vector with 8 `i64` lanes.\\n73 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:74:1\\n   |\\n74 | / impl_u!([u64; 8]: u64x8, m64x8 | u64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n75 | |         From: u8x8, u16x8, u32x8 |\\n76 | |         /// A 512-bit vector with 8 `u64` lanes.\\n77 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:78:1\\n   |\\n78 | / impl_f!([f64; 8]: f64x8, m64x8 | f64 | test_v512 | x0, x1, x2, x3, x4, x5, x6, x7 |\\n79 | |         From: i8x8, u8x8, i16x8, u16x8, i32x8, u32x8, f32x8 |\\n80 | |         /// A 512-bit vector with 8 `f64` lanes.\\n81 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:87:1\\n   |\\n87 | / impl_i!([i128; 4]: i128x4, m128x4 | i128 | test_v512 | x0, x1, x2, x3 |\\n88 | |         From: i8x4, u8x4, i16x4, u16x4, i32x4, u32x4, i64x4, u64x4 |\\n89 | |         /// A 512-bit vector with 4 `i128` lanes.\\n90 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/v512.rs:91:1\\n   |\\n91 | / impl_u!([u128; 4]: u128x4, m128x4 | u128 | test_v512 | x0, x1, x2, x3 |\\n92 | |         From: u8x4, u16x4, u32x4, u64x4 |\\n93 | |         /// A 512-bit vector with 4 `u128` lanes.\\n94 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:6:1\\n   |\\n6  | / impl_i!([isize; 2]: isizex2, msizex2 | isize_ | test_v128 |\\n7  | |         x0, x1|\\n8  | |         From: |\\n9  | |         /// A vector with 2 `isize` lanes.\\n10 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:12:1\\n   |\\n12 | / impl_u!([usize; 2]: usizex2, msizex2 | usize_ | test_v128 |\\n13 | |         x0, x1|\\n14 | |         From: |\\n15 | |         /// A vector with 2 `usize` lanes.\\n16 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:23:1\\n   |\\n23 | / impl_i!([isize; 4]: isizex4, msizex4 | isize_ | test_v256 |\\n24 | |         x0, x1, x2, x3 |\\n25 | |         From: |\\n26 | |         /// A vector with 4 `isize` lanes.\\n27 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:28:1\\n   |\\n28 | / impl_u!([usize; 4]: usizex4, msizex4 | usize_ | test_v256 |\\n29 | |         x0, x1, x2, x3|\\n30 | |         From: |\\n31 | |         /// A vector with 4 `usize` lanes.\\n32 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:39:1\\n   |\\n39 | / impl_i!([isize; 8]: isizex8, msizex8 | isize_ | test_v512 |\\n40 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n41 | |         From: |\\n42 | |         /// A vector with 4 `isize` lanes.\\n43 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror[E0658]: use of unstable library feature \\'align_offset\\'\\n  --> src/api/slice/write_to_slice.rs:54:32\\n   |\\n54 |                       target_ptr.align_offset(crate::mem::align_of::<Self>()),\\n   |                                  ^^^^^^^^^^^^\\n   | \\n  ::: src/vSize.rs:44:1\\n   |\\n44 | / impl_u!([usize; 8]: usizex8, msizex8 | usize_ | test_v512 |\\n45 | |         x0, x1, x2, x3, x4, x5, x6, x7 |\\n46 | |         From: |\\n47 | |         /// A vector with 8 `usize` lanes.\\n48 | | );\\n   | |__- in this macro invocation\\n   |\\n   = note: for more information, see https://github.com/rust-lang/rust/issues/44488\\n   = help: add #![feature(align_offset)] to the crate attributes to enable\\n\\nerror: aborting due to 232 previous errors\\n\\nFor more information about this error, try `rustc --explain E0658`.\\nerror: Could not compile `packed_simd`.\\n\\nTo learn more, run the command again with --verbose.\\n\\n\\n stdout=\" }\n\nstack backtrace:\n   0:     0x560ecca503bd - backtrace::backtrace::libunwind::trace::h8397bdb6a24b9f40\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/libunwind.rs:53\n                         - backtrace::backtrace::trace::h125f2cf00fdf546b\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/backtrace/mod.rs:42\n   1:     0x560ecca50552 - backtrace::capture::Backtrace::new_unresolved::h4d6de04be21bce48\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.9/src/capture.rs:88\n   2:     0x560ecca4f86c - failure::backtrace::internal::InternalBacktrace::new::hc3b584ab8d252034\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/internal.rs:44\n                         - failure::backtrace::Backtrace::new::h6f39e1906f974748\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/backtrace/mod.rs:111\n   3:     0x560ecc9eb470 - <failure::error::error_impl::ErrorImpl as core::convert::From<F>>::from::h2fd1b3a4ef3bebbf\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/error_impl.rs:19\n                         - <failure::error::Error as core::convert::From<F>>::from::hd1f148dfe530685d\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error/mod.rs:36\n                         - failure::error_message::err_msg::h361242fbf0484899\n                        at /home/alex/.cargo/registry/src/github.com-1ecc6299db9ec823/failure-0.1.5/src/error_message.rs:12\n                         - collector::command_output::h10ec8cf3e6f97b45\n                        at collector/src/lib.rs:527\n   4:     0x560ecc6d9afa - collector::execute::CargoProcess::run_rustc::h061e683ca8dccf36\n                        at collector/src/bin/rustc-perf-collector/execute.rs:229\n   5:     0x560ecc6e1722 - collector::execute::Benchmark::measure::h2d0f9223356097f9\n                        at collector/src/bin/rustc-perf-collector/execute.rs:708\n   6:     0x560ecc6f3541 - collector::bench_commit::hfdb1fac25c1605dc\n                        at collector/src/bin/rustc-perf-collector/main.rs:191\n   7:     0x560ecc702a1b - collector::main_result::hc71525e6d78bdd83\n                        at collector/src/bin/rustc-perf-collector/main.rs:511\n   8:     0x560ecc6f896e - collector::main::hdbaeb352a8e60c44\n                        at collector/src/bin/rustc-perf-collector/main.rs:264\n   9:     0x560ecc6ace22 - std::rt::lang_start::{{closure}}::h8ccb8ec391a6ef8d\n                        at /rustc/f22dca0a1bef4141e75326caacc3cd59f3d5be8e/src/libstd/rt.rs:64\n  10:     0x560ecca770d2 - {{closure}}\n                        at src/libstd/rt.rs:49\n                         - do_call<closure,i32>\n                        at src/libstd/panicking.rs:293\n  11:     0x560ecca81d39 - __rust_maybe_catch_panic\n                        at src/libpanic_unwind/lib.rs:87\n  12:     0x560ecca77c9c - try<i32,closure>\n                        at src/libstd/panicking.rs:272\n                         - catch_unwind<closure,i32>\n                        at src/libstd/panic.rs:388\n                         - lang_start_internal\n                        at src/libstd/rt.rs:48\n  13:     0x560ecc706d57 - main\n  14:     0x7f847acd582f - __libc_start_main\n  15:     0x560ecc6a2518 - _start\n  16:                0x0 - <unknown>"},"piston-image":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":1836.582799},{"name":"cpu-clock","cnt":1836.582634},{"name":"instructions:u","cnt":8678419522.0},{"name":"max-rss","cnt":203752.0},{"name":"wall-time","cnt":1.879499917},{"name":"faults","cnt":26801.0},{"name":"cycles:u","cnt":7167859331.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":10681301441.0},{"name":"task-clock","cnt":2267.197566},{"name":"max-rss","cnt":259672.0},{"name":"wall-time","cnt":2.303058115},{"name":"cpu-clock","cnt":2267.196731},{"name":"faults","cnt":40741.0},{"name":"cycles:u","cnt":8804503036.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":487.990742},{"name":"max-rss","cnt":240828.0},{"name":"wall-time","cnt":0.493750505},{"name":"faults","cnt":38230.0},{"name":"instructions:u","cnt":2201600481.0},{"name":"cycles:u","cnt":1731538921.0},{"name":"cpu-clock","cnt":487.979501}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":248340.0},{"name":"cpu-clock","cnt":515.735619},{"name":"instructions:u","cnt":2294020006.0},{"name":"task-clock","cnt":515.735165},{"name":"wall-time","cnt":0.506023504},{"name":"faults","cnt":37952.0},{"name":"cycles:u","cnt":1842127362.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":476200.0},{"name":"task-clock","cnt":9189.205078},{"name":"instructions:u","cnt":36635245252.0},{"name":"faults","cnt":93965.0},{"name":"cpu-clock","cnt":9189.218817},{"name":"wall-time","cnt":4.034966841},{"name":"cycles:u","cnt":34726614524.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":10365.974354},{"name":"instructions:u","cnt":41029427933.0},{"name":"cycles:u","cnt":39097281238.0},{"name":"faults","cnt":101087.0},{"name":"max-rss","cnt":502224.0},{"name":"cpu-clock","cnt":10366.067015},{"name":"wall-time","cnt":4.760613908}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":3968764450.0},{"name":"cycles:u","cnt":3194919963.0},{"name":"task-clock","cnt":934.036154},{"name":"cpu-clock","cnt":933.935146},{"name":"wall-time","cnt":0.901968939},{"name":"faults","cnt":64442.0},{"name":"max-rss","cnt":386400.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":1021.202959},{"name":"max-rss","cnt":397700.0},{"name":"instructions:u","cnt":4269866430.0},{"name":"cycles:u","cnt":3539852166.0},{"name":"task-clock","cnt":1021.289044},{"name":"wall-time","cnt":0.950676465},{"name":"faults","cnt":65646.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":434492.0},{"name":"cpu-clock","cnt":39096.114512},{"name":"task-clock","cnt":39096.095111},{"name":"wall-time","cnt":7.968761083},{"name":"faults","cnt":87935.0},{"name":"instructions:u","cnt":120465804397.0},{"name":"cycles:u","cnt":147926335642.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":43247.679474},{"name":"faults","cnt":100912.0},{"name":"max-rss","cnt":492996.0},{"name":"instructions:u","cnt":128518504070.0},{"name":"cycles:u","cnt":163209596291.0},{"name":"task-clock","cnt":43247.574098},{"name":"wall-time","cnt":8.294792551}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":3323118426.0},{"name":"wall-time","cnt":0.900781987},{"name":"cpu-clock","cnt":947.294337},{"name":"task-clock","cnt":947.368112},{"name":"instructions:u","cnt":4063086084.0},{"name":"max-rss","cnt":362240.0},{"name":"faults","cnt":64778.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":66756.0},{"name":"cpu-clock","cnt":1420.372905},{"name":"cycles:u","cnt":5171730233.0},{"name":"wall-time","cnt":1.2966554},{"name":"instructions:u","cnt":6268946041.0},{"name":"task-clock","cnt":1420.453141},{"name":"max-rss","cnt":379700.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"piston-image"}},"regex":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":4016984199.0},{"name":"max-rss","cnt":167192.0},{"name":"cpu-clock","cnt":938.303516},{"name":"task-clock","cnt":938.313382},{"name":"wall-time","cnt":0.95659786},{"name":"faults","cnt":18998.0},{"name":"cycles:u","cnt":3621159705.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":208572.0},{"name":"faults","cnt":28294.0},{"name":"cycles:u","cnt":4555814510.0},{"name":"wall-time","cnt":1.235024546},{"name":"cpu-clock","cnt":1186.38342},{"name":"instructions:u","cnt":5123789216.0},{"name":"task-clock","cnt":1186.385191}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":29587.0},{"name":"instructions:u","cnt":1550831171.0},{"name":"wall-time","cnt":0.334723728},{"name":"max-rss","cnt":203108.0},{"name":"cpu-clock","cnt":334.973541},{"name":"task-clock","cnt":334.974553},{"name":"cycles:u","cnt":1166541782.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":520.581987},{"name":"faults","cnt":30389.0},{"name":"instructions:u","cnt":2300379339.0},{"name":"wall-time","cnt":0.536510587},{"name":"cycles:u","cnt":1895887229.0},{"name":"max-rss","cnt":214588.0},{"name":"cpu-clock","cnt":520.590058}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"wall-time","cnt":0.346998527},{"name":"instructions:u","cnt":1601890407.0},{"name":"max-rss","cnt":204652.0},{"name":"cpu-clock","cnt":346.248604},{"name":"faults","cnt":28107.0},{"name":"cycles:u","cnt":1213760966.0},{"name":"task-clock","cnt":346.25004}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"instructions:u","cnt":1649225142.0},{"name":"faults","cnt":29820.0},{"name":"wall-time","cnt":0.376366936},{"name":"cycles:u","cnt":1268011434.0},{"name":"task-clock","cnt":365.561987},{"name":"cpu-clock","cnt":365.561152},{"name":"max-rss","cnt":211888.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"faults","cnt":30398.0},{"name":"wall-time","cnt":0.524921153},{"name":"task-clock","cnt":526.21781},{"name":"instructions:u","cnt":2322157273.0},{"name":"cycles:u","cnt":1923826137.0},{"name":"max-rss","cnt":214684.0},{"name":"cpu-clock","cnt":526.226055}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"cpu-clock","cnt":515.836532},{"name":"wall-time","cnt":0.534483174},{"name":"cycles:u","cnt":1878026144.0},{"name":"task-clock","cnt":515.837093},{"name":"faults","cnt":29682.0},{"name":"max-rss","cnt":211788.0},{"name":"instructions:u","cnt":2321318767.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"task-clock","cnt":344.200603},{"name":"max-rss","cnt":204096.0},{"name":"faults","cnt":28073.0},{"name":"wall-time","cnt":0.345025329},{"name":"instructions:u","cnt":1586550402.0},{"name":"cycles:u","cnt":1197230209.0},{"name":"cpu-clock","cnt":344.199639}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"instructions:u","cnt":2028774344.0},{"name":"faults","cnt":30599.0},{"name":"wall-time","cnt":0.469558236},{"name":"cpu-clock","cnt":450.363138},{"name":"cycles:u","cnt":1613963927.0},{"name":"task-clock","cnt":450.363694},{"name":"max-rss","cnt":214756.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"wall-time","cnt":0.394233448},{"name":"cpu-clock","cnt":397.243477},{"name":"faults","cnt":28835.0},{"name":"task-clock","cnt":397.244939},{"name":"max-rss","cnt":207656.0},{"name":"cycles:u","cnt":1400940855.0},{"name":"instructions:u","cnt":1771677025.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":28659.0},{"name":"cycles:u","cnt":1479046834.0},{"name":"cpu-clock","cnt":416.027505},{"name":"instructions:u","cnt":1821689421.0},{"name":"wall-time","cnt":0.437123284},{"name":"task-clock","cnt":416.028095},{"name":"max-rss","cnt":207608.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":22876078223.0},{"name":"cycles:u","cnt":27371932370.0},{"name":"max-rss","cnt":410200.0},{"name":"task-clock","cnt":7321.101111},{"name":"wall-time","cnt":2.200966775},{"name":"faults","cnt":78560.0},{"name":"cpu-clock","cnt":7321.094118}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":7819.212454},{"name":"faults","cnt":78591.0},{"name":"wall-time","cnt":2.680701256},{"name":"instructions:u","cnt":25774871696.0},{"name":"cycles:u","cnt":29247549208.0},{"name":"cpu-clock","cnt":7819.232089},{"name":"max-rss","cnt":417040.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":269016.0},{"name":"cycles:u","cnt":1845030778.0},{"name":"task-clock","cnt":548.107087},{"name":"instructions:u","cnt":2316760339.0},{"name":"faults","cnt":40749.0},{"name":"wall-time","cnt":0.523593179},{"name":"cpu-clock","cnt":548.064866}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":6351509576.0},{"name":"wall-time","cnt":0.996002139},{"name":"instructions:u","cnt":6923180851.0},{"name":"faults","cnt":56522.0},{"name":"max-rss","cnt":334684.0},{"name":"task-clock","cnt":1749.458819},{"name":"cpu-clock","cnt":1749.39881}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"faults","cnt":41304.0},{"name":"cycles:u","cnt":1913455540.0},{"name":"wall-time","cnt":0.536301523},{"name":"max-rss","cnt":279100.0},{"name":"cpu-clock","cnt":569.802354},{"name":"instructions:u","cnt":2397116108.0},{"name":"task-clock","cnt":569.856756}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"instructions:u","cnt":3132607462.0},{"name":"task-clock","cnt":747.329087},{"name":"cycles:u","cnt":2593096120.0},{"name":"wall-time","cnt":0.639929658},{"name":"faults","cnt":44193.0},{"name":"cpu-clock","cnt":747.253108},{"name":"max-rss","cnt":289948.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cycles:u","cnt":6404580157.0},{"name":"instructions:u","cnt":6952962004.0},{"name":"faults","cnt":55313.0},{"name":"task-clock","cnt":1760.161993},{"name":"max-rss","cnt":332912.0},{"name":"cpu-clock","cnt":1760.112233},{"name":"wall-time","cnt":0.994658528}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"cpu-clock","cnt":1759.888655},{"name":"faults","cnt":56502.0},{"name":"cycles:u","cnt":6396957713.0},{"name":"task-clock","cnt":1759.910521},{"name":"max-rss","cnt":337144.0},{"name":"wall-time","cnt":0.972309539},{"name":"instructions:u","cnt":6952663666.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"task-clock","cnt":553.59456},{"name":"wall-time","cnt":0.52700424},{"name":"faults","cnt":40742.0},{"name":"cycles:u","cnt":1863521315.0},{"name":"max-rss","cnt":271540.0},{"name":"cpu-clock","cnt":553.527467},{"name":"instructions:u","cnt":2342907769.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"wall-time","cnt":1.475478875},{"name":"cpu-clock","cnt":5417.807221},{"name":"cycles:u","cnt":20008223321.0},{"name":"max-rss","cnt":430512.0},{"name":"instructions:u","cnt":17645451499.0},{"name":"faults","cnt":82211.0},{"name":"task-clock","cnt":5417.795518}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"cpu-clock","cnt":5296.072288},{"name":"wall-time","cnt":1.405870375},{"name":"max-rss","cnt":435440.0},{"name":"cycles:u","cnt":19566053779.0},{"name":"faults","cnt":83035.0},{"name":"task-clock","cnt":5296.080923},{"name":"instructions:u","cnt":17010612082.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"cycles:u","cnt":3117163879.0},{"name":"max-rss","cnt":301500.0},{"name":"faults","cnt":47086.0},{"name":"task-clock","cnt":887.492482},{"name":"wall-time","cnt":0.677040595},{"name":"cpu-clock","cnt":887.428316},{"name":"instructions:u","cnt":3743300444.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":22088.111729},{"name":"faults","cnt":62846.0},{"name":"max-rss","cnt":344708.0},{"name":"wall-time","cnt":4.532545028},{"name":"task-clock","cnt":22088.052705},{"name":"instructions:u","cnt":66232697871.0},{"name":"cycles:u","cnt":83459095138.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":76910.0},{"name":"instructions:u","cnt":71889630499.0},{"name":"cycles:u","cnt":91801614552.0},{"name":"cpu-clock","cnt":24344.415778},{"name":"task-clock","cnt":24344.370715},{"name":"max-rss","cnt":398112.0},{"name":"wall-time","cnt":4.972162696}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":40426.0},{"name":"instructions:u","cnt":2340876230.0},{"name":"max-rss","cnt":255512.0},{"name":"wall-time","cnt":0.509732758},{"name":"task-clock","cnt":539.752501},{"name":"cycles:u","cnt":1857135188.0},{"name":"cpu-clock","cnt":539.702341}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":398580.0},{"name":"task-clock","cnt":13923.738293},{"name":"instructions:u","cnt":41926656629.0},{"name":"cycles:u","cnt":52383474397.0},{"name":"wall-time","cnt":2.993865328},{"name":"cpu-clock","cnt":13923.766912},{"name":"faults","cnt":76284.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"compile one","path":"0-compile-one.patch"}}},{"stats":[{"name":"faults","cnt":41480.0},{"name":"task-clock","cnt":612.721999},{"name":"max-rss","cnt":268940.0},{"name":"cycles:u","cnt":2122264923.0},{"name":"cpu-clock","cnt":612.660438},{"name":"wall-time","cnt":0.531035716},{"name":"instructions:u","cnt":2628231887.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"is valid cap letter","path":"1-is-valid-cap-letter.patch"}}},{"stats":[{"name":"wall-time","cnt":0.551069279},{"name":"instructions:u","cnt":2672095665.0},{"name":"faults","cnt":41547.0},{"name":"cycles:u","cnt":2235562507.0},{"name":"task-clock","cnt":643.10224},{"name":"cpu-clock","cnt":643.041968},{"name":"max-rss","cnt":268988.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"expand","path":"2-expand.patch"}}},{"stats":[{"name":"cpu-clock","cnt":13858.597462},{"name":"max-rss","cnt":398632.0},{"name":"wall-time","cnt":2.965751007},{"name":"faults","cnt":76383.0},{"name":"task-clock","cnt":13858.578185},{"name":"cycles:u","cnt":52129216141.0},{"name":"instructions:u","cnt":41956324945.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":3,"name":"Compiler new","path":"3-Compiler-new.patch"}}},{"stats":[{"name":"task-clock","cnt":13863.879716},{"name":"instructions:u","cnt":41949544213.0},{"name":"wall-time","cnt":2.957835351},{"name":"cpu-clock","cnt":13863.885451},{"name":"faults","cnt":76338.0},{"name":"cycles:u","cnt":52140503897.0},{"name":"max-rss","cnt":398148.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":4,"name":"reverse","path":"4-reverse.patch"}}},{"stats":[{"name":"instructions:u","cnt":2367865604.0},{"name":"task-clock","cnt":549.684061},{"name":"faults","cnt":40239.0},{"name":"cpu-clock","cnt":549.622541},{"name":"max-rss","cnt":256704.0},{"name":"cycles:u","cnt":1882971416.0},{"name":"wall-time","cnt":0.516368965}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":5,"name":"byte frequencies","path":"5-byte-frequencies.patch"}}},{"stats":[{"name":"wall-time","cnt":3.609996256},{"name":"max-rss","cnt":404780.0},{"name":"cpu-clock","cnt":19086.565996},{"name":"instructions:u","cnt":58184458293.0},{"name":"task-clock","cnt":19086.493133},{"name":"faults","cnt":78140.0},{"name":"cycles:u","cnt":71843355187.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":6,"name":"sparse set","path":"6-sparse-set.patch"}}},{"stats":[{"name":"faults","cnt":77899.0},{"name":"cpu-clock","cnt":19165.442676},{"name":"max-rss","cnt":403612.0},{"name":"task-clock","cnt":19165.405993},{"name":"cycles:u","cnt":72163462785.0},{"name":"wall-time","cnt":3.543954416},{"name":"instructions:u","cnt":57936378178.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":7,"name":"Job","path":"7-Job.patch"}}},{"stats":[{"name":"faults","cnt":55724.0},{"name":"wall-time","cnt":1.928772151},{"name":"cpu-clock","cnt":2590.05932},{"name":"max-rss","cnt":323820.0},{"name":"cycles:u","cnt":9852138148.0},{"name":"task-clock","cnt":2590.11577},{"name":"instructions:u","cnt":12907619467.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":8,"name":"println","path":"8-println.patch"}}}],"name":"regex"}},"regression-31157":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":240.232291},{"name":"cycles:u","cnt":889920221.0},{"name":"cpu-clock","cnt":240.231103},{"name":"max-rss","cnt":123528.0},{"name":"instructions:u","cnt":1224858103.0},{"name":"wall-time","cnt":0.258001963},{"name":"faults","cnt":8015.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":1106708312.0},{"name":"instructions:u","cnt":1492524349.0},{"name":"max-rss","cnt":136072.0},{"name":"wall-time","cnt":0.31673471},{"name":"task-clock","cnt":298.675033},{"name":"cpu-clock","cnt":298.672408},{"name":"faults","cnt":11054.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.101720543},{"name":"max-rss","cnt":120168.0},{"name":"task-clock","cnt":87.829454},{"name":"cycles:u","cnt":271793801.0},{"name":"cpu-clock","cnt":87.827883},{"name":"faults","cnt":10794.0},{"name":"instructions:u","cnt":397888760.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":115.045154},{"name":"max-rss","cnt":138220.0},{"name":"cycles:u","cnt":374301945.0},{"name":"faults","cnt":11578.0},{"name":"instructions:u","cnt":513368879.0},{"name":"wall-time","cnt":0.129006343},{"name":"cpu-clock","cnt":115.043349}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":0.901759782},{"name":"task-clock","cnt":1875.522712},{"name":"instructions:u","cnt":7611118589.0},{"name":"faults","cnt":27590.0},{"name":"max-rss","cnt":210496.0},{"name":"cycles:u","cnt":7015680647.0},{"name":"cpu-clock","cnt":1875.515217}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":1.022812245},{"name":"max-rss","cnt":231732.0},{"name":"cpu-clock","cnt":2112.850225},{"name":"instructions:u","cnt":8503025464.0},{"name":"task-clock","cnt":2112.83924},{"name":"faults","cnt":32694.0},{"name":"cycles:u","cnt":7877764265.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.231269663},{"name":"max-rss","cnt":165684.0},{"name":"cpu-clock","cnt":209.324903},{"name":"cycles:u","cnt":675207239.0},{"name":"faults","cnt":17859.0},{"name":"task-clock","cnt":209.338048},{"name":"instructions:u","cnt":854493283.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":189984.0},{"name":"task-clock","cnt":252.028193},{"name":"faults","cnt":19723.0},{"name":"cycles:u","cnt":823443449.0},{"name":"instructions:u","cnt":1061421676.0},{"name":"cpu-clock","cnt":252.030262},{"name":"wall-time","cnt":0.237569169}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":26547949949.0},{"name":"cpu-clock","cnt":6959.564864},{"name":"instructions:u","cnt":24893315178.0},{"name":"faults","cnt":28984.0},{"name":"max-rss","cnt":213896.0},{"name":"wall-time","cnt":2.641843672},{"name":"task-clock","cnt":6959.568075}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":28153126248.0},{"name":"cpu-clock","cnt":7397.490069},{"name":"faults","cnt":34687.0},{"name":"max-rss","cnt":237748.0},{"name":"wall-time","cnt":2.782256949},{"name":"instructions:u","cnt":26040021057.0},{"name":"task-clock","cnt":7397.50434}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":697748701.0},{"name":"wall-time","cnt":0.228046008},{"name":"faults","cnt":19005.0},{"name":"max-rss","cnt":162800.0},{"name":"task-clock","cnt":211.408803},{"name":"cpu-clock","cnt":211.405558},{"name":"instructions:u","cnt":860869115.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2508.468915},{"name":"faults","cnt":30482.0},{"name":"instructions:u","cnt":10125780274.0},{"name":"max-rss","cnt":220440.0},{"name":"cycles:u","cnt":9526363885.0},{"name":"task-clock","cnt":2508.482229},{"name":"wall-time","cnt":1.405902516}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"regression-31157"}},"ripgrep":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":17504.0},{"name":"instructions:u","cnt":3494844730.0},{"name":"max-rss","cnt":167728.0},{"name":"wall-time","cnt":0.795240335},{"name":"cpu-clock","cnt":764.788355},{"name":"cycles:u","cnt":2929358030.0},{"name":"task-clock","cnt":764.788694}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":4478276624.0},{"name":"cpu-clock","cnt":985.768902},{"name":"wall-time","cnt":1.029723791},{"name":"task-clock","cnt":985.770416},{"name":"max-rss","cnt":202120.0},{"name":"cycles:u","cnt":3764041153.0},{"name":"faults","cnt":25928.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":250.538534},{"name":"wall-time","cnt":0.252879017},{"name":"max-rss","cnt":189984.0},{"name":"instructions:u","cnt":1174561046.0},{"name":"cycles:u","cnt":842853717.0},{"name":"task-clock","cnt":250.54015},{"name":"faults","cnt":24986.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":290.538827},{"name":"wall-time","cnt":0.310900607},{"name":"cpu-clock","cnt":290.553974},{"name":"max-rss","cnt":203016.0},{"name":"cycles:u","cnt":998852237.0},{"name":"faults","cnt":26126.0},{"name":"instructions:u","cnt":1361520616.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":19662686404.0},{"name":"max-rss","cnt":332600.0},{"name":"instructions:u","cnt":21170952157.0},{"name":"wall-time","cnt":3.040666989},{"name":"faults","cnt":105236.0},{"name":"cpu-clock","cnt":5395.562828},{"name":"task-clock","cnt":5395.541237}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":23229973106.0},{"name":"cpu-clock","cnt":6419.181532},{"name":"max-rss","cnt":377444.0},{"name":"faults","cnt":119102.0},{"name":"instructions:u","cnt":24702508329.0},{"name":"wall-time","cnt":3.587394583},{"name":"task-clock","cnt":6419.158346}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1613.209378},{"name":"cpu-clock","cnt":1613.139542},{"name":"wall-time","cnt":1.581937731},{"name":"cycles:u","cnt":5119877919.0},{"name":"faults","cnt":92554.0},{"name":"max-rss","cnt":282740.0},{"name":"instructions:u","cnt":6457306932.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":6630661434.0},{"name":"wall-time","cnt":1.638573125},{"name":"max-rss","cnt":290916.0},{"name":"task-clock","cnt":1680.565667},{"name":"cycles:u","cnt":5261563163.0},{"name":"cpu-clock","cnt":1680.487071},{"name":"faults","cnt":93418.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":154180601878.0},{"name":"max-rss","cnt":638472.0},{"name":"cpu-clock","cnt":41054.21135},{"name":"task-clock","cnt":41054.1778},{"name":"instructions:u","cnt":122513147746.0},{"name":"wall-time","cnt":7.877432069},{"name":"faults","cnt":183496.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":8.304670106},{"name":"instructions:u","cnt":133401284036.0},{"name":"task-clock","cnt":45879.663902},{"name":"max-rss","cnt":639516.0},{"name":"cpu-clock","cnt":45879.782905},{"name":"faults","cnt":187995.0},{"name":"cycles:u","cnt":172003707481.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":302404.0},{"name":"wall-time","cnt":1.277445455},{"name":"task-clock","cnt":1328.931927},{"name":"cpu-clock","cnt":1328.852021},{"name":"faults","cnt":90425.0},{"name":"instructions:u","cnt":6824191797.0},{"name":"cycles:u","cnt":4357922320.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":7261021922.0},{"name":"cpu-clock","cnt":2089.0798},{"name":"faults","cnt":98802.0},{"name":"instructions:u","cnt":10341065171.0},{"name":"task-clock","cnt":2089.202104},{"name":"max-rss","cnt":355880.0},{"name":"wall-time","cnt":1.756614926}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"ripgrep"}},"script-servo":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":2431744.0},{"name":"instructions:u","cnt":190288644672.0},{"name":"faults","cnt":699968.0},{"name":"cycles:u","cnt":173051914549.0},{"name":"task-clock","cnt":44679.462502},{"name":"wall-time","cnt":44.717041162},{"name":"cpu-clock","cnt":44679.483237}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":55735.583847},{"name":"cycles:u","cnt":216621039911.0},{"name":"cpu-clock","cnt":55735.612201},{"name":"instructions:u","cnt":246152330076.0},{"name":"faults","cnt":1212486.0},{"name":"wall-time","cnt":55.775181575},{"name":"max-rss","cnt":4004752.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":1056671.0},{"name":"task-clock","cnt":20622.75494},{"name":"cycles:u","cnt":75535398753.0},{"name":"instructions:u","cnt":89284571868.0},{"name":"max-rss","cnt":4230692.0},{"name":"cpu-clock","cnt":20622.761509},{"name":"wall-time","cnt":19.886743672}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":20519.326612},{"name":"faults","cnt":1051878.0},{"name":"instructions:u","cnt":89468868693.0},{"name":"task-clock","cnt":20519.32315},{"name":"max-rss","cnt":4244372.0},{"name":"wall-time","cnt":19.807613605},{"name":"cycles:u","cnt":76695113729.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"cycles:u","cnt":78677625704.0},{"name":"wall-time","cnt":20.996015047},{"name":"task-clock","cnt":21025.916327},{"name":"max-rss","cnt":4167880.0},{"name":"faults","cnt":1063615.0},{"name":"instructions:u","cnt":92404526951.0},{"name":"cpu-clock","cnt":21025.916322}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":169988679585.0},{"name":"faults","cnt":1346624.0},{"name":"task-clock","cnt":44221.52075},{"name":"wall-time","cnt":43.500381884},{"name":"max-rss","cnt":4804788.0},{"name":"instructions:u","cnt":188853078062.0},{"name":"cpu-clock","cnt":44221.494033}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"instructions:u","cnt":773009927900.0},{"name":"faults","cnt":1977208.0},{"name":"cycles:u","cnt":758061039976.0},{"name":"max-rss","cnt":5705172.0},{"name":"task-clock","cnt":200287.810875},{"name":"cpu-clock","cnt":200287.90066},{"name":"wall-time","cnt":92.427274571}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":8495676.0},{"name":"wall-time","cnt":182.70681485},{"name":"cycles:u","cnt":1470085358229.0},{"name":"faults","cnt":3132235.0},{"name":"instructions:u","cnt":1698351951545.0},{"name":"cpu-clock","cnt":388267.645852},{"name":"task-clock","cnt":388266.622233}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":30605.063278},{"name":"cpu-clock","cnt":30603.705403},{"name":"faults","cnt":1566704.0},{"name":"cycles:u","cnt":105149887702.0},{"name":"wall-time","cnt":37.942669499},{"name":"max-rss","cnt":9374568.0},{"name":"instructions:u","cnt":120483310273.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":9729148.0},{"name":"faults","cnt":1677687.0},{"name":"cycles:u","cnt":123105566460.0},{"name":"task-clock","cnt":35469.135132},{"name":"instructions:u","cnt":139774316367.0},{"name":"cpu-clock","cnt":35467.421981},{"name":"wall-time","cnt":39.086450429}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"faults","cnt":1576528.0},{"name":"max-rss","cnt":9343456.0},{"name":"task-clock","cnt":31939.823175},{"name":"wall-time","cnt":38.597153562},{"name":"cycles:u","cnt":111766420121.0},{"name":"cpu-clock","cnt":31938.25263},{"name":"instructions:u","cnt":127442845060.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":351095.146043},{"name":"cycles:u","cnt":1320402985647.0},{"name":"instructions:u","cnt":1500895578001.0},{"name":"faults","cnt":3207481.0},{"name":"max-rss","cnt":9289736.0},{"name":"wall-time","cnt":157.014503416},{"name":"task-clock","cnt":351094.844012}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}},{"stats":[{"name":"task-clock","cnt":785286.221213},{"name":"cycles:u","cnt":2966229080911.0},{"name":"max-rss","cnt":4364348.0},{"name":"instructions:u","cnt":2248984745482.0},{"name":"faults","cnt":2540153.0},{"name":"wall-time","cnt":184.754455435},{"name":"cpu-clock","cnt":785286.606899}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":4185729086495.0},{"name":"task-clock","cnt":1112689.43291},{"name":"max-rss","cnt":5687164.0},{"name":"faults","cnt":3389314.0},{"name":"wall-time","cnt":214.640817835},{"name":"cpu-clock","cnt":1112690.769763},{"name":"instructions:u","cnt":3223247943589.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":102167782039.0},{"name":"task-clock","cnt":28144.84261},{"name":"wall-time","cnt":26.139694693},{"name":"max-rss","cnt":5600296.0},{"name":"instructions:u","cnt":114224435824.0},{"name":"cpu-clock","cnt":28143.913569},{"name":"faults","cnt":1344528.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":397474.291274},{"name":"instructions:u","cnt":1149620562555.0},{"name":"faults","cnt":2104944.0},{"name":"max-rss","cnt":7072888.0},{"name":"cycles:u","cnt":1491748093191.0},{"name":"cpu-clock","cnt":397474.31382},{"name":"wall-time","cnt":85.047726506}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"debugging println in dependency","path":"0-debugging-println-in-dependency.patch"}}},{"stats":[{"name":"instructions:u","cnt":420905466573.0},{"name":"task-clock","cnt":108285.269436},{"name":"max-rss","cnt":6489232.0},{"name":"faults","cnt":1713520.0},{"name":"wall-time","cnt":67.899788395},{"name":"cpu-clock","cnt":108284.733945},{"name":"cycles:u","cnt":411149214990.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"println","path":"1-println.patch"}}},{"stats":[{"name":"task-clock","cnt":1084101.985689},{"name":"faults","cnt":3494141.0},{"name":"instructions:u","cnt":3117008176429.0},{"name":"max-rss","cnt":6608804.0},{"name":"cycles:u","cnt":4072668147821.0},{"name":"wall-time","cnt":197.016654689},{"name":"cpu-clock","cnt":1084104.141627}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":2,"name":"commit 8b0f58c8a","path":"2-commit-8b0f58c8a.patch"}}}],"name":"script-servo"}},"sentry-cli":{"Ok":{"runs":[{"stats":[{"name":"task-clock","cnt":2334.530682},{"name":"cycles:u","cnt":9108281545.0},{"name":"max-rss","cnt":250360.0},{"name":"wall-time","cnt":2.354833132},{"name":"faults","cnt":35122.0},{"name":"instructions:u","cnt":11442017973.0},{"name":"cpu-clock","cnt":2334.530127}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":2920.809817},{"name":"instructions:u","cnt":14425193234.0},{"name":"max-rss","cnt":317044.0},{"name":"cpu-clock","cnt":2920.807726},{"name":"faults","cnt":51645.0},{"name":"wall-time","cnt":2.939076394},{"name":"cycles:u","cnt":11326999654.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":47782.0},{"name":"task-clock","cnt":718.38234},{"name":"cpu-clock","cnt":718.380895},{"name":"cycles:u","cnt":2602274632.0},{"name":"wall-time","cnt":0.704616431},{"name":"max-rss","cnt":295624.0},{"name":"instructions:u","cnt":3661265086.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":3322992519.0},{"name":"faults","cnt":50190.0},{"name":"cpu-clock","cnt":909.300765},{"name":"task-clock","cnt":909.300476},{"name":"instructions:u","cnt":4364751315.0},{"name":"max-rss","cnt":312428.0},{"name":"wall-time","cnt":0.894701153}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":14266.968232},{"name":"instructions:u","cnt":61453787722.0},{"name":"wall-time","cnt":10.469091914},{"name":"faults","cnt":334570.0},{"name":"cycles:u","cnt":53273353149.0},{"name":"cpu-clock","cnt":14266.952861},{"name":"max-rss","cnt":956372.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":71407738776.0},{"name":"cpu-clock","cnt":18370.679669},{"name":"faults","cnt":292851.0},{"name":"max-rss","cnt":709500.0},{"name":"wall-time","cnt":9.593167889},{"name":"cycles:u","cnt":67517277057.0},{"name":"task-clock","cnt":18370.461785}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":3881.59171},{"name":"cycles:u","cnt":12534741559.0},{"name":"wall-time","cnt":3.797897556},{"name":"faults","cnt":222671.0},{"name":"instructions:u","cnt":14515294096.0},{"name":"task-clock","cnt":3881.723269},{"name":"max-rss","cnt":499688.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":244957.0},{"name":"max-rss","cnt":587108.0},{"name":"cpu-clock","cnt":5199.808682},{"name":"cycles:u","cnt":17764256382.0},{"name":"wall-time","cnt":4.321869004},{"name":"task-clock","cnt":5199.944726},{"name":"instructions:u","cnt":19617051557.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":94382.858495},{"name":"instructions:u","cnt":290687692374.0},{"name":"faults","cnt":238431.0},{"name":"task-clock","cnt":94382.794429},{"name":"cycles:u","cnt":356817206622.0},{"name":"wall-time","cnt":19.29677585},{"name":"max-rss","cnt":775252.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":316168064663.0},{"name":"cpu-clock","cnt":105935.836897},{"name":"max-rss","cnt":760948.0},{"name":"wall-time","cnt":21.112997794},{"name":"cycles:u","cnt":399614416368.0},{"name":"faults","cnt":242457.0},{"name":"task-clock","cnt":105935.61182}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":2361.99412},{"name":"max-rss","cnt":527236.0},{"name":"wall-time","cnt":2.238298193},{"name":"faults","cnt":156628.0},{"name":"cycles:u","cnt":8096285288.0},{"name":"instructions:u","cnt":9021612382.0},{"name":"cpu-clock","cnt":2361.791479}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":220468722007.0},{"name":"cpu-clock","cnt":58617.771238},{"name":"faults","cnt":228591.0},{"name":"wall-time","cnt":11.58353},{"name":"max-rss","cnt":744768.0},{"name":"task-clock","cnt":58617.703094},{"name":"instructions:u","cnt":174584778898.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"sentry-cli"}},"serde":{"Ok":{"runs":[{"stats":[{"name":"cpu-clock","cnt":5012.195423},{"name":"max-rss","cnt":256004.0},{"name":"cycles:u","cnt":19767963976.0},{"name":"instructions:u","cnt":29736184689.0},{"name":"task-clock","cnt":5012.195423},{"name":"wall-time","cnt":5.057568414},{"name":"faults","cnt":41502.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":33550129471.0},{"name":"wall-time","cnt":5.857521369},{"name":"cycles:u","cnt":22855839987.0},{"name":"faults","cnt":66170.0},{"name":"task-clock","cnt":5820.552123},{"name":"cpu-clock","cnt":5820.589252},{"name":"max-rss","cnt":355252.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.911616766},{"name":"cpu-clock","cnt":921.510404},{"name":"instructions:u","cnt":4341134075.0},{"name":"task-clock","cnt":921.501508},{"name":"faults","cnt":60980.0},{"name":"cycles:u","cnt":3361185188.0},{"name":"max-rss","cnt":323568.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":5579.817062},{"name":"wall-time","cnt":5.479148556},{"name":"cycles:u","cnt":21928454001.0},{"name":"faults","cnt":49885.0},{"name":"instructions:u","cnt":32558437323.0},{"name":"max-rss","cnt":300180.0},{"name":"cpu-clock","cnt":5579.840048}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":6.511668608},{"name":"faults","cnt":76205.0},{"name":"max-rss","cnt":405008.0},{"name":"task-clock","cnt":6635.776118},{"name":"cpu-clock","cnt":6635.782605},{"name":"cycles:u","cnt":25939726029.0},{"name":"instructions:u","cnt":37449450704.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":5271008031.0},{"name":"faults","cnt":76161.0},{"name":"max-rss","cnt":391860.0},{"name":"cycles:u","cnt":3942149519.0},{"name":"wall-time","cnt":1.08993473},{"name":"task-clock","cnt":1108.376914},{"name":"cpu-clock","cnt":1108.35172}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":23331477953.0},{"name":"faults","cnt":51728.0},{"name":"max-rss","cnt":307968.0},{"name":"instructions:u","cnt":33479672251.0},{"name":"task-clock","cnt":5959.433949},{"name":"cpu-clock","cnt":5959.405542},{"name":"wall-time","cnt":5.502822537}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"faults","cnt":78630.0},{"name":"max-rss","cnt":415112.0},{"name":"task-clock","cnt":6961.361294},{"name":"cpu-clock","cnt":6961.340139},{"name":"instructions:u","cnt":38376802113.0},{"name":"cycles:u","cnt":27154313839.0},{"name":"wall-time","cnt":6.445075382}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":5265097035.0},{"name":"task-clock","cnt":1095.282337},{"name":"wall-time","cnt":1.074629693},{"name":"faults","cnt":72218.0},{"name":"max-rss","cnt":377244.0},{"name":"cycles:u","cnt":3952842150.0},{"name":"cpu-clock","cnt":1095.270324}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"serde"}},"style-servo":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":107258293918.0},{"name":"wall-time","cnt":27.30370434},{"name":"faults","cnt":330482.0},{"name":"max-rss","cnt":1364884.0},{"name":"task-clock","cnt":27261.287808},{"name":"cpu-clock","cnt":27261.295721},{"name":"instructions:u","cnt":122920143124.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":34119.352275},{"name":"cycles:u","cnt":132474607337.0},{"name":"instructions:u","cnt":153999465874.0},{"name":"wall-time","cnt":34.166411899},{"name":"cpu-clock","cnt":34119.349736},{"name":"faults","cnt":544691.0},{"name":"max-rss","cnt":2212264.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":2125052.0},{"name":"faults","cnt":508786.0},{"name":"cycles:u","cnt":40761757250.0},{"name":"task-clock","cnt":11043.600729},{"name":"cpu-clock","cnt":11043.594959},{"name":"instructions:u","cnt":49137463208.0},{"name":"wall-time","cnt":10.662618098}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":93782069059.0},{"name":"max-rss","cnt":2333304.0},{"name":"wall-time","cnt":20.286461824},{"name":"faults","cnt":572283.0},{"name":"cycles:u","cnt":78759463245.0},{"name":"task-clock","cnt":20694.375438},{"name":"cpu-clock","cnt":20694.381251}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"faults","cnt":610935.0},{"name":"max-rss","cnt":2514808.0},{"name":"task-clock","cnt":21950.058517},{"name":"wall-time","cnt":21.548190888},{"name":"instructions:u","cnt":96696598133.0},{"name":"cycles:u","cnt":84605581371.0},{"name":"cpu-clock","cnt":21950.080309}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"cycles:u","cnt":277466651928.0},{"name":"cpu-clock","cnt":72786.166905},{"name":"max-rss","cnt":2759592.0},{"name":"faults","cnt":733510.0},{"name":"task-clock","cnt":72786.138512},{"name":"wall-time","cnt":42.04374897},{"name":"instructions:u","cnt":298218070082.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":532889080966.0},{"name":"task-clock","cnt":116118.111277},{"name":"max-rss","cnt":3403856.0},{"name":"wall-time","cnt":65.533000158},{"name":"faults","cnt":1088635.0},{"name":"cycles:u","cnt":441275213091.0},{"name":"cpu-clock","cnt":116119.231492}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":14744.533121},{"name":"cycles:u","cnt":51946050450.0},{"name":"instructions:u","cnt":63585325176.0},{"name":"faults","cnt":685865.0},{"name":"cpu-clock","cnt":14743.993953},{"name":"max-rss","cnt":3572112.0},{"name":"wall-time","cnt":15.636777446}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":66324.136372},{"name":"faults","cnt":1012185.0},{"name":"instructions:u","cnt":301191836647.0},{"name":"cpu-clock","cnt":66323.894436},{"name":"max-rss","cnt":3921820.0},{"name":"wall-time","cnt":39.226981112},{"name":"cycles:u","cnt":249021571967.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":93132.148774},{"name":"cycles:u","cnt":350911141825.0},{"name":"instructions:u","cnt":425651853469.0},{"name":"faults","cnt":1100001.0},{"name":"wall-time","cnt":49.467261599},{"name":"max-rss","cnt":3861732.0},{"name":"cpu-clock","cnt":93132.603532}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}},{"stats":[{"name":"instructions:u","cnt":799971067856.0},{"name":"task-clock","cnt":257925.413125},{"name":"max-rss","cnt":2337944.0},{"name":"faults","cnt":729733.0},{"name":"cpu-clock","cnt":257925.588188},{"name":"cycles:u","cnt":976371127913.0},{"name":"wall-time","cnt":61.908982075}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":3053032.0},{"name":"wall-time","cnt":83.576123834},{"name":"instructions:u","cnt":1253973094226.0},{"name":"task-clock","cnt":398463.157153},{"name":"cpu-clock","cnt":398463.977432},{"name":"cycles:u","cnt":1501448424905.0},{"name":"faults","cnt":1041581.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":47162604269.0},{"name":"cpu-clock","cnt":12882.128566},{"name":"instructions:u","cnt":55359375660.0},{"name":"faults","cnt":658142.0},{"name":"max-rss","cnt":2741328.0},{"name":"task-clock","cnt":12882.780083},{"name":"wall-time","cnt":11.986382218}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":3448796.0},{"name":"cpu-clock","cnt":337648.386261},{"name":"wall-time","cnt":62.344517305},{"name":"task-clock","cnt":337647.812443},{"name":"cycles:u","cnt":1267178192520.0},{"name":"faults","cnt":1116727.0},{"name":"instructions:u","cnt":1060352914902.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":1364634945679.0},{"name":"faults","cnt":1145979.0},{"name":"wall-time","cnt":66.823728475},{"name":"max-rss","cnt":3455016.0},{"name":"task-clock","cnt":363236.840279},{"name":"cpu-clock","cnt":363237.426659},{"name":"instructions:u","cnt":1130442104039.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"b9b3e592dd cherry picked","path":"1-b9b3e592dd-cherry-picked.patch"}}}],"name":"style-servo"}},"syn":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":3259483859.0},{"name":"max-rss","cnt":151076.0},{"name":"wall-time","cnt":0.730114221},{"name":"cycles:u","cnt":2672716816.0},{"name":"task-clock","cnt":712.140786},{"name":"cpu-clock","cnt":712.130475},{"name":"faults","cnt":14822.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":3379336166.0},{"name":"cpu-clock","cnt":891.686635},{"name":"task-clock","cnt":891.687656},{"name":"max-rss","cnt":184016.0},{"name":"faults","cnt":22755.0},{"name":"instructions:u","cnt":4118117145.0},{"name":"wall-time","cnt":0.909842893}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":283.286223},{"name":"max-rss","cnt":168640.0},{"name":"faults","cnt":22329.0},{"name":"cycles:u","cnt":983035882.0},{"name":"cpu-clock","cnt":283.285384},{"name":"wall-time","cnt":0.287044332},{"name":"instructions:u","cnt":1358442475.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":331.736699},{"name":"cpu-clock","cnt":331.733681},{"name":"instructions:u","cnt":1568804173.0},{"name":"faults","cnt":22893.0},{"name":"max-rss","cnt":185448.0},{"name":"wall-time","cnt":0.33672247},{"name":"cycles:u","cnt":1181254424.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"instructions:u","cnt":11922343867.0},{"name":"task-clock","cnt":2882.983778},{"name":"cycles:u","cnt":10878563537.0},{"name":"faults","cnt":38062.0},{"name":"max-rss","cnt":250724.0},{"name":"cpu-clock","cnt":2882.98082},{"name":"wall-time","cnt":1.479179007}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":282848.0},{"name":"task-clock","cnt":3443.16087},{"name":"instructions:u","cnt":14470364169.0},{"name":"wall-time","cnt":1.779982084},{"name":"cycles:u","cnt":12941419823.0},{"name":"faults","cnt":45407.0},{"name":"cpu-clock","cnt":3443.182634}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cycles:u","cnt":1454356191.0},{"name":"task-clock","cnt":434.601147},{"name":"faults","cnt":31950.0},{"name":"wall-time","cnt":0.42180564},{"name":"instructions:u","cnt":1938683853.0},{"name":"max-rss","cnt":224108.0},{"name":"cpu-clock","cnt":434.551816}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2161748373.0},{"name":"wall-time","cnt":0.532457914},{"name":"instructions:u","cnt":2721717576.0},{"name":"cpu-clock","cnt":634.854358},{"name":"max-rss","cnt":262636.0},{"name":"faults","cnt":38236.0},{"name":"task-clock","cnt":634.89595}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cycles:u","cnt":54939010569.0},{"name":"max-rss","cnt":263000.0},{"name":"task-clock","cnt":14547.464329},{"name":"cpu-clock","cnt":14547.466599},{"name":"faults","cnt":41916.0},{"name":"instructions:u","cnt":44878794514.0},{"name":"wall-time","cnt":2.920250784}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":16129.966304},{"name":"faults","cnt":51844.0},{"name":"max-rss","cnt":302140.0},{"name":"cpu-clock","cnt":16129.958326},{"name":"instructions:u","cnt":48366947727.0},{"name":"wall-time","cnt":3.260039381},{"name":"cycles:u","cnt":60822745256.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":216664.0},{"name":"wall-time","cnt":0.412885258},{"name":"instructions:u","cnt":1957343160.0},{"name":"faults","cnt":32243.0},{"name":"cycles:u","cnt":1479606462.0},{"name":"cpu-clock","cnt":430.568188},{"name":"task-clock","cnt":430.621889}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":24456717524.0},{"name":"cpu-clock","cnt":8228.394736},{"name":"max-rss","cnt":303876.0},{"name":"faults","cnt":52098.0},{"name":"wall-time","cnt":1.682555464},{"name":"cycles:u","cnt":30876404312.0},{"name":"task-clock","cnt":8228.396686}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"syn"}},"tokio-webpush-simple":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":146848.0},{"name":"instructions:u","cnt":1762507379.0},{"name":"cpu-clock","cnt":345.813282},{"name":"wall-time","cnt":0.364177849},{"name":"cycles:u","cnt":1292650042.0},{"name":"faults","cnt":11276.0},{"name":"task-clock","cnt":345.81437}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":174152.0},{"name":"cpu-clock","cnt":453.386227},{"name":"task-clock","cnt":453.388748},{"name":"wall-time","cnt":0.471504395},{"name":"instructions:u","cnt":2272053289.0},{"name":"faults","cnt":17631.0},{"name":"cycles:u","cnt":1691220281.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":638669961.0},{"name":"cycles:u","cnt":441303383.0},{"name":"faults","cnt":16459.0},{"name":"cpu-clock","cnt":137.701656},{"name":"max-rss","cnt":148936.0},{"name":"wall-time","cnt":0.145737161},{"name":"task-clock","cnt":137.703659}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":1454407420.0},{"name":"cpu-clock","cnt":311.630129},{"name":"faults","cnt":19244.0},{"name":"task-clock","cnt":311.613213},{"name":"cycles:u","cnt":1115980630.0},{"name":"wall-time","cnt":0.32203309},{"name":"max-rss","cnt":181560.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":183192.0},{"name":"cycles:u","cnt":1052391654.0},{"name":"faults","cnt":19758.0},{"name":"instructions:u","cnt":1386979435.0},{"name":"cpu-clock","cnt":296.279918},{"name":"wall-time","cnt":0.306391181},{"name":"task-clock","cnt":296.282317}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"max-rss","cnt":301244.0},{"name":"wall-time","cnt":2.429208987},{"name":"instructions:u","cnt":17592617626.0},{"name":"cycles:u","cnt":15538108391.0},{"name":"faults","cnt":92514.0},{"name":"cpu-clock","cnt":4257.24364},{"name":"task-clock","cnt":4257.207179}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":18541852115.0},{"name":"task-clock","cnt":5113.702839},{"name":"cpu-clock","cnt":5113.750439},{"name":"max-rss","cnt":346292.0},{"name":"faults","cnt":105039.0},{"name":"wall-time","cnt":2.860101335},{"name":"instructions:u","cnt":20919102605.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1344.934025},{"name":"faults","cnt":85412.0},{"name":"wall-time","cnt":1.336524241},{"name":"cycles:u","cnt":4229056784.0},{"name":"max-rss","cnt":272180.0},{"name":"task-clock","cnt":1345.016125},{"name":"instructions:u","cnt":5203687223.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":17547712382.0},{"name":"wall-time","cnt":2.570222292},{"name":"faults","cnt":109734.0},{"name":"instructions:u","cnt":19423051605.0},{"name":"max-rss","cnt":362600.0},{"name":"cpu-clock","cnt":4900.096272},{"name":"task-clock","cnt":4900.0377}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"max-rss","cnt":359112.0},{"name":"cpu-clock","cnt":4800.009663},{"name":"wall-time","cnt":2.555252342},{"name":"faults","cnt":107894.0},{"name":"task-clock","cnt":4799.852958},{"name":"cycles:u","cnt":17294659225.0},{"name":"instructions:u","cnt":19415306006.0}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}},{"stats":[{"name":"instructions:u","cnt":68142027974.0},{"name":"max-rss","cnt":340280.0},{"name":"faults","cnt":78988.0},{"name":"wall-time","cnt":4.140227303},{"name":"cpu-clock","cnt":22820.699942},{"name":"cycles:u","cnt":85886136690.0},{"name":"task-clock","cnt":22820.69165}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":78357947091.0},{"name":"wall-time","cnt":4.636733288},{"name":"cycles:u","cnt":102236222165.0},{"name":"cpu-clock","cnt":27226.706399},{"name":"faults","cnt":87398.0},{"name":"max-rss","cnt":365560.0},{"name":"task-clock","cnt":27226.675259}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":720.02291},{"name":"max-rss","cnt":264380.0},{"name":"faults","cnt":61066.0},{"name":"wall-time","cnt":0.698596015},{"name":"cycles:u","cnt":2301729675.0},{"name":"task-clock","cnt":720.156426},{"name":"instructions:u","cnt":2747163191.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":89065.0},{"name":"wall-time","cnt":4.307646169},{"name":"instructions:u","cnt":76788386736.0},{"name":"cpu-clock","cnt":26922.16066},{"name":"cycles:u","cnt":100962800365.0},{"name":"max-rss","cnt":377988.0},{"name":"task-clock","cnt":26922.108388}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":3.358750153},{"name":"instructions:u","cnt":53416253207.0},{"name":"cycles:u","cnt":67809314723.0},{"name":"task-clock","cnt":18099.04821},{"name":"cpu-clock","cnt":18099.071523},{"name":"faults","cnt":86577.0},{"name":"max-rss","cnt":370780.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":1,"name":"minor change","path":"1-minor-change.patch"}}}],"name":"tokio-webpush-simple"}},"tuple-stress":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":3.271283773},{"name":"cycles:u","cnt":12470091588.0},{"name":"cpu-clock","cnt":3209.212964},{"name":"faults","cnt":85490.0},{"name":"instructions:u","cnt":18232967721.0},{"name":"task-clock","cnt":3209.21328},{"name":"max-rss","cnt":412204.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":3909.020825},{"name":"max-rss","cnt":464856.0},{"name":"instructions:u","cnt":23526030899.0},{"name":"cycles:u","cnt":15151771012.0},{"name":"wall-time","cnt":3.947075587},{"name":"faults","cnt":99032.0},{"name":"task-clock","cnt":3909.030768}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1107.631081},{"name":"wall-time","cnt":1.141608894},{"name":"instructions:u","cnt":6939685772.0},{"name":"task-clock","cnt":1107.632803},{"name":"max-rss","cnt":364376.0},{"name":"faults","cnt":75457.0},{"name":"cycles:u","cnt":4042807337.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":3927.808994},{"name":"instructions:u","cnt":23510417199.0},{"name":"cpu-clock","cnt":3927.820325},{"name":"cycles:u","cnt":15170619511.0},{"name":"faults","cnt":108596.0},{"name":"wall-time","cnt":3.964600084},{"name":"max-rss","cnt":506480.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"cpu-clock","cnt":3389.368554},{"name":"instructions:u","cnt":18742629021.0},{"name":"max-rss","cnt":455320.0},{"name":"task-clock","cnt":3389.398308},{"name":"faults","cnt":99445.0},{"name":"wall-time","cnt":3.408344717},{"name":"cycles:u","cnt":12738845525.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":4009.918184},{"name":"cycles:u","cnt":15402325964.0},{"name":"instructions:u","cnt":24133169019.0},{"name":"cpu-clock","cnt":4009.941196},{"name":"wall-time","cnt":4.005946654},{"name":"max-rss","cnt":482688.0},{"name":"faults","cnt":106993.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":1163.114878},{"name":"cpu-clock","cnt":1163.085931},{"name":"wall-time","cnt":1.193436354},{"name":"cycles:u","cnt":4128151393.0},{"name":"max-rss","cnt":384188.0},{"name":"faults","cnt":83801.0},{"name":"instructions:u","cnt":7301830948.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":4.066012661},{"name":"instructions:u","cnt":24056968108.0},{"name":"faults","cnt":119613.0},{"name":"cycles:u","cnt":15557527950.0},{"name":"task-clock","cnt":4072.369002},{"name":"max-rss","cnt":534664.0},{"name":"cpu-clock","cnt":4072.366038}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}},{"stats":[{"name":"instructions:u","cnt":18710678732.0},{"name":"wall-time","cnt":3.401049529},{"name":"cpu-clock","cnt":3357.556804},{"name":"faults","cnt":93068.0},{"name":"cycles:u","cnt":12891684617.0},{"name":"task-clock","cnt":3357.576807},{"name":"max-rss","cnt":434120.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":476912.0},{"name":"faults","cnt":103727.0},{"name":"cpu-clock","cnt":4029.223681},{"name":"wall-time","cnt":4.023613161},{"name":"cycles:u","cnt":15501134505.0},{"name":"instructions:u","cnt":24049484865.0},{"name":"task-clock","cnt":4029.231151}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":1183.835678},{"name":"faults","cnt":82390.0},{"name":"wall-time","cnt":1.215338865},{"name":"task-clock","cnt":1183.842842},{"name":"cycles:u","cnt":4234186890.0},{"name":"instructions:u","cnt":7265779997.0},{"name":"max-rss","cnt":384068.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":24065162013.0},{"name":"cpu-clock","cnt":3994.279679},{"name":"wall-time","cnt":3.989442467},{"name":"faults","cnt":114189.0},{"name":"cycles:u","cnt":15299143763.0},{"name":"max-rss","cnt":520400.0},{"name":"task-clock","cnt":3994.289099}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"new row","path":"0-new-row.patch"}}}],"name":"tuple-stress"}},"ucd":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":20183255407.0},{"name":"instructions:u","cnt":34611340100.0},{"name":"faults","cnt":114314.0},{"name":"max-rss","cnt":529488.0},{"name":"wall-time","cnt":5.264405226},{"name":"cpu-clock","cnt":5186.524519},{"name":"task-clock","cnt":5186.52404}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":6252.943983},{"name":"cycles:u","cnt":24328551614.0},{"name":"wall-time","cnt":6.28923231},{"name":"cpu-clock","cnt":6252.953183},{"name":"faults","cnt":124256.0},{"name":"max-rss","cnt":574908.0},{"name":"instructions:u","cnt":44126375562.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":567752.0},{"name":"faults","cnt":125967.0},{"name":"wall-time","cnt":1.769776513},{"name":"cpu-clock","cnt":1740.017096},{"name":"cycles:u","cnt":6309213704.0},{"name":"task-clock","cnt":1740.016729},{"name":"instructions:u","cnt":12302358281.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":5.491656188},{"name":"cycles:u","cnt":22598250868.0},{"name":"cpu-clock","cnt":5851.260341},{"name":"faults","cnt":131705.0},{"name":"instructions:u","cnt":37651493573.0},{"name":"max-rss","cnt":624760.0},{"name":"task-clock","cnt":5851.282355}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":47435963413.0},{"name":"max-rss","cnt":668740.0},{"name":"faults","cnt":142412.0},{"name":"wall-time","cnt":6.398007364},{"name":"task-clock","cnt":6842.498587},{"name":"cpu-clock","cnt":6842.469095},{"name":"cycles:u","cnt":26391270543.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.793370562},{"name":"cycles:u","cnt":6349946463.0},{"name":"instructions:u","cnt":12487403551.0},{"name":"cpu-clock","cnt":1771.824371},{"name":"task-clock","cnt":1771.845759},{"name":"max-rss","cnt":608108.0},{"name":"faults","cnt":127390.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":5.830503657},{"name":"cpu-clock","cnt":6993.261234},{"name":"task-clock","cnt":6993.266387},{"name":"cycles:u","cnt":26852604745.0},{"name":"max-rss","cnt":658536.0},{"name":"faults","cnt":141386.0},{"name":"instructions:u","cnt":42541578084.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":8106.632736},{"name":"task-clock","cnt":8106.639198},{"name":"wall-time","cnt":6.492515779},{"name":"instructions:u","cnt":51988648107.0},{"name":"cycles:u","cnt":31077380389.0},{"name":"faults","cnt":149898.0},{"name":"max-rss","cnt":692288.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":1.798626418},{"name":"cpu-clock","cnt":1792.152386},{"name":"instructions:u","cnt":12525019345.0},{"name":"cycles:u","cnt":6436088344.0},{"name":"task-clock","cnt":1792.167117},{"name":"max-rss","cnt":610136.0},{"name":"faults","cnt":128976.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"ucd"}},"unicode_normalization":{"Ok":{"runs":[{"stats":[{"name":"faults","cnt":24959.0},{"name":"cpu-clock","cnt":3734.779391},{"name":"cycles:u","cnt":14762419922.0},{"name":"max-rss","cnt":185196.0},{"name":"wall-time","cnt":3.773093289},{"name":"task-clock","cnt":3734.790065},{"name":"instructions:u","cnt":31719584350.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":15934812975.0},{"name":"max-rss","cnt":191752.0},{"name":"cpu-clock","cnt":4031.106068},{"name":"wall-time","cnt":4.066372949},{"name":"instructions:u","cnt":35658974123.0},{"name":"task-clock","cnt":4031.117213},{"name":"faults","cnt":26197.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":200.938018},{"name":"cycles:u","cnt":701173234.0},{"name":"wall-time","cnt":0.233314968},{"name":"max-rss","cnt":146224.0},{"name":"instructions:u","cnt":1224343950.0},{"name":"faults","cnt":15676.0},{"name":"task-clock","cnt":200.939687}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"faults","cnt":26387.0},{"name":"instructions:u","cnt":32286847883.0},{"name":"cpu-clock","cnt":3721.752304},{"name":"max-rss","cnt":192900.0},{"name":"task-clock","cnt":3721.752339},{"name":"wall-time","cnt":3.736439632},{"name":"cycles:u","cnt":14700423241.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":3913.649329},{"name":"cycles:u","cnt":15400257055.0},{"name":"wall-time","cnt":3.914716671},{"name":"faults","cnt":34490.0},{"name":"max-rss","cnt":225072.0},{"name":"instructions:u","cnt":32988628111.0},{"name":"cpu-clock","cnt":3913.651843}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":4.210735906},{"name":"instructions:u","cnt":37334659949.0},{"name":"max-rss","cnt":231600.0},{"name":"cycles:u","cnt":16695389366.0},{"name":"cpu-clock","cnt":4239.584415},{"name":"task-clock","cnt":4239.592067},{"name":"faults","cnt":34145.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":261.576047},{"name":"instructions:u","cnt":1707399233.0},{"name":"wall-time","cnt":0.29407023},{"name":"max-rss","cnt":176716.0},{"name":"cycles:u","cnt":895190634.0},{"name":"cpu-clock","cnt":261.54649},{"name":"faults","cnt":21654.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":221796.0},{"name":"cycles:u","cnt":14980615763.0},{"name":"faults","cnt":34478.0},{"name":"cpu-clock","cnt":3806.313593},{"name":"task-clock","cnt":3806.336958},{"name":"instructions:u","cnt":33550967676.0},{"name":"wall-time","cnt":3.81825959}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"cpu-clock","cnt":4039.97236},{"name":"faults","cnt":35058.0},{"name":"wall-time","cnt":4.045984932},{"name":"max-rss","cnt":230168.0},{"name":"cycles:u","cnt":15909850030.0},{"name":"task-clock","cnt":4040.008105},{"name":"instructions:u","cnt":34183611171.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":237692.0},{"name":"task-clock","cnt":4375.436283},{"name":"cpu-clock","cnt":4375.453864},{"name":"faults","cnt":35217.0},{"name":"wall-time","cnt":4.359363576},{"name":"instructions:u","cnt":38507547704.0},{"name":"cycles:u","cnt":17237507304.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":1702584026.0},{"name":"cpu-clock","cnt":264.764213},{"name":"task-clock","cnt":264.768765},{"name":"faults","cnt":21265.0},{"name":"cycles:u","cnt":915856677.0},{"name":"wall-time","cnt":0.297474429},{"name":"max-rss","cnt":175288.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"task-clock","cnt":3807.372986},{"name":"faults","cnt":31832.0},{"name":"instructions:u","cnt":33556060817.0},{"name":"cycles:u","cnt":14997245725.0},{"name":"max-rss","cnt":218388.0},{"name":"cpu-clock","cnt":3807.370083},{"name":"wall-time","cnt":3.820353988}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"unicode_normalization"}},"unify-linearly":{"Ok":{"runs":[{"stats":[{"name":"max-rss","cnt":99304.0},{"name":"faults","cnt":5388.0},{"name":"cpu-clock","cnt":69.813896},{"name":"wall-time","cnt":0.087906584},{"name":"task-clock","cnt":69.815171},{"name":"cycles:u","cnt":225347129.0},{"name":"instructions:u","cnt":346395331.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":392166708.0},{"name":"wall-time","cnt":0.099055996},{"name":"cpu-clock","cnt":81.171439},{"name":"faults","cnt":6695.0},{"name":"max-rss","cnt":106328.0},{"name":"task-clock","cnt":81.173992},{"name":"cycles:u","cnt":262600049.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":43.735341},{"name":"instructions:u","cnt":177317681.0},{"name":"max-rss","cnt":87964.0},{"name":"faults","cnt":5860.0},{"name":"cycles:u","cnt":120714085.0},{"name":"cpu-clock","cnt":43.732748},{"name":"wall-time","cnt":0.061222484}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":104956.0},{"name":"wall-time","cnt":0.071809057},{"name":"cpu-clock","cnt":54.097324},{"name":"cycles:u","cnt":156167564.0},{"name":"task-clock","cnt":54.101},{"name":"faults","cnt":6630.0},{"name":"instructions:u","cnt":227715690.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"cycles:u","cnt":515401210.0},{"name":"faults","cnt":13118.0},{"name":"max-rss","cnt":121656.0},{"name":"cpu-clock","cnt":165.876474},{"name":"instructions:u","cnt":749230029.0},{"name":"task-clock","cnt":165.894163},{"name":"wall-time","cnt":0.166471169}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"task-clock","cnt":183.629385},{"name":"wall-time","cnt":0.179706052},{"name":"max-rss","cnt":129564.0},{"name":"cycles:u","cnt":574230991.0},{"name":"cpu-clock","cnt":183.607167},{"name":"faults","cnt":14894.0},{"name":"instructions:u","cnt":823878690.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":110988.0},{"name":"instructions:u","cnt":514991136.0},{"name":"wall-time","cnt":0.133195394},{"name":"cycles:u","cnt":335843549.0},{"name":"cpu-clock","cnt":119.562494},{"name":"faults","cnt":13476.0},{"name":"task-clock","cnt":119.577772}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":640632451.0},{"name":"cpu-clock","cnt":153.740704},{"name":"faults","cnt":14948.0},{"name":"wall-time","cnt":0.149926174},{"name":"cycles:u","cnt":453854805.0},{"name":"max-rss","cnt":129580.0},{"name":"task-clock","cnt":153.707901}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"task-clock","cnt":161.816195},{"name":"instructions:u","cnt":752095318.0},{"name":"cycles:u","cnt":507942015.0},{"name":"max-rss","cnt":120892.0},{"name":"cpu-clock","cnt":161.812371},{"name":"faults","cnt":12319.0},{"name":"wall-time","cnt":0.168311412}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":587064286.0},{"name":"cpu-clock","cnt":184.951587},{"name":"wall-time","cnt":0.183473472},{"name":"faults","cnt":14310.0},{"name":"task-clock","cnt":184.956693},{"name":"max-rss","cnt":129092.0},{"name":"instructions:u","cnt":841785837.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":116.305005},{"name":"cpu-clock","cnt":116.298398},{"name":"max-rss","cnt":110576.0},{"name":"cycles:u","cnt":330546814.0},{"name":"instructions:u","cnt":505602580.0},{"name":"wall-time","cnt":0.132649354},{"name":"faults","cnt":13228.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":126.443436},{"name":"task-clock","cnt":126.448535},{"name":"max-rss","cnt":117636.0},{"name":"cycles:u","cnt":365227211.0},{"name":"faults","cnt":13641.0},{"name":"wall-time","cnt":0.138014185},{"name":"instructions:u","cnt":541234570.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unify-linearly"}},"unused-warnings":{"Ok":{"runs":[{"stats":[{"name":"wall-time","cnt":0.502755321},{"name":"faults","cnt":33504.0},{"name":"max-rss","cnt":209524.0},{"name":"cpu-clock","cnt":479.434184},{"name":"instructions:u","cnt":2454369813.0},{"name":"cycles:u","cnt":1756831341.0},{"name":"task-clock","cnt":479.434965}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":312724.0},{"name":"wall-time","cnt":0.743771285},{"name":"cycles:u","cnt":2588198453.0},{"name":"cpu-clock","cnt":725.537932},{"name":"instructions:u","cnt":3418017227.0},{"name":"task-clock","cnt":725.548797},{"name":"faults","cnt":60136.0}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.626822587},{"name":"max-rss","cnt":326888.0},{"name":"cycles:u","cnt":2261620484.0},{"name":"faults","cnt":66296.0},{"name":"task-clock","cnt":651.600252},{"name":"cpu-clock","cnt":651.590316},{"name":"instructions:u","cnt":2917271622.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":338968.0},{"name":"wall-time","cnt":0.703325847},{"name":"faults","cnt":66459.0},{"name":"cpu-clock","cnt":726.387795},{"name":"task-clock","cnt":726.388603},{"name":"cycles:u","cnt":2580808437.0},{"name":"instructions:u","cnt":3126967355.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"wall-time","cnt":0.57427652},{"name":"cpu-clock","cnt":566.19018},{"name":"max-rss","cnt":231772.0},{"name":"faults","cnt":41639.0},{"name":"instructions:u","cnt":2785778100.0},{"name":"task-clock","cnt":566.196424},{"name":"cycles:u","cnt":2007102495.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"wall-time","cnt":0.850059381},{"name":"faults","cnt":67465.0},{"name":"task-clock","cnt":842.058678},{"name":"instructions:u","cnt":3782333908.0},{"name":"cycles:u","cnt":2937233026.0},{"name":"cpu-clock","cnt":842.060103},{"name":"max-rss","cnt":337460.0}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":747.929393},{"name":"cpu-clock","cnt":747.917441},{"name":"wall-time","cnt":0.721331098},{"name":"max-rss","cnt":343964.0},{"name":"faults","cnt":73330.0},{"name":"instructions:u","cnt":3236527154.0},{"name":"cycles:u","cnt":2513260075.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"instructions:u","cnt":3471697848.0},{"name":"cycles:u","cnt":2812568755.0},{"name":"cpu-clock","cnt":811.376258},{"name":"max-rss","cnt":360444.0},{"name":"faults","cnt":73799.0},{"name":"task-clock","cnt":811.350761},{"name":"wall-time","cnt":0.779029735}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}},{"stats":[{"name":"instructions:u","cnt":2815668309.0},{"name":"faults","cnt":41601.0},{"name":"max-rss","cnt":233940.0},{"name":"task-clock","cnt":572.5858},{"name":"cycles:u","cnt":2005094912.0},{"name":"cpu-clock","cnt":572.583179},{"name":"wall-time","cnt":0.576404337}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":2956519837.0},{"name":"faults","cnt":67313.0},{"name":"instructions:u","cnt":3805288184.0},{"name":"max-rss","cnt":336164.0},{"name":"cpu-clock","cnt":839.748904},{"name":"wall-time","cnt":0.841823507},{"name":"task-clock","cnt":839.752024}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"wall-time","cnt":0.704398474},{"name":"instructions:u","cnt":3235014167.0},{"name":"task-clock","cnt":731.86284},{"name":"cycles:u","cnt":2508186505.0},{"name":"cpu-clock","cnt":731.858887},{"name":"max-rss","cnt":343884.0},{"name":"faults","cnt":73107.0}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":2814817401.0},{"name":"max-rss","cnt":350580.0},{"name":"wall-time","cnt":0.77366317},{"name":"cpu-clock","cnt":809.244144},{"name":"faults","cnt":73488.0},{"name":"instructions:u","cnt":3443845171.0},{"name":"task-clock","cnt":809.246992}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"dummy fn","path":"0-dummy-fn.patch"}}}],"name":"unused-warnings"}},"webrender":{"Ok":{"runs":[{"stats":[{"name":"cycles:u","cnt":12844745744.0},{"name":"faults","cnt":48986.0},{"name":"task-clock","cnt":3302.534393},{"name":"max-rss","cnt":302156.0},{"name":"wall-time","cnt":3.357338172},{"name":"cpu-clock","cnt":3302.540596},{"name":"instructions:u","cnt":14151420237.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":4225.406609},{"name":"wall-time","cnt":4.296375399},{"name":"faults","cnt":78235.0},{"name":"instructions:u","cnt":18554162398.0},{"name":"cycles:u","cnt":16358092135.0},{"name":"max-rss","cnt":420144.0},{"name":"task-clock","cnt":4225.406034}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"instructions:u","cnt":4916145480.0},{"name":"cpu-clock","cnt":1107.702607},{"name":"cycles:u","cnt":4030241443.0},{"name":"max-rss","cnt":393876.0},{"name":"wall-time","cnt":1.133755366},{"name":"task-clock","cnt":1107.702566},{"name":"faults","cnt":73050.0}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":409732.0},{"name":"instructions:u","cnt":5841217705.0},{"name":"wall-time","cnt":1.369250974},{"name":"cpu-clock","cnt":1378.077581},{"name":"cycles:u","cnt":5098413611.0},{"name":"task-clock","cnt":1378.077697},{"name":"faults","cnt":75440.0}],"check":true,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"task-clock","cnt":25287.209234},{"name":"max-rss","cnt":1085976.0},{"name":"instructions:u","cnt":99102462375.0},{"name":"cpu-clock","cnt":25287.244178},{"name":"cycles:u","cnt":95184241961.0},{"name":"wall-time","cnt":9.785432651},{"name":"faults","cnt":262182.0}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"cpu-clock","cnt":28696.251563},{"name":"instructions:u","cnt":115647580773.0},{"name":"cycles:u","cnt":108126532165.0},{"name":"faults","cnt":265313.0},{"name":"max-rss","cnt":1050188.0},{"name":"wall-time","cnt":11.77869886},{"name":"task-clock","cnt":28696.293638}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":137360.0},{"name":"cpu-clock","cnt":2181.823477},{"name":"max-rss","cnt":763352.0},{"name":"wall-time","cnt":2.100177006},{"name":"cycles:u","cnt":7652701359.0},{"name":"task-clock","cnt":2181.928781},{"name":"instructions:u","cnt":9259588679.0}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"max-rss","cnt":789628.0},{"name":"instructions:u","cnt":10479116614.0},{"name":"faults","cnt":141821.0},{"name":"task-clock","cnt":2488.006291},{"name":"cpu-clock","cnt":2487.811703},{"name":"cycles:u","cnt":8815031583.0},{"name":"wall-time","cnt":2.366173263}],"check":false,"release":false,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}},{"stats":[{"name":"wall-time","cnt":20.467254705},{"name":"cycles:u","cnt":403665451662.0},{"name":"faults","cnt":340555.0},{"name":"task-clock","cnt":107131.638051},{"name":"max-rss","cnt":1342832.0},{"name":"instructions:u","cnt":316594731607.0},{"name":"cpu-clock","cnt":107131.69771}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":1253220.0},{"name":"faults","cnt":348547.0},{"name":"wall-time","cnt":22.232944816},{"name":"cpu-clock","cnt":120024.915678},{"name":"task-clock","cnt":120024.714357},{"name":"instructions:u","cnt":355907579598.0},{"name":"cycles:u","cnt":451632616081.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"max-rss","cnt":780932.0},{"name":"instructions:u","cnt":9128644231.0},{"name":"cycles:u","cnt":7646916687.0},{"name":"faults","cnt":142468.0},{"name":"task-clock","cnt":2189.119669},{"name":"wall-time","cnt":2.070690027},{"name":"cpu-clock","cnt":2189.016867}],"check":false,"release":true,"state":"IncrementalClean"},{"stats":[{"name":"wall-time","cnt":4.241028631},{"name":"task-clock","cnt":10127.533452},{"name":"faults","cnt":201831.0},{"name":"max-rss","cnt":1009864.0},{"name":"instructions:u","cnt":40813127037.0},{"name":"cpu-clock","cnt":10127.456226},{"name":"cycles:u","cnt":37522073642.0}],"check":false,"release":true,"state":{"IncrementalPatched":{"index":0,"name":"println","path":"0-println.patch"}}}],"name":"webrender"}},"wg-grammar":{"Ok":{"runs":[{"stats":[{"name":"instructions:u","cnt":14238852614.0},{"name":"cpu-clock","cnt":2251.86543},{"name":"faults","cnt":23944.0},{"name":"task-clock","cnt":2251.866449},{"name":"wall-time","cnt":2.306288175},{"name":"max-rss","cnt":179320.0},{"name":"cycles:u","cnt":8846636396.0}],"check":true,"release":false,"state":"Clean"},{"stats":[{"name":"cycles:u","cnt":9808115579.0},{"name":"instructions:u","cnt":15652050653.0},{"name":"faults","cnt":26384.0},{"name":"max-rss","cnt":188352.0},{"name":"cpu-clock","cnt":2498.396505},{"name":"task-clock","cnt":2498.376734},{"name":"wall-time","cnt":2.533809267}],"check":true,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"cpu-clock","cnt":221.284164},{"name":"cycles:u","cnt":759345714.0},{"name":"max-rss","cnt":155460.0},{"name":"instructions:u","cnt":1213306317.0},{"name":"task-clock","cnt":221.286444},{"name":"faults","cnt":19306.0},{"name":"wall-time","cnt":0.247183663}],"check":true,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cpu-clock","cnt":2320.523806},{"name":"cycles:u","cnt":9101964359.0},{"name":"faults","cnt":26425.0},{"name":"max-rss","cnt":205280.0},{"name":"instructions:u","cnt":14737998712.0},{"name":"wall-time","cnt":2.359309422},{"name":"task-clock","cnt":2320.53589}],"check":false,"release":false,"state":"Clean"},{"stats":[{"name":"instructions:u","cnt":16299522431.0},{"name":"task-clock","cnt":2585.436234},{"name":"cycles:u","cnt":10137227447.0},{"name":"cpu-clock","cnt":2585.426334},{"name":"faults","cnt":28077.0},{"name":"max-rss","cnt":214172.0},{"name":"wall-time","cnt":2.596464121}],"check":false,"release":false,"state":"IncrementalStart"},{"stats":[{"name":"faults","cnt":22934.0},{"name":"task-clock","cnt":246.561027},{"name":"max-rss","cnt":177668.0},{"name":"cycles:u","cnt":840578556.0},{"name":"wall-time","cnt":0.270933399},{"name":"instructions:u","cnt":1384499604.0},{"name":"cpu-clock","cnt":246.556769}],"check":false,"release":false,"state":"IncrementalClean"},{"stats":[{"name":"cycles:u","cnt":9480657522.0},{"name":"instructions:u","cnt":15297036874.0},{"name":"wall-time","cnt":2.420381683},{"name":"cpu-clock","cnt":2423.438427},{"name":"task-clock","cnt":2423.443868},{"name":"faults","cnt":27320.0},{"name":"max-rss","cnt":211684.0}],"check":false,"release":true,"state":"Clean"},{"stats":[{"name":"max-rss","cnt":218984.0},{"name":"instructions:u","cnt":16936548038.0},{"name":"cpu-clock","cnt":2714.102422},{"name":"wall-time","cnt":2.663097326},{"name":"cycles:u","cnt":10613718427.0},{"name":"task-clock","cnt":2714.098187},{"name":"faults","cnt":29595.0}],"check":false,"release":true,"state":"IncrementalStart"},{"stats":[{"name":"task-clock","cnt":256.449046},{"name":"wall-time","cnt":0.279378832},{"name":"cpu-clock","cnt":256.442601},{"name":"max-rss","cnt":178764.0},{"name":"faults","cnt":23122.0},{"name":"instructions:u","cnt":1399767953.0},{"name":"cycles:u","cnt":866233523.0}],"check":false,"release":true,"state":"IncrementalClean"}],"name":"wg-grammar"}}},"triple":"x86_64-unknown-linux-gnu"}