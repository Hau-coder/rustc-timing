commit a173778d1dab4960e46f3368390abf8a8fe25524
Merge: 17d873c 4f15e11
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 22 22:28:41 2016 +0000

    Auto merge of #38330 - ollie27:rustdoc_short_summaries, r=steveklabnik
    
    rustdoc: Fix short summaries in search results
    
    They should be run through a Markdown renderer in rustdoc to remove
    links.
    
    This also fixes the mouse over text for the Crates list on the sidebar.
    
    [before](https://doc.rust-lang.org/nightly/std/index.html?search=ord) [after](https://ollie27.github.io/rust_doc_test/std/index.html?search=ord)
rustc: ./syntex-0.42.2
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.250; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.007; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 152MB	complete gated feature checking
time: 0.025; rss: 152MB	early lint checks
time: 0.008; rss: 152MB	AST validation
time: 0.080; rss: 166MB	name resolution
time: 0.067; rss: 200MB	lowering ast -> hir
time: 0.011; rss: 192MB	indexing hir
time: 0.007; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.012; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.050; rss: 177MB	region resolution
time: 0.009; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 198MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.567; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.212; rss: 277MB	const checking
time: 0.057; rss: 278MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.049; rss: 291MB	liveness checking
time: 0.178; rss: 293MB	rvalue checking
time: 0.362; rss: 482MB	MIR dump
  time: 0.056; rss: 484MB	SimplifyCfg
  time: 0.074; rss: 484MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.287; rss: 500MB	MIR cleanup and validation
time: 0.480; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.180; rss: 501MB	lint checking
time: 0.000; rss: 501MB	resolving dependency formats
  time: 0.004; rss: 501MB	NoLandingPads
  time: 0.027; rss: 501MB	SimplifyCfg
  time: 0.064; rss: 510MB	EraseRegions
  time: 0.011; rss: 510MB	AddCallGuards
  time: 0.272; rss: 534MB	ElaborateDrops
  time: 0.004; rss: 534MB	NoLandingPads
  time: 0.053; rss: 533MB	SimplifyCfg
  time: 0.029; rss: 532MB	InstCombine
  time: 0.012; rss: 532MB	Deaggregator
  time: 0.004; rss: 532MB	CopyPropagation
  time: 0.035; rss: 532MB	SimplifyLocals
  time: 0.010; rss: 532MB	AddCallGuards
  time: 0.003; rss: 532MB	PreTrans
time: 0.527; rss: 532MB	MIR optimisations
  time: 0.065; rss: 539MB	write metadata
  time: 0.393; rss: 554MB	translation item collection
  time: 0.071; rss: 557MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.654; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.404; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [1]
time: 0.000; rss: 1197MB	llvm module passes [1]
time: 0.001; rss: 1204MB	llvm function passes [0]
time: 0.000; rss: 1206MB	llvm module passes [0]
time: 0.002; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.003; rss: 1208MB	llvm function passes [4]
time: 0.006; rss: 1214MB	llvm function passes [3]
time: 0.000; rss: 1214MB	llvm module passes [3]
time: 0.005; rss: 1214MB	codegen passes [1]
time: 0.001; rss: 1214MB	llvm function passes [1]
time: 0.001; rss: 1214MB	llvm module passes [1]
time: 0.008; rss: 1214MB	codegen passes [0]
time: 0.009; rss: 1214MB	llvm function passes [6]
time: 0.010; rss: 1216MB	codegen passes [2]
time: 0.014; rss: 1216MB	llvm function passes [5]
time: 0.006; rss: 1216MB	llvm module passes [6]
time: 0.008; rss: 1221MB	llvm module passes [5]
time: 0.000; rss: 1237MB	llvm function passes [32]
time: 0.000; rss: 1240MB	llvm module passes [32]
time: 0.001; rss: 1240MB	codegen passes [32]
time: 0.026; rss: 1240MB	llvm module passes [4]
time: 0.020; rss: 1240MB	codegen passes [3]
time: 0.027; rss: 1240MB	llvm function passes [2]
time: 0.032; rss: 1243MB	codegen passes [1]
time: 0.020; rss: 1248MB	llvm function passes [13]
time: 0.009; rss: 1248MB	llvm module passes [2]
time: 0.000; rss: 1248MB	llvm function passes [25]
time: 0.000; rss: 1250MB	llvm module passes [25]
time: 0.008; rss: 1250MB	llvm module passes [13]
time: 0.027; rss: 1250MB	llvm function passes [32]
time: 0.004; rss: 1250MB	codegen passes [25]
time: 0.000; rss: 1260MB	llvm function passes [26]
time: 0.000; rss: 1260MB	llvm module passes [26]
time: 0.040; rss: 1260MB	llvm function passes [31]
time: 0.001; rss: 1260MB	codegen passes [26]
time: 0.001; rss: 1260MB	llvm module passes [31]
time: 0.016; rss: 1260MB	llvm module passes [32]
time: 0.035; rss: 1260MB	llvm function passes [24]
time: 0.000; rss: 1260MB	llvm module passes [24]
time: 0.041; rss: 1260MB	llvm function passes [1]
time: 0.000; rss: 1260MB	llvm module passes [1]
time: 0.073; rss: 1260MB	llvm function passes [0]
time: 0.008; rss: 1270MB	codegen passes [1]
time: 0.018; rss: 1274MB	llvm module passes [0]
time: 0.050; rss: 1277MB	llvm function passes [28]
time: 0.097; rss: 1279MB	llvm function passes [9]
time: 0.088; rss: 1279MB	llvm function passes [12]
time: 0.015; rss: 1279MB	llvm module passes [28]
time: 0.013; rss: 1283MB	llvm module passes [12]
time: 0.050; rss: 1283MB	codegen passes [24]
time: 0.027; rss: 1295MB	llvm function passes [24]
time: 0.021; rss: 1295MB	llvm function passes [17]
time: 0.008; rss: 1295MB	llvm module passes [24]
time: 0.004; rss: 1295MB	llvm module passes [17]
time: 0.171; rss: 1300MB	llvm function passes [7]
time: 0.085; rss: 1300MB	llvm function passes [1]
time: 0.072; rss: 1318MB	llvm module passes [9]
time: 0.160; rss: 1323MB	codegen passes [4]
time: 0.126; rss: 1326MB	codegen passes [31]
time: 0.158; rss: 1326MB	llvm function passes [25]
time: 0.147; rss: 1326MB	llvm function passes [29]
time: 0.060; rss: 1351MB	llvm module passes [1]
time: 0.045; rss: 1361MB	llvm function passes [31]
time: 0.002; rss: 1361MB	llvm module passes [31]
time: 0.037; rss: 1363MB	llvm module passes [29]
time: 0.151; rss: 1363MB	llvm function passes [15]
time: 0.000; rss: 1363MB	llvm function passes [37]
time: 0.000; rss: 1363MB	llvm module passes [37]
time: 0.003; rss: 1363MB	codegen passes [37]
time: 0.000; rss: 1363MB	codegen passes [37]
time: 0.004; rss: 1363MB	llvm function passes [21]
time: 0.107; rss: 1370MB	llvm function passes [18]
time: 0.277; rss: 1370MB	llvm function passes [10]
time: 0.045; rss: 1370MB	llvm module passes [15]
time: 0.219; rss: 1372MB	llvm function passes [14]
time: 0.086; rss: 1376MB	llvm function passes [33]
time: 0.156; rss: 1371MB	llvm module passes [7]
time: 0.131; rss: 1375MB	llvm module passes [25]
time: 0.052; rss: 1375MB	llvm module passes [18]
time: 0.044; rss: 1375MB	llvm module passes [14]
time: 0.299; rss: 1375MB	llvm function passes [27]
time: 0.062; rss: 1375MB	llvm module passes [33]
time: 0.147; rss: 1375MB	llvm function passes [38]
time: 0.334; rss: 1375MB	llvm function passes [26]
time: 0.214; rss: 1384MB	llvm function passes [20]
time: 0.055; rss: 1386MB	llvm module passes [27]
time: 0.421; rss: 1385MB	llvm function passes [8]
time: 0.045; rss: 1398MB	llvm module passes [20]
time: 0.073; rss: 1402MB	llvm module passes [26]
time: 0.410; rss: 1407MB	llvm function passes [30]
time: 0.205; rss: 1407MB	llvm module passes [10]
time: 0.218; rss: 1407MB	llvm module passes [21]
time: 0.143; rss: 1410MB	llvm module passes [38]
time: 0.263; rss: 1410MB	llvm function passes [19]
time: 0.314; rss: 1412MB	codegen passes [17]
time: 0.417; rss: 1415MB	llvm function passes [16]
time: 0.076; rss: 1403MB	llvm module passes [30]
time: 0.155; rss: 1403MB	llvm module passes [8]
time: 0.065; rss: 1403MB	llvm module passes [19]
time: 0.338; rss: 1401MB	llvm function passes [34]
time: 0.027; rss: 1393MB	llvm module passes [34]
time: 0.604; rss: 1395MB	llvm function passes [23]
time: 0.422; rss: 1395MB	llvm function passes [36]
time: 0.639; rss: 1397MB	llvm function passes [3]
time: 0.133; rss: 1398MB	llvm module passes [16]
time: 0.072; rss: 1396MB	codegen passes [21]
time: 0.563; rss: 1411MB	llvm function passes [4]
time: 0.118; rss: 1395MB	llvm module passes [36]
time: 0.453; rss: 1395MB	llvm function passes [22]
time: 0.205; rss: 1393MB	codegen passes [31]
time: 0.130; rss: 1406MB	llvm module passes [22]
time: 0.704; rss: 1415MB	llvm function passes [35]
time: 0.353; rss: 1426MB	llvm module passes [3]
time: 0.252; rss: 1453MB	llvm module passes [35]
time: 0.518; rss: 1441MB	llvm module passes [4]
time: 1.298; rss: 1465MB	codegen passes [6]
time: 0.778; rss: 1480MB	llvm module passes [23]
time: 1.024; rss: 1487MB	codegen passes [2]
time: 1.089; rss: 1499MB	codegen passes [24]
time: 0.856; rss: 1487MB	codegen passes [34]
time: 1.500; rss: 1444MB	codegen passes [13]
time: 1.355; rss: 1429MB	codegen passes [12]
time: 1.449; rss: 1439MB	codegen passes [5]
time: 1.321; rss: 1435MB	codegen passes [0]
time: 1.563; rss: 1446MB	codegen passes [15]
time: 1.606; rss: 1457MB	codegen passes [38]
time: 1.639; rss: 1449MB	codegen passes [32]
time: 1.785; rss: 1423MB	codegen passes [20]
time: 1.760; rss: 1420MB	codegen passes [18]
time: 1.926; rss: 1481MB	codegen passes [36]
time: 2.426; rss: 1480MB	codegen passes [28]
time: 2.321; rss: 1473MB	codegen passes [29]
time: 2.303; rss: 1457MB	codegen passes [33]
time: 2.699; rss: 1512MB	codegen passes [14]
time: 3.068; rss: 1513MB	codegen passes [1]
time: 3.232; rss: 1567MB	codegen passes [25]
time: 3.373; rss: 1576MB	codegen passes [9]
time: 3.666; rss: 1678MB	codegen passes [27]
time: 3.364; rss: 1685MB	codegen passes [3]
time: 3.628; rss: 1642MB	codegen passes [19]
time: 3.693; rss: 1656MB	codegen passes [22]
time: 4.284; rss: 1646MB	codegen passes [7]
time: 3.895; rss: 1593MB	codegen passes [30]
time: 4.222; rss: 1584MB	codegen passes [26]
time: 4.373; rss: 1581MB	codegen passes [35]
time: 4.068; rss: 1528MB	codegen passes [4]
time: 5.134; rss: 1514MB	codegen passes [10]
time: 5.231; rss: 1481MB	codegen passes [16]
time: 4.745; rss: 1408MB	codegen passes [8]
time: 4.661; rss: 1329MB	codegen passes [23]
time: 7.331; rss: 1328MB	LLVM passes
time: 0.000; rss: 1328MB	serialize work products
time: 1.060; rss: 283MB	linking
done
