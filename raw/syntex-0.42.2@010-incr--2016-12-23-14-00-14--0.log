commit 467a7f049bac0386097c6cd2c80966c8d7453ce8
Merge: 00b4019 c12fc66
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 23 18:43:12 2016 +0000

    Auto merge of #38533 - jseyfried:legacy_custom_derive_deprecation, r=nrc
    
    Allow legacy custom derive authors to disable warnings in downstream crates
    
    This PR allows legacy custom derive authors to use a pre-deprecated method `registry.register_custom_derive()` instead of `registry.register_syntax_extension()` to avoid downstream deprecation warnings.
    
    r? @nrc
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 176MB	region resolution
time: 0.008; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.090; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.645; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.224; rss: 277MB	const checking
time: 0.069; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.051; rss: 283MB	match checking
time: 0.050; rss: 290MB	liveness checking
time: 0.181; rss: 292MB	rvalue checking
time: 0.379; rss: 482MB	MIR dump
  time: 0.062; rss: 483MB	SimplifyCfg
  time: 0.082; rss: 483MB	QualifyAndPromoteConstants
  time: 0.132; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.034; rss: 500MB	SimplifyCfg
time: 0.314; rss: 500MB	MIR cleanup and validation
time: 0.487; rss: 500MB	borrow checking
time: 0.026; rss: 500MB	reachability checking
time: 0.044; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.188; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.030; rss: 500MB	SimplifyCfg
  time: 0.073; rss: 509MB	EraseRegions
  time: 0.013; rss: 509MB	AddCallGuards
  time: 0.283; rss: 533MB	ElaborateDrops
  time: 0.005; rss: 533MB	NoLandingPads
  time: 0.053; rss: 532MB	SimplifyCfg
  time: 0.029; rss: 532MB	InstCombine
  time: 0.013; rss: 532MB	Deaggregator
  time: 0.004; rss: 532MB	CopyPropagation
  time: 0.036; rss: 532MB	SimplifyLocals
  time: 0.010; rss: 532MB	AddCallGuards
  time: 0.003; rss: 532MB	PreTrans
time: 0.575; rss: 532MB	MIR optimisations
  time: 0.067; rss: 538MB	write metadata
  time: 0.394; rss: 553MB	translation item collection
  time: 0.071; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.957; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.442; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.001; rss: 1201MB	llvm function passes [0]
time: 0.000; rss: 1201MB	llvm module passes [0]
time: 0.001; rss: 1211MB	llvm function passes [1]
time: 0.000; rss: 1211MB	llvm module passes [1]
time: 0.002; rss: 1216MB	llvm function passes [2]
time: 0.000; rss: 1216MB	llvm module passes [2]
time: 0.003; rss: 1216MB	llvm function passes [3]
time: 0.000; rss: 1216MB	llvm module passes [3]
time: 0.004; rss: 1216MB	llvm function passes [6]
time: 0.001; rss: 1216MB	llvm module passes [6]
time: 0.006; rss: 1219MB	codegen passes [1]
time: 0.001; rss: 1219MB	llvm function passes [1]
time: 0.000; rss: 1219MB	llvm module passes [1]
time: 0.011; rss: 1222MB	llvm function passes [5]
time: 0.008; rss: 1222MB	codegen passes [2]
time: 0.001; rss: 1222MB	codegen passes [0]
time: 0.006; rss: 1224MB	llvm module passes [5]
time: 0.016; rss: 1227MB	codegen passes [1]
time: 0.029; rss: 1229MB	llvm function passes [4]
time: 0.030; rss: 1233MB	codegen passes [3]
time: 0.024; rss: 1233MB	llvm function passes [2]
time: 0.008; rss: 1233MB	llvm module passes [4]
time: 0.000; rss: 1237MB	llvm function passes [12]
time: 0.000; rss: 1237MB	llvm module passes [12]
time: 0.001; rss: 1237MB	codegen passes [12]
time: 0.014; rss: 1242MB	llvm module passes [2]
time: 0.038; rss: 1242MB	llvm function passes [0]
time: 0.001; rss: 1244MB	llvm function passes [15]
time: 0.000; rss: 1244MB	llvm module passes [15]
time: 0.001; rss: 1246MB	llvm function passes [16]
time: 0.000; rss: 1246MB	llvm module passes [16]
time: 0.000; rss: 1248MB	llvm function passes [17]
time: 0.000; rss: 1248MB	llvm module passes [17]
time: 0.060; rss: 1258MB	codegen passes [6]
time: 0.000; rss: 1258MB	llvm function passes [6]
time: 0.000; rss: 1258MB	llvm module passes [6]
time: 0.001; rss: 1258MB	codegen passes [6]
time: 0.025; rss: 1263MB	llvm module passes [0]
time: 0.047; rss: 1277MB	llvm function passes [12]
time: 0.001; rss: 1277MB	llvm module passes [12]
time: 0.070; rss: 1277MB	llvm function passes [10]
time: 0.051; rss: 1277MB	codegen passes [17]
time: 0.097; rss: 1277MB	llvm function passes [9]
time: 0.122; rss: 1282MB	llvm function passes [7]
time: 0.091; rss: 1286MB	llvm function passes [3]
time: 0.079; rss: 1288MB	codegen passes [15]
time: 0.032; rss: 1288MB	llvm module passes [10]
time: 0.073; rss: 1290MB	llvm function passes [23]
time: 0.081; rss: 1290MB	llvm function passes [25]
time: 0.008; rss: 1290MB	llvm module passes [25]
time: 0.100; rss: 1290MB	llvm function passes [21]
time: 0.031; rss: 1290MB	llvm module passes [23]
time: 0.130; rss: 1292MB	codegen passes [16]
time: 0.136; rss: 1338MB	llvm function passes [19]
time: 0.122; rss: 1340MB	llvm function passes [24]
time: 0.010; rss: 1343MB	llvm module passes [19]
time: 0.083; rss: 1347MB	llvm function passes [15]
time: 0.036; rss: 1347MB	llvm module passes [21]
time: 0.166; rss: 1349MB	llvm function passes [18]
time: 0.047; rss: 1357MB	llvm module passes [24]
time: 0.035; rss: 1357MB	llvm module passes [15]
time: 0.183; rss: 1357MB	llvm function passes [6]
time: 0.215; rss: 1359MB	llvm function passes [14]
time: 0.227; rss: 1361MB	llvm function passes [13]
time: 0.021; rss: 1361MB	llvm module passes [6]
time: 0.162; rss: 1361MB	llvm function passes [26]
time: 0.176; rss: 1365MB	llvm module passes [9]
time: 0.294; rss: 1368MB	llvm function passes [1]
time: 0.211; rss: 1365MB	llvm function passes [40]
time: 0.074; rss: 1368MB	llvm module passes [18]
time: 0.036; rss: 1368MB	llvm module passes [13]
time: 0.189; rss: 1368MB	llvm module passes [7]
time: 0.165; rss: 1365MB	codegen passes [12]
time: 0.115; rss: 1371MB	llvm function passes [27]
time: 0.013; rss: 1371MB	llvm module passes [26]
time: 0.001; rss: 1371MB	llvm module passes [27]
time: 0.261; rss: 1371MB	llvm function passes [20]
time: 0.219; rss: 1377MB	llvm module passes [3]
time: 0.020; rss: 1385MB	llvm function passes [37]
time: 0.000; rss: 1385MB	llvm module passes [37]
time: 0.119; rss: 1385MB	llvm module passes [14]
time: 0.309; rss: 1385MB	llvm function passes [22]
time: 0.054; rss: 1385MB	llvm module passes [20]
time: 0.000; rss: 1383MB	codegen passes [38]
time: 0.027; rss: 1382MB	llvm function passes [36]
time: 0.029; rss: 1382MB	codegen passes [37]
time: 0.011; rss: 1393MB	llvm module passes [36]
time: 0.092; rss: 1393MB	llvm module passes [40]
time: 0.096; rss: 1394MB	llvm function passes [12]
time: 0.100; rss: 1408MB	codegen passes [27]
time: 0.468; rss: 1420MB	llvm function passes [8]
time: 0.093; rss: 1421MB	llvm module passes [22]
time: 0.185; rss: 1424MB	llvm module passes [1]
time: 0.405; rss: 1414MB	llvm function passes [17]
time: 0.413; rss: 1416MB	llvm function passes [28]
time: 0.003; rss: 1416MB	llvm module passes [28]
time: 0.240; rss: 1417MB	llvm function passes [34]
time: 0.148; rss: 1407MB	llvm module passes [12]
time: 0.301; rss: 1406MB	llvm function passes [33]
time: 0.125; rss: 1408MB	llvm module passes [8]
time: 0.331; rss: 1414MB	llvm function passes [32]
time: 0.337; rss: 1416MB	llvm function passes [31]
time: 0.206; rss: 1420MB	codegen passes [36]
time: 0.432; rss: 1420MB	llvm function passes [16]
time: 0.120; rss: 1419MB	llvm module passes [17]
time: 0.635; rss: 1431MB	llvm function passes [11]
time: 0.159; rss: 1424MB	llvm module passes [34]
time: 0.677; rss: 1424MB	codegen passes [5]
time: 0.110; rss: 1424MB	llvm module passes [31]
time: 0.195; rss: 1426MB	llvm module passes [33]
time: 0.269; rss: 1428MB	codegen passes [28]
time: 0.262; rss: 1432MB	llvm module passes [32]
time: 0.543; rss: 1434MB	llvm function passes [35]
time: 0.261; rss: 1434MB	llvm module passes [16]
time: 0.556; rss: 1443MB	llvm function passes [30]
time: 0.247; rss: 1456MB	llvm module passes [35]
time: 0.326; rss: 1470MB	llvm module passes [30]
time: 0.910; rss: 1488MB	codegen passes [0]
time: 0.637; rss: 1476MB	llvm module passes [11]
time: 0.610; rss: 1477MB	codegen passes [12]
time: 0.985; rss: 1480MB	codegen passes [4]
time: 1.229; rss: 1481MB	codegen passes [10]
time: 1.070; rss: 1482MB	codegen passes [25]
time: 1.399; rss: 1465MB	codegen passes [21]
time: 1.708; rss: 1487MB	codegen passes [26]
time: 2.026; rss: 1499MB	codegen passes [2]
time: 1.865; rss: 1484MB	codegen passes [19]
time: 1.666; rss: 1486MB	codegen passes [31]
time: 1.748; rss: 1480MB	codegen passes [3]
time: 1.971; rss: 1468MB	codegen passes [13]
time: 2.061; rss: 1454MB	codegen passes [6]
time: 1.935; rss: 1453MB	codegen passes [15]
time: 1.885; rss: 1456MB	codegen passes [34]
time: 2.514; rss: 1504MB	codegen passes [24]
time: 2.432; rss: 1572MB	codegen passes [33]
time: 3.064; rss: 1617MB	codegen passes [9]
time: 3.042; rss: 1587MB	codegen passes [18]
time: 3.429; rss: 1600MB	codegen passes [23]
time: 3.351; rss: 1605MB	codegen passes [20]
time: 3.297; rss: 1668MB	codegen passes [30]
time: 3.685; rss: 1636MB	codegen passes [14]
time: 3.733; rss: 1642MB	codegen passes [35]
time: 4.171; rss: 1638MB	codegen passes [40]
time: 4.479; rss: 1649MB	codegen passes [22]
time: 4.159; rss: 1599MB	codegen passes [7]
time: 4.024; rss: 1581MB	codegen passes [32]
time: 4.844; rss: 1549MB	codegen passes [1]
time: 4.180; rss: 1506MB	codegen passes [16]
time: 4.813; rss: 1454MB	codegen passes [8]
time: 5.288; rss: 1409MB	codegen passes [17]
time: 4.808; rss: 1335MB	codegen passes [11]
time: 7.464; rss: 1333MB	LLVM passes
time: 0.000; rss: 1333MB	serialize work products
time: 1.057; rss: 299MB	linking
done
