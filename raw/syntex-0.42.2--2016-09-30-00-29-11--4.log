commit 7660bdf70ae0c6a434dd12cfdeb8250ce77c69c7
Merge: c717cfa aaf32aa
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 29 20:25:45 2016 -0700

    Auto merge of #36557 - sfackler:fix-hashdos-docs, r=alexcrichton
    
    Clean up hasher discussion on HashMap
    
    * We never want to make guarantees about protecting against attacks.
    * "True randomness" is not the right terminology to be using in this
        context.
    * There is significantly more nuance to the performance of SipHash than
        "somewhat slow".
    
    r? @steveklabnik
    
    Follow up to discussion on #35371
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.107; rss: 76MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 76MB	recursion limit
time: 0.000; rss: 76MB	crate injection
time: 0.000; rss: 76MB	plugin loading
time: 0.000; rss: 76MB	plugin registration
time: 0.270; rss: 148MB	expansion
time: 0.000; rss: 148MB	maybe building test harness
time: 0.006; rss: 148MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 148MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 148MB	complete gated feature checking
time: 0.023; rss: 148MB	early lint checks
time: 0.007; rss: 148MB	AST validation
time: 0.084; rss: 162MB	name resolution
time: 0.050; rss: 202MB	lowering ast -> hir
time: 0.009; rss: 211MB	indexing hir
time: 0.006; rss: 211MB	attribute checking
time: 0.006; rss: 162MB	language item collection
time: 0.012; rss: 162MB	lifetime resolution
time: 0.000; rss: 162MB	looking for entry point
time: 0.000; rss: 162MB	looking for plugin registrar
time: 0.044; rss: 172MB	region resolution
time: 0.006; rss: 172MB	loop checking
time: 0.006; rss: 172MB	static item recursion checking
time: 0.295; rss: 173MB	compute_incremental_hashes_map
time: 0.000; rss: 173MB	load_dep_graph
time: 0.081; rss: 174MB	type collecting
time: 0.001; rss: 174MB	variance inference
time: 0.038; rss: 179MB	coherence checking
time: 0.102; rss: 182MB	wf checking
time: 0.197; rss: 191MB	item-types checking
time: 3.960; rss: 241MB	item-bodies checking
time: 0.000; rss: 241MB	drop-impl checking
time: 0.324; rss: 242MB	const checking
time: 0.055; rss: 242MB	privacy checking
time: 0.007; rss: 242MB	stability index
time: 0.022; rss: 242MB	intrinsic checking
time: 0.019; rss: 242MB	effect checking
time: 0.056; rss: 242MB	match checking
time: 0.054; rss: 236MB	liveness checking
time: 0.289; rss: 236MB	rvalue checking
time: 0.416; rss: 429MB	MIR dump
  time: 0.057; rss: 430MB	SimplifyCfg
  time: 0.083; rss: 430MB	QualifyAndPromoteConstants
  time: 0.111; rss: 430MB	TypeckMir
  time: 0.005; rss: 430MB	SimplifyBranches
  time: 0.037; rss: 430MB	SimplifyCfg
time: 0.293; rss: 430MB	MIR passes
time: 0.696; rss: 431MB	borrow checking
time: 0.018; rss: 431MB	reachability checking
time: 0.045; rss: 431MB	death checking
time: 0.041; rss: 431MB	stability checking
time: 0.000; rss: 431MB	unused lib feature checking
time: 0.222; rss: 431MB	lint checking
time: 0.000; rss: 431MB	resolving dependency formats
  time: 0.003; rss: 431MB	NoLandingPads
  time: 0.027; rss: 431MB	SimplifyCfg
  time: 0.072; rss: 441MB	EraseRegions
  time: 0.011; rss: 441MB	AddCallGuards
  time: 1.098; rss: 459MB	ElaborateDrops
  time: 0.003; rss: 459MB	NoLandingPads
  time: 0.052; rss: 459MB	SimplifyCfg
  time: 0.030; rss: 459MB	InstCombine
  time: 0.012; rss: 459MB	Deaggregator
  time: 0.003; rss: 459MB	CopyPropagation
  time: 0.009; rss: 459MB	AddCallGuards
  time: 0.003; rss: 459MB	PreTrans
time: 1.324; rss: 459MB	Prepare MIR codegen passes
  time: 0.264; rss: 465MB	write metadata
  time: 0.479; rss: 476MB	translation item collection
  time: 0.067; rss: 481MB	codegen unit partitioning
  time: 0.057; rss: 726MB	internalize symbols
time: 5.134; rss: 604MB	translation
time: 0.000; rss: 604MB	assert dep graph
time: 0.000; rss: 604MB	serialize dep graph
  time: 0.507; rss: 414MB	llvm function passes [0]
  time: 0.243; rss: 421MB	llvm module passes [0]
  time: 10.038; rss: 414MB	codegen passes [0]
  time: 0.001; rss: 416MB	codegen passes [0]
time: 11.531; rss: 416MB	LLVM passes
time: 0.000; rss: 416MB	serialize work products
time: 0.657; rss: 107MB	linking
done
