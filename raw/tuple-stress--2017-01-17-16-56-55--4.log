commit c07a6ae77cd4ceb3cf591d34c5608ca91d1f75d4
Merge: bd8e9b0 a54ddfb
Author: bors <bors@rust-lang.org>
Date:   Tue Jan 17 21:52:03 2017 +0000

    Auto merge of #37972 - bluss:iter-find-is-on-a-roll, r=sfackler
    
    Improve the slice iterator's searching methods
    
    Improve all, any, find, position, rposition by explicitly unrolling the loop for the slice iterators.
    
    - Introduce a few extension methods and functions for raw pointers make the new code easy to express
    - Introduce helper methods `search_while, rsearch_while` that generalize all the searching methods
    
    LLVM doesn't unroll the loop in `.find()` by default (clang is the same), so performance benefits a lot from explicit unrolling here. An iterator method without conditional exits (like `.fold()`) does not need this on the other hand.
    
    One of the raw pointer extension methods is `fn post_inc(&mut self) -> Self` which is the rustic equivalent of “`ptr++`”, and it is a nice way to express the raw pointer loop (see commit 3).
    
    Specific development notes about `search_while`: I tried both computing an end pointer "rounded" to 4, as well as the `ptrdistance >= 4` loop condition, ptrdistance was better. I tried handling the last 0-3 elements unrolled or with a while loop, the loop was better.
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./tuple-stress
cargo rustc  -- -Ztime-passes -Zinput-stats
makefile:4: recipe for target 'all' failed
done
