commit 4ecc85beb339aa8089d936e450b0d800bdf580ae
Merge: 02b22ec ee0ea95
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 20:19:39 2016 +0000

    Auto merge of #38449 - eddyb:lazy-10, r=nikomatsakis
    
    [10/n] Split constants and functions' arguments into disjoint bodies.
    
    _This is part of a series ([prev](https://github.com/rust-lang/rust/pull/38053) | [next]()) of patches designed to rework rustc into an out-of-order on-demand pipeline model for both better feature support (e.g. [MIR-based](https://github.com/solson/miri) early constant evaluation) and incremental execution of compiler passes (e.g. type-checking), with beneficial consequences to IDE support as well.
    If any motivation is unclear, please ask for additional PR description clarifications or code comments._
    
    <hr>
    
    Finishes the signature-body split started in #37918, namely:
    * `trait` items are separated just like `impl` items were, for uniformity, closing #37712
    * `static`s, `const`s (including associated ones), `enum` discriminants and array lengths get bodies
      * even the count in "repeat expressions", i.e. `n` in `[x; n]`, which fixes #24414
    * arguments' patterns are moved to the bodies, with the types staying in `FnDecl`
      * `&self` now desugars to `self: &Self` instead of `self: &_` (similarly for other `self` forms)
      * `astconv`'s and metadata's (for rustdoc) informative uses are explicitly ignored for the purposes of the dep graph. this could be fixed in the future by hashing the exact information being extracted about the arguments as opposed to generating a dependency on *the whole body*
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.247; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.008; rss: 178MB	stability index
time: 0.020; rss: 182MB	stability checking
time: 0.053; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.195; rss: 208MB	item-types checking
time: 3.567; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.218; rss: 277MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.176; rss: 293MB	rvalue checking
time: 0.359; rss: 482MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.119; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.288; rss: 500MB	MIR cleanup and validation
time: 0.473; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.180; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 510MB	EraseRegions
  time: 0.011; rss: 510MB	AddCallGuards
  time: 0.271; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.053; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.003; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.525; rss: 530MB	MIR optimisations
  time: 0.064; rss: 538MB	write metadata
  time: 0.397; rss: 551MB	translation item collection
  time: 0.072; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.918; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.457; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [1]
time: 0.000; rss: 1199MB	llvm module passes [1]
time: 0.001; rss: 1203MB	llvm function passes [3]
time: 0.000; rss: 1204MB	llvm module passes [3]
time: 0.001; rss: 1206MB	llvm function passes [0]
time: 0.000; rss: 1206MB	llvm module passes [0]
time: 0.002; rss: 1206MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.002; rss: 1208MB	codegen passes [1]
time: 0.004; rss: 1208MB	llvm function passes [5]
time: 0.002; rss: 1210MB	llvm module passes [5]
time: 0.005; rss: 1210MB	codegen passes [3]
time: 0.001; rss: 1210MB	llvm function passes [26]
time: 0.000; rss: 1210MB	llvm module passes [26]
time: 0.008; rss: 1214MB	codegen passes [0]
time: 0.011; rss: 1214MB	llvm function passes [6]
time: 0.017; rss: 1214MB	llvm function passes [4]
time: 0.009; rss: 1218MB	llvm module passes [6]
time: 0.008; rss: 1220MB	llvm module passes [4]
time: 0.019; rss: 1222MB	llvm function passes [3]
time: 0.014; rss: 1227MB	llvm module passes [3]
time: 0.033; rss: 1229MB	llvm function passes [28]
time: 0.013; rss: 1229MB	llvm function passes [29]
time: 0.007; rss: 1233MB	llvm module passes [29]
time: 0.046; rss: 1233MB	codegen passes [2]
time: 0.000; rss: 1233MB	llvm function passes [2]
time: 0.000; rss: 1233MB	llvm module passes [2]
time: 0.001; rss: 1237MB	codegen passes [2]
time: 0.003; rss: 1237MB	llvm function passes [10]
time: 0.001; rss: 1237MB	llvm module passes [10]
time: 0.055; rss: 1241MB	codegen passes [26]
time: 0.025; rss: 1241MB	llvm module passes [28]
time: 0.062; rss: 1243MB	llvm function passes [0]
time: 0.044; rss: 1247MB	llvm function passes [7]
time: 0.011; rss: 1247MB	llvm module passes [7]
time: 0.000; rss: 1266MB	llvm function passes [11]
time: 0.047; rss: 1270MB	llvm module passes [0]
time: 0.007; rss: 1272MB	llvm module passes [11]
time: 0.059; rss: 1272MB	llvm function passes [26]
time: 0.000; rss: 1272MB	llvm module passes [26]
time: 0.071; rss: 1272MB	llvm function passes [2]
time: 0.000; rss: 1272MB	llvm function passes [12]
time: 0.000; rss: 1272MB	llvm module passes [12]
time: 0.113; rss: 1272MB	codegen passes [5]
time: 0.001; rss: 1272MB	codegen passes [12]
time: 0.004; rss: 1274MB	codegen passes [11]
time: 0.063; rss: 1274MB	codegen passes [10]
time: 0.019; rss: 1276MB	codegen passes [26]
time: 0.051; rss: 1278MB	llvm function passes [23]
time: 0.000; rss: 1278MB	llvm module passes [23]
time: 0.154; rss: 1289MB	llvm function passes [27]
time: 0.021; rss: 1299MB	llvm function passes [26]
time: 0.019; rss: 1301MB	codegen passes [23]
time: 0.049; rss: 1303MB	llvm function passes [30]
time: 0.015; rss: 1303MB	llvm module passes [30]
time: 0.028; rss: 1308MB	llvm function passes [16]
time: 0.003; rss: 1308MB	llvm module passes [16]
time: 0.070; rss: 1308MB	llvm module passes [27]
time: 0.062; rss: 1308MB	llvm module passes [26]
time: 0.226; rss: 1308MB	llvm function passes [1]
time: 0.070; rss: 1308MB	llvm function passes [23]
time: 0.004; rss: 1310MB	llvm function passes [35]
time: 0.006; rss: 1310MB	llvm module passes [35]
time: 0.000; rss: 1321MB	llvm function passes [39]
time: 0.000; rss: 1323MB	llvm module passes [39]
time: 0.251; rss: 1323MB	llvm function passes [14]
time: 0.004; rss: 1329MB	codegen passes [39]
time: 0.000; rss: 1329MB	codegen passes [39]
time: 0.131; rss: 1331MB	llvm function passes [15]
time: 0.143; rss: 1331MB	llvm function passes [13]
time: 0.013; rss: 1331MB	llvm module passes [15]
time: 0.065; rss: 1331MB	llvm module passes [23]
time: 0.203; rss: 1339MB	llvm function passes [31]
time: 0.211; rss: 1338MB	llvm module passes [2]
time: 0.095; rss: 1338MB	llvm function passes [40]
time: 0.032; rss: 1345MB	llvm module passes [31]
time: 0.302; rss: 1352MB	llvm function passes [9]
time: 0.078; rss: 1352MB	llvm module passes [13]
time: 0.162; rss: 1352MB	llvm function passes [19]
time: 0.002; rss: 1352MB	llvm module passes [19]
time: 0.262; rss: 1352MB	llvm function passes [12]
time: 0.265; rss: 1350MB	llvm function passes [11]
time: 0.164; rss: 1348MB	llvm function passes [25]
time: 0.056; rss: 1348MB	llvm module passes [9]
time: 0.304; rss: 1347MB	llvm function passes [5]
time: 0.094; rss: 1344MB	llvm module passes [40]
time: 0.057; rss: 1346MB	llvm module passes [12]
time: 0.120; rss: 1349MB	llvm function passes [36]
time: 0.320; rss: 1349MB	llvm function passes [32]
time: 0.069; rss: 1348MB	llvm module passes [11]
time: 0.202; rss: 1348MB	llvm module passes [14]
time: 0.029; rss: 1348MB	llvm module passes [36]
time: 0.260; rss: 1348MB	llvm module passes [1]
time: 0.100; rss: 1352MB	llvm module passes [25]
time: 0.137; rss: 1355MB	codegen passes [19]
time: 0.363; rss: 1357MB	llvm function passes [24]
time: 0.209; rss: 1357MB	llvm function passes [21]
time: 0.018; rss: 1361MB	llvm module passes [21]
time: 0.108; rss: 1367MB	llvm module passes [32]
time: 0.153; rss: 1379MB	llvm module passes [5]
time: 0.554; rss: 1381MB	llvm function passes [8]
time: 0.056; rss: 1390MB	codegen passes [35]
time: 0.250; rss: 1393MB	llvm function passes [33]
time: 0.388; rss: 1393MB	llvm function passes [22]
time: 0.131; rss: 1391MB	llvm module passes [24]
time: 0.429; rss: 1395MB	llvm function passes [34]
time: 0.467; rss: 1393MB	llvm function passes [20]
time: 0.064; rss: 1394MB	llvm module passes [33]
time: 0.481; rss: 1398MB	codegen passes [16]
time: 0.086; rss: 1396MB	llvm module passes [20]
time: 0.632; rss: 1398MB	llvm function passes [17]
time: 0.753; rss: 1398MB	llvm function passes [10]
time: 0.228; rss: 1398MB	llvm module passes [34]
time: 0.860; rss: 1417MB	codegen passes [6]
time: 0.149; rss: 1408MB	llvm module passes [10]
time: 0.409; rss: 1405MB	llvm module passes [22]
time: 0.344; rss: 1423MB	llvm module passes [17]
time: 0.615; rss: 1429MB	llvm module passes [8]
time: 1.123; rss: 1468MB	codegen passes [4]
time: 1.395; rss: 1474MB	codegen passes [29]
time: 0.921; rss: 1475MB	codegen passes [36]
time: 1.412; rss: 1432MB	codegen passes [26]
time: 1.655; rss: 1423MB	codegen passes [28]
time: 1.655; rss: 1423MB	codegen passes [3]
time: 1.274; rss: 1418MB	codegen passes [15]
time: 1.370; rss: 1422MB	codegen passes [25]
time: 1.602; rss: 1432MB	codegen passes [7]
time: 1.508; rss: 1441MB	codegen passes [33]
time: 1.997; rss: 1447MB	codegen passes [23]
time: 1.855; rss: 1436MB	codegen passes [2]
time: 2.043; rss: 1429MB	codegen passes [30]
time: 2.006; rss: 1438MB	codegen passes [5]
time: 2.235; rss: 1443MB	codegen passes [21]
time: 2.132; rss: 1439MB	codegen passes [13]
time: 2.438; rss: 1477MB	codegen passes [40]
time: 3.004; rss: 1590MB	codegen passes [31]
time: 2.721; rss: 1586MB	codegen passes [10]
time: 3.054; rss: 1576MB	codegen passes [0]
time: 3.481; rss: 1609MB	codegen passes [12]
time: 3.500; rss: 1660MB	codegen passes [17]
time: 4.094; rss: 1690MB	codegen passes [9]
time: 3.984; rss: 1694MB	codegen passes [27]
time: 4.154; rss: 1659MB	codegen passes [32]
time: 4.206; rss: 1615MB	codegen passes [11]
time: 4.126; rss: 1637MB	codegen passes [34]
time: 4.308; rss: 1594MB	codegen passes [22]
time: 4.491; rss: 1550MB	codegen passes [20]
time: 4.923; rss: 1550MB	codegen passes [14]
time: 4.762; rss: 1469MB	codegen passes [1]
time: 5.137; rss: 1385MB	codegen passes [24]
time: 5.218; rss: 1329MB	codegen passes [8]
time: 7.756; rss: 1329MB	LLVM passes
time: 0.000; rss: 1329MB	serialize work products
time: 1.065; rss: 296MB	linking
done
