commit 469fd779ee24f8348acd438f471c8c3a5cef309a
Merge: 17f1fba a6fe6c9
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 09:42:46 2016 +0000

    Auto merge of #38616 - pnkfelix:refactor-mir-dataflow-remove-ctxt, r=arielb1
    
    Refactor mir::dataflow: remove Ctxt associated type from BitDenotation trait
    
    Refactor mir::dataflow: remove Ctxt associated type from BitDenotation trait
    
    I no longer remember why I needed this (or thought I did). The way
    that the `BitDenotation` is passed around in all existing use cases
    (and planned future ones), the thing that were in the `Ctxt` can just
    be part of `Self` instead.
    
    (I think ariel had been pushing me to do this back when I first put in
    this infrastructure; it took me a while to see how much of pain the
    `Ctxt` was causing.)
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.244; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.380; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.019; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 198MB	coherence checking
time: 0.096; rss: 200MB	wf checking
time: 0.292; rss: 208MB	item-types checking
time: 3.648; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.279; rss: 277MB	const checking
time: 0.072; rss: 277MB	privacy checking
time: 0.023; rss: 283MB	intrinsic checking
time: 0.018; rss: 283MB	effect checking
time: 0.067; rss: 283MB	match checking
time: 0.054; rss: 291MB	liveness checking
time: 0.173; rss: 293MB	rvalue checking
time: 0.359; rss: 482MB	MIR dump
  time: 0.056; rss: 484MB	SimplifyCfg
  time: 0.075; rss: 484MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.289; rss: 500MB	MIR cleanup and validation
time: 0.478; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.176; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 510MB	EraseRegions
  time: 0.011; rss: 510MB	AddCallGuards
  time: 0.271; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 529MB	InstCombine
  time: 0.013; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.526; rss: 529MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.394; rss: 551MB	translation item collection
  time: 0.071; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.783; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.438; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [0]
time: 0.000; rss: 1197MB	llvm module passes [0]
time: 0.001; rss: 1203MB	llvm function passes [3]
time: 0.000; rss: 1206MB	llvm module passes [3]
time: 0.001; rss: 1210MB	llvm function passes [2]
time: 0.000; rss: 1210MB	llvm module passes [2]
time: 0.003; rss: 1210MB	llvm function passes [5]
time: 0.001; rss: 1218MB	llvm function passes [8]
time: 0.002; rss: 1218MB	llvm module passes [5]
time: 0.000; rss: 1218MB	llvm module passes [8]
time: 0.007; rss: 1218MB	codegen passes [3]
time: 0.011; rss: 1222MB	llvm function passes [6]
time: 0.009; rss: 1222MB	codegen passes [2]
time: 0.006; rss: 1222MB	llvm module passes [6]
time: 0.017; rss: 1222MB	llvm function passes [4]
time: 0.019; rss: 1225MB	codegen passes [0]
time: 0.016; rss: 1225MB	codegen passes [8]
time: 0.024; rss: 1225MB	llvm function passes [1]
time: 0.000; rss: 1225MB	llvm module passes [1]
time: 0.007; rss: 1225MB	llvm module passes [4]
time: 0.030; rss: 1233MB	llvm function passes [2]
time: 0.040; rss: 1233MB	llvm function passes [3]
time: 0.008; rss: 1233MB	llvm module passes [2]
time: 0.000; rss: 1237MB	llvm function passes [10]
time: 0.000; rss: 1237MB	llvm module passes [10]
time: 0.001; rss: 1237MB	codegen passes [10]
time: 0.003; rss: 1237MB	llvm function passes [10]
time: 0.001; rss: 1237MB	llvm module passes [10]
time: 0.035; rss: 1241MB	codegen passes [1]
time: 0.030; rss: 1241MB	llvm module passes [3]
time: 0.053; rss: 1246MB	llvm function passes [11]
time: 0.006; rss: 1250MB	llvm module passes [11]
time: 0.061; rss: 1259MB	llvm function passes [12]
time: 0.094; rss: 1259MB	codegen passes [5]
time: 0.000; rss: 1259MB	llvm function passes [5]
time: 0.000; rss: 1259MB	llvm module passes [5]
time: 0.004; rss: 1259MB	codegen passes [5]
time: 0.018; rss: 1259MB	llvm module passes [12]
time: 0.100; rss: 1273MB	llvm function passes [0]
time: 0.060; rss: 1275MB	codegen passes [10]
time: 0.000; rss: 1275MB	llvm function passes [10]
time: 0.000; rss: 1275MB	llvm module passes [10]
time: 0.127; rss: 1275MB	llvm function passes [7]
time: 0.061; rss: 1281MB	llvm function passes [15]
time: 0.000; rss: 1281MB	llvm module passes [15]
time: 0.029; rss: 1281MB	llvm module passes [0]
time: 0.062; rss: 1285MB	llvm function passes [16]
time: 0.000; rss: 1285MB	llvm module passes [16]
time: 0.100; rss: 1285MB	llvm function passes [14]
time: 0.011; rss: 1285MB	llvm module passes [14]
time: 0.048; rss: 1289MB	llvm function passes [17]
time: 0.037; rss: 1296MB	codegen passes [15]
time: 0.011; rss: 1296MB	llvm module passes [17]
time: 0.036; rss: 1300MB	codegen passes [16]
time: 0.070; rss: 1304MB	llvm module passes [7]
time: 0.013; rss: 1305MB	llvm function passes [16]
time: 0.028; rss: 1305MB	llvm function passes [15]
time: 0.008; rss: 1305MB	llvm module passes [16]
time: 0.011; rss: 1308MB	llvm module passes [15]
time: 0.203; rss: 1308MB	llvm function passes [8]
time: 0.227; rss: 1310MB	llvm function passes [9]
time: 0.024; rss: 1316MB	llvm function passes [24]
time: 0.004; rss: 1316MB	llvm module passes [24]
time: 0.115; rss: 1320MB	llvm function passes [18]
time: 0.001; rss: 1320MB	codegen passes [10]
time: 0.041; rss: 1371MB	llvm module passes [18]
time: 0.143; rss: 1375MB	llvm function passes [23]
time: 0.158; rss: 1376MB	llvm function passes [22]
time: 0.217; rss: 1378MB	llvm function passes [19]
time: 0.146; rss: 1378MB	llvm module passes [8]
time: 0.149; rss: 1378MB	llvm function passes [26]
time: 0.051; rss: 1378MB	llvm module passes [23]
time: 0.036; rss: 1380MB	llvm module passes [22]
time: 0.152; rss: 1383MB	llvm function passes [27]
time: 0.019; rss: 1385MB	llvm module passes [27]
time: 0.057; rss: 1385MB	llvm module passes [19]
time: 0.044; rss: 1389MB	llvm module passes [26]
time: 0.000; rss: 1393MB	codegen passes [38]
time: 0.217; rss: 1393MB	llvm module passes [9]
time: 0.303; rss: 1403MB	llvm function passes [20]
time: 0.313; rss: 1406MB	llvm function passes [21]
time: 0.079; rss: 1409MB	llvm function passes [37]
time: 0.007; rss: 1410MB	llvm module passes [37]
time: 0.279; rss: 1410MB	llvm function passes [28]
time: 0.418; rss: 1412MB	llvm function passes [5]
time: 0.077; rss: 1413MB	llvm module passes [20]
time: 0.329; rss: 1411MB	llvm function passes [25]
time: 0.314; rss: 1413MB	llvm function passes [29]
time: 0.001; rss: 1415MB	llvm module passes [29]
time: 0.072; rss: 1415MB	llvm module passes [21]
time: 0.062; rss: 1415MB	codegen passes [37]
time: 0.155; rss: 1414MB	llvm function passes [35]
time: 0.531; rss: 1417MB	llvm function passes [1]
time: 0.030; rss: 1416MB	codegen passes [29]
time: 0.080; rss: 1416MB	llvm module passes [28]
time: 0.570; rss: 1410MB	codegen passes [6]
time: 0.142; rss: 1408MB	llvm function passes [36]
time: 0.027; rss: 1409MB	llvm module passes [35]
time: 0.324; rss: 1401MB	codegen passes [24]
time: 0.331; rss: 1397MB	llvm function passes [30]
time: 0.123; rss: 1397MB	llvm module passes [5]
time: 0.255; rss: 1400MB	llvm function passes [33]
time: 0.012; rss: 1405MB	llvm module passes [30]
time: 0.614; rss: 1405MB	llvm function passes [13]
time: 0.024; rss: 1406MB	llvm module passes [33]
time: 0.136; rss: 1409MB	llvm module passes [25]
time: 0.083; rss: 1409MB	llvm module passes [36]
time: 0.322; rss: 1409MB	llvm function passes [32]
time: 0.173; rss: 1421MB	llvm module passes [1]
time: 0.247; rss: 1410MB	codegen passes [35]
time: 0.481; rss: 1420MB	llvm function passes [31]
time: 0.661; rss: 1412MB	llvm function passes [10]
time: 0.233; rss: 1412MB	llvm module passes [32]
time: 0.582; rss: 1435MB	llvm function passes [34]
time: 0.110; rss: 1441MB	llvm module passes [10]
time: 0.434; rss: 1439MB	llvm module passes [13]
time: 0.157; rss: 1455MB	llvm module passes [34]
time: 0.394; rss: 1488MB	codegen passes [36]
time: 1.012; rss: 1487MB	codegen passes [2]
time: 0.426; rss: 1481MB	llvm module passes [31]
time: 1.070; rss: 1475MB	codegen passes [4]
time: 1.142; rss: 1445MB	codegen passes [16]
time: 1.486; rss: 1481MB	codegen passes [11]
time: 1.730; rss: 1456MB	codegen passes [3]
time: 1.809; rss: 1448MB	codegen passes [15]
time: 1.688; rss: 1449MB	codegen passes [12]
time: 1.245; rss: 1433MB	codegen passes [33]
time: 1.457; rss: 1443MB	codegen passes [30]
time: 1.851; rss: 1432MB	codegen passes [14]
time: 1.769; rss: 1425MB	codegen passes [26]
time: 2.347; rss: 1502MB	codegen passes [27]
time: 2.147; rss: 1493MB	codegen passes [22]
time: 2.514; rss: 1501MB	codegen passes [17]
time: 2.519; rss: 1488MB	codegen passes [18]
time: 2.068; rss: 1511MB	codegen passes [32]
time: 3.562; rss: 1680MB	codegen passes [23]
time: 3.120; rss: 1682MB	codegen passes [5]
time: 3.795; rss: 1665MB	codegen passes [0]
time: 3.618; rss: 1705MB	codegen passes [19]
time: 3.683; rss: 1690MB	codegen passes [1]
time: 3.346; rss: 1668MB	codegen passes [10]
time: 3.906; rss: 1641MB	codegen passes [7]
time: 3.967; rss: 1630MB	codegen passes [21]
time: 3.703; rss: 1627MB	codegen passes [34]
time: 4.059; rss: 1586MB	codegen passes [20]
time: 4.245; rss: 1576MB	codegen passes [28]
time: 4.094; rss: 1523MB	codegen passes [31]
time: 5.169; rss: 1537MB	codegen passes [8]
time: 4.852; rss: 1482MB	codegen passes [9]
time: 5.086; rss: 1409MB	codegen passes [25]
time: 5.460; rss: 1344MB	codegen passes [13]
time: 7.691; rss: 1342MB	LLVM passes
time: 0.000; rss: 1342MB	serialize work products
time: 1.054; rss: 318MB	linking
done
