commit 8493dbed6c29b30844830d6e50a33493c6ea70af
Merge: 5752eae 23cfcdd
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 26 10:52:56 2016 +0000

    Auto merge of #38536 - retep998:flauschige-kaninchen, r=petrochenkov
    
    Fix fs tests on Windows systems with non-english locales.
    
    Fixes https://github.com/rust-lang/rust/issues/34628
    
    r? @alexcrichton
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.044; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.010; rss: 89MB	name resolution
time: 0.008; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 94MB	region resolution
time: 0.001; rss: 94MB	loop checking
time: 0.000; rss: 94MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.012; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 103MB	coherence checking
time: 0.020; rss: 104MB	wf checking
time: 0.122; rss: 113MB	item-types checking
time: 0.297; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.038; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.006; rss: 150MB	match checking
time: 0.004; rss: 151MB	liveness checking
time: 0.016; rss: 151MB	rvalue checking
time: 0.042; rss: 172MB	MIR dump
  time: 0.006; rss: 173MB	SimplifyCfg
  time: 0.009; rss: 173MB	QualifyAndPromoteConstants
  time: 0.012; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.003; rss: 173MB	SimplifyCfg
time: 0.030; rss: 173MB	MIR cleanup and validation
time: 0.046; rss: 173MB	borrow checking
time: 0.001; rss: 173MB	reachability checking
time: 0.004; rss: 174MB	death checking
time: 0.000; rss: 174MB	unused lib feature checking
time: 0.028; rss: 174MB	lint checking
time: 0.000; rss: 174MB	resolving dependency formats
  time: 0.000; rss: 174MB	NoLandingPads
  time: 0.003; rss: 174MB	SimplifyCfg
  time: 0.007; rss: 174MB	EraseRegions
  time: 0.001; rss: 174MB	AddCallGuards
  time: 0.017; rss: 176MB	ElaborateDrops
  time: 0.000; rss: 176MB	NoLandingPads
  time: 0.004; rss: 176MB	SimplifyCfg
  time: 0.003; rss: 176MB	InstCombine
  time: 0.002; rss: 176MB	Deaggregator
  time: 0.000; rss: 176MB	CopyPropagation
  time: 0.004; rss: 176MB	SimplifyLocals
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.000; rss: 176MB	PreTrans
time: 0.043; rss: 176MB	MIR optimisations
  time: 0.008; rss: 178MB	write metadata
  time: 0.085; rss: 183MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 312MB	internalize symbols
time: 1.669; rss: 312MB	translation
time: 0.000; rss: 312MB	assert dep graph
time: 0.110; rss: 320MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 257MB	llvm function passes [1]
time: 0.000; rss: 257MB	llvm module passes [1]
time: 0.002; rss: 257MB	llvm function passes [0]
time: 0.000; rss: 257MB	llvm module passes [0]
time: 0.003; rss: 257MB	llvm function passes [3]
time: 0.001; rss: 257MB	llvm module passes [3]
time: 0.006; rss: 262MB	codegen passes [1]
time: 0.001; rss: 262MB	llvm function passes [13]
time: 0.000; rss: 262MB	llvm module passes [13]
time: 0.014; rss: 264MB	codegen passes [0]
time: 0.020; rss: 264MB	llvm function passes [5]
time: 0.021; rss: 264MB	llvm function passes [2]
time: 0.008; rss: 264MB	llvm function passes [14]
time: 0.008; rss: 264MB	llvm function passes [0]
time: 0.015; rss: 264MB	codegen passes [13]
time: 0.003; rss: 264MB	llvm module passes [14]
time: 0.003; rss: 264MB	llvm module passes [0]
time: 0.002; rss: 270MB	llvm function passes [13]
time: 0.001; rss: 270MB	llvm module passes [13]
time: 0.028; rss: 270MB	llvm function passes [1]
time: 0.040; rss: 270MB	llvm function passes [4]
time: 0.025; rss: 272MB	codegen passes [13]
time: 0.021; rss: 272MB	llvm function passes [15]
time: 0.021; rss: 283MB	llvm function passes [16]
time: 0.002; rss: 283MB	llvm module passes [16]
time: 0.004; rss: 283MB	llvm function passes [18]
time: 0.008; rss: 287MB	llvm function passes [17]
time: 0.020; rss: 289MB	llvm function passes [13]
time: 0.013; rss: 289MB	llvm module passes [18]
time: 0.022; rss: 294MB	llvm module passes [15]
time: 0.078; rss: 298MB	codegen passes [3]
time: 0.010; rss: 298MB	llvm module passes [13]
time: 0.010; rss: 299MB	llvm function passes [19]
time: 0.001; rss: 299MB	llvm module passes [19]
time: 0.030; rss: 299MB	llvm module passes [17]
time: 0.000; rss: 310MB	codegen passes [10]
time: 0.008; rss: 310MB	llvm function passes [12]
time: 0.001; rss: 310MB	llvm module passes [12]
time: 0.046; rss: 310MB	llvm function passes [6]
time: 0.041; rss: 310MB	llvm function passes [3]
time: 0.054; rss: 322MB	llvm function passes [20]
time: 0.078; rss: 322MB	codegen passes [16]
time: 0.056; rss: 326MB	codegen passes [19]
time: 0.018; rss: 328MB	llvm module passes [20]
time: 0.086; rss: 329MB	codegen passes [18]
time: 0.047; rss: 334MB	llvm module passes [3]
time: 0.155; rss: 351MB	codegen passes [14]
time: 0.104; rss: 350MB	codegen passes [12]
time: 0.206; rss: 350MB	llvm module passes [2]
time: 0.147; rss: 350MB	codegen passes [17]
time: 0.273; rss: 349MB	llvm module passes [5]
time: 0.297; rss: 351MB	codegen passes [0]
time: 0.440; rss: 372MB	llvm module passes [1]
time: 0.414; rss: 379MB	codegen passes [15]
time: 0.464; rss: 374MB	llvm module passes [6]
time: 0.552; rss: 372MB	llvm module passes [4]
time: 0.460; rss: 387MB	codegen passes [13]
time: 0.363; rss: 393MB	codegen passes [5]
time: 0.420; rss: 371MB	codegen passes [2]
time: 0.516; rss: 363MB	codegen passes [3]
time: 0.724; rss: 377MB	codegen passes [20]
time: 0.652; rss: 395MB	codegen passes [1]
time: 0.694; rss: 391MB	codegen passes [4]
time: 0.835; rss: 357MB	codegen passes [6]
time: 1.545; rss: 354MB	LLVM passes
time: 0.000; rss: 354MB	serialize work products
time: 0.206; rss: 171MB	linking
done
