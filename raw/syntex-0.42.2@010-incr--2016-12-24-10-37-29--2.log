commit d86cf13316a885dbc78fc33becbc718c6ff3468c
Merge: 8d65c8d ecc6010
Author: bors <bors@rust-lang.org>
Date:   Sat Dec 24 13:28:37 2016 +0000

    Auto merge of #38062 - alexcrichton:fix-line-writer, r=brson
    
    std: Fix partial writes in LineWriter
    
    Previously the `LineWriter` could successfully write some bytes but then fail to
    report that it has done so. Additionally, an erroneous flush after a successful
    write was permanently ignored. This commit fixes these two issues by (a)
    maintaining a `need_flush` flag to indicate whether a flush should be the first
    operation in `LineWriter::write` and (b) avoiding returning an error once some
    bytes have been successfully written.
    
    Closes #37807
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.240; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.089; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.591; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.220; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.180; rss: 292MB	rvalue checking
time: 0.369; rss: 482MB	MIR dump
  time: 0.060; rss: 483MB	SimplifyCfg
  time: 0.079; rss: 483MB	QualifyAndPromoteConstants
  time: 0.126; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.303; rss: 500MB	MIR cleanup and validation
time: 0.471; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.349; rss: 531MB	ElaborateDrops
  time: 0.005; rss: 531MB	NoLandingPads
  time: 0.078; rss: 529MB	SimplifyCfg
  time: 0.039; rss: 528MB	InstCombine
  time: 0.018; rss: 528MB	Deaggregator
  time: 0.005; rss: 528MB	CopyPropagation
  time: 0.046; rss: 528MB	SimplifyLocals
  time: 0.014; rss: 528MB	AddCallGuards
  time: 0.004; rss: 528MB	PreTrans
time: 0.662; rss: 528MB	MIR optimisations
  time: 0.095; rss: 538MB	write metadata
  time: 0.508; rss: 552MB	translation item collection
  time: 0.073; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.075; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.398; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [2]
time: 0.000; rss: 1199MB	llvm module passes [2]
time: 0.001; rss: 1201MB	llvm function passes [0]
time: 0.000; rss: 1201MB	llvm module passes [0]
time: 0.003; rss: 1212MB	llvm function passes [3]
time: 0.000; rss: 1212MB	llvm module passes [3]
time: 0.003; rss: 1212MB	llvm function passes [1]
time: 0.000; rss: 1212MB	llvm module passes [1]
time: 0.003; rss: 1212MB	llvm function passes [4]
time: 0.002; rss: 1212MB	llvm module passes [4]
time: 0.004; rss: 1212MB	codegen passes [2]
time: 0.001; rss: 1214MB	llvm function passes [12]
time: 0.000; rss: 1214MB	llvm module passes [12]
time: 0.011; rss: 1214MB	llvm function passes [6]
time: 0.015; rss: 1220MB	llvm function passes [5]
time: 0.012; rss: 1220MB	codegen passes [3]
time: 0.006; rss: 1220MB	llvm module passes [6]
time: 0.018; rss: 1220MB	codegen passes [0]
time: 0.008; rss: 1221MB	llvm module passes [5]
time: 0.031; rss: 1236MB	llvm function passes [13]
time: 0.000; rss: 1240MB	llvm function passes [17]
time: 0.000; rss: 1240MB	llvm module passes [17]
time: 0.002; rss: 1242MB	codegen passes [17]
time: 0.016; rss: 1242MB	llvm function passes [15]
time: 0.034; rss: 1242MB	llvm function passes [3]
time: 0.013; rss: 1246MB	llvm module passes [13]
time: 0.009; rss: 1250MB	llvm module passes [3]
time: 0.009; rss: 1250MB	llvm module passes [15]
time: 0.055; rss: 1250MB	codegen passes [1]
time: 0.000; rss: 1250MB	llvm function passes [22]
time: 0.008; rss: 1254MB	llvm module passes [22]
time: 0.004; rss: 1256MB	codegen passes [22]
time: 0.000; rss: 1256MB	llvm function passes [23]
time: 0.000; rss: 1256MB	llvm module passes [23]
time: 0.001; rss: 1256MB	codegen passes [23]
time: 0.073; rss: 1260MB	codegen passes [12]
time: 0.044; rss: 1263MB	llvm function passes [18]
time: 0.058; rss: 1263MB	llvm function passes [14]
time: 0.001; rss: 1263MB	llvm module passes [18]
time: 0.074; rss: 1263MB	llvm function passes [0]
time: 0.041; rss: 1265MB	llvm function passes [20]
time: 0.000; rss: 1265MB	llvm module passes [20]
time: 0.012; rss: 1268MB	llvm module passes [14]
time: 0.096; rss: 1268MB	codegen passes [4]
time: 0.056; rss: 1270MB	llvm function passes [21]
time: 0.000; rss: 1270MB	llvm module passes [21]
time: 0.041; rss: 1275MB	llvm module passes [0]
time: 0.062; rss: 1279MB	llvm function passes [24]
time: 0.009; rss: 1279MB	llvm module passes [24]
time: 0.106; rss: 1282MB	llvm function passes [19]
time: 0.043; rss: 1285MB	codegen passes [21]
time: 0.165; rss: 1289MB	llvm function passes [7]
time: 0.016; rss: 1294MB	llvm module passes [19]
time: 0.147; rss: 1298MB	llvm function passes [17]
time: 0.122; rss: 1298MB	llvm function passes [22]
time: 0.110; rss: 1309MB	codegen passes [20]
time: 0.034; rss: 1308MB	llvm function passes [28]
time: 0.003; rss: 1308MB	llvm module passes [28]
time: 0.228; rss: 1312MB	llvm function passes [2]
time: 0.123; rss: 1312MB	codegen passes [18]
time: 0.039; rss: 1312MB	llvm module passes [22]
time: 0.093; rss: 1312MB	llvm function passes [29]
time: 0.086; rss: 1312MB	llvm module passes [7]
time: 0.046; rss: 1312MB	llvm function passes [20]
time: 0.020; rss: 1312MB	llvm module passes [29]
time: 0.149; rss: 1331MB	llvm function passes [27]
time: 0.036; rss: 1364MB	llvm function passes [18]
time: 0.002; rss: 1364MB	llvm module passes [18]
time: 0.015; rss: 1364MB	llvm module passes [27]
time: 0.026; rss: 1364MB	llvm module passes [20]
time: 0.112; rss: 1371MB	llvm module passes [17]
time: 0.222; rss: 1377MB	llvm function passes [26]
time: 0.310; rss: 1383MB	llvm function passes [8]
time: 0.034; rss: 1385MB	llvm module passes [26]
time: 0.293; rss: 1385MB	llvm function passes [25]
time: 0.083; rss: 1393MB	llvm function passes [37]
time: 0.333; rss: 1396MB	llvm function passes [12]
time: 0.024; rss: 1396MB	llvm function passes [41]
time: 0.000; rss: 1396MB	llvm module passes [41]
time: 0.190; rss: 1395MB	llvm module passes [2]
time: 0.031; rss: 1396MB	llvm module passes [37]
time: 0.051; rss: 1397MB	llvm function passes [39]
time: 0.359; rss: 1399MB	llvm function passes [23]
time: 0.345; rss: 1401MB	llvm function passes [4]
time: 0.121; rss: 1401MB	llvm module passes [8]
time: 0.060; rss: 1409MB	codegen passes [42]
time: 0.086; rss: 1411MB	llvm module passes [25]
time: 0.053; rss: 1412MB	llvm module passes [23]
time: 0.068; rss: 1414MB	codegen passes [41]
time: 0.083; rss: 1413MB	llvm module passes [12]
time: 0.223; rss: 1399MB	llvm function passes [36]
time: 0.318; rss: 1399MB	llvm function passes [32]
time: 0.317; rss: 1408MB	llvm function passes [30]
time: 0.020; rss: 1407MB	llvm module passes [32]
time: 0.295; rss: 1407MB	llvm function passes [31]
time: 0.162; rss: 1403MB	llvm function passes [40]
time: 0.076; rss: 1410MB	llvm module passes [36]
time: 0.054; rss: 1404MB	llvm module passes [31]
time: 0.563; rss: 1404MB	llvm function passes [1]
time: 0.192; rss: 1402MB	llvm module passes [39]
time: 0.080; rss: 1402MB	llvm module passes [30]
time: 0.361; rss: 1402MB	codegen passes [28]
time: 0.060; rss: 1404MB	llvm module passes [40]
time: 0.495; rss: 1399MB	llvm function passes [21]
time: 0.044; rss: 1395MB	llvm module passes [1]
time: 0.290; rss: 1399MB	llvm function passes [34]
time: 0.681; rss: 1403MB	llvm function passes [16]
time: 0.296; rss: 1415MB	llvm module passes [4]
time: 0.261; rss: 1421MB	codegen passes [18]
time: 0.087; rss: 1425MB	llvm module passes [34]
time: 0.157; rss: 1442MB	codegen passes [39]
time: 0.911; rss: 1444MB	codegen passes [6]
time: 0.716; rss: 1445MB	llvm function passes [35]
time: 0.359; rss: 1455MB	llvm module passes [21]
time: 0.651; rss: 1441MB	llvm function passes [38]
time: 0.395; rss: 1471MB	codegen passes [40]
time: 0.512; rss: 1437MB	llvm module passes [16]
time: 0.931; rss: 1429MB	codegen passes [5]
time: 0.246; rss: 1435MB	llvm module passes [38]
time: 1.078; rss: 1463MB	codegen passes [3]
time: 0.526; rss: 1444MB	llvm module passes [35]
time: 1.153; rss: 1465MB	codegen passes [29]
time: 1.562; rss: 1461MB	codegen passes [15]
time: 1.404; rss: 1477MB	codegen passes [14]
time: 1.448; rss: 1486MB	codegen passes [27]
time: 1.465; rss: 1469MB	codegen passes [20]
time: 1.547; rss: 1454MB	codegen passes [13]
time: 1.646; rss: 1443MB	codegen passes [24]
time: 1.297; rss: 1457MB	codegen passes [34]
time: 1.808; rss: 1458MB	codegen passes [19]
time: 2.348; rss: 1498MB	codegen passes [22]
time: 2.341; rss: 1485MB	codegen passes [37]
time: 2.388; rss: 1497MB	codegen passes [32]
time: 2.533; rss: 1547MB	codegen passes [36]
time: 2.514; rss: 1575MB	codegen passes [4]
time: 2.840; rss: 1588MB	codegen passes [26]
time: 3.298; rss: 1609MB	codegen passes [0]
time: 3.363; rss: 1652MB	codegen passes [1]
time: 3.736; rss: 1656MB	codegen passes [17]
time: 3.754; rss: 1653MB	codegen passes [31]
time: 3.839; rss: 1630MB	codegen passes [23]
time: 3.914; rss: 1661MB	codegen passes [7]
time: 3.934; rss: 1612MB	codegen passes [25]
time: 3.896; rss: 1588MB	codegen passes [12]
time: 3.696; rss: 1598MB	codegen passes [38]
time: 3.976; rss: 1544MB	codegen passes [30]
time: 4.170; rss: 1520MB	codegen passes [35]
time: 5.014; rss: 1497MB	codegen passes [8]
time: 4.955; rss: 1468MB	codegen passes [21]
time: 5.632; rss: 1416MB	codegen passes [2]
time: 5.384; rss: 1342MB	codegen passes [16]
time: 7.935; rss: 1341MB	LLVM passes
time: 0.000; rss: 1341MB	serialize work products
time: 1.042; rss: 317MB	linking
done
