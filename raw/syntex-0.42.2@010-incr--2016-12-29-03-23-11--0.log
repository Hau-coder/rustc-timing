commit ebc293bcd3fb4122c9be889b7338a9c3089f53ce
Merge: 1d9965b ad747c5
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 29 08:16:58 2016 +0000

    Auto merge of #38645 - nikomatsakis:incr-comp-fix-time-depth, r=nrc
    
    propagate TIME_DEPTH to the helper threads for -Z time-passes
    
    Currently, the timing measurements for LLVM passes and the like don't come out indented, which messes up `perf.rust-lang.org`.
    
    r? @nrc
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.094; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.009; rss: 191MB	indexing hir
time: 0.006; rss: 191MB	attribute checking
time: 0.002; rss: 153MB	language item collection
time: 0.011; rss: 155MB	lifetime resolution
time: 0.000; rss: 155MB	looking for entry point
time: 0.000; rss: 155MB	looking for plugin registrar
time: 0.045; rss: 176MB	region resolution
time: 0.007; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.003; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.089; rss: 199MB	wf checking
time: 0.195; rss: 207MB	item-types checking
time: 3.571; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.220; rss: 276MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 289MB	liveness checking
time: 0.179; rss: 292MB	rvalue checking
time: 0.371; rss: 481MB	MIR dump
  time: 0.060; rss: 483MB	SimplifyCfg
  time: 0.080; rss: 483MB	QualifyAndPromoteConstants
  time: 0.124; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.302; rss: 499MB	MIR cleanup and validation
time: 0.477; rss: 499MB	borrow checking
time: 0.024; rss: 499MB	reachability checking
time: 0.038; rss: 499MB	death checking
time: 0.000; rss: 499MB	unused lib feature checking
time: 0.178; rss: 499MB	lint checking
time: 0.000; rss: 499MB	resolving dependency formats
  time: 0.004; rss: 499MB	NoLandingPads
  time: 0.027; rss: 499MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 530MB	ElaborateDrops
  time: 0.004; rss: 530MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.525; rss: 528MB	MIR optimisations
  time: 0.064; rss: 536MB	write metadata
  time: 0.393; rss: 551MB	translation item collection
  time: 0.071; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1456MB	internalize symbols
time: 12.019; rss: 1456MB	translation
time: 0.000; rss: 1456MB	assert dep graph
time: 1.354; rss: 1484MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [1]
time: 0.000; rss: 1199MB	llvm module passes [1]
time: 0.001; rss: 1205MB	llvm function passes [0]
time: 0.000; rss: 1207MB	llvm module passes [0]
time: 0.002; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.002; rss: 1208MB	llvm function passes [3]
time: 0.000; rss: 1208MB	llvm module passes [3]
time: 0.002; rss: 1208MB	codegen passes [1]
time: 0.004; rss: 1208MB	llvm function passes [5]
time: 0.002; rss: 1210MB	llvm module passes [5]
time: 0.005; rss: 1210MB	codegen passes [0]
time: 0.001; rss: 1210MB	llvm function passes [0]
time: 0.000; rss: 1210MB	llvm module passes [0]
time: 0.008; rss: 1214MB	codegen passes [2]
time: 0.011; rss: 1214MB	llvm function passes [6]
time: 0.017; rss: 1220MB	llvm function passes [4]
time: 0.012; rss: 1224MB	llvm module passes [6]
time: 0.016; rss: 1227MB	codegen passes [0]
time: 0.022; rss: 1227MB	codegen passes [3]
time: 0.000; rss: 1227MB	llvm function passes [3]
time: 0.000; rss: 1227MB	llvm module passes [3]
time: 0.008; rss: 1227MB	llvm module passes [4]
time: 0.001; rss: 1227MB	codegen passes [3]
time: 0.017; rss: 1233MB	llvm function passes [7]
time: 0.018; rss: 1233MB	llvm function passes [2]
time: 0.008; rss: 1238MB	llvm module passes [7]
time: 0.008; rss: 1238MB	llvm module passes [2]
time: 0.011; rss: 1238MB	llvm function passes [3]
time: 0.001; rss: 1238MB	llvm module passes [3]
time: 0.043; rss: 1246MB	llvm function passes [33]
time: 0.000; rss: 1250MB	llvm function passes [41]
time: 0.014; rss: 1254MB	llvm module passes [33]
time: 0.008; rss: 1256MB	llvm module passes [41]
time: 0.044; rss: 1256MB	llvm function passes [40]
time: 0.000; rss: 1256MB	llvm module passes [40]
time: 0.012; rss: 1256MB	codegen passes [41]
time: 0.000; rss: 1256MB	llvm function passes [46]
time: 0.000; rss: 1256MB	llvm module passes [46]
time: 0.001; rss: 1256MB	codegen passes [46]
time: 0.071; rss: 1263MB	llvm function passes [37]
time: 0.069; rss: 1267MB	llvm function passes [39]
time: 0.041; rss: 1267MB	llvm function passes [44]
time: 0.000; rss: 1267MB	llvm module passes [44]
time: 0.085; rss: 1267MB	llvm function passes [36]
time: 0.013; rss: 1271MB	llvm module passes [37]
time: 0.065; rss: 1271MB	codegen passes [3]
time: 0.029; rss: 1271MB	codegen passes [40]
time: 0.015; rss: 1271MB	llvm module passes [39]
time: 0.118; rss: 1275MB	codegen passes [5]
time: 0.015; rss: 1279MB	llvm function passes [5]
time: 0.033; rss: 1279MB	llvm function passes [40]
time: 0.004; rss: 1279MB	llvm module passes [5]
time: 0.046; rss: 1289MB	codegen passes [44]
time: 0.094; rss: 1291MB	llvm function passes [42]
time: 0.057; rss: 1291MB	llvm module passes [36]
time: 0.164; rss: 1291MB	llvm function passes [1]
time: 0.020; rss: 1291MB	llvm module passes [40]
time: 0.014; rss: 1291MB	llvm module passes [42]
time: 0.027; rss: 1293MB	llvm function passes [44]
time: 0.002; rss: 1293MB	llvm module passes [44]
time: 0.045; rss: 1356MB	codegen passes [44]
time: 0.190; rss: 1352MB	llvm function passes [38]
time: 0.072; rss: 1360MB	llvm module passes [1]
time: 0.139; rss: 1362MB	llvm function passes [48]
time: 0.148; rss: 1364MB	llvm function passes [43]
time: 0.192; rss: 1365MB	llvm function passes [45]
time: 0.012; rss: 1363MB	llvm module passes [48]
time: 0.000; rss: 1359MB	llvm function passes [21]
time: 0.000; rss: 1359MB	llvm module passes [21]
time: 0.000; rss: 1359MB	codegen passes [22]
time: 0.003; rss: 1365MB	llvm function passes [19]
time: 0.042; rss: 1358MB	llvm module passes [43]
time: 0.043; rss: 1360MB	llvm module passes [19]
time: 0.064; rss: 1359MB	llvm module passes [45]
time: 0.227; rss: 1363MB	llvm function passes [49]
time: 0.064; rss: 1363MB	codegen passes [21]
time: 0.157; rss: 1362MB	llvm function passes [11]
time: 0.270; rss: 1365MB	llvm function passes [41]
time: 0.122; rss: 1365MB	llvm module passes [38]
time: 0.035; rss: 1371MB	llvm module passes [11]
time: 0.053; rss: 1375MB	llvm module passes [49]
time: 0.393; rss: 1379MB	llvm function passes [35]
time: 0.162; rss: 1381MB	llvm function passes [16]
time: 0.086; rss: 1387MB	llvm module passes [41]
time: 0.273; rss: 1391MB	llvm function passes [13]
time: 0.367; rss: 1391MB	llvm function passes [46]
time: 0.446; rss: 1397MB	llvm function passes [34]
time: 0.016; rss: 1397MB	llvm module passes [13]
time: 0.247; rss: 1401MB	llvm function passes [12]
time: 0.365; rss: 1401MB	llvm function passes [9]
time: 0.262; rss: 1400MB	llvm function passes [18]
time: 0.069; rss: 1400MB	llvm module passes [46]
time: 0.354; rss: 1403MB	llvm function passes [10]
time: 0.436; rss: 1403MB	llvm function passes [47]
time: 0.283; rss: 1404MB	llvm function passes [20]
time: 0.133; rss: 1406MB	llvm module passes [16]
time: 0.080; rss: 1406MB	llvm module passes [12]
time: 0.049; rss: 1412MB	llvm module passes [20]
time: 0.195; rss: 1412MB	llvm module passes [35]
time: 0.573; rss: 1415MB	llvm function passes [0]
time: 0.070; rss: 1415MB	llvm module passes [47]
time: 0.079; rss: 1413MB	llvm module passes [10]
time: 0.154; rss: 1415MB	llvm module passes [34]
time: 0.529; rss: 1410MB	llvm function passes [3]
time: 0.034; rss: 1413MB	llvm module passes [3]
time: 0.412; rss: 1413MB	llvm function passes [17]
time: 0.202; rss: 1412MB	llvm module passes [9]
time: 0.497; rss: 1411MB	llvm function passes [44]
time: 0.485; rss: 1411MB	llvm function passes [15]
time: 0.041; rss: 1413MB	llvm module passes [17]
time: 0.172; rss: 1435MB	codegen passes [19]
time: 0.098; rss: 1453MB	llvm module passes [15]
time: 0.819; rss: 1466MB	codegen passes [6]
time: 0.426; rss: 1468MB	llvm module passes [18]
time: 0.391; rss: 1473MB	llvm module passes [0]
time: 0.318; rss: 1462MB	llvm module passes [44]
time: 0.375; rss: 1474MB	codegen passes [20]
time: 1.150; rss: 1468MB	codegen passes [40]
time: 1.291; rss: 1451MB	codegen passes [7]
time: 1.219; rss: 1446MB	codegen passes [4]
time: 1.283; rss: 1469MB	codegen passes [5]
time: 1.337; rss: 1460MB	codegen passes [2]
time: 1.581; rss: 1462MB	codegen passes [37]
time: 1.014; rss: 1452MB	codegen passes [15]
time: 1.460; rss: 1448MB	codegen passes [48]
time: 1.529; rss: 1419MB	codegen passes [13]
time: 1.644; rss: 1418MB	codegen passes [33]
time: 1.908; rss: 1435MB	codegen passes [39]
time: 1.943; rss: 1465MB	codegen passes [43]
time: 2.070; rss: 1495MB	codegen passes [45]
time: 2.517; rss: 1525MB	codegen passes [42]
time: 2.606; rss: 1519MB	codegen passes [11]
time: 2.536; rss: 1549MB	codegen passes [17]
time: 2.472; rss: 1542MB	codegen passes [16]
time: 2.626; rss: 1563MB	codegen passes [3]
time: 3.163; rss: 1611MB	codegen passes [49]
time: 3.549; rss: 1671MB	codegen passes [36]
time: 3.798; rss: 1691MB	codegen passes [38]
time: 3.832; rss: 1702MB	codegen passes [41]
time: 3.943; rss: 1685MB	codegen passes [1]
time: 3.971; rss: 1675MB	codegen passes [12]
time: 4.038; rss: 1660MB	codegen passes [47]
time: 3.820; rss: 1629MB	codegen passes [18]
time: 4.453; rss: 1599MB	codegen passes [46]
time: 3.957; rss: 1563MB	codegen passes [10]
time: 4.365; rss: 1553MB	codegen passes [44]
time: 4.770; rss: 1513MB	codegen passes [34]
time: 4.983; rss: 1489MB	codegen passes [9]
time: 5.356; rss: 1418MB	codegen passes [35]
time: 5.387; rss: 1348MB	codegen passes [0]
time: 7.709; rss: 1345MB	LLVM passes
time: 0.000; rss: 1345MB	serialize work products
time: 1.043; rss: 304MB	linking
done
