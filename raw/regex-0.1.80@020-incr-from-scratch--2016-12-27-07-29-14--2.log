commit d849b132672d4c7824045e4458693997a424994b
Merge: 9351c2c ca115dd
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 27 11:32:39 2016 +0000

    Auto merge of #38574 - Mark-Simulacrum:box-free-unspecialize, r=eddyb
    
    Remove special case for Box<ZST> in trans
    
    Remove extra lang item, `exchange_free`; use `box_free` instead.
    
    Trans used to insert code equivalent to `box_free` in a wrapper around
    `exchange_free`, and that code is now removed from trans.
    
    Fixes #37710.
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.044; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.012; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.123; rss: 112MB	item-types checking
time: 0.297; rss: 120MB	item-bodies checking
time: 0.000; rss: 120MB	drop-impl checking
time: 0.039; rss: 149MB	const checking
time: 0.007; rss: 149MB	privacy checking
time: 0.002; rss: 149MB	intrinsic checking
time: 0.001; rss: 149MB	effect checking
time: 0.005; rss: 149MB	match checking
time: 0.004; rss: 150MB	liveness checking
time: 0.016; rss: 150MB	rvalue checking
time: 0.043; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.009; rss: 172MB	QualifyAndPromoteConstants
  time: 0.012; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.030; rss: 172MB	MIR cleanup and validation
time: 0.046; rss: 173MB	borrow checking
time: 0.001; rss: 173MB	reachability checking
time: 0.004; rss: 173MB	death checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.028; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.003; rss: 173MB	SimplifyCfg
  time: 0.007; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.043; rss: 175MB	MIR optimisations
  time: 0.009; rss: 177MB	write metadata
  time: 0.087; rss: 183MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 311MB	internalize symbols
time: 1.675; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.122; rss: 319MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 260MB	llvm function passes [7]
time: 0.003; rss: 260MB	llvm function passes [1]
time: 0.004; rss: 260MB	llvm function passes [0]
time: 0.002; rss: 260MB	llvm module passes [1]
time: 0.004; rss: 260MB	llvm function passes [2]
time: 0.000; rss: 260MB	llvm module passes [2]
time: 0.002; rss: 260MB	llvm module passes [7]
time: 0.002; rss: 261MB	llvm module passes [0]
time: 0.008; rss: 267MB	llvm function passes [8]
time: 0.018; rss: 269MB	llvm function passes [3]
time: 0.003; rss: 269MB	llvm module passes [8]
time: 0.020; rss: 269MB	llvm function passes [5]
time: 0.011; rss: 269MB	llvm function passes [12]
time: 0.001; rss: 271MB	llvm function passes [11]
time: 0.004; rss: 271MB	llvm module passes [12]
time: 0.003; rss: 271MB	llvm module passes [11]
time: 0.032; rss: 271MB	llvm function passes [6]
time: 0.033; rss: 278MB	codegen passes [2]
time: 0.037; rss: 282MB	codegen passes [1]
time: 0.044; rss: 282MB	llvm function passes [4]
time: 0.046; rss: 284MB	codegen passes [7]
time: 0.017; rss: 291MB	llvm function passes [19]
time: 0.004; rss: 293MB	llvm function passes [17]
time: 0.002; rss: 293MB	llvm function passes [7]
time: 0.001; rss: 293MB	llvm module passes [7]
time: 0.028; rss: 293MB	codegen passes [11]
time: 0.012; rss: 293MB	llvm function passes [20]
time: 0.020; rss: 293MB	llvm function passes [1]
time: 0.002; rss: 293MB	llvm module passes [20]
time: 0.005; rss: 293MB	llvm module passes [17]
time: 0.012; rss: 295MB	llvm module passes [19]
time: 0.031; rss: 295MB	llvm function passes [2]
time: 0.066; rss: 303MB	codegen passes [0]
time: 0.003; rss: 303MB	llvm function passes [0]
time: 0.001; rss: 303MB	llvm module passes [0]
time: 0.000; rss: 305MB	codegen passes [10]
time: 0.016; rss: 305MB	llvm module passes [2]
time: 0.043; rss: 321MB	codegen passes [0]
time: 0.071; rss: 321MB	llvm function passes [16]
time: 0.066; rss: 321MB	llvm function passes [18]
time: 0.078; rss: 324MB	llvm module passes [1]
time: 0.079; rss: 324MB	codegen passes [7]
time: 0.062; rss: 324MB	llvm function passes [13]
time: 0.017; rss: 329MB	llvm module passes [13]
time: 0.028; rss: 334MB	llvm module passes [18]
time: 0.118; rss: 343MB	codegen passes [20]
time: 0.130; rss: 342MB	codegen passes [17]
time: 0.203; rss: 351MB	llvm module passes [5]
time: 0.237; rss: 341MB	llvm module passes [3]
time: 0.204; rss: 342MB	codegen passes [8]
time: 0.200; rss: 343MB	codegen passes [12]
time: 0.161; rss: 346MB	codegen passes [1]
time: 0.412; rss: 364MB	llvm module passes [6]
time: 0.353; rss: 377MB	codegen passes [19]
time: 0.451; rss: 370MB	llvm module passes [16]
time: 0.542; rss: 370MB	llvm module passes [4]
time: 0.448; rss: 390MB	codegen passes [2]
time: 0.463; rss: 379MB	codegen passes [18]
time: 0.413; rss: 373MB	codegen passes [5]
time: 0.391; rss: 364MB	codegen passes [3]
time: 0.771; rss: 375MB	codegen passes [13]
time: 0.757; rss: 382MB	codegen passes [6]
time: 1.064; rss: 382MB	codegen passes [4]
time: 1.127; rss: 359MB	codegen passes [16]
time: 1.837; rss: 356MB	LLVM passes
time: 0.000; rss: 356MB	serialize work products
time: 0.207; rss: 172MB	linking
done
