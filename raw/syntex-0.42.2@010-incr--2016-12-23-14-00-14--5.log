commit 467a7f049bac0386097c6cd2c80966c8d7453ce8
Merge: 00b4019 c12fc66
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 23 18:43:12 2016 +0000

    Auto merge of #38533 - jseyfried:legacy_custom_derive_deprecation, r=nrc
    
    Allow legacy custom derive authors to disable warnings in downstream crates
    
    This PR allows legacy custom derive authors to use a pre-deprecated method `registry.register_custom_derive()` instead of `registry.register_syntax_extension()` to avoid downstream deprecation warnings.
    
    r? @nrc
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.247; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.532; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.011; rss: 178MB	stability index
time: 0.022; rss: 181MB	stability checking
time: 0.068; rss: 189MB	type collecting
time: 0.003; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.032; rss: 196MB	coherence checking
time: 0.125; rss: 199MB	wf checking
time: 0.242; rss: 207MB	item-types checking
time: 3.559; rss: 264MB	item-bodies checking
time: 0.000; rss: 264MB	drop-impl checking
time: 0.222; rss: 276MB	const checking
time: 0.069; rss: 276MB	privacy checking
time: 0.022; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.048; rss: 283MB	match checking
time: 0.047; rss: 291MB	liveness checking
time: 0.176; rss: 293MB	rvalue checking
time: 0.363; rss: 481MB	MIR dump
  time: 0.056; rss: 482MB	SimplifyCfg
  time: 0.075; rss: 482MB	QualifyAndPromoteConstants
  time: 0.120; rss: 499MB	TypeckMir
  time: 0.005; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.288; rss: 499MB	MIR cleanup and validation
time: 0.476; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.039; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.175; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 530MB	ElaborateDrops
  time: 0.004; rss: 530MB	NoLandingPads
  time: 0.052; rss: 530MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.526; rss: 530MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.392; rss: 551MB	translation item collection
  time: 0.072; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.976; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.378; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1193MB	llvm function passes [0]
time: 0.000; rss: 1193MB	llvm module passes [0]
time: 0.001; rss: 1203MB	llvm function passes [2]
time: 0.000; rss: 1205MB	llvm module passes [2]
time: 0.001; rss: 1210MB	llvm function passes [3]
time: 0.000; rss: 1210MB	llvm module passes [3]
time: 0.002; rss: 1210MB	llvm function passes [4]
time: 0.000; rss: 1210MB	llvm module passes [4]
time: 0.002; rss: 1212MB	codegen passes [0]
time: 0.004; rss: 1214MB	llvm function passes [6]
time: 0.004; rss: 1214MB	codegen passes [2]
time: 0.002; rss: 1214MB	llvm module passes [6]
time: 0.001; rss: 1214MB	llvm function passes [2]
time: 0.000; rss: 1214MB	llvm module passes [2]
time: 0.008; rss: 1216MB	codegen passes [3]
time: 0.011; rss: 1216MB	llvm function passes [5]
time: 0.017; rss: 1216MB	llvm function passes [1]
time: 0.006; rss: 1216MB	llvm module passes [5]
time: 0.007; rss: 1216MB	llvm module passes [1]
time: 0.018; rss: 1223MB	codegen passes [2]
time: 0.025; rss: 1230MB	codegen passes [4]
time: 0.000; rss: 1230MB	llvm function passes [4]
time: 0.000; rss: 1230MB	llvm module passes [4]
time: 0.001; rss: 1230MB	codegen passes [4]
time: 0.003; rss: 1230MB	llvm function passes [4]
time: 0.024; rss: 1230MB	llvm function passes [3]
time: 0.001; rss: 1230MB	llvm module passes [4]
time: 0.027; rss: 1230MB	llvm function passes [49]
time: 0.015; rss: 1230MB	llvm function passes [29]
time: 0.014; rss: 1236MB	llvm module passes [3]
time: 0.009; rss: 1236MB	llvm module passes [49]
time: 0.009; rss: 1236MB	llvm module passes [29]
time: 0.000; rss: 1242MB	llvm function passes [19]
time: 0.000; rss: 1242MB	llvm module passes [19]
time: 0.029; rss: 1244MB	llvm function passes [27]
time: 0.045; rss: 1251MB	codegen passes [4]
time: 0.027; rss: 1255MB	codegen passes [19]
time: 0.016; rss: 1255MB	llvm module passes [27]
time: 0.088; rss: 1257MB	codegen passes [6]
time: 0.000; rss: 1257MB	llvm function passes [6]
time: 0.000; rss: 1257MB	llvm module passes [6]
time: 0.001; rss: 1257MB	codegen passes [6]
time: 0.000; rss: 1258MB	llvm function passes [18]
time: 0.073; rss: 1258MB	llvm function passes [31]
time: 0.005; rss: 1263MB	llvm module passes [18]
time: 0.082; rss: 1265MB	llvm function passes [21]
time: 0.004; rss: 1265MB	codegen passes [18]
time: 0.015; rss: 1267MB	llvm module passes [31]
time: 0.052; rss: 1275MB	llvm function passes [20]
time: 0.000; rss: 1275MB	llvm module passes [20]
time: 0.054; rss: 1286MB	llvm function passes [19]
time: 0.013; rss: 1293MB	llvm module passes [19]
time: 0.025; rss: 1293MB	llvm function passes [40]
time: 0.004; rss: 1293MB	llvm module passes [40]
time: 0.191; rss: 1293MB	llvm function passes [0]
time: 0.073; rss: 1301MB	codegen passes [20]
time: 0.008; rss: 1305MB	llvm function passes [20]
time: 0.002; rss: 1305MB	llvm module passes [20]
time: 0.132; rss: 1307MB	llvm function passes [6]
time: 0.230; rss: 1307MB	llvm function passes [7]
time: 0.134; rss: 1334MB	llvm module passes [21]
time: 0.129; rss: 1355MB	llvm function passes [34]
time: 0.206; rss: 1355MB	llvm function passes [28]
time: 0.068; rss: 1355MB	llvm module passes [0]
time: 0.135; rss: 1361MB	llvm function passes [35]
time: 0.068; rss: 1363MB	codegen passes [20]
time: 0.057; rss: 1363MB	llvm module passes [6]
time: 0.038; rss: 1363MB	llvm module passes [34]
time: 0.159; rss: 1365MB	llvm function passes [38]
time: 0.167; rss: 1364MB	llvm function passes [36]
time: 0.032; rss: 1364MB	llvm module passes [35]
time: 0.296; rss: 1364MB	llvm function passes [2]
time: 0.124; rss: 1364MB	llvm function passes [41]
time: 0.028; rss: 1370MB	llvm module passes [38]
time: 0.023; rss: 1370MB	llvm module passes [36]
time: 0.099; rss: 1372MB	llvm module passes [28]
time: 0.028; rss: 1372MB	llvm module passes [41]
time: 0.157; rss: 1374MB	llvm function passes [39]
time: 0.263; rss: 1376MB	llvm function passes [32]
time: 0.152; rss: 1376MB	llvm module passes [7]
time: 0.276; rss: 1376MB	llvm function passes [18]
time: 0.018; rss: 1376MB	llvm module passes [39]
time: 0.004; rss: 1387MB	llvm function passes [44]
time: 0.018; rss: 1398MB	llvm function passes [23]
time: 0.000; rss: 1398MB	llvm module passes [23]
time: 0.064; rss: 1397MB	llvm module passes [32]
time: 0.325; rss: 1398MB	llvm function passes [33]
time: 0.011; rss: 1398MB	codegen passes [23]
time: 0.173; rss: 1404MB	llvm function passes [42]
time: 0.103; rss: 1410MB	llvm module passes [18]
time: 0.020; rss: 1410MB	llvm module passes [42]
time: 0.056; rss: 1409MB	codegen passes [22]
time: 0.098; rss: 1411MB	llvm function passes [24]
time: 0.069; rss: 1416MB	llvm function passes [11]
time: 0.077; rss: 1417MB	llvm module passes [33]
time: 0.016; rss: 1418MB	llvm module passes [11]
time: 0.216; rss: 1420MB	llvm module passes [2]
time: 0.035; rss: 1420MB	llvm module passes [24]
time: 0.231; rss: 1418MB	llvm function passes [9]
time: 0.173; rss: 1420MB	llvm module passes [44]
time: 0.401; rss: 1420MB	llvm function passes [37]
time: 0.289; rss: 1420MB	codegen passes [40]
time: 0.310; rss: 1420MB	llvm function passes [10]
time: 0.302; rss: 1420MB	llvm function passes [25]
time: 0.618; rss: 1420MB	llvm function passes [30]
time: 0.467; rss: 1422MB	llvm function passes [43]
time: 0.113; rss: 1422MB	llvm module passes [37]
time: 0.153; rss: 1416MB	llvm module passes [9]
time: 0.077; rss: 1419MB	llvm module passes [43]
time: 0.501; rss: 1424MB	llvm function passes [20]
time: 0.758; rss: 1423MB	codegen passes [5]
time: 0.291; rss: 1425MB	llvm module passes [10]
time: 0.831; rss: 1419MB	llvm function passes [4]
time: 0.142; rss: 1420MB	llvm module passes [20]
time: 0.389; rss: 1452MB	codegen passes [44]
time: 0.193; rss: 1457MB	llvm module passes [4]
time: 0.472; rss: 1447MB	llvm module passes [25]
time: 0.414; rss: 1459MB	codegen passes [24]
time: 0.798; rss: 1481MB	llvm module passes [30]
time: 1.447; rss: 1444MB	codegen passes [29]
time: 1.270; rss: 1448MB	codegen passes [1]
time: 1.498; rss: 1456MB	codegen passes [49]
time: 1.351; rss: 1434MB	codegen passes [31]
time: 1.553; rss: 1436MB	codegen passes [35]
time: 1.551; rss: 1442MB	codegen passes [38]
time: 1.476; rss: 1437MB	codegen passes [6]
time: 1.531; rss: 1430MB	codegen passes [42]
time: 1.820; rss: 1451MB	codegen passes [41]
time: 1.859; rss: 1473MB	codegen passes [39]
time: 2.080; rss: 1468MB	codegen passes [3]
time: 2.045; rss: 1457MB	codegen passes [27]
time: 2.532; rss: 1502MB	codegen passes [19]
time: 2.249; rss: 1498MB	codegen passes [11]
time: 2.532; rss: 1509MB	codegen passes [36]
time: 2.568; rss: 1498MB	codegen passes [9]
time: 3.364; rss: 1634MB	codegen passes [34]
time: 3.318; rss: 1637MB	codegen passes [21]
time: 3.111; rss: 1652MB	codegen passes [4]
time: 3.471; rss: 1643MB	codegen passes [32]
time: 3.816; rss: 1632MB	codegen passes [28]
time: 4.133; rss: 1673MB	codegen passes [10]
time: 3.844; rss: 1661MB	codegen passes [25]
time: 4.104; rss: 1646MB	codegen passes [0]
time: 3.793; rss: 1591MB	codegen passes [33]
time: 4.324; rss: 1558MB	codegen passes [18]
time: 4.341; rss: 1542MB	codegen passes [20]
time: 4.194; rss: 1485MB	codegen passes [43]
time: 4.735; rss: 1484MB	codegen passes [2]
time: 5.279; rss: 1433MB	codegen passes [7]
time: 5.471; rss: 1387MB	codegen passes [37]
time: 5.347; rss: 1321MB	codegen passes [30]
time: 8.048; rss: 1321MB	LLVM passes
time: 0.000; rss: 1321MB	serialize work products
time: 1.042; rss: 281MB	linking
done
