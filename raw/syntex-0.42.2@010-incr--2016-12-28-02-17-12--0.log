commit 17f1fba353d2545ee54589350a83681dc3156e70
Merge: 0807104 babb7da
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 07:05:07 2016 +0000

    Auto merge of #38589 - aidanhs:aphs-stage0-rustdoc-test, r=alexcrichton
    
    Teach `rustdoc --test` about `--sysroot`, pass it when testing rust
    
    This permits rustdoc tests to work in stage0.
    
    Logical continuation of #36586.
    
    Snippet from https://github.com/rust-lang/rust/issues/38575#issuecomment-269090724:
    
    > it should actually be possible to run all the libstd tests immediately after creating std of stage0-out - there's no reason to build librustc at all if you've just made a change to (for example) libcollections, `./x.py test src/libcollections --stage 0 -v --incremental` should just work
    
    This PR makes it so (or appears to in my testing).
    
    r? @alexcrichton
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.244; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.843; rss: 264MB	item-bodies checking
time: 0.000; rss: 264MB	drop-impl checking
time: 0.221; rss: 277MB	const checking
time: 0.069; rss: 277MB	privacy checking
time: 0.022; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.051; rss: 283MB	match checking
time: 0.051; rss: 291MB	liveness checking
time: 0.180; rss: 293MB	rvalue checking
time: 0.368; rss: 482MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.124; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.292; rss: 500MB	MIR cleanup and validation
time: 0.474; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.175; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.053; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.525; rss: 530MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.392; rss: 552MB	translation item collection
  time: 0.071; rss: 554MB	codegen unit partitioning
  time: 0.050; rss: 1457MB	internalize symbols
time: 12.065; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.404; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [1]
time: 0.000; rss: 1199MB	llvm module passes [1]
time: 0.001; rss: 1201MB	llvm function passes [0]
time: 0.000; rss: 1203MB	llvm module passes [0]
time: 0.001; rss: 1205MB	llvm function passes [2]
time: 0.000; rss: 1205MB	llvm module passes [2]
time: 0.003; rss: 1212MB	llvm function passes [4]
time: 0.000; rss: 1212MB	llvm module passes [4]
time: 0.004; rss: 1212MB	llvm function passes [5]
time: 0.007; rss: 1209MB	llvm function passes [6]
time: 0.001; rss: 1214MB	llvm function passes [9]
time: 0.002; rss: 1214MB	llvm module passes [9]
time: 0.007; rss: 1214MB	llvm module passes [5]
time: 0.017; rss: 1222MB	llvm function passes [3]
time: 0.011; rss: 1222MB	llvm module passes [6]
time: 0.019; rss: 1224MB	codegen passes [1]
time: 0.007; rss: 1224MB	llvm module passes [3]
time: 0.025; rss: 1224MB	codegen passes [0]
time: 0.031; rss: 1230MB	codegen passes [2]
time: 0.022; rss: 1230MB	llvm function passes [10]
time: 0.019; rss: 1230MB	llvm function passes [0]
time: 0.008; rss: 1230MB	llvm module passes [10]
time: 0.000; rss: 1232MB	llvm function passes [15]
time: 0.000; rss: 1232MB	llvm module passes [15]
time: 0.001; rss: 1232MB	codegen passes [15]
time: 0.008; rss: 1235MB	llvm module passes [0]
time: 0.003; rss: 1235MB	llvm function passes [15]
time: 0.001; rss: 1235MB	llvm module passes [15]
time: 0.059; rss: 1239MB	llvm function passes [12]
time: 0.065; rss: 1242MB	codegen passes [9]
time: 0.066; rss: 1242MB	llvm function passes [11]
time: 0.078; rss: 1244MB	codegen passes [4]
time: 0.001; rss: 1246MB	llvm function passes [4]
time: 0.000; rss: 1246MB	llvm module passes [4]
time: 0.005; rss: 1251MB	codegen passes [4]
time: 0.014; rss: 1260MB	llvm module passes [11]
time: 0.005; rss: 1260MB	llvm function passes [4]
time: 0.000; rss: 1260MB	llvm module passes [4]
time: 0.000; rss: 1262MB	llvm function passes [16]
time: 0.000; rss: 1262MB	llvm module passes [16]
time: 0.004; rss: 1262MB	codegen passes [16]
time: 0.016; rss: 1262MB	codegen passes [4]
time: 0.083; rss: 1262MB	llvm function passes [13]
time: 0.052; rss: 1266MB	llvm function passes [14]
time: 0.012; rss: 1266MB	llvm module passes [13]
time: 0.055; rss: 1266MB	llvm module passes [12]
time: 0.000; rss: 1272MB	llvm function passes [18]
time: 0.000; rss: 1272MB	llvm module passes [18]
time: 0.001; rss: 1272MB	codegen passes [18]
time: 0.028; rss: 1272MB	llvm module passes [14]
time: 0.151; rss: 1283MB	llvm function passes [8]
time: 0.102; rss: 1293MB	codegen passes [15]
time: 0.153; rss: 1293MB	codegen passes [5]
time: 0.040; rss: 1295MB	llvm function passes [18]
time: 0.021; rss: 1296MB	llvm module passes [18]
time: 0.233; rss: 1304MB	llvm function passes [7]
time: 0.126; rss: 1304MB	llvm function passes [4]
time: 0.139; rss: 1304MB	llvm function passes [16]
time: 0.233; rss: 1304MB	llvm function passes [1]
time: 0.177; rss: 1304MB	llvm function passes [9]
time: 0.100; rss: 1304MB	llvm module passes [8]
time: 0.057; rss: 1312MB	llvm function passes [20]
time: 0.011; rss: 1314MB	llvm module passes [20]
time: 0.041; rss: 1320MB	llvm module passes [16]
time: 0.044; rss: 1323MB	llvm function passes [21]
time: 0.162; rss: 1327MB	llvm function passes [17]
time: 0.165; rss: 1329MB	llvm function passes [19]
time: 0.021; rss: 1331MB	llvm module passes [21]
time: 0.011; rss: 1335MB	llvm function passes [24]
time: 0.004; rss: 1335MB	llvm module passes [24]
time: 0.056; rss: 1335MB	llvm function passes [22]
time: 0.096; rss: 1337MB	llvm module passes [9]
time: 0.024; rss: 1339MB	llvm module passes [22]
time: 0.052; rss: 1339MB	llvm module passes [17]
time: 0.130; rss: 1347MB	llvm module passes [1]
time: 0.150; rss: 1351MB	llvm module passes [7]
time: 0.071; rss: 1355MB	llvm module passes [19]
time: 0.023; rss: 1357MB	llvm function passes [25]
time: 0.009; rss: 1358MB	llvm module passes [25]
time: 0.027; rss: 1358MB	llvm function passes [26]
time: 0.018; rss: 1370MB	llvm module passes [26]
time: 0.199; rss: 1371MB	llvm module passes [4]
time: 0.043; rss: 1388MB	llvm function passes [29]
time: 0.002; rss: 1389MB	llvm module passes [29]
time: 0.334; rss: 1390MB	llvm function passes [5]
time: 0.045; rss: 1402MB	codegen passes [29]
time: 0.250; rss: 1402MB	llvm function passes [23]
time: 0.145; rss: 1405MB	llvm function passes [28]
time: 0.000; rss: 1404MB	llvm function passes [36]
time: 0.000; rss: 1404MB	llvm module passes [36]
time: 0.177; rss: 1409MB	llvm function passes [27]
time: 0.035; rss: 1408MB	codegen passes [36]
time: 0.054; rss: 1407MB	llvm module passes [28]
time: 0.019; rss: 1407MB	codegen passes [37]
time: 0.081; rss: 1410MB	llvm function passes [34]
time: 0.071; rss: 1407MB	llvm module passes [27]
time: 0.128; rss: 1402MB	llvm module passes [23]
time: 0.066; rss: 1398MB	llvm module passes [34]
time: 0.197; rss: 1397MB	llvm function passes [33]
time: 0.236; rss: 1401MB	llvm function passes [31]
time: 0.021; rss: 1401MB	llvm module passes [33]
time: 0.754; rss: 1405MB	llvm function passes [2]
time: 0.190; rss: 1405MB	llvm function passes [35]
time: 0.274; rss: 1408MB	llvm function passes [30]
time: 0.008; rss: 1408MB	llvm module passes [35]
time: 0.280; rss: 1408MB	llvm function passes [32]
time: 0.639; rss: 1408MB	llvm function passes [15]
time: 0.402; rss: 1410MB	codegen passes [24]
time: 0.327; rss: 1416MB	llvm module passes [5]
time: 0.088; rss: 1425MB	llvm module passes [31]
time: 0.077; rss: 1426MB	llvm module passes [30]
time: 0.740; rss: 1426MB	codegen passes [6]
time: 0.111; rss: 1427MB	codegen passes [34]
time: 0.465; rss: 1444MB	llvm function passes [29]
time: 0.860; rss: 1443MB	codegen passes [0]
time: 0.765; rss: 1429MB	codegen passes [3]
time: 0.116; rss: 1438MB	llvm module passes [29]
time: 0.381; rss: 1435MB	llvm module passes [15]
time: 0.498; rss: 1467MB	llvm module passes [2]
time: 0.516; rss: 1459MB	llvm module passes [32]
time: 0.674; rss: 1451MB	codegen passes [35]
time: 1.240; rss: 1458MB	codegen passes [13]
time: 1.537; rss: 1466MB	codegen passes [11]
time: 1.329; rss: 1463MB	codegen passes [22]
time: 1.507; rss: 1453MB	codegen passes [10]
time: 1.683; rss: 1449MB	codegen passes [20]
time: 1.814; rss: 1443MB	codegen passes [25]
time: 1.950; rss: 1433MB	codegen passes [14]
time: 1.810; rss: 1428MB	codegen passes [4]
time: 1.618; rss: 1461MB	codegen passes [31]
time: 2.191; rss: 1532MB	codegen passes [33]
time: 2.735; rss: 1525MB	codegen passes [18]
time: 2.676; rss: 1526MB	codegen passes [21]
time: 2.772; rss: 1532MB	codegen passes [26]
time: 2.865; rss: 1571MB	codegen passes [16]
time: 2.865; rss: 1548MB	codegen passes [12]
time: 2.414; rss: 1538MB	codegen passes [30]
time: 3.046; rss: 1609MB	codegen passes [5]
time: 3.412; rss: 1590MB	codegen passes [9]
time: 3.557; rss: 1610MB	codegen passes [28]
time: 3.622; rss: 1627MB	codegen passes [17]
time: 4.353; rss: 1717MB	codegen passes [8]
time: 4.391; rss: 1676MB	codegen passes [19]
time: 3.779; rss: 1634MB	codegen passes [29]
time: 3.745; rss: 1615MB	codegen passes [15]
time: 4.095; rss: 1569MB	codegen passes [32]
time: 4.403; rss: 1525MB	codegen passes [27]
time: 4.718; rss: 1485MB	codegen passes [1]
time: 4.850; rss: 1439MB	codegen passes [7]
time: 5.040; rss: 1389MB	codegen passes [23]
time: 5.246; rss: 1319MB	codegen passes [2]
time: 7.580; rss: 1317MB	LLVM passes
time: 0.000; rss: 1317MB	serialize work products
time: 1.041; rss: 294MB	linking
done
