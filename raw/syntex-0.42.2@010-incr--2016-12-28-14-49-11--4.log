commit 02b22ec7bd8fa542dd3b08a8497ad5cd3a20c417
Merge: 371f4d6 cf89453
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 17:27:13 2016 +0000

    Auto merge of #38639 - xen0n:nightly-dist-hotfix, r=brson
    
    rustbuild: Hotfix to unbreak nightly
    
    Fixes an oversight unnoticed in #38468 that eventually broke nightly packaging. I didn't realize this until some moments ago, when I finally found out the failure is actually deterministic. Many apologies for eating 3 nightlies during the holidays.
    
    r? @alexcrichton
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.090; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.612; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.224; rss: 277MB	const checking
time: 0.069; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.050; rss: 284MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.181; rss: 292MB	rvalue checking
time: 0.376; rss: 482MB	MIR dump
  time: 0.060; rss: 483MB	SimplifyCfg
  time: 0.080; rss: 483MB	QualifyAndPromoteConstants
  time: 0.128; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.305; rss: 500MB	MIR cleanup and validation
time: 0.475; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.179; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.053; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 530MB	InstCombine
  time: 0.012; rss: 530MB	Deaggregator
  time: 0.004; rss: 530MB	CopyPropagation
  time: 0.035; rss: 530MB	SimplifyLocals
  time: 0.010; rss: 530MB	AddCallGuards
  time: 0.003; rss: 530MB	PreTrans
time: 0.526; rss: 530MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.399; rss: 551MB	translation item collection
  time: 0.071; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.833; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.427; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [2]
time: 0.000; rss: 1197MB	llvm module passes [2]
time: 0.001; rss: 1203MB	llvm function passes [0]
time: 0.000; rss: 1205MB	llvm module passes [0]
time: 0.002; rss: 1205MB	llvm function passes [3]
time: 0.000; rss: 1205MB	llvm module passes [3]
time: 0.002; rss: 1205MB	codegen passes [2]
time: 0.003; rss: 1205MB	codegen passes [0]
time: 0.004; rss: 1205MB	llvm function passes [4]
time: 0.001; rss: 1214MB	llvm function passes [42]
time: 0.007; rss: 1214MB	llvm function passes [1]
time: 0.000; rss: 1214MB	llvm module passes [1]
time: 0.007; rss: 1214MB	llvm function passes [5]
time: 0.002; rss: 1216MB	llvm module passes [42]
time: 0.008; rss: 1222MB	llvm module passes [5]
time: 0.017; rss: 1222MB	llvm function passes [6]
time: 0.007; rss: 1229MB	llvm module passes [6]
time: 0.000; rss: 1229MB	llvm function passes [48]
time: 0.000; rss: 1229MB	llvm module passes [48]
time: 0.017; rss: 1231MB	codegen passes [1]
time: 0.023; rss: 1231MB	llvm function passes [43]
time: 0.028; rss: 1231MB	llvm module passes [4]
time: 0.008; rss: 1233MB	llvm module passes [43]
time: 0.023; rss: 1233MB	llvm function passes [45]
time: 0.017; rss: 1233MB	llvm function passes [1]
time: 0.022; rss: 1233MB	codegen passes [48]
time: 0.016; rss: 1241MB	llvm module passes [45]
time: 0.013; rss: 1241MB	llvm module passes [1]
time: 0.072; rss: 1252MB	llvm function passes [40]
time: 0.070; rss: 1252MB	codegen passes [42]
time: 0.000; rss: 1254MB	llvm function passes [12]
time: 0.010; rss: 1258MB	llvm module passes [40]
time: 0.006; rss: 1258MB	llvm module passes [12]
time: 0.004; rss: 1258MB	codegen passes [12]
time: 0.000; rss: 1258MB	llvm function passes [12]
time: 0.000; rss: 1258MB	llvm module passes [12]
time: 0.001; rss: 1258MB	codegen passes [12]
time: 0.090; rss: 1260MB	llvm function passes [41]
time: 0.093; rss: 1262MB	llvm function passes [46]
time: 0.012; rss: 1262MB	llvm module passes [46]
time: 0.125; rss: 1262MB	llvm function passes [2]
time: 0.082; rss: 1273MB	llvm function passes [49]
time: 0.000; rss: 1273MB	llvm module passes [49]
time: 0.137; rss: 1273MB	codegen passes [3]
time: 0.076; rss: 1275MB	llvm function passes [11]
time: 0.000; rss: 1275MB	llvm module passes [11]
time: 0.111; rss: 1279MB	llvm function passes [10]
time: 0.001; rss: 1281MB	llvm module passes [10]
time: 0.126; rss: 1286MB	codegen passes [4]
time: 0.080; rss: 1287MB	llvm module passes [41]
time: 0.051; rss: 1290MB	llvm module passes [2]
time: 0.032; rss: 1289MB	codegen passes [11]
time: 0.077; rss: 1289MB	llvm function passes [13]
time: 0.043; rss: 1295MB	codegen passes [49]
time: 0.015; rss: 1301MB	llvm module passes [13]
time: 0.229; rss: 1347MB	llvm function passes [0]
time: 0.078; rss: 1347MB	llvm function passes [7]
time: 0.161; rss: 1349MB	llvm function passes [42]
time: 0.082; rss: 1351MB	llvm function passes [4]
time: 0.008; rss: 1353MB	llvm module passes [4]
time: 0.075; rss: 1352MB	llvm function passes [49]
time: 0.177; rss: 1352MB	llvm function passes [12]
time: 0.040; rss: 1352MB	llvm module passes [7]
time: 0.120; rss: 1350MB	llvm function passes [14]
time: 0.239; rss: 1355MB	llvm function passes [48]
time: 0.033; rss: 1354MB	llvm module passes [49]
time: 0.000; rss: 1352MB	llvm function passes [34]
time: 0.000; rss: 1352MB	llvm module passes [34]
time: 0.070; rss: 1352MB	llvm function passes [37]
time: 0.002; rss: 1352MB	llvm module passes [37]
time: 0.145; rss: 1352MB	codegen passes [10]
time: 0.000; rss: 1352MB	codegen passes [10]
time: 0.300; rss: 1352MB	llvm function passes [44]
time: 0.010; rss: 1352MB	codegen passes [34]
time: 0.039; rss: 1352MB	llvm module passes [14]
time: 0.057; rss: 1352MB	llvm module passes [12]
time: 0.089; rss: 1352MB	llvm module passes [42]
time: 0.151; rss: 1352MB	llvm function passes [9]
time: 0.012; rss: 1354MB	llvm module passes [9]
time: 0.078; rss: 1381MB	codegen passes [37]
time: 0.112; rss: 1392MB	llvm function passes [21]
time: 0.005; rss: 1392MB	llvm module passes [21]
time: 0.300; rss: 1400MB	llvm function passes [16]
time: 0.234; rss: 1400MB	llvm module passes [0]
time: 0.336; rss: 1401MB	llvm function passes [15]
time: 0.205; rss: 1407MB	llvm module passes [48]
time: 0.299; rss: 1409MB	llvm function passes [8]
time: 0.212; rss: 1422MB	llvm module passes [44]
time: 0.252; rss: 1424MB	llvm function passes [35]
time: 0.342; rss: 1424MB	llvm function passes [38]
time: 0.070; rss: 1424MB	llvm module passes [16]
time: 0.004; rss: 1426MB	llvm module passes [38]
time: 0.225; rss: 1426MB	llvm function passes [24]
time: 0.061; rss: 1426MB	llvm module passes [15]
time: 0.401; rss: 1410MB	llvm function passes [17]
time: 0.041; rss: 1411MB	llvm module passes [24]
time: 0.081; rss: 1411MB	llvm module passes [8]
time: 0.556; rss: 1411MB	llvm function passes [47]
time: 0.058; rss: 1410MB	llvm module passes [35]
time: 0.463; rss: 1413MB	llvm function passes [3]
time: 0.067; rss: 1415MB	llvm module passes [17]
time: 0.498; rss: 1416MB	llvm function passes [11]
time: 0.420; rss: 1416MB	llvm function passes [23]
time: 0.114; rss: 1426MB	llvm module passes [3]
time: 0.451; rss: 1426MB	llvm function passes [26]
time: 0.186; rss: 1438MB	codegen passes [38]
time: 0.467; rss: 1427MB	llvm function passes [22]
time: 0.559; rss: 1420MB	llvm function passes [18]
time: 0.128; rss: 1428MB	llvm module passes [26]
time: 0.169; rss: 1429MB	llvm module passes [23]
time: 0.638; rss: 1443MB	llvm function passes [31]
time: 0.121; rss: 1459MB	llvm module passes [18]
time: 0.332; rss: 1459MB	codegen passes [24]
time: 0.113; rss: 1461MB	llvm module passes [31]
time: 0.464; rss: 1449MB	llvm module passes [47]
time: 0.469; rss: 1448MB	codegen passes [21]
time: 0.898; rss: 1461MB	codegen passes [5]
time: 0.798; rss: 1454MB	codegen passes [6]
time: 0.346; rss: 1452MB	llvm module passes [22]
time: 0.464; rss: 1444MB	llvm module passes [11]
time: 1.069; rss: 1452MB	codegen passes [45]
time: 1.187; rss: 1460MB	codegen passes [43]
time: 1.309; rss: 1422MB	codegen passes [4]
time: 1.535; rss: 1459MB	codegen passes [14]
time: 1.977; rss: 1494MB	codegen passes [40]
time: 2.013; rss: 1485MB	codegen passes [1]
time: 1.678; rss: 1456MB	codegen passes [9]
time: 1.853; rss: 1461MB	codegen passes [46]
time: 1.373; rss: 1443MB	codegen passes [26]
time: 1.686; rss: 1486MB	codegen passes [18]
time: 2.102; rss: 1530MB	codegen passes [23]
time: 2.483; rss: 1529MB	codegen passes [12]
time: 2.656; rss: 1526MB	codegen passes [13]
time: 2.718; rss: 1526MB	codegen passes [49]
time: 2.605; rss: 1511MB	codegen passes [7]
time: 2.780; rss: 1563MB	codegen passes [42]
time: 3.058; rss: 1620MB	codegen passes [3]
time: 3.400; rss: 1646MB	codegen passes [41]
time: 3.419; rss: 1679MB	codegen passes [15]
time: 3.909; rss: 1759MB	codegen passes [48]
time: 3.974; rss: 1733MB	codegen passes [22]
time: 4.211; rss: 1731MB	codegen passes [35]
time: 4.707; rss: 1706MB	codegen passes [2]
time: 4.381; rss: 1608MB	codegen passes [17]
time: 4.109; rss: 1587MB	codegen passes [16]
time: 4.337; rss: 1573MB	codegen passes [31]
time: 4.382; rss: 1526MB	codegen passes [8]
time: 5.273; rss: 1530MB	codegen passes [44]
time: 5.356; rss: 1458MB	codegen passes [0]
time: 4.927; rss: 1405MB	codegen passes [11]
time: 5.347; rss: 1336MB	codegen passes [47]
time: 7.853; rss: 1335MB	LLVM passes
time: 0.000; rss: 1335MB	serialize work products
time: 1.053; rss: 300MB	linking
done
