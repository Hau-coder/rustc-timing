commit 20b6c160cac48d046e4fb21c70c31ce9339799fb
Merge: c74ac6c 098c9b6
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 25 18:13:54 2016 +0000

    Auto merge of #38539 - jseyfried:fix_resolve_hang, r=eddyb
    
    resolve: fix non-termination
    
    Fixes #34324.
    r? @eddyb
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.044; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.010; rss: 89MB	name resolution
time: 0.008; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 94MB	region resolution
time: 0.001; rss: 94MB	loop checking
time: 0.000; rss: 94MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 103MB	coherence checking
time: 0.021; rss: 104MB	wf checking
time: 0.123; rss: 113MB	item-types checking
time: 0.298; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.039; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.006; rss: 150MB	match checking
time: 0.004; rss: 151MB	liveness checking
time: 0.016; rss: 151MB	rvalue checking
time: 0.043; rss: 172MB	MIR dump
  time: 0.006; rss: 173MB	SimplifyCfg
  time: 0.009; rss: 173MB	QualifyAndPromoteConstants
  time: 0.012; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.003; rss: 173MB	SimplifyCfg
time: 0.031; rss: 173MB	MIR cleanup and validation
time: 0.045; rss: 173MB	borrow checking
time: 0.001; rss: 173MB	reachability checking
time: 0.004; rss: 173MB	death checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.029; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.003; rss: 173MB	SimplifyCfg
  time: 0.007; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.017; rss: 176MB	ElaborateDrops
  time: 0.000; rss: 176MB	NoLandingPads
  time: 0.004; rss: 176MB	SimplifyCfg
  time: 0.003; rss: 176MB	InstCombine
  time: 0.002; rss: 176MB	Deaggregator
  time: 0.000; rss: 176MB	CopyPropagation
  time: 0.004; rss: 176MB	SimplifyLocals
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.000; rss: 176MB	PreTrans
time: 0.043; rss: 176MB	MIR optimisations
  time: 0.008; rss: 178MB	write metadata
  time: 0.086; rss: 183MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 312MB	internalize symbols
time: 1.695; rss: 312MB	translation
time: 0.000; rss: 312MB	assert dep graph
time: 0.107; rss: 320MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 257MB	llvm function passes [1]
time: 0.000; rss: 257MB	llvm module passes [1]
time: 0.002; rss: 257MB	llvm function passes [0]
time: 0.000; rss: 257MB	llvm module passes [0]
time: 0.003; rss: 257MB	llvm function passes [2]
time: 0.001; rss: 259MB	llvm module passes [2]
time: 0.001; rss: 261MB	llvm function passes [6]
time: 0.001; rss: 268MB	llvm module passes [6]
time: 0.006; rss: 268MB	llvm function passes [16]
time: 0.015; rss: 274MB	codegen passes [1]
time: 0.003; rss: 274MB	llvm module passes [16]
time: 0.017; rss: 274MB	llvm function passes [4]
time: 0.002; rss: 276MB	llvm function passes [20]
time: 0.019; rss: 278MB	llvm function passes [5]
time: 0.007; rss: 278MB	llvm function passes [1]
time: 0.002; rss: 280MB	llvm module passes [1]
time: 0.010; rss: 280MB	llvm function passes [15]
time: 0.004; rss: 280MB	llvm module passes [15]
time: 0.016; rss: 280MB	llvm function passes [7]
time: 0.006; rss: 280MB	llvm module passes [7]
time: 0.004; rss: 280MB	llvm function passes [13]
time: 0.037; rss: 282MB	llvm function passes [19]
time: 0.043; rss: 282MB	llvm function passes [3]
time: 0.012; rss: 282MB	llvm function passes [18]
time: 0.030; rss: 282MB	llvm module passes [20]
time: 0.015; rss: 284MB	llvm module passes [13]
time: 0.047; rss: 284MB	codegen passes [6]
time: 0.002; rss: 284MB	llvm function passes [6]
time: 0.001; rss: 286MB	llvm module passes [6]
time: 0.011; rss: 286MB	llvm module passes [18]
time: 0.059; rss: 293MB	codegen passes [0]
time: 0.049; rss: 299MB	llvm function passes [14]
time: 0.013; rss: 301MB	llvm module passes [14]
time: 0.037; rss: 301MB	codegen passes [20]
time: 0.000; rss: 308MB	codegen passes [17]
time: 0.023; rss: 308MB	llvm function passes [9]
time: 0.001; rss: 308MB	llvm module passes [9]
time: 0.106; rss: 318MB	codegen passes [2]
time: 0.091; rss: 318MB	codegen passes [1]
time: 0.057; rss: 320MB	llvm function passes [10]
time: 0.080; rss: 320MB	llvm function passes [12]
time: 0.072; rss: 320MB	llvm function passes [11]
time: 0.082; rss: 323MB	codegen passes [6]
time: 0.026; rss: 323MB	llvm module passes [10]
time: 0.028; rss: 325MB	llvm module passes [11]
time: 0.127; rss: 337MB	codegen passes [13]
time: 0.153; rss: 349MB	codegen passes [16]
time: 0.109; rss: 346MB	codegen passes [9]
time: 0.197; rss: 346MB	llvm module passes [4]
time: 0.233; rss: 352MB	llvm module passes [5]
time: 0.191; rss: 348MB	codegen passes [15]
time: 0.183; rss: 344MB	codegen passes [18]
time: 0.298; rss: 378MB	codegen passes [7]
time: 0.431; rss: 365MB	llvm module passes [19]
time: 0.395; rss: 372MB	llvm module passes [12]
time: 0.549; rss: 376MB	llvm module passes [3]
time: 0.488; rss: 390MB	codegen passes [14]
time: 0.418; rss: 382MB	codegen passes [4]
time: 0.408; rss: 376MB	codegen passes [5]
time: 0.498; rss: 367MB	codegen passes [11]
time: 0.659; rss: 368MB	codegen passes [10]
time: 0.738; rss: 403MB	codegen passes [3]
time: 0.937; rss: 387MB	codegen passes [19]
time: 1.048; rss: 357MB	codegen passes [12]
time: 1.697; rss: 354MB	LLVM passes
time: 0.000; rss: 354MB	serialize work products
time: 0.228; rss: 170MB	linking
done
