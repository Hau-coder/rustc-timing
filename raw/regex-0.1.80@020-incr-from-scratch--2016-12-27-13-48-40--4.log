commit 82801b552ee8a683c40eb9fce5b892e649794648
Merge: 86896ba 521b2ea
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 27 18:25:22 2016 +0000

    Auto merge of #38600 - arielb1:dead-drop, r=eddyb
    
    clear discriminant drop flag at the bottom of a drop ladder
    
    Fixes #38437.
    
    Beta-nominating because serious I-wrong.
    
    r? @eddyb
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.043; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 94MB	region resolution
time: 0.001; rss: 94MB	loop checking
time: 0.000; rss: 94MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.123; rss: 112MB	item-types checking
time: 0.298; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.039; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.005; rss: 150MB	match checking
time: 0.004; rss: 151MB	liveness checking
time: 0.016; rss: 151MB	rvalue checking
time: 0.043; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.009; rss: 172MB	QualifyAndPromoteConstants
  time: 0.012; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.031; rss: 172MB	MIR cleanup and validation
time: 0.046; rss: 172MB	borrow checking
time: 0.001; rss: 172MB	reachability checking
time: 0.004; rss: 172MB	death checking
time: 0.000; rss: 172MB	unused lib feature checking
time: 0.028; rss: 172MB	lint checking
time: 0.000; rss: 172MB	resolving dependency formats
  time: 0.000; rss: 172MB	NoLandingPads
  time: 0.003; rss: 172MB	SimplifyCfg
  time: 0.008; rss: 172MB	EraseRegions
  time: 0.001; rss: 172MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.003; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.043; rss: 175MB	MIR optimisations
  time: 0.008; rss: 178MB	write metadata
  time: 0.086; rss: 185MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 312MB	internalize symbols
time: 1.690; rss: 312MB	translation
time: 0.000; rss: 312MB	assert dep graph
time: 0.122; rss: 320MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 259MB	llvm function passes [1]
time: 0.000; rss: 259MB	llvm module passes [1]
time: 0.003; rss: 259MB	llvm function passes [0]
time: 0.001; rss: 259MB	llvm function passes [6]
time: 0.000; rss: 259MB	llvm module passes [0]
time: 0.001; rss: 259MB	llvm module passes [6]
time: 0.003; rss: 259MB	llvm function passes [3]
time: 0.001; rss: 259MB	llvm module passes [3]
time: 0.006; rss: 264MB	codegen passes [1]
time: 0.008; rss: 269MB	llvm function passes [1]
time: 0.002; rss: 269MB	llvm function passes [8]
time: 0.001; rss: 269MB	llvm module passes [8]
time: 0.008; rss: 269MB	llvm function passes [12]
time: 0.015; rss: 269MB	codegen passes [6]
time: 0.003; rss: 269MB	llvm module passes [1]
time: 0.020; rss: 269MB	llvm function passes [5]
time: 0.020; rss: 269MB	llvm function passes [4]
time: 0.003; rss: 269MB	llvm module passes [12]
time: 0.021; rss: 271MB	codegen passes [0]
time: 0.005; rss: 271MB	llvm function passes [0]
time: 0.002; rss: 275MB	llvm module passes [0]
time: 0.015; rss: 275MB	llvm function passes [6]
time: 0.038; rss: 277MB	llvm function passes [2]
time: 0.004; rss: 277MB	llvm module passes [6]
time: 0.008; rss: 279MB	llvm function passes [14]
time: 0.004; rss: 279MB	llvm function passes [16]
time: 0.007; rss: 281MB	llvm module passes [14]
time: 0.012; rss: 292MB	llvm module passes [16]
time: 0.055; rss: 294MB	llvm function passes [13]
time: 0.033; rss: 294MB	llvm function passes [7]
time: 0.049; rss: 296MB	codegen passes [8]
time: 0.065; rss: 302MB	codegen passes [3]
time: 0.003; rss: 302MB	llvm function passes [8]
time: 0.000; rss: 302MB	codegen passes [3]
time: 0.001; rss: 304MB	llvm module passes [8]
time: 0.011; rss: 304MB	llvm module passes [7]
time: 0.008; rss: 306MB	llvm function passes [17]
time: 0.001; rss: 306MB	llvm module passes [17]
time: 0.048; rss: 318MB	llvm function passes [19]
time: 0.071; rss: 324MB	llvm function passes [18]
time: 0.035; rss: 326MB	llvm module passes [19]
time: 0.111; rss: 326MB	llvm function passes [10]
time: 0.089; rss: 332MB	codegen passes [17]
time: 0.033; rss: 332MB	llvm module passes [18]
time: 0.117; rss: 339MB	codegen passes [0]
time: 0.120; rss: 339MB	codegen passes [16]
time: 0.081; rss: 344MB	codegen passes [8]
time: 0.154; rss: 341MB	codegen passes [12]
time: 0.207; rss: 346MB	llvm module passes [4]
time: 0.183; rss: 347MB	codegen passes [1]
time: 0.242; rss: 340MB	llvm module passes [5]
time: 0.187; rss: 341MB	codegen passes [14]
time: 0.421; rss: 371MB	llvm module passes [13]
time: 0.366; rss: 380MB	llvm module passes [10]
time: 0.524; rss: 381MB	llvm module passes [2]
time: 0.465; rss: 383MB	codegen passes [6]
time: 0.396; rss: 385MB	codegen passes [4]
time: 0.482; rss: 378MB	codegen passes [7]
time: 0.419; rss: 378MB	codegen passes [5]
time: 0.522; rss: 373MB	codegen passes [18]
time: 0.670; rss: 373MB	codegen passes [19]
time: 0.743; rss: 417MB	codegen passes [13]
time: 0.697; rss: 381MB	codegen passes [2]
time: 0.798; rss: 362MB	codegen passes [10]
time: 1.459; rss: 359MB	LLVM passes
time: 0.000; rss: 358MB	serialize work products
time: 0.206; rss: 177MB	linking
done
