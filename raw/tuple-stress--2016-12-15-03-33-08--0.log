commit cfa668f3bf8156730b419deec51fb980af23b8bb
Merge: 7ad7232 3e15dc1
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 06:23:11 2016 +0000

    Auto merge of #37702 - redox-os:redox, r=brson
    
    Redox Support Preview
    
    # Important - This is only a preview of a working `sys::redox`.
    
    Compiling the Redox default distribution with this `libstd` results in a fully functioning distribution. As such, all further changes would be cosmetic or implementing features that have not been used by the default distribution (of which there are only a small number).
    
    I do not expect this to be merged, but would like to discuss how it may be improved and get feedback.
    
    There are a few `unimplemented!()` - `cloexec` for example. I have documented them below. These would be resolved before desiring a merge.
    
    There are also issues with how the Redox syscall library is called - currently I am using a re-export in `libc` but that probably would not be desired.
rustc: ./tuple-stress
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.410; rss: 136MB	parsing
Lines of code:             65571
Pre-expansion node count:  393241
time: 0.000; rss: 136MB	recursion limit
time: 0.000; rss: 136MB	crate injection
time: 0.000; rss: 136MB	plugin loading
time: 0.000; rss: 136MB	plugin registration
time: 0.093; rss: 158MB	expansion
time: 0.000; rss: 158MB	maybe building test harness
time: 0.005; rss: 158MB	maybe creating a macro crate
Post-expansion node count: 393303
time: 0.000; rss: 158MB	checking for inline asm in case the target doesn't support it
time: 0.005; rss: 158MB	complete gated feature checking
time: 0.033; rss: 158MB	early lint checks
time: 0.005; rss: 158MB	AST validation
time: 0.012; rss: 158MB	name resolution
time: 0.032; rss: 201MB	lowering ast -> hir
time: 0.008; rss: 218MB	indexing hir
time: 0.005; rss: 218MB	attribute checking
time: 0.002; rss: 140MB	language item collection
time: 0.002; rss: 140MB	lifetime resolution
time: 0.000; rss: 140MB	looking for entry point
time: 0.000; rss: 140MB	looking for plugin registrar
time: 0.052; rss: 163MB	region resolution
time: 0.002; rss: 163MB	loop checking
time: 0.004; rss: 163MB	static item recursion checking
time: 0.207; rss: 163MB	compute_incremental_hashes_map
time: 0.000; rss: 163MB	load_dep_graph
time: 0.002; rss: 163MB	stability index
time: 0.002; rss: 163MB	stability checking
time: 0.002; rss: 163MB	type collecting
time: 0.000; rss: 163MB	variance inference
time: 0.000; rss: 163MB	impl wf inference
time: 0.003; rss: 165MB	coherence checking
time: 0.002; rss: 165MB	wf checking
time: 0.582; rss: 209MB	item-types checking
time: 0.004; rss: 209MB	item-bodies checking
time: 0.000; rss: 209MB	drop-impl checking
time: 0.183; rss: 220MB	const checking
time: 0.005; rss: 220MB	privacy checking
time: 0.002; rss: 220MB	intrinsic checking
time: 0.002; rss: 220MB	effect checking
time: 0.000; rss: 220MB	match checking
time: 0.003; rss: 220MB	liveness checking
time: 0.002; rss: 220MB	rvalue checking
time: 0.303; rss: 278MB	MIR dump
  time: 0.000; rss: 278MB	SimplifyCfg
  time: 0.012; rss: 278MB	QualifyAndPromoteConstants
  time: 0.036; rss: 278MB	TypeckMir
  time: 0.000; rss: 278MB	SimplifyBranches
  time: 0.000; rss: 278MB	SimplifyCfg
time: 0.048; rss: 278MB	MIR cleanup and validation
time: 0.004; rss: 278MB	borrow checking
time: 0.000; rss: 278MB	reachability checking
time: 0.004; rss: 278MB	death checking
time: 0.000; rss: 278MB	unused lib feature checking
time: 0.194; rss: 278MB	lint checking
time: 0.001; rss: 278MB	resolving dependency formats
  time: 0.000; rss: 278MB	NoLandingPads
  time: 0.000; rss: 278MB	SimplifyCfg
  time: 0.007; rss: 278MB	EraseRegions
  time: 0.000; rss: 278MB	AddCallGuards
  time: 0.000; rss: 278MB	ElaborateDrops
  time: 0.000; rss: 278MB	NoLandingPads
  time: 0.000; rss: 278MB	SimplifyCfg
  time: 0.007; rss: 278MB	InstCombine
  time: 0.000; rss: 278MB	Deaggregator
  time: 0.000; rss: 278MB	CopyPropagation
  time: 0.009; rss: 278MB	SimplifyLocals
  time: 0.000; rss: 278MB	AddCallGuards
  time: 0.000; rss: 278MB	PreTrans
time: 0.023; rss: 278MB	MIR optimisations
  time: 0.000; rss: 278MB	write metadata
  time: 0.006; rss: 280MB	translation item collection
  time: 0.000; rss: 280MB	codegen unit partitioning
  time: 0.000; rss: 306MB	internalize symbols
time: 0.303; rss: 306MB	translation
time: 0.000; rss: 306MB	assert dep graph
time: 0.000; rss: 306MB	serialize dep graph
  time: 0.026; rss: 128MB	llvm function passes [0]
  time: 0.000; rss: 128MB	llvm module passes [0]
  time: 0.330; rss: 124MB	codegen passes [0]
  time: 0.000; rss: 124MB	codegen passes [0]
time: 0.357; rss: 124MB	LLVM passes
time: 0.000; rss: 124MB	serialize work products
  time: 0.076; rss: 92MB	running linker
time: 0.077; rss: 92MB	linking
done
