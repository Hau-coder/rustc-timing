commit 7f2d2afa9196ba6314a29e58d5324dbd9923c75e
Merge: 75f5981 e484197
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 07:34:19 2016 +0000

    Auto merge of #38697 - alexcrichton:rollup, r=alexcrichton
    
    Rollup of 25 pull requests
    
    - Successful merges: #37149, #38491, #38517, #38559, #38587, #38609, #38611, #38622, #38628, #38630, #38631, #38632, #38635, #38647, #38649, #38655, #38659, #38660, #38662, #38665, #38671, #38674, #38676, #38693, #38695
    - Failed merges: #38657, #38680
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.043; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.123; rss: 112MB	item-types checking
time: 0.295; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.039; rss: 149MB	const checking
time: 0.007; rss: 149MB	privacy checking
time: 0.002; rss: 149MB	intrinsic checking
time: 0.001; rss: 149MB	effect checking
time: 0.005; rss: 149MB	match checking
time: 0.004; rss: 150MB	liveness checking
time: 0.016; rss: 150MB	rvalue checking
time: 0.043; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.009; rss: 172MB	QualifyAndPromoteConstants
  time: 0.012; rss: 172MB	TypeckMir
  time: 0.001; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.031; rss: 172MB	MIR cleanup and validation
time: 0.047; rss: 172MB	borrow checking
time: 0.001; rss: 172MB	reachability checking
time: 0.005; rss: 172MB	death checking
time: 0.000; rss: 172MB	unused lib feature checking
time: 0.028; rss: 172MB	lint checking
time: 0.000; rss: 172MB	resolving dependency formats
  time: 0.000; rss: 172MB	NoLandingPads
  time: 0.003; rss: 172MB	SimplifyCfg
  time: 0.008; rss: 172MB	EraseRegions
  time: 0.001; rss: 172MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.044; rss: 175MB	MIR optimisations
  time: 0.009; rss: 178MB	write metadata
  time: 0.086; rss: 185MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 311MB	internalize symbols
time: 1.661; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.123; rss: 319MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 256MB	llvm function passes [3]
time: 0.000; rss: 256MB	llvm module passes [3]
time: 0.001; rss: 256MB	llvm function passes [6]
time: 0.002; rss: 256MB	llvm function passes [1]
time: 0.001; rss: 256MB	llvm module passes [6]
time: 0.000; rss: 256MB	llvm module passes [1]
time: 0.004; rss: 258MB	llvm function passes [0]
time: 0.004; rss: 260MB	llvm module passes [0]
time: 0.010; rss: 263MB	codegen passes [3]
time: 0.019; rss: 265MB	llvm function passes [5]
time: 0.019; rss: 265MB	llvm function passes [4]
time: 0.008; rss: 265MB	llvm function passes [3]
time: 0.018; rss: 265MB	codegen passes [6]
time: 0.004; rss: 269MB	llvm module passes [3]
time: 0.008; rss: 269MB	llvm function passes [9]
time: 0.023; rss: 269MB	codegen passes [1]
time: 0.031; rss: 272MB	llvm function passes [7]
time: 0.005; rss: 272MB	llvm function passes [1]
time: 0.002; rss: 272MB	llvm module passes [1]
time: 0.016; rss: 277MB	llvm function passes [8]
time: 0.018; rss: 281MB	llvm function passes [6]
time: 0.001; rss: 284MB	llvm module passes [6]
time: 0.004; rss: 288MB	llvm function passes [12]
time: 0.020; rss: 290MB	llvm module passes [9]
time: 0.039; rss: 292MB	codegen passes [0]
time: 0.002; rss: 295MB	llvm function passes [0]
time: 0.001; rss: 295MB	llvm module passes [0]
time: 0.003; rss: 301MB	llvm function passes [16]
time: 0.000; rss: 303MB	codegen passes [17]
time: 0.027; rss: 305MB	llvm module passes [8]
time: 0.026; rss: 307MB	llvm module passes [12]
time: 0.073; rss: 307MB	llvm function passes [2]
time: 0.025; rss: 307MB	llvm module passes [16]
time: 0.044; rss: 307MB	codegen passes [6]
time: 0.034; rss: 305MB	codegen passes [0]
time: 0.061; rss: 311MB	llvm function passes [11]
time: 0.008; rss: 310MB	llvm module passes [11]
time: 0.070; rss: 312MB	codegen passes [1]
time: 0.095; rss: 312MB	llvm function passes [10]
time: 0.011; rss: 314MB	llvm module passes [10]
time: 0.084; rss: 314MB	llvm function passes [15]
time: 0.097; rss: 313MB	llvm function passes [14]
time: 0.110; rss: 316MB	llvm function passes [13]
time: 0.019; rss: 316MB	llvm module passes [15]
time: 0.060; rss: 320MB	codegen passes [16]
time: 0.032; rss: 330MB	llvm module passes [14]
time: 0.091; rss: 338MB	codegen passes [12]
time: 0.186; rss: 343MB	llvm module passes [5]
time: 0.170; rss: 341MB	codegen passes [3]
time: 0.151; rss: 342MB	codegen passes [9]
time: 0.230; rss: 335MB	llvm module passes [4]
time: 0.132; rss: 342MB	codegen passes [11]
time: 0.422; rss: 362MB	llvm module passes [7]
time: 0.330; rss: 364MB	codegen passes [8]
time: 0.392; rss: 368MB	llvm module passes [13]
time: 0.566; rss: 387MB	llvm module passes [2]
time: 0.405; rss: 383MB	codegen passes [5]
time: 0.456; rss: 380MB	codegen passes [10]
time: 0.471; rss: 377MB	codegen passes [14]
time: 0.421; rss: 361MB	codegen passes [4]
time: 0.673; rss: 366MB	codegen passes [15]
time: 0.656; rss: 393MB	codegen passes [7]
time: 0.770; rss: 373MB	codegen passes [13]
time: 0.737; rss: 352MB	codegen passes [2]
time: 1.489; rss: 349MB	LLVM passes
time: 0.000; rss: 349MB	serialize work products
time: 0.206; rss: 166MB	linking
done
