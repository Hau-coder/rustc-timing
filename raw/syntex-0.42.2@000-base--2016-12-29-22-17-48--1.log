commit 75f5981d4500e52de767d61ec50a34b97be2a301
Merge: e7c788a e5c7782
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 01:20:18 2016 +0000

    Auto merge of #38695 - alexcrichton:debug-appveyor, r=brson
    
    appveyor: Attempt to debug flaky test runs
    
    This commit is an attempt to debug #38620 since we're unable to reproduce it
    locally. It follows the [advice] of those with AppVeyor to use the `handle.exe`
    tool to try to debug what processes have a handle to the file open.
    
    This won't be guaranteed to actually help us, but hopefully it'll diagnose
    something at some point?
    
    [advice]: http://help.appveyor.com/discussions/questions/2898
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.092; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.248; rss: 145MB	expansion
time: 0.000; rss: 145MB	maybe building test harness
time: 0.006; rss: 145MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 145MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 145MB	complete gated feature checking
time: 0.024; rss: 145MB	early lint checks
time: 0.007; rss: 145MB	AST validation
time: 0.103; rss: 159MB	name resolution
time: 0.115; rss: 192MB	lowering ast -> hir
time: 0.011; rss: 184MB	indexing hir
time: 0.006; rss: 184MB	attribute checking
time: 0.002; rss: 147MB	language item collection
time: 0.012; rss: 147MB	lifetime resolution
time: 0.000; rss: 147MB	looking for entry point
time: 0.000; rss: 147MB	looking for plugin registrar
time: 0.091; rss: 166MB	region resolution
time: 0.008; rss: 166MB	loop checking
time: 0.002; rss: 166MB	static item recursion checking
time: 0.383; rss: 168MB	compute_incremental_hashes_map
time: 0.000; rss: 168MB	load_dep_graph
time: 0.009; rss: 168MB	stability index
time: 0.017; rss: 168MB	stability checking
time: 0.050; rss: 173MB	type collecting
time: 0.001; rss: 173MB	variance inference
time: 0.002; rss: 173MB	impl wf inference
time: 0.017; rss: 175MB	coherence checking
time: 0.084; rss: 178MB	wf checking
time: 0.202; rss: 181MB	item-types checking
time: 3.545; rss: 225MB	item-bodies checking
time: 0.000; rss: 225MB	drop-impl checking
time: 0.311; rss: 236MB	const checking
time: 0.058; rss: 236MB	privacy checking
time: 0.022; rss: 236MB	intrinsic checking
time: 0.019; rss: 236MB	effect checking
time: 0.067; rss: 236MB	match checking
time: 0.064; rss: 243MB	liveness checking
time: 0.229; rss: 243MB	rvalue checking
time: 0.570; rss: 416MB	MIR dump
  time: 0.060; rss: 422MB	SimplifyCfg
  time: 0.080; rss: 422MB	QualifyAndPromoteConstants
  time: 0.110; rss: 422MB	TypeckMir
  time: 0.004; rss: 422MB	SimplifyBranches
  time: 0.031; rss: 422MB	SimplifyCfg
time: 0.285; rss: 422MB	MIR cleanup and validation
time: 0.489; rss: 425MB	borrow checking
time: 0.024; rss: 426MB	reachability checking
time: 0.040; rss: 426MB	death checking
time: 0.000; rss: 426MB	unused lib feature checking
time: 0.178; rss: 426MB	lint checking
time: 0.000; rss: 426MB	resolving dependency formats
  time: 0.003; rss: 426MB	NoLandingPads
  time: 0.027; rss: 426MB	SimplifyCfg
  time: 0.081; rss: 432MB	EraseRegions
  time: 0.012; rss: 433MB	AddCallGuards
  time: 0.308; rss: 456MB	ElaborateDrops
  time: 0.003; rss: 456MB	NoLandingPads
  time: 0.054; rss: 456MB	SimplifyCfg
  time: 0.030; rss: 456MB	InstCombine
  time: 0.012; rss: 456MB	Deaggregator
  time: 0.002; rss: 456MB	CopyPropagation
  time: 0.036; rss: 456MB	SimplifyLocals
  time: 0.010; rss: 456MB	AddCallGuards
  time: 0.002; rss: 456MB	PreTrans
time: 0.580; rss: 456MB	MIR optimisations
  time: 0.082; rss: 464MB	write metadata
  time: 0.412; rss: 476MB	translation item collection
  time: 0.065; rss: 482MB	codegen unit partitioning
  time: 0.054; rss: 740MB	internalize symbols
time: 5.307; rss: 740MB	translation
time: 0.000; rss: 740MB	assert dep graph
time: 0.000; rss: 740MB	serialize dep graph
  time: 0.534; rss: 425MB	llvm function passes [0]
  time: 0.315; rss: 434MB	llvm module passes [0]
  time: 10.900; rss: 423MB	codegen passes [0]
  time: 0.000; rss: 423MB	codegen passes [0]
time: 12.638; rss: 423MB	LLVM passes
time: 0.000; rss: 423MB	serialize work products
time: 0.350; rss: 116MB	linking
done
