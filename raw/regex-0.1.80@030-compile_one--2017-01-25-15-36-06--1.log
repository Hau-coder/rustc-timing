commit 94d4589388f3c82b4042276d8fd78f8d8009b531
Merge: fc57e40 2580950
Author: bors <bors@rust-lang.org>
Date:   Wed Jan 25 20:24:02 2017 +0000

    Auto merge of #38856 - zackw:process-envs, r=aturon
    
    Add std::process::Command::envs()
    
    `Command::envs()` adds a vector of key-value pairs to the child
    process environment all at once.  Suggested in #38526.
    
    This is not fully baked and frankly I'm not sure it even _works_, but I need some help finishing it up, and this is the simplest way to show you what I've got.  The problems I know exist and don't know how to solve, from most to least important, are:
    
    * [ ] I don't know if the type signature of the new function is correct.
    * [x] The new test might not be getting run.  I didn't see it go by in the output of `x.py test src/libstd --stage 1`.
    * [x] The tidy check says ``process.rs:402: different `since` than before`` which I don't know what it means.
    
    r? @brson
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./regex-0.1.80@030-compile_one
git apply 030-compile_one.diff
find . -name "*.rs" | xargs touch
git diff
diff --git a/regex-0.1.80/src/compile.rs b/regex-0.1.80/src/compile.rs
index 9db743f..9a32d30 100644
--- a/regex-0.1.80/src/compile.rs
+++ b/regex-0.1.80/src/compile.rs
@@ -137,6 +137,8 @@ impl Compiler {
     }
 
     fn compile_one(mut self, expr: &Expr) -> result::Result<Program, Error> {
+        {} // @030
+
         // If we're compiling a forward DFA and we aren't anchored, then
         // add a `.*?` before the first capture group.
         // Other matching engines handle this by baking the logic into the
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
makefile:18: recipe for target 'all@030-compile_one' failed
done
