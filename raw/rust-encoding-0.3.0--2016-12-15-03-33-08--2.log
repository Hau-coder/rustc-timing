commit cfa668f3bf8156730b419deec51fb980af23b8bb
Merge: 7ad7232 3e15dc1
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 15 06:23:11 2016 +0000

    Auto merge of #37702 - redox-os:redox, r=brson
    
    Redox Support Preview
    
    # Important - This is only a preview of a working `sys::redox`.
    
    Compiling the Redox default distribution with this `libstd` results in a fully functioning distribution. As such, all further changes would be cosmetic or implementing features that have not been used by the default distribution (of which there are only a small number).
    
    I do not expect this to be merged, but would like to discuss how it may be improved and get feedback.
    
    There are a few `unimplemented!()` - `cloexec` for example. I have documented them below. These would be resolved before desiring a merge.
    
    There are also issues with how the Redox syscall library is called - currently I am using a re-export in `libc` but that probably would not be desired.
rustc: ./rust-encoding-0.3.0
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.016; rss: 45MB	parsing
Lines of code:             5757
Pre-expansion node count:  26523
time: 0.000; rss: 45MB	recursion limit
time: 0.000; rss: 45MB	crate injection
time: 0.000; rss: 45MB	plugin loading
time: 0.000; rss: 45MB	plugin registration
time: 0.033; rss: 75MB	expansion
time: 0.000; rss: 75MB	maybe building test harness
time: 0.000; rss: 75MB	maybe creating a macro crate
Post-expansion node count: 37888
time: 0.000; rss: 75MB	checking for inline asm in case the target doesn't support it
time: 0.000; rss: 75MB	complete gated feature checking
time: 0.001; rss: 75MB	early lint checks
time: 0.000; rss: 75MB	AST validation
time: 0.004; rss: 78MB	name resolution
time: 0.003; rss: 78MB	lowering ast -> hir
time: 0.001; rss: 80MB	indexing hir
time: 0.000; rss: 80MB	attribute checking
time: 0.000; rss: 79MB	language item collection
time: 0.000; rss: 79MB	lifetime resolution
time: 0.000; rss: 79MB	looking for entry point
time: 0.000; rss: 79MB	looking for plugin registrar
time: 0.002; rss: 79MB	region resolution
time: 0.000; rss: 79MB	loop checking
time: 0.000; rss: 79MB	static item recursion checking
time: 0.017; rss: 79MB	compute_incremental_hashes_map
time: 0.000; rss: 79MB	load_dep_graph
time: 0.000; rss: 79MB	stability index
time: 0.001; rss: 79MB	stability checking
time: 0.007; rss: 80MB	type collecting
time: 0.000; rss: 80MB	variance inference
time: 0.000; rss: 80MB	impl wf inference
time: 0.007; rss: 81MB	coherence checking
time: 0.009; rss: 82MB	wf checking
time: 0.010; rss: 84MB	item-types checking
time: 0.108; rss: 87MB	item-bodies checking
time: 0.000; rss: 87MB	drop-impl checking
time: 0.007; rss: 87MB	const checking
time: 0.001; rss: 87MB	privacy checking
time: 0.001; rss: 87MB	intrinsic checking
time: 0.000; rss: 87MB	effect checking
time: 0.004; rss: 87MB	match checking
time: 0.001; rss: 87MB	liveness checking
time: 0.004; rss: 87MB	rvalue checking
time: 0.017; rss: 96MB	MIR dump
  time: 0.002; rss: 96MB	SimplifyCfg
  time: 0.003; rss: 96MB	QualifyAndPromoteConstants
  time: 0.004; rss: 96MB	TypeckMir
  time: 0.000; rss: 96MB	SimplifyBranches
  time: 0.001; rss: 96MB	SimplifyCfg
time: 0.011; rss: 96MB	MIR cleanup and validation
time: 0.017; rss: 97MB	borrow checking
time: 0.000; rss: 97MB	reachability checking
time: 0.001; rss: 97MB	death checking
time: 0.000; rss: 97MB	unused lib feature checking
time: 0.012; rss: 97MB	lint checking
time: 0.000; rss: 97MB	resolving dependency formats
  time: 0.000; rss: 97MB	NoLandingPads
  time: 0.001; rss: 97MB	SimplifyCfg
  time: 0.002; rss: 97MB	EraseRegions
  time: 0.000; rss: 97MB	AddCallGuards
  time: 0.021; rss: 97MB	ElaborateDrops
  time: 0.000; rss: 97MB	NoLandingPads
  time: 0.002; rss: 97MB	SimplifyCfg
  time: 0.001; rss: 97MB	InstCombine
  time: 0.001; rss: 97MB	Deaggregator
  time: 0.000; rss: 97MB	CopyPropagation
  time: 0.001; rss: 97MB	SimplifyLocals
  time: 0.000; rss: 97MB	AddCallGuards
  time: 0.000; rss: 97MB	PreTrans
time: 0.030; rss: 97MB	MIR optimisations
  time: 0.004; rss: 97MB	write metadata
  time: 0.135; rss: 185MB	translation item collection
  time: 0.002; rss: 185MB	codegen unit partitioning
  time: 0.002; rss: 212MB	internalize symbols
time: 0.423; rss: 212MB	translation
time: 0.000; rss: 212MB	assert dep graph
time: 0.000; rss: 212MB	serialize dep graph
  time: 0.025; rss: 115MB	llvm function passes [0]
  time: 0.059; rss: 121MB	llvm module passes [0]
  time: 0.632; rss: 128MB	codegen passes [0]
  time: 0.000; rss: 128MB	codegen passes [0]
time: 0.772; rss: 127MB	LLVM passes
time: 0.000; rss: 127MB	serialize work products
time: 0.039; rss: 97MB	linking
done
