commit 4ecc85beb339aa8089d936e450b0d800bdf580ae
Merge: 02b22ec ee0ea95
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 20:19:39 2016 +0000

    Auto merge of #38449 - eddyb:lazy-10, r=nikomatsakis
    
    [10/n] Split constants and functions' arguments into disjoint bodies.
    
    _This is part of a series ([prev](https://github.com/rust-lang/rust/pull/38053) | [next]()) of patches designed to rework rustc into an out-of-order on-demand pipeline model for both better feature support (e.g. [MIR-based](https://github.com/solson/miri) early constant evaluation) and incremental execution of compiler passes (e.g. type-checking), with beneficial consequences to IDE support as well.
    If any motivation is unclear, please ask for additional PR description clarifications or code comments._
    
    <hr>
    
    Finishes the signature-body split started in #37918, namely:
    * `trait` items are separated just like `impl` items were, for uniformity, closing #37712
    * `static`s, `const`s (including associated ones), `enum` discriminants and array lengths get bodies
      * even the count in "repeat expressions", i.e. `n` in `[x; n]`, which fixes #24414
    * arguments' patterns are moved to the bodies, with the types staying in `FnDecl`
      * `&self` now desugars to `self: &Self` instead of `self: &_` (similarly for other `self` forms)
      * `astconv`'s and metadata's (for rustdoc) informative uses are explicitly ignored for the purposes of the dep graph. this could be fixed in the future by hashing the exact information being extracted about the arguments as opposed to generating a dependency on *the whole body*
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.020; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.196; rss: 207MB	item-types checking
time: 3.563; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.220; rss: 276MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 291MB	liveness checking
time: 0.178; rss: 293MB	rvalue checking
time: 0.374; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.122; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.290; rss: 500MB	MIR cleanup and validation
time: 0.476; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.180; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 531MB	ElaborateDrops
  time: 0.003; rss: 531MB	NoLandingPads
  time: 0.054; rss: 530MB	SimplifyCfg
  time: 0.029; rss: 529MB	InstCombine
  time: 0.012; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.525; rss: 529MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.399; rss: 552MB	translation item collection
  time: 0.072; rss: 555MB	codegen unit partitioning
  time: 0.049; rss: 1458MB	internalize symbols
time: 11.681; rss: 1458MB	translation
time: 0.000; rss: 1458MB	assert dep graph
time: 1.358; rss: 1486MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1198MB	llvm function passes [1]
time: 0.000; rss: 1198MB	llvm module passes [1]
time: 0.001; rss: 1202MB	llvm function passes [0]
time: 0.000; rss: 1202MB	llvm module passes [0]
time: 0.002; rss: 1206MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.002; rss: 1208MB	codegen passes [1]
time: 0.004; rss: 1210MB	llvm function passes [5]
time: 0.005; rss: 1210MB	llvm function passes [3]
time: 0.000; rss: 1210MB	llvm module passes [3]
time: 0.001; rss: 1212MB	llvm function passes [10]
time: 0.008; rss: 1212MB	llvm function passes [6]
time: 0.006; rss: 1212MB	llvm module passes [5]
time: 0.009; rss: 1212MB	codegen passes [0]
time: 0.006; rss: 1214MB	llvm module passes [10]
time: 0.006; rss: 1214MB	llvm module passes [6]
time: 0.017; rss: 1214MB	llvm function passes [4]
time: 0.007; rss: 1215MB	llvm module passes [4]
time: 0.022; rss: 1219MB	codegen passes [2]
time: 0.023; rss: 1223MB	llvm function passes [0]
time: 0.032; rss: 1228MB	codegen passes [3]
time: 0.028; rss: 1228MB	codegen passes [10]
time: 0.014; rss: 1228MB	llvm module passes [0]
time: 0.000; rss: 1236MB	llvm function passes [13]
time: 0.000; rss: 1236MB	llvm module passes [13]
time: 0.001; rss: 1236MB	codegen passes [13]
time: 0.002; rss: 1236MB	llvm function passes [13]
time: 0.001; rss: 1239MB	llvm module passes [13]
time: 0.047; rss: 1248MB	llvm function passes [9]
time: 0.002; rss: 1248MB	llvm function passes [14]
time: 0.000; rss: 1248MB	llvm module passes [14]
time: 0.030; rss: 1250MB	llvm function passes [3]
time: 0.001; rss: 1252MB	llvm function passes [17]
time: 0.000; rss: 1252MB	llvm module passes [17]
time: 0.017; rss: 1259MB	llvm module passes [3]
time: 0.020; rss: 1259MB	codegen passes [14]
time: 0.000; rss: 1259MB	llvm function passes [14]
time: 0.000; rss: 1259MB	llvm module passes [14]
time: 0.025; rss: 1259MB	llvm module passes [9]
time: 0.004; rss: 1259MB	codegen passes [14]
time: 0.054; rss: 1259MB	llvm function passes [10]
time: 0.075; rss: 1259MB	llvm function passes [2]
time: 0.044; rss: 1261MB	llvm function passes [12]
time: 0.027; rss: 1263MB	codegen passes [17]
time: 0.000; rss: 1263MB	llvm function passes [17]
time: 0.000; rss: 1263MB	llvm module passes [17]
time: 0.001; rss: 1263MB	codegen passes [17]
time: 0.020; rss: 1265MB	llvm module passes [12]
time: 0.026; rss: 1265MB	llvm module passes [10]
time: 0.040; rss: 1274MB	llvm module passes [2]
time: 0.102; rss: 1288MB	codegen passes [13]
time: 0.107; rss: 1293MB	llvm function passes [15]
time: 0.152; rss: 1293MB	codegen passes [5]
time: 0.052; rss: 1293MB	llvm function passes [16]
time: 0.076; rss: 1297MB	llvm function passes [17]
time: 0.015; rss: 1297MB	llvm module passes [16]
time: 0.091; rss: 1297MB	llvm function passes [14]
time: 0.198; rss: 1303MB	llvm function passes [7]
time: 0.033; rss: 1314MB	llvm module passes [17]
time: 0.033; rss: 1314MB	llvm module passes [14]
time: 0.011; rss: 1316MB	llvm function passes [22]
time: 0.004; rss: 1316MB	llvm module passes [22]
time: 0.044; rss: 1318MB	llvm function passes [23]
time: 0.014; rss: 1320MB	llvm module passes [23]
time: 0.030; rss: 1326MB	llvm function passes [25]
time: 0.012; rss: 1327MB	llvm module passes [25]
time: 0.122; rss: 1330MB	llvm module passes [15]
time: 0.137; rss: 1333MB	llvm function passes [20]
time: 0.328; rss: 1351MB	llvm function passes [1]
time: 0.003; rss: 1351MB	llvm function passes [28]
time: 0.002; rss: 1351MB	llvm module passes [28]
time: 0.138; rss: 1347MB	llvm module passes [7]
time: 0.321; rss: 1346MB	llvm function passes [8]
time: 0.055; rss: 1346MB	llvm module passes [20]
time: 0.038; rss: 1348MB	llvm function passes [27]
time: 0.019; rss: 1356MB	llvm module passes [27]
time: 0.226; rss: 1357MB	llvm function passes [5]
time: 0.257; rss: 1360MB	llvm function passes [19]
time: 0.255; rss: 1362MB	llvm function passes [21]
time: 0.062; rss: 1362MB	codegen passes [28]
time: 0.297; rss: 1368MB	llvm function passes [18]
time: 0.063; rss: 1388MB	llvm module passes [19]
time: 0.122; rss: 1390MB	llvm module passes [8]
time: 0.069; rss: 1390MB	llvm module passes [21]
time: 0.325; rss: 1388MB	llvm function passes [13]
time: 0.062; rss: 1393MB	llvm module passes [18]
time: 0.180; rss: 1396MB	llvm module passes [1]
time: 0.220; rss: 1391MB	llvm function passes [26]
time: 0.010; rss: 1386MB	llvm function passes [36]
time: 0.355; rss: 1386MB	llvm function passes [24]
time: 0.082; rss: 1386MB	llvm function passes [32]
time: 0.006; rss: 1386MB	llvm module passes [36]
time: 0.540; rss: 1391MB	llvm function passes [11]
time: 0.191; rss: 1390MB	llvm function passes [28]
time: 0.040; rss: 1387MB	codegen passes [37]
time: 0.032; rss: 1382MB	llvm module passes [32]
time: 0.211; rss: 1374MB	llvm function passes [29]
time: 0.100; rss: 1374MB	llvm function passes [34]
time: 0.001; rss: 1374MB	llvm module passes [34]
time: 0.080; rss: 1372MB	llvm module passes [26]
time: 0.122; rss: 1377MB	llvm function passes [35]
time: 0.393; rss: 1383MB	codegen passes [22]
time: 0.023; rss: 1385MB	llvm module passes [35]
time: 0.064; rss: 1385MB	llvm module passes [29]
time: 0.097; rss: 1388MB	codegen passes [36]
time: 0.151; rss: 1391MB	llvm module passes [24]
time: 0.242; rss: 1390MB	llvm module passes [13]
time: 0.213; rss: 1391MB	llvm function passes [31]
time: 0.369; rss: 1404MB	llvm module passes [5]
time: 0.169; rss: 1405MB	llvm module passes [28]
time: 0.101; rss: 1424MB	llvm module passes [31]
time: 0.803; rss: 1421MB	codegen passes [6]
time: 0.463; rss: 1415MB	llvm function passes [30]
time: 0.504; rss: 1418MB	llvm function passes [33]
time: 0.356; rss: 1408MB	codegen passes [34]
time: 0.190; rss: 1424MB	llvm module passes [30]
time: 0.734; rss: 1462MB	codegen passes [3]
time: 0.401; rss: 1458MB	llvm module passes [33]
time: 0.665; rss: 1464MB	codegen passes [35]
time: 0.929; rss: 1471MB	llvm module passes [11]
time: 1.178; rss: 1472MB	codegen passes [9]
time: 1.579; rss: 1493MB	codegen passes [4]
time: 1.654; rss: 1472MB	codegen passes [10]
time: 1.616; rss: 1431MB	codegen passes [23]
time: 1.634; rss: 1442MB	codegen passes [27]
time: 1.723; rss: 1441MB	codegen passes [17]
time: 1.992; rss: 1469MB	codegen passes [25]
time: 1.896; rss: 1461MB	codegen passes [32]
time: 1.824; rss: 1478MB	codegen passes [13]
time: 2.181; rss: 1477MB	codegen passes [12]
time: 2.020; rss: 1468MB	codegen passes [28]
time: 2.614; rss: 1460MB	codegen passes [0]
time: 2.713; rss: 1507MB	codegen passes [16]
time: 2.563; rss: 1595MB	codegen passes [31]
time: 2.822; rss: 1592MB	codegen passes [5]
time: 2.972; rss: 1595MB	codegen passes [20]
time: 3.131; rss: 1576MB	codegen passes [2]
time: 3.181; rss: 1552MB	codegen passes [14]
time: 3.862; rss: 1668MB	codegen passes [15]
time: 3.435; rss: 1671MB	codegen passes [29]
time: 3.902; rss: 1649MB	codegen passes [19]
time: 3.801; rss: 1633MB	codegen passes [21]
time: 4.137; rss: 1599MB	codegen passes [7]
time: 3.738; rss: 1602MB	codegen passes [33]
time: 3.991; rss: 1545MB	codegen passes [18]
time: 4.652; rss: 1597MB	codegen passes [30]
time: 4.345; rss: 1486MB	codegen passes [26]
time: 4.249; rss: 1470MB	codegen passes [8]
time: 5.071; rss: 1473MB	codegen passes [1]
time: 4.945; rss: 1394MB	codegen passes [24]
time: 4.640; rss: 1321MB	codegen passes [11]
time: 7.452; rss: 1320MB	LLVM passes
time: 0.000; rss: 1320MB	serialize work products
time: 1.056; rss: 290MB	linking
done
