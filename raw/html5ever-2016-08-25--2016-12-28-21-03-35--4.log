commit 4ecc85beb339aa8089d936e450b0d800bdf580ae
Merge: 02b22ec ee0ea95
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 20:19:39 2016 +0000

    Auto merge of #38449 - eddyb:lazy-10, r=nikomatsakis
    
    [10/n] Split constants and functions' arguments into disjoint bodies.
    
    _This is part of a series ([prev](https://github.com/rust-lang/rust/pull/38053) | [next]()) of patches designed to rework rustc into an out-of-order on-demand pipeline model for both better feature support (e.g. [MIR-based](https://github.com/solson/miri) early constant evaluation) and incremental execution of compiler passes (e.g. type-checking), with beneficial consequences to IDE support as well.
    If any motivation is unclear, please ask for additional PR description clarifications or code comments._
    
    <hr>
    
    Finishes the signature-body split started in #37918, namely:
    * `trait` items are separated just like `impl` items were, for uniformity, closing #37712
    * `static`s, `const`s (including associated ones), `enum` discriminants and array lengths get bodies
      * even the count in "repeat expressions", i.e. `n` in `[x; n]`, which fixes #24414
    * arguments' patterns are moved to the bodies, with the types staying in `FnDecl`
      * `&self` now desugars to `self: &Self` instead of `self: &_` (similarly for other `self` forms)
      * `astconv`'s and metadata's (for rustdoc) informative uses are explicitly ignored for the purposes of the dep graph. this could be fixed in the future by hashing the exact information being extracted about the arguments as opposed to generating a dependency on *the whole body*
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.023; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.673; rss: 103MB	expansion
time: 0.000; rss: 103MB	maybe building test harness
time: 0.002; rss: 103MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 103MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 103MB	complete gated feature checking
time: 0.008; rss: 103MB	early lint checks
time: 0.002; rss: 103MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.014; rss: 116MB	lowering ast -> hir
time: 0.003; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.011; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.023; rss: 104MB	compute_incremental_hashes_map
time: 0.000; rss: 104MB	load_dep_graph
time: 0.001; rss: 104MB	stability index
time: 0.003; rss: 105MB	stability checking
time: 0.009; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.000; rss: 107MB	impl wf inference
time: 0.011; rss: 109MB	coherence checking
time: 0.019; rss: 109MB	wf checking
time: 0.254; rss: 120MB	item-types checking
time: 0.413; rss: 127MB	item-bodies checking
time: 0.000; rss: 127MB	drop-impl checking
time: 0.055; rss: 135MB	const checking
time: 0.006; rss: 135MB	privacy checking
time: 0.002; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.014; rss: 135MB	match checking
time: 0.010; rss: 130MB	liveness checking
time: 0.020; rss: 130MB	rvalue checking
time: 0.101; rss: 171MB	MIR dump
  time: 0.008; rss: 171MB	SimplifyCfg
  time: 0.013; rss: 173MB	QualifyAndPromoteConstants
  time: 0.022; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.004; rss: 173MB	SimplifyCfg
time: 0.048; rss: 173MB	MIR cleanup and validation
time: 0.075; rss: 178MB	borrow checking
time: 0.002; rss: 178MB	reachability checking
time: 0.005; rss: 178MB	death checking
time: 0.000; rss: 178MB	unused lib feature checking
time: 0.048; rss: 178MB	lint checking
time: 0.000; rss: 178MB	resolving dependency formats
  time: 0.000; rss: 178MB	NoLandingPads
  time: 0.004; rss: 178MB	SimplifyCfg
  time: 0.009; rss: 178MB	EraseRegions
  time: 0.001; rss: 178MB	AddCallGuards
  time: 0.073; rss: 180MB	ElaborateDrops
  time: 0.000; rss: 180MB	NoLandingPads
  time: 0.006; rss: 180MB	SimplifyCfg
  time: 0.007; rss: 178MB	InstCombine
  time: 0.001; rss: 178MB	Deaggregator
  time: 0.000; rss: 178MB	CopyPropagation
  time: 0.007; rss: 177MB	SimplifyLocals
  time: 0.001; rss: 177MB	AddCallGuards
  time: 0.000; rss: 177MB	PreTrans
time: 0.110; rss: 177MB	MIR optimisations
  time: 0.011; rss: 179MB	write metadata
  time: 0.042; rss: 191MB	translation item collection
  time: 0.004; rss: 191MB	codegen unit partitioning
  time: 0.005; rss: 206MB	internalize symbols
time: 0.323; rss: 206MB	translation
time: 0.000; rss: 206MB	assert dep graph
time: 0.000; rss: 206MB	serialize dep graph
  time: 0.020; rss: 112MB	llvm function passes [0]
  time: 0.014; rss: 114MB	llvm module passes [0]
  time: 0.482; rss: 117MB	codegen passes [0]
  time: 0.000; rss: 117MB	codegen passes [0]
time: 0.556; rss: 116MB	LLVM passes
time: 0.000; rss: 116MB	serialize work products
time: 0.025; rss: 100MB	linking
done
