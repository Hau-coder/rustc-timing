commit e35717814686ea3e3d44a8f5c1c20d1cd50be82a
Merge: 27b9e6d 7972c19
Author: bors <bors@rust-lang.org>
Date:   Thu Jan 12 20:44:02 2017 +0000

    Auto merge of #38814 - Ralith:cfg-fields, r=jseyfried
    
    syntax: enable attributes and cfg on struct fields
    
    This enables conditional compilation of field initializers in a struct literal, simplifying construction of structs whose fields are themselves conditionally present. For example, the intializer for the constant in the following becomes legal, and has the intuitive effect:
    
    ```rust
    struct Foo {
        #[cfg(unix)]
        bar: (),
    }
    
    const FOO: Foo = Foo {
        #[cfg(unix)]
        bar: (),
    };
    ```
    
    It's not clear to me whether this calls for the full RFC process, but the implementation was simple enough that I figured I'd begin the conversation with code.
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./regex-0.1.80@010-baseline
cargo rustc  -- -Ztime-passes -Zinput-stats
makefile:9: recipe for target 'all@010-baseline' failed
done
