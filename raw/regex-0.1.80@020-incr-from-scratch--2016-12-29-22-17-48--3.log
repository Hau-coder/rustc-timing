commit 75f5981d4500e52de767d61ec50a34b97be2a301
Merge: e7c788a e5c7782
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 01:20:18 2016 +0000

    Auto merge of #38695 - alexcrichton:debug-appveyor, r=brson
    
    appveyor: Attempt to debug flaky test runs
    
    This commit is an attempt to debug #38620 since we're unable to reproduce it
    locally. It follows the [advice] of those with AppVeyor to use the `handle.exe`
    tool to try to debug what processes have a handle to the file open.
    
    This won't be guaranteed to actually help us, but hopefully it'll diagnose
    something at some point?
    
    [advice]: http://help.appveyor.com/discussions/questions/2898
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.044; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.122; rss: 112MB	item-types checking
time: 0.298; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.039; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.005; rss: 150MB	match checking
time: 0.004; rss: 151MB	liveness checking
time: 0.016; rss: 151MB	rvalue checking
time: 0.044; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.010; rss: 172MB	QualifyAndPromoteConstants
  time: 0.013; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.032; rss: 172MB	MIR cleanup and validation
time: 0.046; rss: 172MB	borrow checking
time: 0.001; rss: 172MB	reachability checking
time: 0.005; rss: 173MB	death checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.029; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.003; rss: 173MB	SimplifyCfg
  time: 0.008; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.045; rss: 175MB	MIR optimisations
  time: 0.009; rss: 177MB	write metadata
  time: 0.089; rss: 185MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 311MB	internalize symbols
time: 1.723; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.109; rss: 320MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 257MB	llvm function passes [3]
time: 0.000; rss: 257MB	llvm module passes [3]
time: 0.002; rss: 257MB	llvm function passes [0]
time: 0.000; rss: 257MB	llvm module passes [0]
time: 0.003; rss: 257MB	llvm function passes [1]
time: 0.001; rss: 267MB	llvm function passes [6]
time: 0.006; rss: 269MB	llvm function passes [7]
time: 0.008; rss: 269MB	llvm function passes [10]
time: 0.016; rss: 269MB	llvm function passes [4]
time: 0.011; rss: 269MB	llvm module passes [6]
time: 0.015; rss: 271MB	llvm module passes [1]
time: 0.002; rss: 271MB	llvm function passes [9]
time: 0.001; rss: 271MB	llvm module passes [9]
time: 0.019; rss: 271MB	llvm function passes [5]
time: 0.011; rss: 273MB	llvm module passes [10]
time: 0.026; rss: 273MB	llvm function passes [8]
time: 0.020; rss: 273MB	llvm module passes [7]
time: 0.024; rss: 277MB	codegen passes [3]
time: 0.019; rss: 277MB	codegen passes [6]
time: 0.039; rss: 277MB	llvm function passes [2]
time: 0.005; rss: 277MB	llvm function passes [6]
time: 0.002; rss: 277MB	llvm module passes [6]
time: 0.039; rss: 279MB	codegen passes [0]
time: 0.018; rss: 281MB	llvm function passes [3]
time: 0.030; rss: 281MB	codegen passes [9]
time: 0.004; rss: 281MB	llvm function passes [11]
time: 0.002; rss: 285MB	llvm module passes [11]
time: 0.009; rss: 285MB	llvm function passes [0]
time: 0.007; rss: 285MB	llvm module passes [3]
time: 0.002; rss: 294MB	llvm function passes [14]
time: 0.001; rss: 294MB	llvm module passes [14]
time: 0.036; rss: 295MB	llvm function passes [12]
time: 0.068; rss: 301MB	codegen passes [1]
time: 0.009; rss: 301MB	llvm module passes [12]
time: 0.064; rss: 314MB	llvm function passes [9]
time: 0.032; rss: 316MB	llvm function passes [1]
time: 0.042; rss: 321MB	llvm function passes [13]
time: 0.020; rss: 323MB	llvm module passes [1]
time: 0.105; rss: 323MB	codegen passes [6]
time: 0.079; rss: 325MB	codegen passes [14]
time: 0.000; rss: 325MB	codegen passes [14]
time: 0.003; rss: 323MB	llvm function passes [6]
time: 0.001; rss: 332MB	llvm module passes [6]
time: 0.029; rss: 340MB	llvm module passes [13]
time: 0.114; rss: 340MB	codegen passes [11]
time: 0.140; rss: 348MB	codegen passes [7]
time: 0.154; rss: 347MB	llvm module passes [0]
time: 0.215; rss: 344MB	llvm module passes [5]
time: 0.055; rss: 350MB	codegen passes [6]
time: 0.179; rss: 346MB	codegen passes [10]
time: 0.246; rss: 341MB	llvm module passes [4]
time: 0.129; rss: 347MB	codegen passes [0]
time: 0.410; rss: 353MB	llvm module passes [8]
time: 0.354; rss: 363MB	codegen passes [3]
time: 0.374; rss: 361MB	llvm module passes [9]
time: 0.580; rss: 369MB	llvm module passes [2]
time: 0.485; rss: 387MB	codegen passes [12]
time: 0.427; rss: 378MB	codegen passes [5]
time: 0.420; rss: 371MB	codegen passes [4]
time: 0.519; rss: 353MB	codegen passes [1]
time: 0.644; rss: 360MB	codegen passes [13]
time: 0.784; rss: 385MB	codegen passes [9]
time: 0.932; rss: 365MB	codegen passes [8]
time: 0.924; rss: 348MB	codegen passes [2]
time: 1.658; rss: 346MB	LLVM passes
time: 0.000; rss: 346MB	serialize work products
time: 0.207; rss: 160MB	linking
done
