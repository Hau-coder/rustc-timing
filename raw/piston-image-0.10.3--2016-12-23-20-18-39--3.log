commit 8d65c8d64edeadcfcc210fd70f44249d02daec41
Merge: 4d07320 14e4b00
Author: bors <bors@rust-lang.org>
Date:   Sat Dec 24 00:22:00 2016 +0000

    Auto merge of #38268 - withoutboats:parse_where_higher_rank_hack, r=eddyb
    
    Prevent where < ident > from parsing.
    
    In order to be forward compatible with `where<'a>` syntax for higher
    rank parameters, prevent potential conflicts with UFCS from parsing
    correctly for the near term.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.038; rss: 54MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.069; rss: 96MB	expansion
time: 0.000; rss: 96MB	maybe building test harness
time: 0.001; rss: 96MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 96MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 96MB	complete gated feature checking
time: 0.006; rss: 96MB	early lint checks
time: 0.001; rss: 96MB	AST validation
time: 0.017; rss: 98MB	name resolution
time: 0.015; rss: 108MB	lowering ast -> hir
time: 0.003; rss: 111MB	indexing hir
time: 0.002; rss: 111MB	attribute checking
time: 0.001; rss: 99MB	language item collection
time: 0.003; rss: 99MB	lifetime resolution
time: 0.000; rss: 99MB	looking for entry point
time: 0.000; rss: 99MB	looking for plugin registrar
time: 0.011; rss: 106MB	region resolution
time: 0.002; rss: 106MB	loop checking
time: 0.000; rss: 106MB	static item recursion checking
time: 0.058; rss: 106MB	compute_incremental_hashes_map
time: 0.000; rss: 106MB	load_dep_graph
time: 0.002; rss: 106MB	stability index
time: 0.004; rss: 106MB	stability checking
time: 0.015; rss: 108MB	type collecting
time: 0.000; rss: 108MB	variance inference
time: 0.000; rss: 108MB	impl wf inference
time: 0.013; rss: 110MB	coherence checking
time: 0.065; rss: 111MB	wf checking
time: 0.135; rss: 114MB	item-types checking
time: 0.686; rss: 126MB	item-bodies checking
time: 0.000; rss: 126MB	drop-impl checking
time: 0.045; rss: 130MB	const checking
time: 0.010; rss: 130MB	privacy checking
time: 0.005; rss: 130MB	intrinsic checking
time: 0.002; rss: 130MB	effect checking
time: 0.013; rss: 130MB	match checking
time: 0.008; rss: 130MB	liveness checking
time: 0.038; rss: 130MB	rvalue checking
time: 0.086; rss: 170MB	MIR dump
  time: 0.011; rss: 171MB	SimplifyCfg
  time: 0.019; rss: 171MB	QualifyAndPromoteConstants
  time: 0.022; rss: 171MB	TypeckMir
  time: 0.001; rss: 171MB	SimplifyBranches
  time: 0.005; rss: 171MB	SimplifyCfg
time: 0.058; rss: 171MB	MIR cleanup and validation
time: 0.145; rss: 171MB	borrow checking
time: 0.004; rss: 171MB	reachability checking
time: 0.009; rss: 171MB	death checking
time: 0.000; rss: 171MB	unused lib feature checking
time: 0.081; rss: 171MB	lint checking
time: 0.000; rss: 171MB	resolving dependency formats
  time: 0.001; rss: 171MB	NoLandingPads
  time: 0.007; rss: 171MB	SimplifyCfg
  time: 0.014; rss: 171MB	EraseRegions
  time: 0.002; rss: 171MB	AddCallGuards
  time: 0.060; rss: 175MB	ElaborateDrops
  time: 0.001; rss: 175MB	NoLandingPads
  time: 0.013; rss: 175MB	SimplifyCfg
  time: 0.007; rss: 175MB	InstCombine
  time: 0.003; rss: 175MB	Deaggregator
  time: 0.001; rss: 175MB	CopyPropagation
  time: 0.010; rss: 175MB	SimplifyLocals
  time: 0.002; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.121; rss: 175MB	MIR optimisations
  time: 0.024; rss: 177MB	write metadata
  time: 0.425; rss: 220MB	translation item collection
  time: 0.020; rss: 221MB	codegen unit partitioning
  time: 0.020; rss: 337MB	internalize symbols
time: 2.375; rss: 337MB	translation
time: 0.000; rss: 337MB	assert dep graph
time: 0.000; rss: 337MB	serialize dep graph
  time: 0.204; rss: 230MB	llvm function passes [0]
  time: 0.096; rss: 234MB	llvm module passes [0]
  time: 4.206; rss: 234MB	codegen passes [0]
  time: 0.000; rss: 234MB	codegen passes [0]
time: 4.810; rss: 234MB	LLVM passes
time: 0.000; rss: 234MB	serialize work products
time: 0.130; rss: 106MB	linking
done
