commit 77f7c7aaf5ead9219bc0c0ace4687191fed0a05f
Merge: b7e5148 f9bca00
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 26 23:33:21 2016 +0000

    Auto merge of #38274 - elahn:windows-readconsole-ctrl-z, r=alexcrichton
    
    Ctrl-Z returns from Stdin.read() when reading from the console on Windows
    
    Fixes #19914.
    Fixes read(), read_to_string(), read_to_end(), etc.
    
    r? @alexcrichton
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.044; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.012; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.122; rss: 112MB	item-types checking
time: 0.297; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.040; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.006; rss: 150MB	match checking
time: 0.004; rss: 150MB	liveness checking
time: 0.017; rss: 150MB	rvalue checking
time: 0.044; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.009; rss: 172MB	QualifyAndPromoteConstants
  time: 0.012; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.031; rss: 172MB	MIR cleanup and validation
time: 0.046; rss: 173MB	borrow checking
time: 0.001; rss: 173MB	reachability checking
time: 0.004; rss: 173MB	death checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.029; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.003; rss: 173MB	SimplifyCfg
  time: 0.007; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.044; rss: 175MB	MIR optimisations
  time: 0.008; rss: 178MB	write metadata
  time: 0.086; rss: 183MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.013; rss: 311MB	internalize symbols
time: 1.667; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.108; rss: 319MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 256MB	llvm function passes [1]
time: 0.000; rss: 256MB	llvm module passes [1]
time: 0.003; rss: 256MB	llvm function passes [0]
time: 0.001; rss: 256MB	llvm function passes [6]
time: 0.000; rss: 256MB	llvm module passes [0]
time: 0.001; rss: 256MB	llvm module passes [6]
time: 0.004; rss: 256MB	llvm function passes [2]
time: 0.001; rss: 260MB	llvm module passes [2]
time: 0.005; rss: 262MB	codegen passes [1]
time: 0.008; rss: 264MB	llvm function passes [1]
time: 0.003; rss: 267MB	llvm module passes [1]
time: 0.015; rss: 267MB	codegen passes [6]
time: 0.020; rss: 267MB	llvm function passes [4]
time: 0.011; rss: 267MB	llvm function passes [17]
time: 0.020; rss: 267MB	llvm function passes [5]
time: 0.021; rss: 267MB	codegen passes [0]
time: 0.005; rss: 267MB	llvm function passes [0]
time: 0.002; rss: 267MB	llvm function passes [18]
time: 0.001; rss: 275MB	llvm module passes [18]
time: 0.012; rss: 275MB	llvm module passes [17]
time: 0.004; rss: 275MB	llvm function passes [8]
time: 0.002; rss: 275MB	llvm module passes [8]
time: 0.043; rss: 277MB	llvm function passes [3]
time: 0.040; rss: 277MB	llvm function passes [16]
time: 0.009; rss: 277MB	llvm function passes [19]
time: 0.002; rss: 277MB	llvm function passes [7]
time: 0.001; rss: 277MB	llvm module passes [7]
time: 0.021; rss: 277MB	llvm module passes [0]
time: 0.033; rss: 277MB	llvm function passes [6]
time: 0.006; rss: 279MB	llvm module passes [6]
time: 0.027; rss: 281MB	codegen passes [18]
time: 0.032; rss: 281MB	llvm function passes [20]
time: 0.023; rss: 281MB	llvm module passes [19]
time: 0.067; rss: 296MB	codegen passes [2]
time: 0.000; rss: 302MB	codegen passes [13]
time: 0.030; rss: 304MB	llvm function passes [18]
time: 0.006; rss: 304MB	llvm function passes [10]
time: 0.001; rss: 304MB	llvm module passes [10]
time: 0.052; rss: 309MB	codegen passes [7]
time: 0.039; rss: 314MB	llvm module passes [20]
time: 0.032; rss: 314MB	llvm module passes [18]
time: 0.044; rss: 316MB	llvm function passes [11]
time: 0.019; rss: 322MB	llvm module passes [11]
time: 0.096; rss: 322MB	codegen passes [8]
time: 0.064; rss: 322MB	codegen passes [10]
time: 0.109; rss: 324MB	llvm function passes [9]
time: 0.095; rss: 326MB	codegen passes [0]
time: 0.152; rss: 341MB	codegen passes [1]
time: 0.153; rss: 349MB	codegen passes [19]
time: 0.224; rss: 341MB	llvm module passes [5]
time: 0.192; rss: 340MB	codegen passes [17]
time: 0.275; rss: 342MB	llvm module passes [4]
time: 0.426; rss: 367MB	llvm module passes [16]
time: 0.330; rss: 372MB	llvm module passes [9]
time: 0.355; rss: 371MB	codegen passes [6]
time: 0.548; rss: 378MB	llvm module passes [3]
time: 0.435; rss: 378MB	codegen passes [20]
time: 0.389; rss: 386MB	codegen passes [4]
time: 0.495; rss: 372MB	codegen passes [18]
time: 0.453; rss: 366MB	codegen passes [5]
time: 0.652; rss: 369MB	codegen passes [11]
time: 0.656; rss: 400MB	codegen passes [16]
time: 0.701; rss: 380MB	codegen passes [3]
time: 0.856; rss: 358MB	codegen passes [9]
time: 1.485; rss: 356MB	LLVM passes
time: 0.000; rss: 355MB	serialize work products
time: 0.207; rss: 175MB	linking
done
