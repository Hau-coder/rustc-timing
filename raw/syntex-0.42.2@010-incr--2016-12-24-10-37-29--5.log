commit d86cf13316a885dbc78fc33becbc718c6ff3468c
Merge: 8d65c8d ecc6010
Author: bors <bors@rust-lang.org>
Date:   Sat Dec 24 13:28:37 2016 +0000

    Auto merge of #38062 - alexcrichton:fix-line-writer, r=brson
    
    std: Fix partial writes in LineWriter
    
    Previously the `LineWriter` could successfully write some bytes but then fail to
    report that it has done so. Additionally, an erroneous flush after a successful
    write was permanently ignored. This commit fixes these two issues by (a)
    maintaining a `need_flush` flag to indicate whether a flush should be the first
    operation in `LineWriter::write` and (b) avoiding returning an error once some
    bytes have been successfully written.
    
    Closes #37807
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.251; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.007; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 151MB	complete gated feature checking
time: 0.025; rss: 151MB	early lint checks
time: 0.008; rss: 151MB	AST validation
time: 0.080; rss: 166MB	name resolution
time: 0.066; rss: 199MB	lowering ast -> hir
time: 0.011; rss: 192MB	indexing hir
time: 0.007; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.012; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.050; rss: 176MB	region resolution
time: 0.009; rss: 176MB	loop checking
time: 0.002; rss: 176MB	static item recursion checking
time: 0.386; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.010; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.055; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.087; rss: 199MB	wf checking
time: 0.194; rss: 207MB	item-types checking
time: 3.561; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.212; rss: 276MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.048; rss: 283MB	match checking
time: 0.046; rss: 290MB	liveness checking
time: 0.172; rss: 293MB	rvalue checking
time: 0.361; rss: 481MB	MIR dump
  time: 0.056; rss: 482MB	SimplifyCfg
  time: 0.074; rss: 482MB	QualifyAndPromoteConstants
  time: 0.120; rss: 499MB	TypeckMir
  time: 0.004; rss: 499MB	SimplifyBranches
  time: 0.033; rss: 499MB	SimplifyCfg
time: 0.288; rss: 499MB	MIR cleanup and validation
time: 0.475; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.175; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.273; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.528; rss: 528MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.400; rss: 552MB	translation item collection
  time: 0.071; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.832; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.371; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1196MB	llvm function passes [0]
time: 0.000; rss: 1199MB	llvm module passes [0]
time: 0.009; rss: 1203MB	llvm function passes [1]
time: 0.000; rss: 1203MB	llvm module passes [1]
time: 0.002; rss: 1203MB	llvm function passes [5]
time: 0.013; rss: 1213MB	llvm function passes [3]
time: 0.000; rss: 1213MB	llvm module passes [3]
time: 0.001; rss: 1215MB	llvm function passes [10]
time: 0.014; rss: 1215MB	llvm function passes [2]
time: 0.000; rss: 1215MB	llvm module passes [2]
time: 0.003; rss: 1215MB	llvm module passes [5]
time: 0.000; rss: 1215MB	llvm module passes [10]
time: 0.005; rss: 1215MB	codegen passes [0]
time: 0.008; rss: 1215MB	llvm function passes [6]
time: 0.004; rss: 1215MB	llvm module passes [6]
time: 0.029; rss: 1218MB	llvm function passes [4]
time: 0.017; rss: 1225MB	codegen passes [3]
time: 0.024; rss: 1225MB	llvm function passes [9]
time: 0.008; rss: 1225MB	llvm module passes [4]
time: 0.022; rss: 1225MB	llvm function passes [0]
time: 0.009; rss: 1229MB	llvm module passes [0]
time: 0.031; rss: 1229MB	codegen passes [2]
time: 0.039; rss: 1229MB	codegen passes [1]
time: 0.014; rss: 1229MB	llvm module passes [9]
time: 0.013; rss: 1231MB	llvm function passes [1]
time: 0.049; rss: 1235MB	codegen passes [10]
time: 0.000; rss: 1235MB	llvm function passes [10]
time: 0.000; rss: 1235MB	llvm module passes [10]
time: 0.001; rss: 1235MB	codegen passes [10]
time: 0.008; rss: 1235MB	llvm module passes [1]
time: 0.011; rss: 1239MB	llvm function passes [10]
time: 0.001; rss: 1239MB	llvm module passes [10]
time: 0.035; rss: 1238MB	llvm function passes [39]
time: 0.010; rss: 1245MB	llvm module passes [39]
time: 0.083; rss: 1245MB	codegen passes [5]
time: 0.079; rss: 1249MB	llvm function passes [3]
time: 0.044; rss: 1257MB	llvm function passes [41]
time: 0.000; rss: 1263MB	llvm function passes [43]
time: 0.015; rss: 1263MB	llvm module passes [41]
time: 0.011; rss: 1264MB	llvm module passes [43]
time: 0.004; rss: 1264MB	codegen passes [43]
time: 0.000; rss: 1264MB	llvm function passes [43]
time: 0.000; rss: 1264MB	llvm module passes [43]
time: 0.001; rss: 1264MB	codegen passes [43]
time: 0.041; rss: 1268MB	llvm module passes [3]
time: 0.039; rss: 1270MB	llvm function passes [42]
time: 0.000; rss: 1270MB	llvm module passes [42]
time: 0.043; rss: 1272MB	llvm function passes [44]
time: 0.000; rss: 1272MB	llvm module passes [44]
time: 0.149; rss: 1272MB	llvm function passes [8]
time: 0.060; rss: 1288MB	llvm function passes [45]
time: 0.034; rss: 1292MB	codegen passes [44]
time: 0.102; rss: 1292MB	codegen passes [10]
time: 0.015; rss: 1294MB	llvm module passes [45]
time: 0.013; rss: 1294MB	llvm function passes [44]
time: 0.198; rss: 1296MB	llvm function passes [7]
time: 0.054; rss: 1296MB	codegen passes [42]
time: 0.008; rss: 1296MB	llvm module passes [44]
time: 0.069; rss: 1302MB	llvm module passes [8]
time: 0.023; rss: 1310MB	llvm function passes [42]
time: 0.012; rss: 1310MB	llvm module passes [42]
time: 0.116; rss: 1354MB	llvm function passes [43]
time: 0.143; rss: 1354MB	llvm function passes [46]
time: 0.129; rss: 1356MB	llvm function passes [12]
time: 0.018; rss: 1356MB	llvm module passes [43]
time: 0.032; rss: 1357MB	llvm module passes [46]
time: 0.112; rss: 1365MB	llvm module passes [7]
time: 0.142; rss: 1365MB	llvm function passes [48]
time: 0.074; rss: 1366MB	llvm module passes [12]
time: 0.147; rss: 1366MB	llvm function passes [13]
time: 0.031; rss: 1368MB	llvm module passes [48]
time: 0.151; rss: 1368MB	llvm function passes [49]
time: 0.012; rss: 1368MB	llvm module passes [13]
time: 0.141; rss: 1372MB	llvm function passes [14]
time: 0.028; rss: 1378MB	llvm module passes [49]
time: 0.019; rss: 1379MB	llvm module passes [14]
time: 0.264; rss: 1388MB	llvm function passes [47]
time: 0.020; rss: 1389MB	llvm function passes [29]
time: 0.024; rss: 1391MB	codegen passes [30]
time: 0.015; rss: 1396MB	llvm module passes [29]
time: 0.202; rss: 1400MB	llvm function passes [17]
time: 0.097; rss: 1408MB	llvm function passes [35]
time: 0.237; rss: 1403MB	llvm function passes [38]
time: 0.002; rss: 1404MB	llvm module passes [38]
time: 0.065; rss: 1401MB	llvm module passes [47]
time: 0.279; rss: 1398MB	llvm function passes [10]
time: 0.308; rss: 1399MB	llvm function passes [11]
time: 0.083; rss: 1399MB	llvm function passes [37]
time: 0.001; rss: 1399MB	llvm module passes [37]
time: 0.385; rss: 1399MB	llvm function passes [5]
time: 0.020; rss: 1402MB	llvm module passes [10]
time: 0.058; rss: 1402MB	llvm module passes [35]
time: 0.054; rss: 1408MB	codegen passes [38]
time: 0.113; rss: 1408MB	llvm module passes [17]
time: 0.490; rss: 1408MB	llvm function passes [40]
time: 0.070; rss: 1408MB	llvm module passes [11]
time: 0.340; rss: 1410MB	llvm function passes [15]
time: 0.327; rss: 1411MB	llvm function passes [16]
time: 0.139; rss: 1407MB	llvm function passes [28]
time: 0.307; rss: 1409MB	llvm function passes [32]
time: 0.029; rss: 1411MB	llvm module passes [28]
time: 0.174; rss: 1411MB	codegen passes [29]
time: 0.034; rss: 1409MB	llvm module passes [32]
time: 0.083; rss: 1403MB	llvm module passes [16]
time: 0.279; rss: 1404MB	llvm function passes [34]
time: 0.197; rss: 1415MB	llvm module passes [5]
time: 0.142; rss: 1404MB	llvm module passes [15]
time: 0.114; rss: 1406MB	llvm module passes [34]
time: 0.426; rss: 1426MB	llvm function passes [33]
time: 0.790; rss: 1417MB	codegen passes [6]
time: 0.827; rss: 1424MB	llvm function passes [2]
time: 0.552; rss: 1436MB	llvm function passes [36]
time: 0.847; rss: 1442MB	codegen passes [1]
time: 0.452; rss: 1432MB	codegen passes [37]
time: 0.246; rss: 1459MB	llvm module passes [36]
time: 0.320; rss: 1459MB	llvm module passes [2]
time: 1.150; rss: 1457MB	codegen passes [4]
time: 0.464; rss: 1466MB	codegen passes [28]
time: 0.431; rss: 1468MB	llvm module passes [33]
time: 0.997; rss: 1456MB	codegen passes [0]
time: 0.762; rss: 1441MB	llvm module passes [40]
time: 0.746; rss: 1449MB	codegen passes [10]
time: 1.243; rss: 1444MB	codegen passes [44]
time: 1.656; rss: 1450MB	codegen passes [9]
time: 1.720; rss: 1448MB	codegen passes [13]
time: 1.611; rss: 1445MB	codegen passes [39]
time: 1.816; rss: 1447MB	codegen passes [42]
time: 1.763; rss: 1430MB	codegen passes [41]
time: 1.779; rss: 1474MB	codegen passes [32]
time: 1.925; rss: 1463MB	codegen passes [43]
time: 2.391; rss: 1493MB	codegen passes [45]
time: 2.318; rss: 1548MB	codegen passes [35]
time: 2.753; rss: 1541MB	codegen passes [14]
time: 2.784; rss: 1592MB	codegen passes [34]
time: 3.009; rss: 1573MB	codegen passes [49]
time: 3.086; rss: 1621MB	codegen passes [48]
time: 3.292; rss: 1602MB	codegen passes [46]
time: 3.852; rss: 1691MB	codegen passes [3]
time: 3.517; rss: 1680MB	codegen passes [17]
time: 3.645; rss: 1683MB	codegen passes [47]
time: 3.584; rss: 1649MB	codegen passes [5]
time: 4.019; rss: 1681MB	codegen passes [11]
time: 3.906; rss: 1667MB	codegen passes [36]
time: 4.100; rss: 1613MB	codegen passes [12]
time: 4.065; rss: 1584MB	codegen passes [8]
time: 4.221; rss: 1597MB	codegen passes [33]
time: 4.720; rss: 1553MB	codegen passes [16]
time: 4.260; rss: 1511MB	codegen passes [2]
time: 5.072; rss: 1466MB	codegen passes [7]
time: 5.623; rss: 1418MB	codegen passes [15]
time: 5.248; rss: 1350MB	codegen passes [40]
time: 7.943; rss: 1347MB	LLVM passes
time: 0.000; rss: 1347MB	serialize work products
time: 1.064; rss: 314MB	linking
done
