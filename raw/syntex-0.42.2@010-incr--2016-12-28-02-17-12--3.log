commit 17f1fba353d2545ee54589350a83681dc3156e70
Merge: 0807104 babb7da
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 07:05:07 2016 +0000

    Auto merge of #38589 - aidanhs:aphs-stage0-rustdoc-test, r=alexcrichton
    
    Teach `rustdoc --test` about `--sysroot`, pass it when testing rust
    
    This permits rustdoc tests to work in stage0.
    
    Logical continuation of #36586.
    
    Snippet from https://github.com/rust-lang/rust/issues/38575#issuecomment-269090724:
    
    > it should actually be possible to run all the libstd tests immediately after creating std of stage0-out - there's no reason to build librustc at all if you've just made a change to (for example) libcollections, `./x.py test src/libcollections --stage 0 -v --incremental` should just work
    
    This PR makes it so (or appears to in my testing).
    
    r? @alexcrichton
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.249; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.007; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.014; rss: 151MB	complete gated feature checking
time: 0.025; rss: 151MB	early lint checks
time: 0.008; rss: 151MB	AST validation
time: 0.080; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.009; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.198; rss: 208MB	item-types checking
time: 3.583; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.220; rss: 277MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.016; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.171; rss: 292MB	rvalue checking
time: 0.361; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.119; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.286; rss: 500MB	MIR cleanup and validation
time: 0.477; rss: 500MB	borrow checking
time: 0.026; rss: 500MB	reachability checking
time: 0.043; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.186; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.270; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 529MB	InstCombine
  time: 0.012; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.522; rss: 529MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.398; rss: 551MB	translation item collection
  time: 0.071; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 12.170; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.391; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1202MB	llvm function passes [2]
time: 0.000; rss: 1204MB	llvm module passes [2]
time: 0.001; rss: 1204MB	llvm function passes [1]
time: 0.000; rss: 1206MB	llvm module passes [1]
time: 0.001; rss: 1208MB	llvm function passes [4]
time: 0.000; rss: 1208MB	llvm module passes [4]
time: 0.002; rss: 1208MB	llvm function passes [5]
time: 0.010; rss: 1216MB	llvm function passes [3]
time: 0.000; rss: 1216MB	llvm module passes [3]
time: 0.008; rss: 1216MB	llvm module passes [5]
time: 0.011; rss: 1216MB	llvm function passes [0]
time: 0.005; rss: 1216MB	codegen passes [2]
time: 0.001; rss: 1216MB	llvm function passes [2]
time: 0.001; rss: 1216MB	llvm module passes [2]
time: 0.008; rss: 1226MB	llvm module passes [0]
time: 0.015; rss: 1226MB	llvm function passes [6]
time: 0.010; rss: 1226MB	codegen passes [4]
time: 0.022; rss: 1230MB	codegen passes [1]
time: 0.014; rss: 1232MB	llvm module passes [6]
time: 0.018; rss: 1232MB	llvm function passes [4]
time: 0.022; rss: 1232MB	llvm function passes [9]
time: 0.008; rss: 1241MB	llvm module passes [4]
time: 0.000; rss: 1249MB	llvm function passes [18]
time: 0.000; rss: 1249MB	llvm module passes [18]
time: 0.015; rss: 1249MB	llvm module passes [9]
time: 0.003; rss: 1254MB	codegen passes [18]
time: 0.017; rss: 1256MB	llvm function passes [11]
time: 0.045; rss: 1256MB	codegen passes [2]
time: 0.000; rss: 1259MB	llvm function passes [15]
time: 0.000; rss: 1259MB	llvm module passes [15]
time: 0.004; rss: 1259MB	codegen passes [15]
time: 0.000; rss: 1263MB	llvm function passes [14]
time: 0.000; rss: 1263MB	llvm module passes [14]
time: 0.001; rss: 1263MB	codegen passes [14]
time: 0.061; rss: 1263MB	codegen passes [3]
time: 0.022; rss: 1265MB	llvm module passes [11]
time: 0.066; rss: 1265MB	llvm function passes [10]
time: 0.044; rss: 1267MB	llvm function passes [12]
time: 0.012; rss: 1267MB	llvm module passes [12]
time: 0.043; rss: 1271MB	llvm function passes [14]
time: 0.063; rss: 1282MB	llvm function passes [18]
time: 0.000; rss: 1282MB	llvm module passes [18]
time: 0.019; rss: 1288MB	llvm module passes [14]
time: 0.044; rss: 1288MB	llvm function passes [22]
time: 0.092; rss: 1288MB	llvm function passes [19]
time: 0.001; rss: 1288MB	llvm module passes [19]
time: 0.092; rss: 1288MB	llvm function passes [2]
time: 0.000; rss: 1288MB	llvm module passes [2]
time: 0.014; rss: 1288MB	llvm module passes [22]
time: 0.159; rss: 1288MB	llvm function passes [7]
time: 0.007; rss: 1292MB	codegen passes [2]
time: 0.098; rss: 1292MB	llvm function passes [15]
time: 0.106; rss: 1304MB	llvm module passes [10]
time: 0.029; rss: 1304MB	llvm module passes [15]
time: 0.137; rss: 1304MB	llvm function passes [21]
time: 0.074; rss: 1306MB	codegen passes [18]
time: 0.015; rss: 1312MB	llvm module passes [21]
time: 0.198; rss: 1312MB	codegen passes [5]
time: 0.021; rss: 1312MB	llvm function passes [18]
time: 0.004; rss: 1312MB	llvm module passes [18]
time: 0.224; rss: 1316MB	llvm function passes [8]
time: 0.069; rss: 1316MB	llvm function passes [2]
time: 0.072; rss: 1316MB	llvm module passes [7]
time: 0.012; rss: 1320MB	llvm module passes [2]
time: 0.097; rss: 1320MB	codegen passes [19]
time: 0.088; rss: 1329MB	llvm function passes [27]
time: 0.008; rss: 1331MB	llvm module passes [27]
time: 0.110; rss: 1339MB	llvm function passes [26]
time: 0.146; rss: 1341MB	llvm function passes [24]
time: 0.011; rss: 1341MB	llvm module passes [26]
time: 0.187; rss: 1345MB	llvm function passes [17]
time: 0.132; rss: 1353MB	llvm module passes [8]
time: 0.019; rss: 1378MB	llvm function passes [38]
time: 0.000; rss: 1378MB	llvm module passes [38]
time: 0.033; rss: 1378MB	llvm module passes [24]
time: 0.157; rss: 1380MB	llvm function passes [25]
time: 0.328; rss: 1384MB	llvm function passes [20]
time: 0.358; rss: 1384MB	llvm function passes [1]
time: 0.032; rss: 1384MB	llvm module passes [17]
time: 0.025; rss: 1385MB	llvm module passes [25]
time: 0.143; rss: 1392MB	llvm function passes [28]
time: 0.088; rss: 1392MB	llvm function passes [37]
time: 0.028; rss: 1392MB	codegen passes [47]
time: 0.019; rss: 1395MB	llvm module passes [37]
time: 0.023; rss: 1394MB	llvm module passes [28]
time: 0.334; rss: 1394MB	llvm function passes [16]
time: 0.328; rss: 1397MB	llvm function passes [23]
time: 0.080; rss: 1397MB	llvm module passes [20]
time: 0.227; rss: 1406MB	llvm function passes [33]
time: 0.243; rss: 1406MB	llvm function passes [32]
time: 0.061; rss: 1414MB	llvm module passes [23]
time: 0.068; rss: 1414MB	llvm module passes [16]
time: 0.193; rss: 1411MB	llvm function passes [31]
time: 0.140; rss: 1410MB	llvm function passes [36]
time: 0.001; rss: 1410MB	llvm module passes [36]
time: 0.116; rss: 1412MB	codegen passes [38]
time: 0.057; rss: 1414MB	llvm module passes [32]
time: 0.179; rss: 1415MB	llvm module passes [1]
time: 0.040; rss: 1416MB	llvm module passes [31]
time: 0.372; rss: 1417MB	llvm function passes [5]
time: 0.233; rss: 1419MB	llvm function passes [34]
time: 0.544; rss: 1420MB	llvm function passes [13]
time: 0.534; rss: 1418MB	llvm function passes [3]
time: 0.083; rss: 1406MB	llvm module passes [3]
time: 0.460; rss: 1403MB	llvm function passes [19]
time: 0.140; rss: 1403MB	llvm module passes [34]
time: 0.236; rss: 1417MB	llvm function passes [29]
time: 0.465; rss: 1409MB	llvm function passes [35]
time: 0.112; rss: 1410MB	llvm module passes [19]
time: 0.061; rss: 1413MB	llvm module passes [35]
time: 0.106; rss: 1413MB	llvm module passes [29]
time: 0.327; rss: 1431MB	codegen passes [31]
time: 0.731; rss: 1417MB	codegen passes [6]
time: 0.397; rss: 1426MB	codegen passes [36]
time: 0.393; rss: 1424MB	llvm module passes [5]
time: 0.499; rss: 1423MB	llvm module passes [33]
time: 0.748; rss: 1432MB	codegen passes [18]
time: 0.641; rss: 1455MB	llvm module passes [13]
time: 1.007; rss: 1447MB	codegen passes [0]
time: 1.073; rss: 1506MB	codegen passes [27]
time: 1.290; rss: 1503MB	codegen passes [4]
time: 1.107; rss: 1499MB	codegen passes [2]
time: 1.417; rss: 1459MB	codegen passes [11]
time: 0.895; rss: 1439MB	codegen passes [37]
time: 1.594; rss: 1439MB	codegen passes [9]
time: 1.701; rss: 1430MB	codegen passes [12]
time: 1.810; rss: 1439MB	codegen passes [26]
time: 1.837; rss: 1432MB	codegen passes [22]
time: 1.838; rss: 1417MB	codegen passes [14]
time: 1.574; rss: 1427MB	codegen passes [19]
time: 1.990; rss: 1426MB	codegen passes [21]
time: 2.180; rss: 1447MB	codegen passes [25]
time: 2.431; rss: 1495MB	codegen passes [24]
time: 2.238; rss: 1508MB	codegen passes [34]
time: 2.796; rss: 1538MB	codegen passes [28]
time: 2.817; rss: 1563MB	codegen passes [15]
time: 2.967; rss: 1537MB	codegen passes [17]
time: 2.899; rss: 1542MB	codegen passes [10]
time: 3.175; rss: 1593MB	codegen passes [20]
time: 3.298; rss: 1611MB	codegen passes [32]
time: 3.278; rss: 1613MB	codegen passes [3]
time: 3.482; rss: 1589MB	codegen passes [35]
time: 3.899; rss: 1638MB	codegen passes [23]
time: 4.096; rss: 1602MB	codegen passes [7]
time: 4.277; rss: 1578MB	codegen passes [16]
time: 4.227; rss: 1554MB	codegen passes [5]
time: 4.157; rss: 1512MB	codegen passes [1]
time: 4.619; rss: 1463MB	codegen passes [33]
time: 5.087; rss: 1469MB	codegen passes [8]
time: 5.233; rss: 1426MB	codegen passes [29]
time: 4.994; rss: 1335MB	codegen passes [13]
time: 7.392; rss: 1333MB	LLVM passes
time: 0.000; rss: 1333MB	serialize work products
time: 1.064; rss: 293MB	linking
done
