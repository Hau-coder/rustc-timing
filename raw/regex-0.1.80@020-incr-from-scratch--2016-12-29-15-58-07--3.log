commit e7c788af75c92c3e0f8e547f28d734757136527f
Merge: 3f957eb 03bc2cf
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 29 19:34:23 2016 +0000

    Auto merge of #38503 - brson:bootstrap, r=alexcrichton
    
    Bump bootstrap compiler
    
    r? @alexcrichton
    
    I'm not clear on whether cargo will need to additionally be bumped beyond what's in https://github.com/rust-lang/rust/pull/38470
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.043; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.012; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.123; rss: 112MB	item-types checking
time: 0.294; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.039; rss: 149MB	const checking
time: 0.007; rss: 149MB	privacy checking
time: 0.002; rss: 149MB	intrinsic checking
time: 0.001; rss: 149MB	effect checking
time: 0.005; rss: 149MB	match checking
time: 0.004; rss: 150MB	liveness checking
time: 0.016; rss: 150MB	rvalue checking
time: 0.043; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.009; rss: 172MB	QualifyAndPromoteConstants
  time: 0.012; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.031; rss: 172MB	MIR cleanup and validation
time: 0.046; rss: 172MB	borrow checking
time: 0.001; rss: 172MB	reachability checking
time: 0.004; rss: 172MB	death checking
time: 0.000; rss: 172MB	unused lib feature checking
time: 0.030; rss: 172MB	lint checking
time: 0.000; rss: 172MB	resolving dependency formats
  time: 0.000; rss: 172MB	NoLandingPads
  time: 0.003; rss: 172MB	SimplifyCfg
  time: 0.008; rss: 172MB	EraseRegions
  time: 0.001; rss: 172MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.044; rss: 175MB	MIR optimisations
  time: 0.008; rss: 178MB	write metadata
  time: 0.085; rss: 182MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 311MB	internalize symbols
time: 1.668; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.123; rss: 319MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 258MB	llvm function passes [1]
time: 0.000; rss: 258MB	llvm module passes [1]
time: 0.001; rss: 258MB	llvm function passes [6]
time: 0.003; rss: 258MB	llvm function passes [0]
time: 0.000; rss: 258MB	llvm module passes [0]
time: 0.001; rss: 258MB	llvm module passes [6]
time: 0.003; rss: 258MB	llvm function passes [3]
time: 0.001; rss: 258MB	llvm module passes [3]
time: 0.009; rss: 262MB	codegen passes [1]
time: 0.007; rss: 262MB	llvm function passes [1]
time: 0.015; rss: 262MB	codegen passes [6]
time: 0.019; rss: 262MB	llvm function passes [5]
time: 0.019; rss: 262MB	llvm function passes [4]
time: 0.003; rss: 264MB	llvm module passes [1]
time: 0.021; rss: 264MB	codegen passes [0]
time: 0.002; rss: 266MB	llvm function passes [0]
time: 0.008; rss: 266MB	llvm function passes [6]
time: 0.001; rss: 266MB	llvm module passes [0]
time: 0.003; rss: 266MB	llvm module passes [6]
time: 0.035; rss: 272MB	llvm function passes [7]
time: 0.043; rss: 281MB	llvm function passes [2]
time: 0.039; rss: 283MB	codegen passes [3]
time: 0.002; rss: 285MB	llvm function passes [17]
time: 0.001; rss: 285MB	llvm module passes [17]
time: 0.028; rss: 291MB	codegen passes [0]
time: 0.000; rss: 293MB	codegen passes [12]
time: 0.003; rss: 293MB	llvm function passes [0]
time: 0.001; rss: 293MB	llvm module passes [0]
time: 0.053; rss: 301MB	llvm function passes [13]
time: 0.002; rss: 301MB	llvm module passes [13]
time: 0.044; rss: 301MB	llvm function passes [3]
time: 0.004; rss: 301MB	llvm function passes [16]
time: 0.057; rss: 301MB	llvm function passes [15]
time: 0.002; rss: 301MB	llvm module passes [16]
time: 0.044; rss: 309MB	codegen passes [0]
time: 0.107; rss: 307MB	llvm module passes [5]
time: 0.110; rss: 310MB	llvm function passes [18]
time: 0.045; rss: 309MB	llvm module passes [15]
time: 0.093; rss: 310MB	llvm function passes [20]
time: 0.019; rss: 314MB	llvm module passes [18]
time: 0.129; rss: 314MB	codegen passes [1]
time: 0.021; rss: 312MB	llvm module passes [20]
time: 0.140; rss: 313MB	llvm function passes [14]
time: 0.125; rss: 314MB	llvm function passes [19]
time: 0.107; rss: 322MB	codegen passes [17]
time: 0.027; rss: 324MB	llvm module passes [14]
time: 0.016; rss: 332MB	llvm module passes [19]
time: 0.096; rss: 338MB	codegen passes [13]
time: 0.127; rss: 340MB	codegen passes [16]
time: 0.210; rss: 330MB	codegen passes [6]
time: 0.275; rss: 332MB	llvm module passes [4]
time: 0.147; rss: 344MB	codegen passes [15]
time: 0.374; rss: 355MB	llvm module passes [3]
time: 0.460; rss: 361MB	llvm module passes [7]
time: 0.292; rss: 362MB	codegen passes [18]
time: 0.485; rss: 362MB	llvm module passes [2]
time: 0.444; rss: 372MB	codegen passes [5]
time: 0.507; rss: 376MB	codegen passes [14]
time: 0.415; rss: 368MB	codegen passes [4]
time: 0.552; rss: 360MB	codegen passes [20]
time: 0.654; rss: 359MB	codegen passes [19]
time: 0.690; rss: 379MB	codegen passes [7]
time: 1.055; rss: 367MB	codegen passes [2]
time: 1.139; rss: 345MB	codegen passes [3]
time: 1.726; rss: 341MB	LLVM passes
time: 0.000; rss: 341MB	serialize work products
time: 0.207; rss: 160MB	linking
done
