commit f536d90c789e973c95dfc4a699c047186e4fb59c
Merge: 65c043f 5e2cea9
Author: bors <bors@rust-lang.org>
Date:   Mon Dec 26 17:23:42 2016 +0000

    Auto merge of #38542 - YaLTeR:fastcall-fix, r=pnkfelix
    
    Fix fastcall not applying inreg attributes to arguments
    
    Fixes https://github.com/rust-lang/rust/issues/18086
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.044; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 104MB	wf checking
time: 0.122; rss: 112MB	item-types checking
time: 0.295; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.039; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.005; rss: 150MB	match checking
time: 0.004; rss: 151MB	liveness checking
time: 0.016; rss: 151MB	rvalue checking
time: 0.043; rss: 172MB	MIR dump
  time: 0.006; rss: 173MB	SimplifyCfg
  time: 0.009; rss: 173MB	QualifyAndPromoteConstants
  time: 0.012; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.003; rss: 173MB	SimplifyCfg
time: 0.031; rss: 173MB	MIR cleanup and validation
time: 0.045; rss: 173MB	borrow checking
time: 0.001; rss: 173MB	reachability checking
time: 0.004; rss: 173MB	death checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.028; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.003; rss: 173MB	SimplifyCfg
  time: 0.008; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.044; rss: 175MB	MIR optimisations
  time: 0.009; rss: 177MB	write metadata
  time: 0.087; rss: 182MB	translation item collection
  time: 0.015; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 312MB	internalize symbols
time: 1.670; rss: 312MB	translation
time: 0.000; rss: 312MB	assert dep graph
time: 0.109; rss: 320MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 259MB	llvm function passes [3]
time: 0.000; rss: 261MB	llvm module passes [3]
time: 0.001; rss: 261MB	llvm function passes [7]
time: 0.002; rss: 261MB	llvm function passes [0]
time: 0.000; rss: 261MB	llvm module passes [0]
time: 0.001; rss: 261MB	llvm module passes [7]
time: 0.004; rss: 261MB	llvm function passes [1]
time: 0.002; rss: 267MB	llvm module passes [1]
time: 0.002; rss: 267MB	llvm function passes [14]
time: 0.007; rss: 267MB	llvm function passes [9]
time: 0.014; rss: 267MB	llvm function passes [5]
time: 0.002; rss: 267MB	llvm module passes [9]
time: 0.009; rss: 272MB	llvm function passes [11]
time: 0.019; rss: 274MB	llvm function passes [4]
time: 0.003; rss: 274MB	llvm module passes [11]
time: 0.016; rss: 274MB	llvm module passes [14]
time: 0.030; rss: 277MB	llvm function passes [6]
time: 0.028; rss: 283MB	codegen passes [3]
time: 0.016; rss: 283MB	llvm function passes [10]
time: 0.006; rss: 283MB	llvm module passes [10]
time: 0.043; rss: 287MB	llvm function passes [2]
time: 0.042; rss: 289MB	codegen passes [0]
time: 0.004; rss: 289MB	llvm function passes [15]
time: 0.014; rss: 289MB	llvm function passes [12]
time: 0.031; rss: 289MB	codegen passes [14]
time: 0.027; rss: 289MB	llvm function passes [13]
time: 0.002; rss: 289MB	llvm module passes [13]
time: 0.003; rss: 289MB	llvm function passes [14]
time: 0.001; rss: 289MB	llvm module passes [14]
time: 0.017; rss: 289MB	llvm module passes [15]
time: 0.059; rss: 289MB	codegen passes [7]
time: 0.000; rss: 289MB	codegen passes [7]
time: 0.016; rss: 290MB	llvm module passes [12]
time: 0.015; rss: 300MB	llvm function passes [19]
time: 0.001; rss: 300MB	llvm module passes [19]
time: 0.041; rss: 300MB	llvm function passes [8]
time: 0.012; rss: 302MB	llvm module passes [8]
time: 0.055; rss: 310MB	llvm function passes [0]
time: 0.052; rss: 310MB	llvm function passes [16]
time: 0.082; rss: 311MB	llvm function passes [3]
time: 0.110; rss: 314MB	codegen passes [1]
time: 0.064; rss: 318MB	codegen passes [14]
time: 0.046; rss: 318MB	llvm module passes [0]
time: 0.054; rss: 324MB	llvm module passes [16]
time: 0.108; rss: 332MB	codegen passes [19]
time: 0.138; rss: 342MB	codegen passes [15]
time: 0.168; rss: 350MB	codegen passes [9]
time: 0.155; rss: 349MB	codegen passes [13]
time: 0.218; rss: 352MB	llvm module passes [4]
time: 0.193; rss: 347MB	codegen passes [11]
time: 0.264; rss: 345MB	llvm module passes [5]
time: 0.195; rss: 354MB	codegen passes [12]
time: 0.420; rss: 370MB	llvm module passes [6]
time: 0.380; rss: 378MB	codegen passes [10]
time: 0.405; rss: 378MB	llvm module passes [3]
time: 0.505; rss: 369MB	llvm module passes [2]
time: 0.452; rss: 390MB	codegen passes [8]
time: 0.398; rss: 382MB	codegen passes [4]
time: 0.474; rss: 380MB	codegen passes [16]
time: 0.451; rss: 374MB	codegen passes [5]
time: 0.620; rss: 369MB	codegen passes [0]
time: 0.794; rss: 394MB	codegen passes [3]
time: 0.920; rss: 376MB	codegen passes [6]
time: 0.966; rss: 357MB	codegen passes [2]
time: 1.626; rss: 355MB	LLVM passes
time: 0.000; rss: 355MB	serialize work products
time: 0.206; rss: 172MB	linking
done
