commit 469fd779ee24f8348acd438f471c8c3a5cef309a
Merge: 17f1fba a6fe6c9
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 09:42:46 2016 +0000

    Auto merge of #38616 - pnkfelix:refactor-mir-dataflow-remove-ctxt, r=arielb1
    
    Refactor mir::dataflow: remove Ctxt associated type from BitDenotation trait
    
    Refactor mir::dataflow: remove Ctxt associated type from BitDenotation trait
    
    I no longer remember why I needed this (or thought I did). The way
    that the `BitDenotation` is passed around in all existing use cases
    (and planned future ones), the thing that were in the `Ctxt` can just
    be part of `Self` instead.
    
    (I think ariel had been pushing me to do this back when I first put in
    this infrastructure; it took me a while to see how much of pain the
    `Ctxt` was causing.)
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.244; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.086; rss: 200MB	wf checking
time: 0.196; rss: 208MB	item-types checking
time: 3.562; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.215; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.020; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.175; rss: 292MB	rvalue checking
time: 0.362; rss: 482MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.119; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.030; rss: 500MB	SimplifyCfg
time: 0.285; rss: 500MB	MIR cleanup and validation
time: 0.469; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.181; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 529MB	InstCombine
  time: 0.012; rss: 529MB	Deaggregator
  time: 0.004; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.527; rss: 529MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.401; rss: 552MB	translation item collection
  time: 0.071; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.793; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.434; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [2]
time: 0.000; rss: 1197MB	llvm module passes [2]
time: 0.001; rss: 1204MB	llvm function passes [1]
time: 0.001; rss: 1204MB	llvm function passes [0]
time: 0.000; rss: 1204MB	llvm module passes [0]
time: 0.000; rss: 1204MB	llvm module passes [1]
time: 0.003; rss: 1210MB	llvm function passes [5]
time: 0.004; rss: 1210MB	llvm function passes [3]
time: 0.000; rss: 1210MB	llvm module passes [3]
time: 0.007; rss: 1210MB	codegen passes [2]
time: 0.005; rss: 1210MB	llvm module passes [5]
time: 0.010; rss: 1210MB	llvm function passes [6]
time: 0.010; rss: 1210MB	codegen passes [1]
time: 0.001; rss: 1210MB	llvm function passes [1]
time: 0.000; rss: 1210MB	llvm module passes [1]
time: 0.014; rss: 1212MB	llvm function passes [4]
time: 0.013; rss: 1212MB	codegen passes [0]
time: 0.006; rss: 1212MB	llvm module passes [6]
time: 0.008; rss: 1216MB	llvm module passes [4]
time: 0.016; rss: 1220MB	codegen passes [1]
time: 0.032; rss: 1226MB	codegen passes [3]
time: 0.025; rss: 1226MB	llvm function passes [0]
time: 0.015; rss: 1230MB	llvm module passes [0]
time: 0.000; rss: 1234MB	llvm function passes [12]
time: 0.000; rss: 1234MB	llvm module passes [12]
time: 0.001; rss: 1234MB	codegen passes [12]
time: 0.051; rss: 1240MB	llvm function passes [8]
time: 0.000; rss: 1247MB	llvm function passes [16]
time: 0.000; rss: 1247MB	llvm module passes [16]
time: 0.041; rss: 1249MB	llvm function passes [3]
time: 0.001; rss: 1249MB	llvm function passes [17]
time: 0.000; rss: 1249MB	llvm module passes [17]
time: 0.009; rss: 1249MB	llvm module passes [8]
time: 0.000; rss: 1251MB	llvm function passes [18]
time: 0.000; rss: 1251MB	llvm module passes [18]
time: 0.073; rss: 1251MB	codegen passes [5]
time: 0.000; rss: 1255MB	llvm function passes [20]
time: 0.000; rss: 1255MB	llvm module passes [20]
time: 0.001; rss: 1257MB	codegen passes [20]
time: 0.047; rss: 1259MB	llvm function passes [10]
time: 0.069; rss: 1258MB	llvm function passes [1]
time: 0.024; rss: 1262MB	llvm module passes [3]
time: 0.055; rss: 1266MB	llvm function passes [12]
time: 0.001; rss: 1266MB	llvm module passes [12]
time: 0.119; rss: 1268MB	llvm function passes [7]
time: 0.036; rss: 1268MB	llvm module passes [1]
time: 0.052; rss: 1271MB	codegen passes [18]
time: 0.059; rss: 1271MB	codegen passes [16]
time: 0.050; rss: 1273MB	llvm module passes [10]
time: 0.078; rss: 1285MB	codegen passes [17]
time: 0.025; rss: 1285MB	llvm function passes [16]
time: 0.040; rss: 1285MB	llvm function passes [25]
time: 0.012; rss: 1285MB	llvm module passes [25]
time: 0.084; rss: 1285MB	llvm function passes [19]
time: 0.031; rss: 1289MB	llvm function passes [26]
time: 0.003; rss: 1289MB	llvm module passes [26]
time: 0.015; rss: 1291MB	llvm module passes [19]
time: 0.021; rss: 1289MB	llvm module passes [16]
time: 0.116; rss: 1295MB	llvm function passes [24]
time: 0.077; rss: 1295MB	llvm function passes [17]
time: 0.150; rss: 1339MB	llvm function passes [20]
time: 0.046; rss: 1343MB	llvm module passes [24]
time: 0.211; rss: 1343MB	llvm function passes [15]
time: 0.047; rss: 1345MB	llvm module passes [17]
time: 0.092; rss: 1343MB	llvm function passes [28]
time: 0.221; rss: 1345MB	llvm function passes [14]
time: 0.159; rss: 1355MB	codegen passes [12]
time: 0.185; rss: 1357MB	llvm module passes [7]
time: 0.173; rss: 1357MB	llvm function passes [18]
time: 0.070; rss: 1357MB	llvm module passes [20]
time: 0.028; rss: 1357MB	llvm module passes [14]
time: 0.030; rss: 1357MB	llvm module passes [28]
time: 0.000; rss: 1372MB	llvm function passes [41]
time: 0.000; rss: 1372MB	codegen passes [42]
time: 0.000; rss: 1372MB	llvm module passes [41]
time: 0.270; rss: 1373MB	llvm function passes [5]
time: 0.336; rss: 1375MB	llvm function passes [13]
time: 0.283; rss: 1377MB	llvm function passes [21]
time: 0.073; rss: 1379MB	llvm module passes [18]
time: 0.305; rss: 1385MB	llvm function passes [23]
time: 0.133; rss: 1389MB	llvm module passes [15]
time: 0.180; rss: 1391MB	llvm function passes [34]
time: 0.432; rss: 1391MB	llvm function passes [2]
time: 0.102; rss: 1391MB	llvm function passes [39]
time: 0.348; rss: 1391MB	llvm function passes [22]
time: 0.005; rss: 1391MB	llvm module passes [39]
time: 0.072; rss: 1409MB	llvm module passes [23]
time: 0.108; rss: 1411MB	llvm module passes [21]
time: 0.069; rss: 1413MB	llvm module passes [34]
time: 0.137; rss: 1412MB	llvm module passes [13]
time: 0.126; rss: 1419MB	llvm function passes [38]
time: 0.074; rss: 1419MB	llvm module passes [22]
time: 0.355; rss: 1419MB	llvm function passes [29]
time: 0.211; rss: 1420MB	llvm function passes [37]
time: 0.395; rss: 1420MB	llvm function passes [27]
time: 0.372; rss: 1413MB	llvm function passes [30]
time: 0.002; rss: 1413MB	llvm module passes [30]
time: 0.078; rss: 1418MB	llvm module passes [38]
time: 0.079; rss: 1414MB	llvm module passes [29]
time: 0.328; rss: 1412MB	llvm function passes [35]
time: 0.113; rss: 1408MB	codegen passes [41]
time: 0.071; rss: 1409MB	codegen passes [30]
time: 0.123; rss: 1410MB	llvm module passes [37]
time: 0.219; rss: 1410MB	llvm module passes [2]
time: 0.603; rss: 1410MB	llvm function passes [11]
time: 0.348; rss: 1410MB	llvm module passes [5]
time: 0.152; rss: 1417MB	llvm module passes [27]
time: 0.117; rss: 1420MB	llvm module passes [35]
time: 0.507; rss: 1418MB	codegen passes [26]
time: 0.076; rss: 1421MB	codegen passes [38]
time: 0.742; rss: 1419MB	codegen passes [6]
time: 0.482; rss: 1419MB	llvm function passes [36]
time: 0.587; rss: 1419MB	llvm function passes [33]
time: 0.069; rss: 1426MB	llvm module passes [36]
time: 0.671; rss: 1427MB	llvm function passes [12]
time: 0.227; rss: 1447MB	llvm module passes [33]
time: 0.595; rss: 1447MB	codegen passes [39]
time: 0.576; rss: 1465MB	llvm module passes [11]
time: 0.337; rss: 1481MB	llvm module passes [12]
time: 0.900; rss: 1478MB	codegen passes [16]
time: 1.364; rss: 1476MB	codegen passes [0]
time: 1.339; rss: 1442MB	codegen passes [3]
time: 1.403; rss: 1409MB	codegen passes [4]
time: 1.539; rss: 1409MB	codegen passes [8]
time: 1.347; rss: 1425MB	codegen passes [25]
time: 1.482; rss: 1433MB	codegen passes [10]
time: 1.710; rss: 1436MB	codegen passes [17]
time: 1.661; rss: 1430MB	codegen passes [14]
time: 1.713; rss: 1430MB	codegen passes [34]
time: 2.043; rss: 1445MB	codegen passes [20]
time: 2.173; rss: 1514MB	codegen passes [37]
time: 2.589; rss: 1514MB	codegen passes [28]
time: 2.754; rss: 1525MB	codegen passes [19]
time: 2.419; rss: 1549MB	codegen passes [36]
time: 2.682; rss: 1541MB	codegen passes [24]
time: 2.937; rss: 1550MB	codegen passes [1]
time: 3.008; rss: 1545MB	codegen passes [18]
time: 3.138; rss: 1640MB	codegen passes [5]
time: 3.356; rss: 1677MB	codegen passes [21]
time: 4.050; rss: 1705MB	codegen passes [15]
time: 3.853; rss: 1681MB	codegen passes [33]
time: 3.530; rss: 1771MB	codegen passes [12]
time: 4.618; rss: 1701MB	codegen passes [22]
time: 4.303; rss: 1672MB	codegen passes [23]
time: 4.408; rss: 1624MB	codegen passes [7]
time: 4.581; rss: 1605MB	codegen passes [35]
time: 4.602; rss: 1562MB	codegen passes [29]
time: 4.678; rss: 1524MB	codegen passes [13]
time: 5.437; rss: 1472MB	codegen passes [2]
time: 5.144; rss: 1402MB	codegen passes [27]
time: 5.268; rss: 1341MB	codegen passes [11]
time: 7.547; rss: 1340MB	LLVM passes
time: 0.000; rss: 1340MB	serialize work products
time: 1.062; rss: 306MB	linking
done
