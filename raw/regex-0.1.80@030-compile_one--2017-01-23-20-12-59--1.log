commit 18b6b8fb8fe781014a63b7523dfa73113213332b
Merge: a583f6f a5f2f36
Author: bors <bors@rust-lang.org>
Date:   Tue Jan 24 01:17:09 2017 +0000

    Auto merge of #39048 - lambda:impl-tosocketaddrs-for-string, r=alexcrichton
    
    impl ToSocketAddrs for String
    
    `ToSocketAddrs` is implemented for a number of different types,
    including `(IpAddr, u16)`, `&str`, and various others, for the
    convenience of being able to run things like
    `TcpListener::bind("10.11.12.13:1415")`.  However, because this is a
    generic parameter with a trait bound, if you have a `String` you cannot
    pass it in, either directly as `TcpListener::bind(string)`, or the
    `TcpListener::bind(&string)` as you might expect due to deref coercion;
    you have to use `TcpListener::bind(&*string)`, which is noisy and hard
    to discover (though #39029 suggests better error messages to make it
    more discoverable).
    
    Rather than making people stumble over this, just implement
    `ToSocketAddrs` for `String`.
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./regex-0.1.80@030-compile_one
git apply 030-compile_one.diff
find . -name "*.rs" | xargs touch
git diff
diff --git a/regex-0.1.80/src/compile.rs b/regex-0.1.80/src/compile.rs
index 9db743f..9a32d30 100644
--- a/regex-0.1.80/src/compile.rs
+++ b/regex-0.1.80/src/compile.rs
@@ -137,6 +137,8 @@ impl Compiler {
     }
 
     fn compile_one(mut self, expr: &Expr) -> result::Result<Program, Error> {
+        {} // @030
+
         // If we're compiling a forward DFA and we aren't anchored, then
         // add a `.*?` before the first capture group.
         // Other matching engines handle this by baking the logic into the
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
makefile:18: recipe for target 'all@030-compile_one' failed
done
