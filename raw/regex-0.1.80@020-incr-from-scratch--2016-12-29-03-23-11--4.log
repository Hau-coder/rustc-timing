commit ebc293bcd3fb4122c9be889b7338a9c3089f53ce
Merge: 1d9965b ad747c5
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 29 08:16:58 2016 +0000

    Auto merge of #38645 - nikomatsakis:incr-comp-fix-time-depth, r=nrc
    
    propagate TIME_DEPTH to the helper threads for -Z time-passes
    
    Currently, the timing measurements for LLVM passes and the like don't come out indented, which messes up `perf.rust-lang.org`.
    
    r? @nrc
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.043; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 94MB	region resolution
time: 0.001; rss: 94MB	loop checking
time: 0.000; rss: 94MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.012; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.015; rss: 102MB	coherence checking
time: 0.021; rss: 104MB	wf checking
time: 0.123; rss: 112MB	item-types checking
time: 0.294; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.039; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.005; rss: 150MB	match checking
time: 0.004; rss: 150MB	liveness checking
time: 0.016; rss: 150MB	rvalue checking
time: 0.042; rss: 172MB	MIR dump
  time: 0.006; rss: 173MB	SimplifyCfg
  time: 0.009; rss: 173MB	QualifyAndPromoteConstants
  time: 0.012; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.003; rss: 173MB	SimplifyCfg
time: 0.031; rss: 173MB	MIR cleanup and validation
time: 0.045; rss: 173MB	borrow checking
time: 0.001; rss: 173MB	reachability checking
time: 0.004; rss: 173MB	death checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.029; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.003; rss: 173MB	SimplifyCfg
  time: 0.007; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.043; rss: 175MB	MIR optimisations
  time: 0.008; rss: 177MB	write metadata
  time: 0.085; rss: 183MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.012; rss: 312MB	internalize symbols
time: 1.668; rss: 312MB	translation
time: 0.000; rss: 312MB	assert dep graph
time: 0.124; rss: 320MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.003; rss: 261MB	llvm function passes [1]
time: 0.000; rss: 261MB	llvm module passes [1]
time: 0.004; rss: 261MB	llvm function passes [0]
time: 0.000; rss: 261MB	llvm module passes [0]
time: 0.001; rss: 261MB	llvm function passes [7]
time: 0.005; rss: 261MB	llvm function passes [2]
time: 0.006; rss: 265MB	llvm module passes [7]
time: 0.007; rss: 270MB	llvm module passes [2]
time: 0.002; rss: 270MB	llvm function passes [10]
time: 0.001; rss: 270MB	llvm module passes [10]
time: 0.008; rss: 270MB	llvm function passes [9]
time: 0.003; rss: 272MB	llvm module passes [9]
time: 0.008; rss: 275MB	codegen passes [1]
time: 0.020; rss: 275MB	llvm function passes [4]
time: 0.016; rss: 282MB	llvm function passes [8]
time: 0.007; rss: 288MB	llvm module passes [8]
time: 0.017; rss: 288MB	llvm function passes [1]
time: 0.034; rss: 288MB	llvm function passes [5]
time: 0.007; rss: 290MB	llvm module passes [1]
time: 0.042; rss: 292MB	llvm function passes [3]
time: 0.031; rss: 290MB	codegen passes [7]
time: 0.042; rss: 292MB	codegen passes [0]
time: 0.002; rss: 292MB	llvm function passes [0]
time: 0.001; rss: 292MB	llvm module passes [0]
time: 0.037; rss: 297MB	llvm function passes [13]
time: 0.037; rss: 299MB	codegen passes [10]
time: 0.036; rss: 299MB	llvm function passes [14]
time: 0.050; rss: 299MB	llvm function passes [11]
time: 0.002; rss: 301MB	llvm module passes [11]
time: 0.076; rss: 301MB	llvm function passes [6]
time: 0.014; rss: 305MB	llvm module passes [14]
time: 0.029; rss: 305MB	llvm function passes [16]
time: 0.019; rss: 305MB	llvm module passes [13]
time: 0.071; rss: 309MB	llvm function passes [12]
time: 0.086; rss: 312MB	codegen passes [2]
time: 0.037; rss: 314MB	llvm function passes [10]
time: 0.000; rss: 314MB	codegen passes [17]
time: 0.073; rss: 314MB	llvm function passes [15]
time: 0.008; rss: 319MB	llvm function passes [20]
time: 0.021; rss: 319MB	llvm module passes [12]
time: 0.001; rss: 319MB	llvm module passes [20]
time: 0.034; rss: 319MB	llvm module passes [16]
time: 0.018; rss: 319MB	llvm module passes [10]
time: 0.061; rss: 357MB	codegen passes [20]
time: 0.164; rss: 358MB	codegen passes [9]
time: 0.106; rss: 360MB	codegen passes [14]
time: 0.050; rss: 360MB	codegen passes [0]
time: 0.117; rss: 361MB	codegen passes [11]
time: 0.201; rss: 349MB	llvm module passes [4]
time: 0.176; rss: 356MB	codegen passes [8]
time: 0.207; rss: 356MB	llvm module passes [5]
time: 0.150; rss: 348MB	codegen passes [13]
time: 0.354; rss: 371MB	llvm module passes [15]
time: 0.315; rss: 386MB	codegen passes [1]
time: 0.492; rss: 383MB	llvm module passes [3]
time: 0.480; rss: 387MB	llvm module passes [6]
time: 0.447; rss: 392MB	codegen passes [12]
time: 0.425; rss: 383MB	codegen passes [4]
time: 0.494; rss: 385MB	codegen passes [16]
time: 0.445; rss: 375MB	codegen passes [5]
time: 0.674; rss: 372MB	codegen passes [10]
time: 0.780; rss: 402MB	codegen passes [3]
time: 0.917; rss: 398MB	codegen passes [6]
time: 1.098; rss: 359MB	codegen passes [15]
time: 1.683; rss: 357MB	LLVM passes
time: 0.000; rss: 356MB	serialize work products
time: 0.208; rss: 173MB	linking
done
