commit 17f1fba353d2545ee54589350a83681dc3156e70
Merge: 0807104 babb7da
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 07:05:07 2016 +0000

    Auto merge of #38589 - aidanhs:aphs-stage0-rustdoc-test, r=alexcrichton
    
    Teach `rustdoc --test` about `--sysroot`, pass it when testing rust
    
    This permits rustdoc tests to work in stage0.
    
    Logical continuation of #36586.
    
    Snippet from https://github.com/rust-lang/rust/issues/38575#issuecomment-269090724:
    
    > it should actually be possible to run all the libstd tests immediately after creating std of stage0-out - there's no reason to build librustc at all if you've just made a change to (for example) libcollections, `./x.py test src/libcollections --stage 0 -v --incremental` should just work
    
    This PR makes it so (or appears to in my testing).
    
    r? @alexcrichton
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.054; rss: 189MB	type collecting
time: 0.004; rss: 189MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 196MB	coherence checking
time: 0.089; rss: 199MB	wf checking
time: 0.198; rss: 207MB	item-types checking
time: 3.603; rss: 267MB	item-bodies checking
time: 0.000; rss: 267MB	drop-impl checking
time: 0.217; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.049; rss: 283MB	match checking
time: 0.049; rss: 291MB	liveness checking
time: 0.177; rss: 293MB	rvalue checking
time: 0.362; rss: 481MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.122; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.290; rss: 500MB	MIR cleanup and validation
time: 0.476; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.184; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.003; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.269; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.028; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.524; rss: 528MB	MIR optimisations
  time: 0.066; rss: 538MB	write metadata
  time: 0.411; rss: 551MB	translation item collection
  time: 0.073; rss: 555MB	codegen unit partitioning
  time: 0.051; rss: 1457MB	internalize symbols
time: 12.049; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.371; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1198MB	llvm function passes [2]
time: 0.000; rss: 1200MB	llvm module passes [2]
time: 0.001; rss: 1204MB	llvm function passes [1]
time: 0.000; rss: 1205MB	llvm module passes [1]
time: 0.001; rss: 1207MB	llvm function passes [0]
time: 0.000; rss: 1207MB	llvm module passes [0]
time: 0.002; rss: 1207MB	llvm function passes [4]
time: 0.000; rss: 1207MB	llvm module passes [4]
time: 0.002; rss: 1207MB	codegen passes [2]
time: 0.004; rss: 1209MB	llvm function passes [5]
time: 0.004; rss: 1209MB	codegen passes [1]
time: 0.002; rss: 1209MB	llvm module passes [5]
time: 0.001; rss: 1209MB	llvm function passes [1]
time: 0.000; rss: 1209MB	llvm module passes [1]
time: 0.008; rss: 1213MB	codegen passes [0]
time: 0.011; rss: 1213MB	llvm function passes [6]
time: 0.015; rss: 1216MB	llvm function passes [3]
time: 0.006; rss: 1220MB	llvm module passes [6]
time: 0.008; rss: 1224MB	llvm module passes [3]
time: 0.018; rss: 1224MB	llvm function passes [0]
time: 0.027; rss: 1231MB	llvm function passes [48]
time: 0.009; rss: 1231MB	llvm module passes [0]
time: 0.016; rss: 1231MB	llvm function passes [10]
time: 0.036; rss: 1236MB	codegen passes [1]
time: 0.005; rss: 1236MB	llvm module passes [10]
time: 0.000; rss: 1236MB	llvm function passes [1]
time: 0.000; rss: 1236MB	llvm module passes [1]
time: 0.001; rss: 1236MB	codegen passes [1]
time: 0.010; rss: 1236MB	llvm module passes [48]
time: 0.000; rss: 1244MB	llvm function passes [45]
time: 0.000; rss: 1244MB	llvm module passes [45]
time: 0.055; rss: 1250MB	llvm function passes [8]
time: 0.016; rss: 1252MB	codegen passes [45]
time: 0.000; rss: 1258MB	llvm function passes [9]
time: 0.012; rss: 1260MB	llvm module passes [8]
time: 0.077; rss: 1260MB	codegen passes [5]
time: 0.045; rss: 1260MB	llvm function passes [1]
time: 0.001; rss: 1260MB	llvm module passes [1]
time: 0.091; rss: 1260MB	codegen passes [4]
time: 0.000; rss: 1260MB	llvm function passes [4]
time: 0.000; rss: 1260MB	llvm module passes [4]
time: 0.001; rss: 1260MB	codegen passes [4]
time: 0.030; rss: 1263MB	llvm module passes [9]
time: 0.004; rss: 1265MB	codegen passes [9]
time: 0.041; rss: 1267MB	llvm function passes [5]
time: 0.137; rss: 1275MB	llvm function passes [2]
time: 0.129; rss: 1275MB	llvm function passes [47]
time: 0.013; rss: 1277MB	llvm module passes [5]
time: 0.074; rss: 1277MB	llvm function passes [43]
time: 0.000; rss: 1277MB	llvm module passes [43]
time: 0.082; rss: 1285MB	llvm function passes [45]
time: 0.120; rss: 1286MB	llvm function passes [44]
time: 0.016; rss: 1286MB	llvm function passes [35]
time: 0.128; rss: 1294MB	llvm function passes [7]
time: 0.038; rss: 1294MB	codegen passes [43]
time: 0.032; rss: 1296MB	llvm module passes [45]
time: 0.108; rss: 1300MB	codegen passes [1]
time: 0.069; rss: 1300MB	llvm module passes [2]
time: 0.003; rss: 1300MB	llvm function passes [1]
time: 0.072; rss: 1300MB	llvm module passes [47]
time: 0.039; rss: 1300MB	llvm module passes [35]
time: 0.056; rss: 1300MB	llvm module passes [44]
time: 0.053; rss: 1305MB	llvm function passes [43]
time: 0.150; rss: 1307MB	llvm function passes [4]
time: 0.084; rss: 1307MB	llvm function passes [36]
time: 0.012; rss: 1307MB	llvm module passes [43]
time: 0.122; rss: 1306MB	llvm function passes [41]
time: 0.020; rss: 1308MB	llvm module passes [36]
time: 0.136; rss: 1308MB	llvm function passes [39]
time: 0.131; rss: 1316MB	llvm function passes [38]
time: 0.028; rss: 1321MB	llvm module passes [41]
time: 0.285; rss: 1322MB	llvm function passes [46]
time: 0.095; rss: 1322MB	llvm module passes [1]
time: 0.027; rss: 1322MB	llvm module passes [38]
time: 0.040; rss: 1322MB	llvm module passes [39]
time: 0.146; rss: 1333MB	llvm module passes [7]
time: 0.157; rss: 1375MB	llvm function passes [37]
time: 0.364; rss: 1375MB	llvm function passes [49]
time: 0.019; rss: 1373MB	llvm module passes [37]
time: 0.258; rss: 1376MB	llvm function passes [42]
time: 0.006; rss: 1376MB	llvm function passes [27]
time: 0.009; rss: 1380MB	llvm function passes [32]
time: 0.000; rss: 1380MB	llvm module passes [32]
time: 0.000; rss: 1380MB	codegen passes [29]
time: 0.014; rss: 1380MB	llvm module passes [27]
time: 0.101; rss: 1380MB	llvm function passes [25]
time: 0.009; rss: 1384MB	codegen passes [32]
time: 0.183; rss: 1385MB	llvm module passes [4]
time: 0.301; rss: 1387MB	llvm function passes [40]
time: 0.336; rss: 1385MB	llvm function passes [9]
time: 0.085; rss: 1392MB	llvm module passes [42]
time: 0.065; rss: 1396MB	llvm module passes [40]
time: 0.106; rss: 1402MB	llvm function passes [21]
time: 0.310; rss: 1404MB	llvm function passes [34]
time: 0.225; rss: 1403MB	llvm module passes [46]
time: 0.028; rss: 1407MB	llvm module passes [21]
time: 0.183; rss: 1408MB	llvm module passes [49]
time: 0.306; rss: 1408MB	llvm function passes [31]
time: 0.264; rss: 1401MB	codegen passes [1]
time: 0.075; rss: 1394MB	llvm module passes [34]
time: 0.191; rss: 1396MB	llvm module passes [25]
time: 0.376; rss: 1409MB	llvm function passes [23]
time: 0.073; rss: 1409MB	llvm module passes [31]
time: 0.375; rss: 1396MB	llvm function passes [24]
time: 0.378; rss: 1385MB	codegen passes [35]
time: 0.068; rss: 1392MB	llvm module passes [23]
time: 0.658; rss: 1398MB	llvm function passes [11]
time: 0.210; rss: 1402MB	llvm function passes [30]
time: 0.516; rss: 1421MB	llvm function passes [28]
time: 0.234; rss: 1406MB	codegen passes [27]
time: 0.200; rss: 1410MB	llvm module passes [24]
time: 0.809; rss: 1409MB	codegen passes [6]
time: 0.138; rss: 1409MB	llvm module passes [30]
time: 0.411; rss: 1409MB	llvm module passes [9]
time: 0.592; rss: 1415MB	llvm function passes [26]
time: 0.139; rss: 1426MB	llvm module passes [26]
time: 0.323; rss: 1421MB	llvm module passes [28]
time: 0.896; rss: 1452MB	codegen passes [3]
time: 0.644; rss: 1448MB	codegen passes [21]
time: 1.273; rss: 1457MB	codegen passes [10]
time: 1.039; rss: 1421MB	llvm module passes [11]
time: 1.311; rss: 1431MB	codegen passes [36]
time: 1.360; rss: 1422MB	codegen passes [41]
time: 1.394; rss: 1417MB	codegen passes [48]
time: 1.524; rss: 1413MB	codegen passes [0]
time: 1.872; rss: 1464MB	codegen passes [43]
time: 1.951; rss: 1475MB	codegen passes [8]
time: 1.849; rss: 1497MB	codegen passes [4]
time: 1.703; rss: 1486MB	codegen passes [23]
time: 2.256; rss: 1486MB	codegen passes [5]
time: 1.904; rss: 1489MB	codegen passes [25]
time: 1.738; rss: 1486MB	codegen passes [24]
time: 2.514; rss: 1481MB	codegen passes [44]
time: 2.463; rss: 1473MB	codegen passes [37]
time: 2.415; rss: 1470MB	codegen passes [38]
time: 2.647; rss: 1493MB	codegen passes [39]
time: 2.784; rss: 1507MB	codegen passes [47]
time: 3.016; rss: 1553MB	codegen passes [45]
time: 3.649; rss: 1700MB	codegen passes [7]
time: 3.567; rss: 1694MB	codegen passes [28]
time: 3.680; rss: 1619MB	codegen passes [42]
time: 4.392; rss: 1615MB	codegen passes [2]
time: 3.730; rss: 1572MB	codegen passes [40]
time: 4.023; rss: 1607MB	codegen passes [9]
time: 4.134; rss: 1576MB	codegen passes [26]
time: 4.418; rss: 1543MB	codegen passes [34]
time: 4.701; rss: 1511MB	codegen passes [31]
time: 4.921; rss: 1500MB	codegen passes [46]
time: 5.299; rss: 1457MB	codegen passes [30]
time: 5.101; rss: 1389MB	codegen passes [49]
time: 4.807; rss: 1326MB	codegen passes [11]
time: 7.845; rss: 1326MB	LLVM passes
time: 0.000; rss: 1326MB	serialize work products
time: 1.062; rss: 294MB	linking
done
