commit 82801b552ee8a683c40eb9fce5b892e649794648
Merge: 86896ba 521b2ea
Author: bors <bors@rust-lang.org>
Date:   Tue Dec 27 18:25:22 2016 +0000

    Auto merge of #38600 - arielb1:dead-drop, r=eddyb
    
    clear discriminant drop flag at the bottom of a drop ladder
    
    Fixes #38437.
    
    Beta-nominating because serious I-wrong.
    
    r? @eddyb
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.043; rss: 87MB	expansion
time: 0.000; rss: 87MB	maybe building test harness
time: 0.001; rss: 87MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 87MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 87MB	complete gated feature checking
time: 0.003; rss: 87MB	early lint checks
time: 0.001; rss: 87MB	AST validation
time: 0.010; rss: 89MB	name resolution
time: 0.008; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 94MB	region resolution
time: 0.001; rss: 94MB	loop checking
time: 0.000; rss: 94MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.015; rss: 103MB	coherence checking
time: 0.022; rss: 104MB	wf checking
time: 0.126; rss: 112MB	item-types checking
time: 0.306; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.040; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.005; rss: 150MB	match checking
time: 0.004; rss: 151MB	liveness checking
time: 0.017; rss: 151MB	rvalue checking
time: 0.044; rss: 172MB	MIR dump
  time: 0.006; rss: 173MB	SimplifyCfg
  time: 0.010; rss: 173MB	QualifyAndPromoteConstants
  time: 0.013; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.003; rss: 173MB	SimplifyCfg
time: 0.033; rss: 173MB	MIR cleanup and validation
time: 0.047; rss: 173MB	borrow checking
time: 0.001; rss: 173MB	reachability checking
time: 0.005; rss: 174MB	death checking
time: 0.000; rss: 174MB	unused lib feature checking
time: 0.030; rss: 174MB	lint checking
time: 0.000; rss: 174MB	resolving dependency formats
  time: 0.000; rss: 174MB	NoLandingPads
  time: 0.003; rss: 174MB	SimplifyCfg
  time: 0.008; rss: 174MB	EraseRegions
  time: 0.001; rss: 174MB	AddCallGuards
  time: 0.017; rss: 176MB	ElaborateDrops
  time: 0.000; rss: 176MB	NoLandingPads
  time: 0.004; rss: 176MB	SimplifyCfg
  time: 0.003; rss: 176MB	InstCombine
  time: 0.002; rss: 176MB	Deaggregator
  time: 0.000; rss: 176MB	CopyPropagation
  time: 0.004; rss: 176MB	SimplifyLocals
  time: 0.001; rss: 176MB	AddCallGuards
  time: 0.000; rss: 176MB	PreTrans
time: 0.046; rss: 176MB	MIR optimisations
  time: 0.010; rss: 178MB	write metadata
  time: 0.087; rss: 183MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.013; rss: 312MB	internalize symbols
time: 1.667; rss: 312MB	translation
time: 0.000; rss: 312MB	assert dep graph
time: 0.108; rss: 320MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 255MB	llvm function passes [2]
time: 0.000; rss: 257MB	llvm module passes [2]
time: 0.002; rss: 257MB	llvm function passes [1]
time: 0.000; rss: 257MB	llvm module passes [1]
time: 0.003; rss: 257MB	llvm function passes [0]
time: 0.001; rss: 257MB	llvm module passes [0]
time: 0.001; rss: 261MB	llvm function passes [20]
time: 0.000; rss: 261MB	llvm module passes [20]
time: 0.006; rss: 265MB	codegen passes [2]
time: 0.008; rss: 265MB	llvm function passes [2]
time: 0.016; rss: 265MB	llvm function passes [5]
time: 0.003; rss: 265MB	llvm module passes [2]
time: 0.020; rss: 265MB	llvm function passes [4]
time: 0.015; rss: 267MB	codegen passes [20]
time: 0.022; rss: 267MB	codegen passes [1]
time: 0.002; rss: 267MB	llvm function passes [20]
time: 0.001; rss: 267MB	llvm module passes [20]
time: 0.008; rss: 267MB	llvm function passes [18]
time: 0.005; rss: 272MB	llvm function passes [17]
time: 0.002; rss: 272MB	llvm module passes [17]
time: 0.041; rss: 280MB	llvm function passes [3]
time: 0.016; rss: 280MB	llvm function passes [1]
time: 0.004; rss: 280MB	llvm function passes [15]
time: 0.038; rss: 280MB	llvm function passes [6]
time: 0.008; rss: 282MB	llvm function passes [14]
time: 0.007; rss: 282MB	llvm module passes [1]
time: 0.009; rss: 282MB	llvm module passes [14]
time: 0.014; rss: 282MB	llvm module passes [15]
time: 0.029; rss: 284MB	llvm module passes [18]
time: 0.024; rss: 284MB	llvm function passes [16]
time: 0.007; rss: 284MB	llvm module passes [16]
time: 0.003; rss: 293MB	llvm function passes [12]
time: 0.001; rss: 293MB	llvm module passes [12]
time: 0.057; rss: 295MB	codegen passes [20]
time: 0.002; rss: 295MB	llvm function passes [20]
time: 0.001; rss: 295MB	llvm module passes [20]
time: 0.000; rss: 298MB	codegen passes [7]
time: 0.112; rss: 312MB	codegen passes [0]
time: 0.059; rss: 310MB	llvm function passes [11]
time: 0.081; rss: 312MB	llvm function passes [13]
time: 0.070; rss: 319MB	codegen passes [12]
time: 0.066; rss: 323MB	codegen passes [20]
time: 0.099; rss: 327MB	codegen passes [15]
time: 0.030; rss: 327MB	llvm module passes [11]
time: 0.096; rss: 330MB	llvm function passes [10]
time: 0.126; rss: 330MB	codegen passes [17]
time: 0.020; rss: 328MB	llvm module passes [10]
time: 0.166; rss: 335MB	codegen passes [2]
time: 0.217; rss: 351MB	llvm module passes [4]
time: 0.145; rss: 349MB	codegen passes [18]
time: 0.165; rss: 338MB	codegen passes [14]
time: 0.280; rss: 348MB	llvm module passes [5]
time: 0.397; rss: 369MB	llvm module passes [6]
time: 0.312; rss: 373MB	codegen passes [1]
time: 0.428; rss: 379MB	llvm module passes [13]
time: 0.542; rss: 377MB	llvm module passes [3]
time: 0.445; rss: 382MB	codegen passes [16]
time: 0.386; rss: 388MB	codegen passes [4]
time: 0.392; rss: 374MB	codegen passes [5]
time: 0.503; rss: 365MB	codegen passes [11]
time: 0.678; rss: 373MB	codegen passes [10]
time: 0.738; rss: 411MB	codegen passes [6]
time: 0.704; rss: 379MB	codegen passes [3]
time: 0.751; rss: 357MB	codegen passes [13]
time: 1.434; rss: 355MB	LLVM passes
time: 0.000; rss: 355MB	serialize work products
time: 0.231; rss: 172MB	linking
done
