commit 3dcb28842048ad51394f05473d1f9fb9ed8d143a
Merge: ff591b6 9cfb8b7
Author: bors <bors@rust-lang.org>
Date:   Mon Jan 16 05:17:39 2017 +0000

    Auto merge of #38806 - comex:lint-attr-fix, r=nrc
    
    Fix lint attributes on non-item nodes.
    
    Currently, late lint checking uses two HIR visitors: LateContext and
    IdVisitor.  IdVisitor only overrides visit_id, and for each node searches
    for builtin lints previously added to the session; LateContext overrides
    a number of methods, and runs late lints.  When LateContext encounters an
    item, it first has IdVisitor walk everything in it except nested items
    (OnlyBodies), then recurses into it itself - i.e. there are two separate
    walks.
    
    Aside from apparently being unnecessary, this separation prevents lint
    attributes (allow/deny/warn) on non-item HIR nodes from working
    properly.  Test case:
    
    ```rust
    // generates warning without this change
    fn main() { #[allow(unreachable_code)] loop { break; break; } }
    ```
    
    LateContext contains logic to merge attributes seen into the current lint
    settings while walking (with_lint_attrs), but IdVisitor does not.  So
    such attributes will affect late lints (because they are called from
    LateContext), and if the node contains any items within it, they will
    affect builtin lints within those items (because that IdVisitor is run
    while LateContext is within the attributed node), but otherwise the
    attributes will be ignored for builtin lints.
    
    This change simply removes IdVisitor and moves its visit_id into
    LateContext itself.  Hopefully this doesn't break anything...
    
    Also added walk calls to visit_lifetime and visit_lifetime_def
    respectively, so visit_lifetime_def will recurse into the lifetime and
    visit_lifetime will recurse into the name.  In principle this could
    confuse lint plugins.  This is "necessary" because walk_lifetime calls
    visit_id on the lifetime; of course, an alternative would be directly
    calling visit_id (which would require manually iterating over the
    lifetimes in visit_lifetime_def), but that seems less clean.
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./issue-32278-big-array-of-strings
cargo rustc  -- -Ztime-passes -Zinput-stats
makefile:4: recipe for target 'all' failed
done
