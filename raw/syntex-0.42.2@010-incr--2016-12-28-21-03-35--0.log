commit 4ecc85beb339aa8089d936e450b0d800bdf580ae
Merge: 02b22ec ee0ea95
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 20:19:39 2016 +0000

    Auto merge of #38449 - eddyb:lazy-10, r=nikomatsakis
    
    [10/n] Split constants and functions' arguments into disjoint bodies.
    
    _This is part of a series ([prev](https://github.com/rust-lang/rust/pull/38053) | [next]()) of patches designed to rework rustc into an out-of-order on-demand pipeline model for both better feature support (e.g. [MIR-based](https://github.com/solson/miri) early constant evaluation) and incremental execution of compiler passes (e.g. type-checking), with beneficial consequences to IDE support as well.
    If any motivation is unclear, please ask for additional PR description clarifications or code comments._
    
    <hr>
    
    Finishes the signature-body split started in #37918, namely:
    * `trait` items are separated just like `impl` items were, for uniformity, closing #37712
    * `static`s, `const`s (including associated ones), `enum` discriminants and array lengths get bodies
      * even the count in "repeat expressions", i.e. `n` in `[x; n]`, which fixes #24414
    * arguments' patterns are moved to the bodies, with the types staying in `FnDecl`
      * `&self` now desugars to `self: &Self` instead of `self: &_` (similarly for other `self` forms)
      * `astconv`'s and metadata's (for rustdoc) informative uses are explicitly ignored for the purposes of the dep graph. this could be fixed in the future by hashing the exact information being extracted about the arguments as opposed to generating a dependency on *the whole body*
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.054; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 198MB	coherence checking
time: 0.087; rss: 200MB	wf checking
time: 0.196; rss: 208MB	item-types checking
time: 3.587; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.215; rss: 277MB	const checking
time: 0.057; rss: 278MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.047; rss: 290MB	liveness checking
time: 0.171; rss: 293MB	rvalue checking
time: 0.365; rss: 482MB	MIR dump
  time: 0.056; rss: 484MB	SimplifyCfg
  time: 0.075; rss: 484MB	QualifyAndPromoteConstants
  time: 0.119; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.288; rss: 500MB	MIR cleanup and validation
time: 0.471; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.003; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.063; rss: 510MB	EraseRegions
  time: 0.011; rss: 510MB	AddCallGuards
  time: 0.269; rss: 529MB	ElaborateDrops
  time: 0.003; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 529MB	InstCombine
  time: 0.013; rss: 529MB	Deaggregator
  time: 0.003; rss: 529MB	CopyPropagation
  time: 0.035; rss: 529MB	SimplifyLocals
  time: 0.010; rss: 529MB	AddCallGuards
  time: 0.003; rss: 529MB	PreTrans
time: 0.522; rss: 529MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.398; rss: 550MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.715; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.439; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1202MB	llvm function passes [2]
time: 0.000; rss: 1204MB	llvm module passes [2]
time: 0.001; rss: 1208MB	llvm function passes [1]
time: 0.001; rss: 1208MB	llvm function passes [0]
time: 0.000; rss: 1208MB	llvm module passes [0]
time: 0.000; rss: 1208MB	llvm module passes [1]
time: 0.001; rss: 1208MB	llvm function passes [5]
time: 0.000; rss: 1208MB	llvm module passes [5]
time: 0.004; rss: 1210MB	llvm function passes [3]
time: 0.001; rss: 1216MB	llvm function passes [9]
time: 0.000; rss: 1216MB	llvm module passes [9]
time: 0.004; rss: 1216MB	llvm module passes [3]
time: 0.012; rss: 1216MB	llvm function passes [6]
time: 0.008; rss: 1216MB	codegen passes [2]
time: 0.006; rss: 1218MB	llvm module passes [6]
time: 0.020; rss: 1222MB	llvm function passes [4]
time: 0.016; rss: 1222MB	codegen passes [0]
time: 0.009; rss: 1231MB	llvm module passes [4]
time: 0.026; rss: 1231MB	codegen passes [1]
time: 0.024; rss: 1231MB	llvm function passes [2]
time: 0.031; rss: 1234MB	codegen passes [5]
time: 0.014; rss: 1238MB	llvm function passes [1]
time: 0.040; rss: 1238MB	codegen passes [9]
time: 0.000; rss: 1238MB	llvm function passes [9]
time: 0.000; rss: 1238MB	llvm module passes [9]
time: 0.027; rss: 1238MB	llvm function passes [0]
time: 0.001; rss: 1238MB	codegen passes [9]
time: 0.015; rss: 1238MB	llvm module passes [2]
time: 0.008; rss: 1238MB	llvm module passes [1]
time: 0.003; rss: 1238MB	llvm function passes [9]
time: 0.001; rss: 1238MB	llvm module passes [9]
time: 0.008; rss: 1240MB	llvm module passes [0]
time: 0.000; rss: 1259MB	llvm function passes [44]
time: 0.058; rss: 1260MB	llvm function passes [12]
time: 0.016; rss: 1263MB	llvm module passes [44]
time: 0.044; rss: 1267MB	llvm function passes [13]
time: 0.009; rss: 1271MB	codegen passes [44]
time: 0.000; rss: 1271MB	llvm function passes [44]
time: 0.000; rss: 1271MB	llvm module passes [44]
time: 0.001; rss: 1271MB	codegen passes [44]
time: 0.021; rss: 1273MB	llvm module passes [12]
time: 0.015; rss: 1275MB	llvm module passes [13]
time: 0.047; rss: 1277MB	llvm function passes [41]
time: 0.000; rss: 1277MB	llvm module passes [41]
time: 0.094; rss: 1282MB	llvm function passes [11]
time: 0.128; rss: 1282MB	llvm function passes [7]
time: 0.126; rss: 1281MB	codegen passes [3]
time: 0.065; rss: 1281MB	llvm function passes [43]
time: 0.000; rss: 1281MB	llvm module passes [43]
time: 0.061; rss: 1290MB	codegen passes [9]
time: 0.051; rss: 1290MB	llvm function passes [46]
time: 0.044; rss: 1299MB	codegen passes [41]
time: 0.033; rss: 1301MB	codegen passes [43]
time: 0.046; rss: 1301MB	llvm module passes [11]
time: 0.019; rss: 1306MB	llvm function passes [41]
time: 0.004; rss: 1306MB	llvm module passes [41]
time: 0.063; rss: 1306MB	llvm module passes [7]
time: 0.054; rss: 1313MB	llvm module passes [46]
time: 0.221; rss: 1356MB	llvm function passes [8]
time: 0.213; rss: 1356MB	llvm function passes [10]
time: 0.130; rss: 1356MB	llvm function passes [44]
time: 0.169; rss: 1356MB	llvm function passes [42]
time: 0.146; rss: 1356MB	llvm function passes [45]
time: 0.021; rss: 1356MB	llvm module passes [44]
time: 0.095; rss: 1356MB	llvm function passes [35]
time: 0.032; rss: 1364MB	llvm module passes [45]
time: 0.123; rss: 1366MB	llvm function passes [34]
time: 0.033; rss: 1366MB	llvm module passes [35]
time: 0.069; rss: 1370MB	llvm module passes [42]
time: 0.135; rss: 1370MB	llvm function passes [37]
time: 0.105; rss: 1373MB	llvm function passes [39]
time: 0.174; rss: 1373MB	llvm function passes [48]
time: 0.001; rss: 1373MB	llvm module passes [39]
time: 0.040; rss: 1373MB	llvm module passes [34]
time: 0.012; rss: 1373MB	llvm module passes [37]
time: 0.135; rss: 1377MB	llvm function passes [36]
time: 0.235; rss: 1384MB	llvm function passes [47]
time: 0.032; rss: 1384MB	llvm module passes [48]
time: 0.136; rss: 1384MB	llvm module passes [8]
time: 0.019; rss: 1388MB	llvm module passes [36]
time: 0.031; rss: 1399MB	llvm function passes [28]
time: 0.000; rss: 1399MB	llvm module passes [28]
time: 0.114; rss: 1399MB	llvm function passes [38]
time: 0.062; rss: 1399MB	codegen passes [39]
time: 0.012; rss: 1402MB	llvm module passes [38]
time: 0.166; rss: 1402MB	llvm module passes [10]
time: 0.064; rss: 1411MB	llvm module passes [47]
time: 0.060; rss: 1419MB	llvm function passes [26]
time: 0.064; rss: 1419MB	codegen passes [22]
time: 0.046; rss: 1419MB	codegen passes [28]
time: 0.312; rss: 1423MB	llvm function passes [49]
time: 0.036; rss: 1429MB	llvm module passes [26]
time: 0.160; rss: 1430MB	llvm function passes [32]
time: 0.066; rss: 1426MB	llvm module passes [49]
time: 0.363; rss: 1428MB	llvm function passes [43]
time: 0.101; rss: 1421MB	llvm module passes [32]
time: 0.206; rss: 1419MB	llvm function passes [27]
time: 0.241; rss: 1419MB	llvm function passes [33]
time: 0.019; rss: 1417MB	llvm module passes [27]
time: 0.020; rss: 1419MB	llvm module passes [33]
time: 0.414; rss: 1413MB	llvm function passes [40]
time: 0.539; rss: 1421MB	llvm function passes [3]
time: 0.524; rss: 1422MB	llvm function passes [9]
time: 0.083; rss: 1426MB	llvm module passes [40]
time: 0.792; rss: 1426MB	llvm function passes [5]
time: 0.353; rss: 1428MB	codegen passes [26]
time: 0.493; rss: 1428MB	llvm function passes [31]
time: 0.511; rss: 1429MB	codegen passes [41]
time: 0.171; rss: 1429MB	llvm module passes [9]
time: 0.785; rss: 1426MB	codegen passes [6]
time: 0.528; rss: 1441MB	llvm function passes [30]
time: 0.631; rss: 1436MB	llvm function passes [25]
time: 0.303; rss: 1430MB	llvm module passes [3]
time: 0.143; rss: 1443MB	llvm module passes [25]
time: 0.621; rss: 1458MB	llvm module passes [43]
time: 0.263; rss: 1459MB	llvm module passes [30]
time: 0.971; rss: 1460MB	codegen passes [4]
time: 0.494; rss: 1456MB	llvm module passes [5]
time: 0.594; rss: 1459MB	llvm module passes [31]
time: 1.368; rss: 1492MB	codegen passes [1]
time: 1.101; rss: 1480MB	codegen passes [34]
time: 1.182; rss: 1482MB	codegen passes [0]
time: 1.128; rss: 1488MB	codegen passes [35]
time: 1.611; rss: 1481MB	codegen passes [2]
time: 1.514; rss: 1484MB	codegen passes [46]
time: 1.491; rss: 1475MB	codegen passes [38]
time: 1.571; rss: 1482MB	codegen passes [12]
time: 1.344; rss: 1470MB	codegen passes [27]
time: 1.625; rss: 1460MB	codegen passes [37]
time: 2.265; rss: 1493MB	codegen passes [13]
time: 2.120; rss: 1508MB	codegen passes [33]
time: 2.309; rss: 1518MB	codegen passes [36]
time: 2.518; rss: 1512MB	codegen passes [44]
time: 2.009; rss: 1507MB	codegen passes [32]
time: 2.695; rss: 1558MB	codegen passes [48]
time: 2.357; rss: 1557MB	codegen passes [9]
time: 3.214; rss: 1581MB	codegen passes [45]
time: 3.536; rss: 1649MB	codegen passes [11]
time: 3.569; rss: 1672MB	codegen passes [42]
time: 3.183; rss: 1654MB	codegen passes [30]
time: 3.739; rss: 1639MB	codegen passes [47]
time: 3.972; rss: 1658MB	codegen passes [7]
time: 3.581; rss: 1646MB	codegen passes [25]
time: 3.858; rss: 1589MB	codegen passes [49]
time: 3.873; rss: 1546MB	codegen passes [3]
time: 4.151; rss: 1562MB	codegen passes [40]
time: 5.001; rss: 1569MB	codegen passes [10]
time: 4.220; rss: 1511MB	codegen passes [31]
time: 4.538; rss: 1449MB	codegen passes [8]
time: 4.910; rss: 1406MB	codegen passes [43]
time: 4.970; rss: 1333MB	codegen passes [5]
time: 7.480; rss: 1331MB	LLVM passes
time: 0.000; rss: 1331MB	serialize work products
time: 1.045; rss: 285MB	linking
done
