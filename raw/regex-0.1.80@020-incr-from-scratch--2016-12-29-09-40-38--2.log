commit 3f957ebeff8932637002574c9eae75a702b202b7
Merge: e571f2d d44bcbf
Author: bors <bors@rust-lang.org>
Date:   Thu Dec 29 13:48:50 2016 +0000

    Auto merge of #38627 - rkruppe:ninja-build, r=alexcrichton
    
    Accept ninja-build binary in place of ninja
    
    See comment in the diff for rationale.
    
    r? @alexcrichton
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.043; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 93MB	lowering ast -> hir
time: 0.001; rss: 95MB	indexing hir
time: 0.001; rss: 95MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.123; rss: 112MB	item-types checking
time: 0.297; rss: 120MB	item-bodies checking
time: 0.000; rss: 120MB	drop-impl checking
time: 0.039; rss: 150MB	const checking
time: 0.007; rss: 150MB	privacy checking
time: 0.002; rss: 150MB	intrinsic checking
time: 0.001; rss: 150MB	effect checking
time: 0.006; rss: 150MB	match checking
time: 0.004; rss: 150MB	liveness checking
time: 0.016; rss: 150MB	rvalue checking
time: 0.044; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.010; rss: 172MB	QualifyAndPromoteConstants
  time: 0.012; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.031; rss: 172MB	MIR cleanup and validation
time: 0.046; rss: 172MB	borrow checking
time: 0.001; rss: 172MB	reachability checking
time: 0.004; rss: 173MB	death checking
time: 0.000; rss: 173MB	unused lib feature checking
time: 0.029; rss: 173MB	lint checking
time: 0.000; rss: 173MB	resolving dependency formats
  time: 0.000; rss: 173MB	NoLandingPads
  time: 0.003; rss: 173MB	SimplifyCfg
  time: 0.008; rss: 173MB	EraseRegions
  time: 0.001; rss: 173MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.044; rss: 175MB	MIR optimisations
  time: 0.009; rss: 178MB	write metadata
  time: 0.087; rss: 183MB	translation item collection
  time: 0.014; rss: 185MB	codegen unit partitioning
  time: 0.013; rss: 311MB	internalize symbols
time: 1.688; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.124; rss: 319MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 252MB	llvm function passes [1]
time: 0.000; rss: 252MB	llvm module passes [1]
time: 0.002; rss: 256MB	llvm function passes [0]
time: 0.000; rss: 256MB	llvm module passes [0]
time: 0.001; rss: 261MB	llvm function passes [5]
time: 0.003; rss: 263MB	llvm function passes [2]
time: 0.001; rss: 263MB	llvm module passes [5]
time: 0.001; rss: 265MB	llvm module passes [2]
time: 0.007; rss: 269MB	codegen passes [1]
time: 0.002; rss: 271MB	llvm function passes [13]
time: 0.001; rss: 271MB	llvm module passes [13]
time: 0.008; rss: 273MB	llvm function passes [1]
time: 0.018; rss: 273MB	llvm function passes [6]
time: 0.019; rss: 273MB	llvm function passes [3]
time: 0.015; rss: 273MB	codegen passes [5]
time: 0.003; rss: 273MB	llvm module passes [1]
time: 0.004; rss: 275MB	llvm function passes [5]
time: 0.002; rss: 275MB	llvm module passes [5]
time: 0.033; rss: 284MB	llvm function passes [7]
time: 0.002; rss: 290MB	llvm function passes [20]
time: 0.001; rss: 290MB	llvm module passes [20]
time: 0.047; rss: 296MB	llvm function passes [4]
time: 0.039; rss: 296MB	codegen passes [2]
time: 0.003; rss: 296MB	llvm function passes [2]
time: 0.001; rss: 298MB	llvm module passes [2]
time: 0.048; rss: 298MB	llvm function passes [8]
time: 0.000; rss: 300MB	codegen passes [11]
time: 0.004; rss: 309MB	llvm function passes [16]
time: 0.002; rss: 309MB	llvm module passes [16]
time: 0.044; rss: 316MB	llvm module passes [8]
time: 0.043; rss: 316MB	codegen passes [2]
time: 0.077; rss: 322MB	llvm function passes [15]
time: 0.070; rss: 322MB	codegen passes [5]
time: 0.105; rss: 321MB	llvm module passes [6]
time: 0.105; rss: 318MB	llvm module passes [3]
time: 0.027; rss: 317MB	llvm module passes [15]
time: 0.137; rss: 321MB	codegen passes [0]
time: 0.106; rss: 322MB	llvm function passes [19]
time: 0.136; rss: 324MB	llvm function passes [14]
time: 0.007; rss: 329MB	llvm module passes [14]
time: 0.136; rss: 323MB	codegen passes [1]
time: 0.150; rss: 321MB	llvm function passes [18]
time: 0.138; rss: 321MB	llvm function passes [17]
time: 0.036; rss: 329MB	llvm module passes [19]
time: 0.013; rss: 329MB	llvm module passes [18]
time: 0.143; rss: 325MB	llvm function passes [12]
time: 0.125; rss: 324MB	codegen passes [13]
time: 0.117; rss: 327MB	codegen passes [20]
time: 0.022; rss: 331MB	llvm module passes [12]
time: 0.131; rss: 340MB	codegen passes [16]
time: 0.184; rss: 343MB	codegen passes [8]
time: 0.184; rss: 351MB	codegen passes [15]
time: 0.300; rss: 371MB	codegen passes [14]
time: 0.333; rss: 368MB	llvm module passes [17]
time: 0.485; rss: 366MB	llvm module passes [4]
time: 0.499; rss: 366MB	llvm module passes [7]
time: 0.428; rss: 381MB	codegen passes [6]
time: 0.463; rss: 359MB	codegen passes [3]
time: 0.443; rss: 369MB	codegen passes [18]
time: 0.479; rss: 363MB	codegen passes [19]
time: 0.732; rss: 378MB	codegen passes [12]
time: 0.581; rss: 393MB	codegen passes [7]
time: 0.767; rss: 371MB	codegen passes [17]
time: 0.813; rss: 349MB	codegen passes [4]
time: 1.462; rss: 345MB	LLVM passes
time: 0.000; rss: 345MB	serialize work products
time: 0.205; rss: 164MB	linking
done
