commit 469fd779ee24f8348acd438f471c8c3a5cef309a
Merge: 17f1fba a6fe6c9
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 09:42:46 2016 +0000

    Auto merge of #38616 - pnkfelix:refactor-mir-dataflow-remove-ctxt, r=arielb1
    
    Refactor mir::dataflow: remove Ctxt associated type from BitDenotation trait
    
    Refactor mir::dataflow: remove Ctxt associated type from BitDenotation trait
    
    I no longer remember why I needed this (or thought I did). The way
    that the `BitDenotation` is passed around in all existing use cases
    (and planned future ones), the thing that were in the `Ctxt` can just
    be part of `Self` instead.
    
    (I think ariel had been pushing me to do this back when I first put in
    this infrastructure; it took me a while to see how much of pain the
    `Ctxt` was causing.)
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.195; rss: 208MB	item-types checking
time: 3.572; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.212; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.048; rss: 283MB	match checking
time: 0.046; rss: 290MB	liveness checking
time: 0.171; rss: 292MB	rvalue checking
time: 0.361; rss: 481MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.074; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.286; rss: 500MB	MIR cleanup and validation
time: 0.469; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.175; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.271; rss: 531MB	ElaborateDrops
  time: 0.003; rss: 531MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.036; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.527; rss: 528MB	MIR optimisations
  time: 0.064; rss: 537MB	write metadata
  time: 0.399; rss: 551MB	translation item collection
  time: 0.072; rss: 553MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.871; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.447; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1197MB	llvm function passes [0]
time: 0.000; rss: 1197MB	llvm module passes [0]
time: 0.001; rss: 1207MB	llvm function passes [3]
time: 0.000; rss: 1209MB	llvm module passes [3]
time: 0.002; rss: 1212MB	llvm function passes [4]
time: 0.000; rss: 1212MB	llvm module passes [4]
time: 0.004; rss: 1212MB	llvm function passes [5]
time: 0.005; rss: 1214MB	llvm function passes [2]
time: 0.000; rss: 1214MB	llvm module passes [2]
time: 0.001; rss: 1218MB	llvm function passes [10]
time: 0.008; rss: 1218MB	codegen passes [0]
time: 0.011; rss: 1218MB	llvm function passes [6]
time: 0.011; rss: 1218MB	codegen passes [3]
time: 0.013; rss: 1218MB	llvm function passes [1]
time: 0.005; rss: 1218MB	llvm module passes [10]
time: 0.007; rss: 1222MB	llvm module passes [1]
time: 0.018; rss: 1228MB	llvm function passes [3]
time: 0.022; rss: 1231MB	llvm module passes [6]
time: 0.025; rss: 1231MB	llvm function passes [0]
time: 0.008; rss: 1233MB	llvm module passes [3]
time: 0.032; rss: 1233MB	codegen passes [2]
time: 0.042; rss: 1233MB	llvm module passes [5]
time: 0.015; rss: 1233MB	llvm module passes [0]
time: 0.051; rss: 1252MB	codegen passes [10]
time: 0.000; rss: 1252MB	llvm function passes [10]
time: 0.000; rss: 1252MB	llvm module passes [10]
time: 0.001; rss: 1254MB	codegen passes [10]
time: 0.022; rss: 1254MB	llvm function passes [8]
time: 0.003; rss: 1254MB	llvm function passes [10]
time: 0.056; rss: 1254MB	llvm function passes [12]
time: 0.001; rss: 1254MB	llvm module passes [10]
time: 0.068; rss: 1254MB	codegen passes [4]
time: 0.006; rss: 1254MB	llvm module passes [8]
time: 0.036; rss: 1254MB	llvm function passes [2]
time: 0.012; rss: 1256MB	llvm module passes [2]
time: 0.001; rss: 1260MB	llvm function passes [24]
time: 0.000; rss: 1260MB	llvm module passes [24]
time: 0.000; rss: 1277MB	llvm function passes [25]
time: 0.000; rss: 1276MB	llvm module passes [25]
time: 0.124; rss: 1276MB	llvm function passes [7]
time: 0.055; rss: 1276MB	llvm module passes [12]
time: 0.004; rss: 1276MB	codegen passes [25]
time: 0.031; rss: 1282MB	codegen passes [24]
time: 0.000; rss: 1286MB	llvm function passes [28]
time: 0.000; rss: 1286MB	llvm module passes [28]
time: 0.001; rss: 1286MB	codegen passes [28]
time: 0.040; rss: 1301MB	llvm function passes [26]
time: 0.000; rss: 1301MB	llvm module passes [26]
time: 0.112; rss: 1301MB	codegen passes [5]
time: 0.107; rss: 1303MB	llvm function passes [4]
time: 0.019; rss: 1310MB	codegen passes [26]
time: 0.062; rss: 1310MB	llvm function passes [25]
time: 0.113; rss: 1310MB	codegen passes [10]
time: 0.080; rss: 1316MB	llvm module passes [7]
time: 0.026; rss: 1318MB	llvm function passes [26]
time: 0.021; rss: 1318MB	llvm module passes [25]
time: 0.008; rss: 1320MB	llvm module passes [26]
time: 0.100; rss: 1324MB	llvm function passes [24]
time: 0.222; rss: 1327MB	llvm function passes [11]
time: 0.064; rss: 1327MB	llvm function passes [30]
time: 0.133; rss: 1326MB	llvm function passes [27]
time: 0.013; rss: 1345MB	llvm module passes [30]
time: 0.033; rss: 1370MB	llvm module passes [27]
time: 0.057; rss: 1370MB	llvm module passes [24]
time: 0.122; rss: 1371MB	llvm module passes [4]
time: 0.077; rss: 1375MB	llvm function passes [34]
time: 0.173; rss: 1377MB	llvm function passes [29]
time: 0.012; rss: 1377MB	llvm module passes [34]
time: 0.332; rss: 1383MB	llvm function passes [9]
time: 0.149; rss: 1383MB	llvm function passes [32]
time: 0.024; rss: 1383MB	llvm module passes [29]
time: 0.000; rss: 1387MB	llvm function passes [46]
time: 0.000; rss: 1387MB	llvm module passes [46]
time: 0.000; rss: 1387MB	codegen passes [45]
time: 0.023; rss: 1392MB	llvm module passes [32]
time: 0.132; rss: 1394MB	llvm function passes [35]
time: 0.309; rss: 1399MB	llvm function passes [14]
time: 0.019; rss: 1399MB	llvm module passes [35]
time: 0.055; rss: 1405MB	codegen passes [46]
time: 0.254; rss: 1408MB	llvm function passes [5]
time: 0.176; rss: 1403MB	llvm module passes [11]
time: 0.291; rss: 1405MB	llvm function passes [31]
time: 0.063; rss: 1407MB	llvm module passes [14]
time: 0.315; rss: 1407MB	llvm function passes [28]
time: 0.117; rss: 1405MB	llvm function passes [15]
time: 0.231; rss: 1415MB	llvm function passes [38]
time: 0.002; rss: 1415MB	llvm module passes [38]
time: 0.032; rss: 1414MB	llvm module passes [15]
time: 0.179; rss: 1416MB	llvm module passes [9]
time: 0.240; rss: 1418MB	llvm function passes [16]
time: 0.082; rss: 1420MB	llvm module passes [31]
time: 0.036; rss: 1420MB	codegen passes [38]
time: 0.311; rss: 1422MB	llvm function passes [33]
time: 0.089; rss: 1424MB	llvm module passes [28]
time: 0.315; rss: 1424MB	llvm function passes [36]
time: 0.225; rss: 1424MB	llvm function passes [17]
time: 0.510; rss: 1425MB	llvm function passes [13]
time: 0.273; rss: 1421MB	llvm function passes [37]
time: 0.086; rss: 1424MB	llvm module passes [16]
time: 0.452; rss: 1432MB	llvm function passes [10]
time: 0.085; rss: 1432MB	llvm module passes [17]
time: 0.089; rss: 1434MB	llvm module passes [36]
time: 0.231; rss: 1435MB	llvm module passes [5]
time: 0.078; rss: 1440MB	llvm module passes [37]
time: 0.289; rss: 1430MB	llvm function passes [44]
time: 0.265; rss: 1430MB	llvm function passes [40]
time: 0.041; rss: 1429MB	llvm module passes [10]
time: 0.146; rss: 1429MB	llvm module passes [33]
time: 0.033; rss: 1433MB	llvm module passes [44]
time: 0.375; rss: 1449MB	llvm function passes [41]
time: 0.180; rss: 1458MB	llvm module passes [40]
time: 0.137; rss: 1464MB	llvm module passes [41]
time: 0.826; rss: 1469MB	codegen passes [6]
time: 0.564; rss: 1474MB	llvm function passes [42]
time: 0.395; rss: 1478MB	codegen passes [15]
time: 0.213; rss: 1485MB	llvm module passes [42]
time: 0.626; rss: 1487MB	llvm module passes [13]
time: 0.385; rss: 1497MB	codegen passes [44]
time: 1.237; rss: 1496MB	codegen passes [1]
time: 0.758; rss: 1535MB	codegen passes [10]
time: 1.165; rss: 1487MB	codegen passes [26]
time: 1.513; rss: 1480MB	codegen passes [8]
time: 1.486; rss: 1497MB	codegen passes [30]
time: 1.454; rss: 1485MB	codegen passes [2]
time: 1.561; rss: 1482MB	codegen passes [0]
time: 1.384; rss: 1425MB	codegen passes [25]
time: 1.767; rss: 1418MB	codegen passes [3]
time: 1.820; rss: 1433MB	codegen passes [34]
time: 1.938; rss: 1459MB	codegen passes [35]
time: 1.837; rss: 1462MB	codegen passes [4]
time: 1.756; rss: 1483MB	codegen passes [41]
time: 2.090; rss: 1492MB	codegen passes [17]
time: 1.869; rss: 1512MB	codegen passes [40]
time: 2.431; rss: 1503MB	codegen passes [29]
time: 2.876; rss: 1566MB	codegen passes [32]
time: 2.982; rss: 1599MB	codegen passes [27]
time: 3.143; rss: 1611MB	codegen passes [5]
time: 3.422; rss: 1639MB	codegen passes [12]
time: 3.376; rss: 1649MB	codegen passes [14]
time: 3.660; rss: 1659MB	codegen passes [24]
time: 3.412; rss: 1638MB	codegen passes [16]
time: 3.905; rss: 1680MB	codegen passes [31]
time: 3.966; rss: 1688MB	codegen passes [7]
time: 4.194; rss: 1634MB	codegen passes [28]
time: 3.719; rss: 1589MB	codegen passes [42]
time: 4.335; rss: 1583MB	codegen passes [37]
time: 4.175; rss: 1534MB	codegen passes [36]
time: 4.968; rss: 1509MB	codegen passes [11]
time: 5.324; rss: 1520MB	codegen passes [9]
time: 5.151; rss: 1432MB	codegen passes [13]
time: 5.477; rss: 1349MB	codegen passes [33]
time: 7.479; rss: 1344MB	LLVM passes
time: 0.000; rss: 1344MB	serialize work products
time: 1.056; rss: 316MB	linking
done
