commit 75f5981d4500e52de767d61ec50a34b97be2a301
Merge: e7c788a e5c7782
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 01:20:18 2016 +0000

    Auto merge of #38695 - alexcrichton:debug-appveyor, r=brson
    
    appveyor: Attempt to debug flaky test runs
    
    This commit is an attempt to debug #38620 since we're unable to reproduce it
    locally. It follows the [advice] of those with AppVeyor to use the `handle.exe`
    tool to try to debug what processes have a handle to the file open.
    
    This won't be guaranteed to actually help us, but hopefully it'll diagnose
    something at some point?
    
    [advice]: http://help.appveyor.com/discussions/questions/2898
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.091; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.240; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.023; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.075; rss: 161MB	name resolution
time: 0.058; rss: 195MB	lowering ast -> hir
time: 0.009; rss: 188MB	indexing hir
time: 0.006; rss: 188MB	attribute checking
time: 0.002; rss: 150MB	language item collection
time: 0.011; rss: 150MB	lifetime resolution
time: 0.000; rss: 150MB	looking for entry point
time: 0.000; rss: 150MB	looking for plugin registrar
time: 0.050; rss: 169MB	region resolution
time: 0.007; rss: 169MB	loop checking
time: 0.002; rss: 169MB	static item recursion checking
time: 0.381; rss: 171MB	compute_incremental_hashes_map
time: 0.000; rss: 171MB	load_dep_graph
time: 0.008; rss: 171MB	stability index
time: 0.016; rss: 171MB	stability checking
time: 0.046; rss: 176MB	type collecting
time: 0.001; rss: 176MB	variance inference
time: 0.002; rss: 176MB	impl wf inference
time: 0.017; rss: 178MB	coherence checking
time: 0.083; rss: 180MB	wf checking
time: 0.189; rss: 184MB	item-types checking
time: 3.524; rss: 228MB	item-bodies checking
time: 0.000; rss: 228MB	drop-impl checking
time: 0.300; rss: 239MB	const checking
time: 0.054; rss: 239MB	privacy checking
time: 0.016; rss: 239MB	intrinsic checking
time: 0.013; rss: 240MB	effect checking
time: 0.046; rss: 240MB	match checking
time: 0.052; rss: 246MB	liveness checking
time: 0.172; rss: 247MB	rvalue checking
time: 0.559; rss: 419MB	MIR dump
  time: 0.059; rss: 425MB	SimplifyCfg
  time: 0.074; rss: 425MB	QualifyAndPromoteConstants
  time: 0.108; rss: 425MB	TypeckMir
  time: 0.004; rss: 425MB	SimplifyBranches
  time: 0.030; rss: 426MB	SimplifyCfg
time: 0.276; rss: 426MB	MIR cleanup and validation
time: 0.473; rss: 429MB	borrow checking
time: 0.024; rss: 429MB	reachability checking
time: 0.037; rss: 429MB	death checking
time: 0.000; rss: 429MB	unused lib feature checking
time: 0.173; rss: 429MB	lint checking
time: 0.000; rss: 429MB	resolving dependency formats
  time: 0.003; rss: 429MB	NoLandingPads
  time: 0.026; rss: 429MB	SimplifyCfg
  time: 0.080; rss: 436MB	EraseRegions
  time: 0.011; rss: 436MB	AddCallGuards
  time: 0.307; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.053; rss: 458MB	SimplifyCfg
  time: 0.029; rss: 458MB	InstCombine
  time: 0.012; rss: 458MB	Deaggregator
  time: 0.002; rss: 458MB	CopyPropagation
  time: 0.035; rss: 458MB	SimplifyLocals
  time: 0.010; rss: 458MB	AddCallGuards
  time: 0.002; rss: 458MB	PreTrans
time: 0.575; rss: 458MB	MIR optimisations
  time: 0.079; rss: 467MB	write metadata
  time: 0.411; rss: 479MB	translation item collection
  time: 0.070; rss: 487MB	codegen unit partitioning
  time: 0.054; rss: 742MB	internalize symbols
time: 5.141; rss: 742MB	translation
time: 0.000; rss: 742MB	assert dep graph
time: 0.000; rss: 742MB	serialize dep graph
  time: 0.532; rss: 427MB	llvm function passes [0]
  time: 0.307; rss: 434MB	llvm module passes [0]
  time: 10.549; rss: 424MB	codegen passes [0]
  time: 0.000; rss: 424MB	codegen passes [0]
time: 12.242; rss: 424MB	LLVM passes
time: 0.000; rss: 424MB	serialize work products
time: 0.347; rss: 116MB	linking
done
