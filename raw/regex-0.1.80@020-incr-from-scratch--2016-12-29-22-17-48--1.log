commit 75f5981d4500e52de767d61ec50a34b97be2a301
Merge: e7c788a e5c7782
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 01:20:18 2016 +0000

    Auto merge of #38695 - alexcrichton:debug-appveyor, r=brson
    
    appveyor: Attempt to debug flaky test runs
    
    This commit is an attempt to debug #38620 since we're unable to reproduce it
    locally. It follows the [advice] of those with AppVeyor to use the `handle.exe`
    tool to try to debug what processes have a handle to the file open.
    
    This won't be guaranteed to actually help us, but hopefully it'll diagnose
    something at some point?
    
    [advice]: http://help.appveyor.com/discussions/questions/2898
rustc: ./regex-0.1.80@020-incr-from-scratch
find . -name "*.rs" | xargs touch
RUSTFLAGS="-Z incremental=incr" cargo rustc  -- \
  -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.024; rss: 54MB	parsing
Lines of code:             10689
Pre-expansion node count:  55396
time: 0.000; rss: 54MB	recursion limit
time: 0.000; rss: 54MB	crate injection
time: 0.000; rss: 54MB	plugin loading
time: 0.000; rss: 54MB	plugin registration
time: 0.043; rss: 86MB	expansion
time: 0.000; rss: 86MB	maybe building test harness
time: 0.001; rss: 86MB	maybe creating a macro crate
Post-expansion node count: 86869
time: 0.000; rss: 86MB	checking for inline asm in case the target doesn't support it
time: 0.001; rss: 86MB	complete gated feature checking
time: 0.003; rss: 86MB	early lint checks
time: 0.001; rss: 86MB	AST validation
time: 0.010; rss: 88MB	name resolution
time: 0.008; rss: 92MB	lowering ast -> hir
time: 0.001; rss: 94MB	indexing hir
time: 0.001; rss: 94MB	attribute checking
time: 0.000; rss: 89MB	language item collection
time: 0.002; rss: 89MB	lifetime resolution
time: 0.000; rss: 89MB	looking for entry point
time: 0.000; rss: 89MB	looking for plugin registrar
time: 0.005; rss: 93MB	region resolution
time: 0.001; rss: 93MB	loop checking
time: 0.000; rss: 93MB	static item recursion checking
time: 0.034; rss: 93MB	compute_incremental_hashes_map
time: 0.000; rss: 93MB	load_dep_graph
time: 0.001; rss: 93MB	stability index
time: 0.002; rss: 93MB	stability checking
time: 0.011; rss: 97MB	type collecting
time: 0.001; rss: 97MB	variance inference
time: 0.001; rss: 97MB	impl wf inference
time: 0.014; rss: 102MB	coherence checking
time: 0.021; rss: 103MB	wf checking
time: 0.123; rss: 112MB	item-types checking
time: 0.299; rss: 120MB	item-bodies checking
time: 0.000; rss: 120MB	drop-impl checking
time: 0.039; rss: 149MB	const checking
time: 0.007; rss: 149MB	privacy checking
time: 0.002; rss: 149MB	intrinsic checking
time: 0.001; rss: 149MB	effect checking
time: 0.005; rss: 149MB	match checking
time: 0.004; rss: 150MB	liveness checking
time: 0.016; rss: 150MB	rvalue checking
time: 0.043; rss: 172MB	MIR dump
  time: 0.006; rss: 172MB	SimplifyCfg
  time: 0.009; rss: 172MB	QualifyAndPromoteConstants
  time: 0.012; rss: 172MB	TypeckMir
  time: 0.000; rss: 172MB	SimplifyBranches
  time: 0.003; rss: 172MB	SimplifyCfg
time: 0.031; rss: 172MB	MIR cleanup and validation
time: 0.047; rss: 172MB	borrow checking
time: 0.001; rss: 172MB	reachability checking
time: 0.004; rss: 172MB	death checking
time: 0.000; rss: 172MB	unused lib feature checking
time: 0.030; rss: 172MB	lint checking
time: 0.000; rss: 172MB	resolving dependency formats
  time: 0.000; rss: 172MB	NoLandingPads
  time: 0.003; rss: 172MB	SimplifyCfg
  time: 0.007; rss: 172MB	EraseRegions
  time: 0.001; rss: 172MB	AddCallGuards
  time: 0.017; rss: 175MB	ElaborateDrops
  time: 0.000; rss: 175MB	NoLandingPads
  time: 0.004; rss: 175MB	SimplifyCfg
  time: 0.003; rss: 175MB	InstCombine
  time: 0.002; rss: 175MB	Deaggregator
  time: 0.000; rss: 175MB	CopyPropagation
  time: 0.004; rss: 175MB	SimplifyLocals
  time: 0.001; rss: 175MB	AddCallGuards
  time: 0.000; rss: 175MB	PreTrans
time: 0.043; rss: 175MB	MIR optimisations
  time: 0.009; rss: 177MB	write metadata
  time: 0.086; rss: 185MB	translation item collection
  time: 0.015; rss: 185MB	codegen unit partitioning
  time: 0.013; rss: 311MB	internalize symbols
time: 1.906; rss: 311MB	translation
time: 0.000; rss: 311MB	assert dep graph
time: 0.122; rss: 319MB	serialize dep graph
incremental: re-using 0 out of 21 modules
time: 0.001; rss: 256MB	llvm function passes [7]
time: 0.002; rss: 256MB	llvm function passes [0]
time: 0.000; rss: 256MB	llvm module passes [0]
time: 0.002; rss: 258MB	llvm function passes [3]
time: 0.000; rss: 260MB	llvm module passes [3]
time: 0.002; rss: 264MB	llvm module passes [7]
time: 0.004; rss: 264MB	llvm function passes [2]
time: 0.004; rss: 267MB	llvm module passes [2]
time: 0.006; rss: 270MB	codegen passes [3]
time: 0.010; rss: 270MB	llvm function passes [8]
time: 0.002; rss: 272MB	llvm function passes [3]
time: 0.001; rss: 272MB	llvm module passes [3]
time: 0.003; rss: 272MB	llvm module passes [8]
time: 0.018; rss: 272MB	llvm function passes [5]
time: 0.020; rss: 272MB	llvm function passes [4]
time: 0.015; rss: 272MB	llvm function passes [10]
time: 0.003; rss: 272MB	llvm module passes [10]
time: 0.016; rss: 275MB	llvm function passes [20]
time: 0.032; rss: 275MB	llvm function passes [6]
time: 0.009; rss: 275MB	llvm module passes [20]
time: 0.030; rss: 275MB	codegen passes [7]
time: 0.044; rss: 275MB	llvm function passes [1]
time: 0.031; rss: 279MB	codegen passes [0]
time: 0.004; rss: 283MB	llvm function passes [0]
time: 0.002; rss: 287MB	llvm module passes [0]
time: 0.034; rss: 289MB	codegen passes [3]
time: 0.002; rss: 289MB	llvm function passes [3]
time: 0.001; rss: 289MB	llvm module passes [3]
time: 0.024; rss: 289MB	llvm function passes [7]
time: 0.025; rss: 295MB	llvm function passes [16]
time: 0.002; rss: 295MB	llvm module passes [16]
time: 0.009; rss: 298MB	llvm module passes [7]
time: 0.077; rss: 306MB	codegen passes [2]
time: 0.000; rss: 306MB	codegen passes [2]
time: 0.025; rss: 306MB	llvm function passes [17]
time: 0.035; rss: 309MB	codegen passes [3]
time: 0.060; rss: 311MB	llvm function passes [9]
time: 0.021; rss: 311MB	llvm module passes [17]
time: 0.047; rss: 311MB	llvm function passes [18]
time: 0.027; rss: 313MB	llvm function passes [14]
time: 0.001; rss: 313MB	llvm module passes [14]
time: 0.061; rss: 327MB	llvm function passes [19]
time: 0.044; rss: 330MB	llvm module passes [18]
time: 0.071; rss: 330MB	codegen passes [0]
time: 0.092; rss: 336MB	codegen passes [16]
time: 0.019; rss: 338MB	llvm module passes [19]
time: 0.078; rss: 350MB	codegen passes [14]
time: 0.159; rss: 347MB	codegen passes [8]
time: 0.191; rss: 346MB	llvm module passes [4]
time: 0.194; rss: 349MB	codegen passes [10]
time: 0.236; rss: 349MB	llvm module passes [5]
time: 0.149; rss: 352MB	codegen passes [17]
time: 0.375; rss: 376MB	llvm module passes [9]
time: 0.463; rss: 378MB	llvm module passes [6]
time: 0.368; rss: 374MB	codegen passes [20]
time: 0.552; rss: 382MB	llvm module passes [1]
time: 0.431; rss: 385MB	codegen passes [7]
time: 0.465; rss: 381MB	codegen passes [18]
time: 0.443; rss: 376MB	codegen passes [4]
time: 0.486; rss: 375MB	codegen passes [5]
time: 0.610; rss: 372MB	codegen passes [19]
time: 0.683; rss: 416MB	codegen passes [6]
time: 0.693; rss: 384MB	codegen passes [1]
time: 0.803; rss: 361MB	codegen passes [9]
time: 1.415; rss: 358MB	LLVM passes
time: 0.000; rss: 357MB	serialize work products
time: 0.207; rss: 172MB	linking
done
