commit 3db197aa9d343c7974b06a9b18ae5f78d5c64637
Merge: 6d5ec58 fbc3f11
Author: bors <bors@rust-lang.org>
Date:   Sun Dec 11 21:19:34 2016 +0000

    Auto merge of #38265 - bluss:mir-deaggregator-loop, r=nagisa
    
    Reinstate while loop in deaggregator pass
    
    A previous commit must have removed the `while let` loop here by
    mistake; for each basic block, it should find and deaggregate multiple
    statements in their index order, and the `curr` index tracks the
    progress through the block.
    
    This fixes both the case of deaggregating statements in separate
    basic blocks (preserving `curr` could prevent that) as well
    as multiple times in the same block (missing loop prevented that).
    
    The loop was lost in commit bda46c21fe30377b9587b584c64ffe99da6c14ce.
rustc: ./piston-image-0.10.3
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.046; rss: 52MB	parsing
Lines of code:             12000
Pre-expansion node count:  90152
time: 0.000; rss: 52MB	recursion limit
time: 0.000; rss: 52MB	crate injection
time: 0.000; rss: 52MB	plugin loading
time: 0.000; rss: 52MB	plugin registration
time: 0.089; rss: 93MB	expansion
time: 0.000; rss: 93MB	maybe building test harness
time: 0.001; rss: 93MB	maybe creating a macro crate
Post-expansion node count: 148881
time: 0.000; rss: 93MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 93MB	complete gated feature checking
time: 0.006; rss: 93MB	early lint checks
time: 0.001; rss: 93MB	AST validation
time: 0.021; rss: 97MB	name resolution
time: 0.032; rss: 106MB	lowering ast -> hir
time: 0.006; rss: 108MB	indexing hir
time: 0.002; rss: 108MB	attribute checking
time: 0.001; rss: 96MB	language item collection
time: 0.003; rss: 96MB	lifetime resolution
time: 0.000; rss: 96MB	looking for entry point
time: 0.000; rss: 96MB	looking for plugin registrar
time: 0.019; rss: 101MB	region resolution
time: 0.002; rss: 101MB	loop checking
time: 0.001; rss: 101MB	static item recursion checking
time: 0.059; rss: 101MB	compute_incremental_hashes_map
time: 0.000; rss: 101MB	load_dep_graph
time: 0.002; rss: 101MB	stability index
time: 0.004; rss: 102MB	stability checking
time: 0.015; rss: 104MB	type collecting
time: 0.000; rss: 104MB	variance inference
time: 0.001; rss: 105MB	impl wf inference
time: 0.014; rss: 106MB	coherence checking
time: 0.065; rss: 107MB	wf checking
time: 0.139; rss: 111MB	item-types checking
time: 0.707; rss: 121MB	item-bodies checking
time: 0.000; rss: 121MB	drop-impl checking
time: 0.055; rss: 125MB	const checking
time: 0.011; rss: 125MB	privacy checking
time: 0.005; rss: 125MB	intrinsic checking
time: 0.002; rss: 125MB	effect checking
time: 0.014; rss: 125MB	match checking
time: 0.009; rss: 125MB	liveness checking
time: 0.039; rss: 125MB	rvalue checking
time: 0.150; rss: 162MB	MIR dump
  time: 0.012; rss: 164MB	SimplifyCfg
  time: 0.020; rss: 164MB	QualifyAndPromoteConstants
  time: 0.023; rss: 164MB	TypeckMir
  time: 0.001; rss: 164MB	SimplifyBranches
  time: 0.005; rss: 164MB	SimplifyCfg
time: 0.060; rss: 164MB	MIR cleanup and validation
time: 0.106; rss: 164MB	borrow checking
time: 0.003; rss: 165MB	reachability checking
time: 0.007; rss: 165MB	death checking
time: 0.000; rss: 165MB	unused lib feature checking
time: 0.058; rss: 165MB	lint checking
time: 0.000; rss: 165MB	resolving dependency formats
  time: 0.000; rss: 165MB	NoLandingPads
  time: 0.005; rss: 165MB	SimplifyCfg
  time: 0.011; rss: 166MB	EraseRegions
  time: 0.002; rss: 166MB	AddCallGuards
  time: 0.050; rss: 169MB	ElaborateDrops
  time: 0.001; rss: 169MB	NoLandingPads
  time: 0.009; rss: 169MB	SimplifyCfg
  time: 0.006; rss: 169MB	InstCombine
  time: 0.002; rss: 169MB	Deaggregator
  time: 0.001; rss: 169MB	CopyPropagation
  time: 0.008; rss: 169MB	SimplifyLocals
  time: 0.002; rss: 169MB	AddCallGuards
  time: 0.000; rss: 169MB	PreTrans
time: 0.098; rss: 169MB	MIR optimisations
  time: 0.020; rss: 172MB	write metadata
  time: 0.482; rss: 215MB	translation item collection
  time: 0.020; rss: 215MB	codegen unit partitioning
  time: 0.024; rss: 327MB	internalize symbols
time: 2.696; rss: 327MB	translation
time: 0.000; rss: 327MB	assert dep graph
time: 0.000; rss: 327MB	serialize dep graph
  time: 0.216; rss: 229MB	llvm function passes [0]
  time: 0.096; rss: 232MB	llvm module passes [0]
  time: 4.250; rss: 235MB	codegen passes [0]
  time: 0.000; rss: 231MB	codegen passes [0]
time: 4.927; rss: 231MB	LLVM passes
time: 0.000; rss: 231MB	serialize work products
time: 0.130; rss: 105MB	linking
done
