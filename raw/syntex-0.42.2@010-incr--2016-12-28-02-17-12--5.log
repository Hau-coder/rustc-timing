commit 17f1fba353d2545ee54589350a83681dc3156e70
Merge: 0807104 babb7da
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 07:05:07 2016 +0000

    Auto merge of #38589 - aidanhs:aphs-stage0-rustdoc-test, r=alexcrichton
    
    Teach `rustdoc --test` about `--sysroot`, pass it when testing rust
    
    This permits rustdoc tests to work in stage0.
    
    Logical continuation of #36586.
    
    Snippet from https://github.com/rust-lang/rust/issues/38575#issuecomment-269090724:
    
    > it should actually be possible to run all the libstd tests immediately after creating std of stage0-out - there's no reason to build librustc at all if you've just made a change to (for example) libcollections, `./x.py test src/libcollections --stage 0 -v --incremental` should just work
    
    This PR makes it so (or appears to in my testing).
    
    r? @alexcrichton
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.091; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.076; rss: 166MB	name resolution
time: 0.059; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.047; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.089; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.590; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.223; rss: 277MB	const checking
time: 0.066; rss: 277MB	privacy checking
time: 0.021; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.051; rss: 284MB	match checking
time: 0.050; rss: 290MB	liveness checking
time: 0.183; rss: 292MB	rvalue checking
time: 0.368; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.289; rss: 500MB	MIR cleanup and validation
time: 0.480; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.041; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.250; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.005; rss: 500MB	NoLandingPads
  time: 0.040; rss: 500MB	SimplifyCfg
  time: 0.082; rss: 509MB	EraseRegions
  time: 0.015; rss: 509MB	AddCallGuards
  time: 0.290; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.052; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.012; rss: 528MB	Deaggregator
  time: 0.003; rss: 528MB	CopyPropagation
  time: 0.035; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.580; rss: 528MB	MIR optimisations
  time: 0.078; rss: 537MB	write metadata
  time: 0.415; rss: 551MB	translation item collection
  time: 0.073; rss: 553MB	codegen unit partitioning
  time: 0.049; rss: 1457MB	internalize symbols
time: 12.246; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.460; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1195MB	llvm function passes [0]
time: 0.000; rss: 1197MB	llvm module passes [0]
time: 0.001; rss: 1201MB	llvm function passes [3]
time: 0.000; rss: 1203MB	llvm module passes [3]
time: 0.001; rss: 1203MB	llvm function passes [2]
time: 0.000; rss: 1203MB	llvm module passes [2]
time: 0.002; rss: 1206MB	llvm function passes [1]
time: 0.000; rss: 1206MB	llvm module passes [1]
time: 0.002; rss: 1206MB	codegen passes [0]
time: 0.004; rss: 1206MB	llvm function passes [5]
time: 0.005; rss: 1206MB	codegen passes [3]
time: 0.001; rss: 1206MB	llvm module passes [5]
time: 0.006; rss: 1210MB	codegen passes [2]
time: 0.001; rss: 1210MB	llvm function passes [44]
time: 0.000; rss: 1210MB	llvm module passes [44]
time: 0.011; rss: 1210MB	llvm function passes [6]
time: 0.018; rss: 1212MB	llvm function passes [4]
time: 0.006; rss: 1212MB	llvm module passes [6]
time: 0.009; rss: 1223MB	llvm module passes [4]
time: 0.022; rss: 1223MB	llvm function passes [2]
time: 0.014; rss: 1223MB	llvm function passes [48]
time: 0.008; rss: 1223MB	llvm module passes [48]
time: 0.033; rss: 1223MB	codegen passes [44]
time: 0.014; rss: 1223MB	llvm module passes [2]
time: 0.026; rss: 1223MB	llvm function passes [7]
time: 0.000; rss: 1235MB	llvm function passes [41]
time: 0.000; rss: 1235MB	llvm module passes [41]
time: 0.008; rss: 1235MB	llvm module passes [7]
time: 0.054; rss: 1240MB	codegen passes [1]
time: 0.001; rss: 1240MB	llvm function passes [1]
time: 0.000; rss: 1240MB	llvm module passes [1]
time: 0.012; rss: 1240MB	codegen passes [41]
time: 0.000; rss: 1244MB	llvm function passes [39]
time: 0.000; rss: 1244MB	llvm module passes [39]
time: 0.002; rss: 1244MB	codegen passes [39]
time: 0.000; rss: 1248MB	llvm function passes [37]
time: 0.000; rss: 1248MB	llvm module passes [37]
time: 0.001; rss: 1252MB	codegen passes [37]
time: 0.010; rss: 1254MB	llvm function passes [41]
time: 0.000; rss: 1254MB	llvm module passes [41]
time: 0.023; rss: 1256MB	llvm function passes [43]
time: 0.001; rss: 1256MB	llvm module passes [43]
time: 0.061; rss: 1256MB	llvm function passes [47]
time: 0.010; rss: 1261MB	llvm module passes [47]
time: 0.037; rss: 1263MB	codegen passes [1]
time: 0.091; rss: 1263MB	codegen passes [5]
time: 0.086; rss: 1263MB	llvm function passes [49]
time: 0.059; rss: 1265MB	llvm function passes [42]
time: 0.055; rss: 1269MB	codegen passes [41]
time: 0.063; rss: 1269MB	llvm function passes [39]
time: 0.020; rss: 1275MB	llvm module passes [42]
time: 0.015; rss: 1277MB	llvm module passes [39]
time: 0.016; rss: 1277MB	llvm function passes [41]
time: 0.061; rss: 1279MB	codegen passes [43]
time: 0.004; rss: 1279MB	llvm module passes [41]
time: 0.067; rss: 1286MB	llvm function passes [5]
time: 0.186; rss: 1288MB	llvm function passes [0]
time: 0.025; rss: 1288MB	llvm module passes [5]
time: 0.134; rss: 1290MB	llvm function passes [36]
time: 0.116; rss: 1298MB	llvm module passes [49]
time: 0.229; rss: 1301MB	llvm function passes [3]
time: 0.144; rss: 1301MB	llvm function passes [33]
time: 0.036; rss: 1301MB	llvm module passes [36]
time: 0.191; rss: 1301MB	llvm function passes [38]
time: 0.026; rss: 1305MB	llvm module passes [33]
time: 0.224; rss: 1307MB	llvm function passes [40]
time: 0.032; rss: 1307MB	llvm module passes [38]
time: 0.115; rss: 1309MB	llvm module passes [0]
time: 0.286; rss: 1309MB	llvm function passes [45]
time: 0.219; rss: 1309MB	llvm function passes [46]
time: 0.251; rss: 1312MB	llvm function passes [35]
time: 0.065; rss: 1341MB	llvm function passes [21]
time: 0.171; rss: 1346MB	llvm function passes [29]
time: 0.002; rss: 1346MB	llvm module passes [29]
time: 0.073; rss: 1346MB	llvm module passes [40]
time: 0.054; rss: 1357MB	llvm module passes [35]
time: 0.127; rss: 1357MB	llvm function passes [23]
time: 0.322; rss: 1357MB	llvm function passes [37]
time: 0.088; rss: 1357MB	llvm module passes [46]
time: 0.017; rss: 1357MB	llvm module passes [23]
time: 0.232; rss: 1357MB	llvm function passes [31]
time: 0.017; rss: 1366MB	llvm module passes [31]
time: 0.081; rss: 1377MB	llvm module passes [21]
time: 0.213; rss: 1377MB	llvm function passes [25]
time: 0.203; rss: 1377MB	llvm module passes [3]
time: 0.011; rss: 1379MB	llvm module passes [25]
time: 0.138; rss: 1385MB	llvm module passes [45]
time: 0.071; rss: 1393MB	llvm module passes [37]
time: 0.042; rss: 1391MB	llvm function passes [19]
time: 0.392; rss: 1394MB	llvm function passes [34]
time: 0.004; rss: 1394MB	llvm module passes [19]
time: 0.097; rss: 1394MB	codegen passes [29]
time: 0.396; rss: 1396MB	llvm function passes [1]
time: 0.368; rss: 1401MB	llvm function passes [32]
time: 0.071; rss: 1397MB	llvm module passes [34]
time: 0.071; rss: 1397MB	codegen passes [19]
time: 0.130; rss: 1401MB	codegen passes [18]
time: 0.331; rss: 1395MB	llvm function passes [30]
time: 0.270; rss: 1395MB	llvm function passes [20]
time: 0.006; rss: 1393MB	llvm module passes [20]
time: 0.121; rss: 1394MB	llvm module passes [1]
time: 0.077; rss: 1399MB	llvm module passes [30]
time: 0.634; rss: 1406MB	llvm function passes [44]
time: 0.186; rss: 1406MB	llvm function passes [28]
time: 0.372; rss: 1406MB	llvm function passes [22]
time: 0.448; rss: 1407MB	llvm function passes [24]
time: 0.552; rss: 1409MB	llvm function passes [43]
time: 0.209; rss: 1409MB	llvm module passes [32]
time: 0.077; rss: 1412MB	llvm module passes [22]
time: 0.105; rss: 1415MB	llvm module passes [28]
time: 0.113; rss: 1410MB	llvm module passes [24]
time: 0.116; rss: 1409MB	llvm module passes [43]
time: 0.649; rss: 1417MB	codegen passes [41]
time: 0.764; rss: 1430MB	codegen passes [6]
time: 0.504; rss: 1432MB	llvm function passes [26]
time: 0.284; rss: 1447MB	llvm module passes [44]
time: 0.347; rss: 1444MB	codegen passes [21]
time: 0.265; rss: 1428MB	llvm module passes [26]
time: 1.251; rss: 1438MB	codegen passes [48]
time: 0.991; rss: 1450MB	codegen passes [4]
time: 0.687; rss: 1438MB	codegen passes [20]
time: 1.546; rss: 1428MB	codegen passes [7]
time: 1.701; rss: 1414MB	codegen passes [2]
time: 1.581; rss: 1410MB	codegen passes [5]
time: 1.557; rss: 1402MB	codegen passes [47]
time: 1.596; rss: 1409MB	codegen passes [33]
time: 1.819; rss: 1421MB	codegen passes [39]
time: 1.654; rss: 1424MB	codegen passes [36]
time: 1.936; rss: 1418MB	codegen passes [42]
time: 2.167; rss: 1436MB	codegen passes [23]
time: 1.886; rss: 1428MB	codegen passes [25]
time: 1.735; rss: 1452MB	codegen passes [43]
time: 2.357; rss: 1488MB	codegen passes [31]
time: 2.919; rss: 1610MB	codegen passes [1]
time: 2.636; rss: 1606MB	codegen passes [24]
time: 2.929; rss: 1584MB	codegen passes [46]
time: 3.186; rss: 1607MB	codegen passes [38]
time: 3.320; rss: 1585MB	codegen passes [49]
time: 3.682; rss: 1655MB	codegen passes [35]
time: 3.902; rss: 1638MB	codegen passes [40]
time: 3.676; rss: 1640MB	codegen passes [34]
time: 3.835; rss: 1650MB	codegen passes [26]
time: 4.169; rss: 1635MB	codegen passes [22]
time: 4.376; rss: 1613MB	codegen passes [37]
time: 4.658; rss: 1575MB	codegen passes [0]
time: 4.287; rss: 1539MB	codegen passes [30]
time: 4.527; rss: 1552MB	codegen passes [28]
time: 4.960; rss: 1522MB	codegen passes [45]
time: 5.125; rss: 1441MB	codegen passes [32]
time: 5.289; rss: 1396MB	codegen passes [3]
time: 5.546; rss: 1324MB	codegen passes [44]
time: 7.552; rss: 1322MB	LLVM passes
time: 0.000; rss: 1322MB	serialize work products
time: 1.115; rss: 292MB	linking
done
