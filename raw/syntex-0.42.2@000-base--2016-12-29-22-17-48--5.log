commit 75f5981d4500e52de767d61ec50a34b97be2a301
Merge: e7c788a e5c7782
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 30 01:20:18 2016 +0000

    Auto merge of #38695 - alexcrichton:debug-appveyor, r=brson
    
    appveyor: Attempt to debug flaky test runs
    
    This commit is an attempt to debug #38620 since we're unable to reproduce it
    locally. It follows the [advice] of those with AppVeyor to use the `handle.exe`
    tool to try to debug what processes have a handle to the file open.
    
    This won't be guaranteed to actually help us, but hopefully it'll diagnose
    something at some point?
    
    [advice]: http://help.appveyor.com/discussions/questions/2898
rustc: ./syntex-0.42.2@000-base
cargo rustc -p syntex_syntax  -- -Ztime-passes -Zinput-stats
time: 0.093; rss: 71MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 71MB	recursion limit
time: 0.000; rss: 71MB	crate injection
time: 0.000; rss: 71MB	plugin loading
time: 0.000; rss: 71MB	plugin registration
time: 0.250; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 147MB	complete gated feature checking
time: 0.023; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.096; rss: 160MB	name resolution
time: 0.116; rss: 193MB	lowering ast -> hir
time: 0.011; rss: 185MB	indexing hir
time: 0.006; rss: 185MB	attribute checking
time: 0.002; rss: 148MB	language item collection
time: 0.012; rss: 148MB	lifetime resolution
time: 0.000; rss: 148MB	looking for entry point
time: 0.000; rss: 148MB	looking for plugin registrar
time: 0.089; rss: 166MB	region resolution
time: 0.008; rss: 166MB	loop checking
time: 0.002; rss: 166MB	static item recursion checking
time: 0.383; rss: 169MB	compute_incremental_hashes_map
time: 0.000; rss: 169MB	load_dep_graph
time: 0.009; rss: 169MB	stability index
time: 0.017; rss: 169MB	stability checking
time: 0.049; rss: 174MB	type collecting
time: 0.002; rss: 174MB	variance inference
time: 0.002; rss: 174MB	impl wf inference
time: 0.019; rss: 176MB	coherence checking
time: 0.085; rss: 178MB	wf checking
time: 0.188; rss: 182MB	item-types checking
time: 3.538; rss: 226MB	item-bodies checking
time: 0.000; rss: 226MB	drop-impl checking
time: 0.307; rss: 237MB	const checking
time: 0.058; rss: 237MB	privacy checking
time: 0.016; rss: 237MB	intrinsic checking
time: 0.014; rss: 237MB	effect checking
time: 0.048; rss: 237MB	match checking
time: 0.051; rss: 244MB	liveness checking
time: 0.178; rss: 244MB	rvalue checking
time: 0.572; rss: 417MB	MIR dump
  time: 0.059; rss: 423MB	SimplifyCfg
  time: 0.075; rss: 423MB	QualifyAndPromoteConstants
  time: 0.111; rss: 423MB	TypeckMir
  time: 0.004; rss: 423MB	SimplifyBranches
  time: 0.031; rss: 423MB	SimplifyCfg
time: 0.281; rss: 423MB	MIR cleanup and validation
time: 0.485; rss: 427MB	borrow checking
time: 0.024; rss: 427MB	reachability checking
time: 0.039; rss: 427MB	death checking
time: 0.000; rss: 427MB	unused lib feature checking
time: 0.185; rss: 427MB	lint checking
time: 0.000; rss: 427MB	resolving dependency formats
  time: 0.003; rss: 427MB	NoLandingPads
  time: 0.027; rss: 427MB	SimplifyCfg
  time: 0.080; rss: 434MB	EraseRegions
  time: 0.011; rss: 434MB	AddCallGuards
  time: 0.311; rss: 456MB	ElaborateDrops
  time: 0.004; rss: 456MB	NoLandingPads
  time: 0.054; rss: 456MB	SimplifyCfg
  time: 0.030; rss: 456MB	InstCombine
  time: 0.012; rss: 456MB	Deaggregator
  time: 0.002; rss: 456MB	CopyPropagation
  time: 0.035; rss: 456MB	SimplifyLocals
  time: 0.010; rss: 456MB	AddCallGuards
  time: 0.002; rss: 456MB	PreTrans
time: 0.582; rss: 456MB	MIR optimisations
  time: 0.084; rss: 465MB	write metadata
  time: 0.405; rss: 479MB	translation item collection
  time: 0.066; rss: 484MB	codegen unit partitioning
  time: 0.054; rss: 741MB	internalize symbols
time: 5.097; rss: 741MB	translation
time: 0.000; rss: 741MB	assert dep graph
time: 0.000; rss: 741MB	serialize dep graph
  time: 0.540; rss: 428MB	llvm function passes [0]
  time: 0.303; rss: 435MB	llvm module passes [0]
  time: 10.564; rss: 424MB	codegen passes [0]
  time: 0.000; rss: 424MB	codegen passes [0]
time: 12.280; rss: 424MB	LLVM passes
time: 0.000; rss: 424MB	serialize work products
time: 0.352; rss: 116MB	linking
done
