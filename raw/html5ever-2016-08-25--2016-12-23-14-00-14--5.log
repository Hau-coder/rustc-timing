commit 467a7f049bac0386097c6cd2c80966c8d7453ce8
Merge: 00b4019 c12fc66
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 23 18:43:12 2016 +0000

    Auto merge of #38533 - jseyfried:legacy_custom_derive_deprecation, r=nrc
    
    Allow legacy custom derive authors to disable warnings in downstream crates
    
    This PR allows legacy custom derive authors to use a pre-deprecated method `registry.register_custom_derive()` instead of `registry.register_syntax_extension()` to avoid downstream deprecation warnings.
    
    r? @nrc
rustc: ./html5ever-2016-08-25
cargo rustc  -- -Ztime-passes -Zinput-stats
time: 0.023; rss: 50MB	parsing
Lines of code:             8210
Pre-expansion node count:  52140
time: 0.000; rss: 50MB	recursion limit
time: 0.000; rss: 50MB	crate injection
time: 0.000; rss: 50MB	plugin loading
time: 0.000; rss: 50MB	plugin registration
time: 0.673; rss: 102MB	expansion
time: 0.000; rss: 102MB	maybe building test harness
time: 0.002; rss: 102MB	maybe creating a macro crate
Post-expansion node count: 163412
time: 0.000; rss: 102MB	checking for inline asm in case the target doesn't support it
time: 0.002; rss: 102MB	complete gated feature checking
time: 0.008; rss: 102MB	early lint checks
time: 0.002; rss: 102MB	AST validation
time: 0.015; rss: 105MB	name resolution
time: 0.014; rss: 116MB	lowering ast -> hir
time: 0.002; rss: 118MB	indexing hir
time: 0.002; rss: 118MB	attribute checking
time: 0.001; rss: 100MB	language item collection
time: 0.002; rss: 100MB	lifetime resolution
time: 0.000; rss: 100MB	looking for entry point
time: 0.000; rss: 100MB	looking for plugin registrar
time: 0.012; rss: 104MB	region resolution
time: 0.001; rss: 104MB	loop checking
time: 0.001; rss: 104MB	static item recursion checking
time: 0.024; rss: 104MB	compute_incremental_hashes_map
time: 0.000; rss: 104MB	load_dep_graph
time: 0.001; rss: 104MB	stability index
time: 0.003; rss: 105MB	stability checking
time: 0.009; rss: 107MB	type collecting
time: 0.000; rss: 107MB	variance inference
time: 0.000; rss: 107MB	impl wf inference
time: 0.011; rss: 108MB	coherence checking
time: 0.019; rss: 109MB	wf checking
time: 0.254; rss: 120MB	item-types checking
time: 0.413; rss: 127MB	item-bodies checking
time: 0.000; rss: 127MB	drop-impl checking
time: 0.056; rss: 135MB	const checking
time: 0.006; rss: 135MB	privacy checking
time: 0.002; rss: 135MB	intrinsic checking
time: 0.002; rss: 135MB	effect checking
time: 0.014; rss: 135MB	match checking
time: 0.010; rss: 130MB	liveness checking
time: 0.021; rss: 130MB	rvalue checking
time: 0.103; rss: 171MB	MIR dump
  time: 0.008; rss: 171MB	SimplifyCfg
  time: 0.014; rss: 173MB	QualifyAndPromoteConstants
  time: 0.022; rss: 173MB	TypeckMir
  time: 0.000; rss: 173MB	SimplifyBranches
  time: 0.004; rss: 173MB	SimplifyCfg
time: 0.048; rss: 173MB	MIR cleanup and validation
time: 0.076; rss: 178MB	borrow checking
time: 0.002; rss: 178MB	reachability checking
time: 0.005; rss: 178MB	death checking
time: 0.000; rss: 178MB	unused lib feature checking
time: 0.049; rss: 178MB	lint checking
time: 0.000; rss: 178MB	resolving dependency formats
  time: 0.000; rss: 178MB	NoLandingPads
  time: 0.004; rss: 178MB	SimplifyCfg
  time: 0.009; rss: 178MB	EraseRegions
  time: 0.001; rss: 178MB	AddCallGuards
  time: 0.073; rss: 182MB	ElaborateDrops
  time: 0.000; rss: 182MB	NoLandingPads
  time: 0.007; rss: 178MB	SimplifyCfg
  time: 0.007; rss: 178MB	InstCombine
  time: 0.001; rss: 178MB	Deaggregator
  time: 0.000; rss: 178MB	CopyPropagation
  time: 0.007; rss: 177MB	SimplifyLocals
  time: 0.001; rss: 177MB	AddCallGuards
  time: 0.000; rss: 177MB	PreTrans
time: 0.110; rss: 177MB	MIR optimisations
  time: 0.011; rss: 178MB	write metadata
  time: 0.043; rss: 188MB	translation item collection
  time: 0.004; rss: 189MB	codegen unit partitioning
  time: 0.005; rss: 205MB	internalize symbols
time: 0.322; rss: 205MB	translation
time: 0.000; rss: 205MB	assert dep graph
time: 0.000; rss: 205MB	serialize dep graph
  time: 0.020; rss: 112MB	llvm function passes [0]
  time: 0.014; rss: 113MB	llvm module passes [0]
  time: 0.483; rss: 115MB	codegen passes [0]
  time: 0.000; rss: 115MB	codegen passes [0]
time: 0.557; rss: 115MB	LLVM passes
time: 0.000; rss: 115MB	serialize work products
time: 0.025; rss: 99MB	linking
done
