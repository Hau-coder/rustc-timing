commit 7660bdf70ae0c6a434dd12cfdeb8250ce77c69c7
Merge: c717cfa aaf32aa
Author: bors <bors@rust-lang.org>
Date:   Thu Sep 29 20:25:45 2016 -0700

    Auto merge of #36557 - sfackler:fix-hashdos-docs, r=alexcrichton
    
    Clean up hasher discussion on HashMap
    
    * We never want to make guarantees about protecting against attacks.
    * "True randomness" is not the right terminology to be using in this
        context.
    * There is significantly more nuance to the performance of SipHash than
        "somewhat slow".
    
    r? @steveklabnik
    
    Follow up to discussion on #35371
rustc: ./syntex-0.42.2
cargo rustc -p syntex_syntax -- -Ztime-passes -Zinput-stats
   Compiling syntex_syntax v0.42.0
time: 0.107; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  224033
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.272; rss: 147MB	expansion
time: 0.000; rss: 147MB	maybe building test harness
time: 0.006; rss: 147MB	maybe creating a macro crate
Post-expansion node count: 641571
time: 0.000; rss: 147MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 147MB	complete gated feature checking
time: 0.024; rss: 147MB	early lint checks
time: 0.007; rss: 147MB	AST validation
time: 0.085; rss: 161MB	name resolution
time: 0.050; rss: 201MB	lowering ast -> hir
time: 0.009; rss: 210MB	indexing hir
time: 0.006; rss: 210MB	attribute checking
time: 0.006; rss: 161MB	language item collection
time: 0.012; rss: 161MB	lifetime resolution
time: 0.000; rss: 161MB	looking for entry point
time: 0.000; rss: 161MB	looking for plugin registrar
time: 0.045; rss: 171MB	region resolution
time: 0.006; rss: 171MB	loop checking
time: 0.006; rss: 171MB	static item recursion checking
time: 0.295; rss: 172MB	compute_incremental_hashes_map
time: 0.000; rss: 172MB	load_dep_graph
time: 0.082; rss: 173MB	type collecting
time: 0.001; rss: 173MB	variance inference
time: 0.041; rss: 178MB	coherence checking
time: 0.100; rss: 180MB	wf checking
time: 0.195; rss: 185MB	item-types checking
time: 3.953; rss: 240MB	item-bodies checking
time: 0.000; rss: 240MB	drop-impl checking
time: 0.324; rss: 241MB	const checking
time: 0.055; rss: 241MB	privacy checking
time: 0.007; rss: 241MB	stability index
time: 0.022; rss: 241MB	intrinsic checking
time: 0.019; rss: 241MB	effect checking
time: 0.056; rss: 241MB	match checking
time: 0.055; rss: 238MB	liveness checking
time: 0.291; rss: 238MB	rvalue checking
time: 0.422; rss: 425MB	MIR dump
  time: 0.058; rss: 429MB	SimplifyCfg
  time: 0.084; rss: 429MB	QualifyAndPromoteConstants
  time: 0.111; rss: 429MB	TypeckMir
  time: 0.005; rss: 429MB	SimplifyBranches
  time: 0.037; rss: 429MB	SimplifyCfg
time: 0.294; rss: 429MB	MIR passes
time: 0.700; rss: 429MB	borrow checking
time: 0.018; rss: 429MB	reachability checking
time: 0.046; rss: 429MB	death checking
time: 0.042; rss: 429MB	stability checking
time: 0.000; rss: 429MB	unused lib feature checking
time: 0.224; rss: 429MB	lint checking
time: 0.000; rss: 429MB	resolving dependency formats
  time: 0.003; rss: 429MB	NoLandingPads
  time: 0.027; rss: 429MB	SimplifyCfg
  time: 0.073; rss: 442MB	EraseRegions
  time: 0.011; rss: 442MB	AddCallGuards
  time: 1.098; rss: 458MB	ElaborateDrops
  time: 0.003; rss: 458MB	NoLandingPads
  time: 0.052; rss: 458MB	SimplifyCfg
  time: 0.031; rss: 457MB	InstCombine
  time: 0.012; rss: 457MB	Deaggregator
  time: 0.003; rss: 457MB	CopyPropagation
  time: 0.009; rss: 457MB	AddCallGuards
  time: 0.003; rss: 457MB	PreTrans
time: 1.326; rss: 457MB	Prepare MIR codegen passes
  time: 0.264; rss: 465MB	write metadata
  time: 0.505; rss: 473MB	translation item collection
  time: 0.076; rss: 480MB	codegen unit partitioning
  time: 0.066; rss: 729MB	internalize symbols
time: 5.213; rss: 608MB	translation
time: 0.000; rss: 608MB	assert dep graph
time: 0.000; rss: 608MB	serialize dep graph
  time: 0.519; rss: 414MB	llvm function passes [0]
  time: 0.243; rss: 420MB	llvm module passes [0]
  time: 10.119; rss: 415MB	codegen passes [0]
  time: 0.001; rss: 417MB	codegen passes [0]
time: 11.621; rss: 417MB	LLVM passes
time: 0.000; rss: 417MB	serialize work products
time: 0.659; rss: 107MB	linking
done
