commit 467a7f049bac0386097c6cd2c80966c8d7453ce8
Merge: 00b4019 c12fc66
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 23 18:43:12 2016 +0000

    Auto merge of #38533 - jseyfried:legacy_custom_derive_deprecation, r=nrc
    
    Allow legacy custom derive authors to disable warnings in downstream crates
    
    This PR allows legacy custom derive authors to use a pre-deprecated method `registry.register_custom_derive()` instead of `registry.register_syntax_extension()` to avoid downstream deprecation warnings.
    
    r? @nrc
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.241; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.009; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.045; rss: 177MB	region resolution
time: 0.007; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.602; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.217; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.049; rss: 284MB	match checking
time: 0.049; rss: 290MB	liveness checking
time: 0.177; rss: 292MB	rvalue checking
time: 0.368; rss: 482MB	MIR dump
  time: 0.057; rss: 483MB	SimplifyCfg
  time: 0.075; rss: 483MB	QualifyAndPromoteConstants
  time: 0.122; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.291; rss: 500MB	MIR cleanup and validation
time: 0.476; rss: 500MB	borrow checking
time: 0.026; rss: 500MB	reachability checking
time: 0.044; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.182; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.029; rss: 500MB	SimplifyCfg
  time: 0.072; rss: 509MB	EraseRegions
  time: 0.012; rss: 509MB	AddCallGuards
  time: 0.278; rss: 531MB	ElaborateDrops
  time: 0.004; rss: 531MB	NoLandingPads
  time: 0.055; rss: 531MB	SimplifyCfg
  time: 0.032; rss: 531MB	InstCombine
  time: 0.013; rss: 531MB	Deaggregator
  time: 0.004; rss: 531MB	CopyPropagation
  time: 0.041; rss: 531MB	SimplifyLocals
  time: 0.011; rss: 531MB	AddCallGuards
  time: 0.003; rss: 531MB	PreTrans
time: 0.558; rss: 531MB	MIR optimisations
  time: 0.077; rss: 538MB	write metadata
  time: 0.408; rss: 551MB	translation item collection
  time: 0.073; rss: 556MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.864; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.456; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1198MB	llvm function passes [0]
time: 0.000; rss: 1200MB	llvm module passes [0]
time: 0.001; rss: 1202MB	llvm function passes [3]
time: 0.000; rss: 1204MB	llvm module passes [3]
time: 0.001; rss: 1210MB	llvm function passes [2]
time: 0.000; rss: 1212MB	llvm module passes [2]
time: 0.004; rss: 1212MB	llvm function passes [5]
time: 0.006; rss: 1219MB	llvm function passes [1]
time: 0.000; rss: 1219MB	llvm module passes [1]
time: 0.001; rss: 1219MB	llvm function passes [9]
time: 0.007; rss: 1221MB	llvm function passes [6]
time: 0.003; rss: 1221MB	llvm module passes [9]
time: 0.010; rss: 1223MB	llvm function passes [4]
time: 0.007; rss: 1223MB	llvm module passes [5]
time: 0.006; rss: 1227MB	llvm module passes [4]
time: 0.011; rss: 1227MB	llvm module passes [6]
time: 0.025; rss: 1227MB	codegen passes [0]
time: 0.020; rss: 1227MB	llvm function passes [10]
time: 0.009; rss: 1233MB	llvm module passes [10]
time: 0.047; rss: 1236MB	codegen passes [3]
time: 0.044; rss: 1236MB	llvm function passes [11]
time: 0.028; rss: 1236MB	llvm function passes [13]
time: 0.005; rss: 1236MB	llvm module passes [11]
time: 0.008; rss: 1236MB	llvm module passes [13]
time: 0.064; rss: 1240MB	llvm function passes [12]
time: 0.000; rss: 1245MB	llvm function passes [15]
time: 0.000; rss: 1245MB	llvm module passes [15]
time: 0.001; rss: 1245MB	codegen passes [15]
time: 0.040; rss: 1245MB	llvm function passes [3]
time: 0.003; rss: 1247MB	llvm function passes [15]
time: 0.001; rss: 1247MB	llvm module passes [15]
time: 0.092; rss: 1249MB	codegen passes [2]
time: 0.011; rss: 1249MB	llvm module passes [3]
time: 0.025; rss: 1262MB	llvm function passes [2]
time: 0.115; rss: 1273MB	codegen passes [9]
time: 0.003; rss: 1274MB	llvm function passes [9]
time: 0.000; rss: 1274MB	llvm module passes [9]
time: 0.055; rss: 1273MB	llvm module passes [12]
time: 0.008; rss: 1277MB	codegen passes [9]
time: 0.000; rss: 1277MB	llvm function passes [9]
time: 0.000; rss: 1277MB	llvm module passes [9]
time: 0.004; rss: 1277MB	codegen passes [9]
time: 0.137; rss: 1280MB	codegen passes [1]
time: 0.000; rss: 1284MB	llvm function passes [18]
time: 0.000; rss: 1284MB	llvm module passes [18]
time: 0.001; rss: 1284MB	codegen passes [18]
time: 0.029; rss: 1285MB	llvm function passes [17]
time: 0.000; rss: 1285MB	llvm module passes [17]
time: 0.153; rss: 1289MB	codegen passes [5]
time: 0.169; rss: 1289MB	llvm function passes [8]
time: 0.055; rss: 1289MB	llvm module passes [2]
time: 0.103; rss: 1293MB	codegen passes [15]
time: 0.074; rss: 1297MB	llvm function passes [9]
time: 0.057; rss: 1299MB	codegen passes [17]
time: 0.025; rss: 1299MB	llvm function passes [22]
time: 0.230; rss: 1299MB	llvm function passes [7]
time: 0.070; rss: 1305MB	llvm module passes [8]
time: 0.012; rss: 1307MB	llvm module passes [22]
time: 0.130; rss: 1309MB	llvm function passes [16]
time: 0.036; rss: 1307MB	llvm module passes [9]
time: 0.236; rss: 1304MB	llvm function passes [0]
time: 0.047; rss: 1312MB	llvm function passes [17]
time: 0.008; rss: 1312MB	llvm module passes [17]
time: 0.018; rss: 1312MB	llvm function passes [23]
time: 0.129; rss: 1314MB	llvm function passes [18]
time: 0.014; rss: 1321MB	llvm module passes [23]
time: 0.098; rss: 1324MB	llvm function passes [21]
time: 0.163; rss: 1323MB	llvm function passes [1]
time: 0.037; rss: 1335MB	llvm module passes [18]
time: 0.031; rss: 1339MB	llvm module passes [21]
time: 0.021; rss: 1341MB	llvm function passes [26]
time: 0.181; rss: 1343MB	llvm function passes [19]
time: 0.129; rss: 1347MB	llvm module passes [7]
time: 0.031; rss: 1347MB	llvm function passes [25]
time: 0.124; rss: 1349MB	llvm module passes [16]
time: 0.031; rss: 1351MB	llvm module passes [26]
time: 0.019; rss: 1355MB	llvm module passes [25]
time: 0.150; rss: 1366MB	llvm module passes [0]
time: 0.002; rss: 1369MB	llvm function passes [27]
time: 0.002; rss: 1371MB	llvm module passes [27]
time: 0.066; rss: 1375MB	llvm module passes [19]
time: 0.268; rss: 1380MB	llvm function passes [20]
time: 0.078; rss: 1399MB	codegen passes [27]
time: 0.070; rss: 1396MB	llvm module passes [20]
time: 0.250; rss: 1395MB	llvm function passes [24]
time: 0.067; rss: 1395MB	llvm function passes [30]
time: 0.008; rss: 1410MB	llvm function passes [34]
time: 0.154; rss: 1409MB	llvm function passes [29]
time: 0.182; rss: 1408MB	llvm function passes [28]
time: 0.020; rss: 1410MB	llvm function passes [36]
time: 0.274; rss: 1410MB	llvm module passes [1]
time: 0.027; rss: 1410MB	llvm module passes [34]
time: 0.010; rss: 1410MB	llvm module passes [36]
time: 0.074; rss: 1413MB	llvm function passes [32]
time: 0.014; rss: 1413MB	llvm function passes [35]
time: 0.112; rss: 1417MB	llvm function passes [27]
time: 0.049; rss: 1418MB	llvm module passes [29]
time: 0.129; rss: 1407MB	llvm module passes [24]
time: 0.072; rss: 1406MB	codegen passes [37]
time: 0.118; rss: 1405MB	llvm module passes [30]
time: 0.071; rss: 1405MB	llvm module passes [28]
time: 0.061; rss: 1414MB	llvm module passes [32]
time: 0.060; rss: 1414MB	llvm module passes [35]
time: 0.357; rss: 1411MB	codegen passes [23]
time: 0.487; rss: 1406MB	llvm function passes [15]
time: 0.058; rss: 1405MB	codegen passes [36]
time: 0.520; rss: 1402MB	llvm function passes [5]
time: 0.635; rss: 1403MB	llvm function passes [14]
time: 0.739; rss: 1413MB	codegen passes [6]
time: 0.151; rss: 1421MB	llvm module passes [5]
time: 0.160; rss: 1422MB	codegen passes [34]
time: 0.300; rss: 1424MB	llvm module passes [27]
time: 0.348; rss: 1428MB	llvm function passes [33]
time: 0.411; rss: 1439MB	llvm function passes [31]
time: 0.345; rss: 1443MB	llvm module passes [15]
time: 0.329; rss: 1463MB	llvm module passes [33]
time: 0.637; rss: 1462MB	llvm module passes [14]
time: 0.451; rss: 1471MB	llvm module passes [31]
time: 0.758; rss: 1478MB	codegen passes [35]
time: 1.343; rss: 1461MB	codegen passes [4]
time: 1.487; rss: 1464MB	codegen passes [13]
time: 1.195; rss: 1471MB	codegen passes [3]
time: 1.225; rss: 1455MB	codegen passes [17]
time: 1.531; rss: 1441MB	codegen passes [11]
time: 1.374; rss: 1407MB	codegen passes [22]
time: 1.455; rss: 1407MB	codegen passes [2]
time: 1.888; rss: 1430MB	codegen passes [10]
time: 1.842; rss: 1434MB	codegen passes [26]
time: 1.390; rss: 1447MB	codegen passes [30]
time: 1.865; rss: 1444MB	codegen passes [1]
time: 2.202; rss: 1465MB	codegen passes [18]
time: 2.458; rss: 1491MB	codegen passes [25]
time: 2.122; rss: 1478MB	codegen passes [32]
time: 2.750; rss: 1528MB	codegen passes [21]
time: 2.365; rss: 1532MB	codegen passes [27]
time: 2.744; rss: 1546MB	codegen passes [9]
time: 2.425; rss: 1563MB	codegen passes [15]
time: 3.045; rss: 1550MB	codegen passes [12]
time: 3.199; rss: 1579MB	codegen passes [16]
time: 3.224; rss: 1624MB	codegen passes [5]
time: 3.984; rss: 1627MB	codegen passes [29]
time: 3.974; rss: 1689MB	codegen passes [20]
time: 3.873; rss: 1645MB	codegen passes [33]
time: 4.505; rss: 1638MB	codegen passes [8]
time: 4.457; rss: 1595MB	codegen passes [19]
time: 4.241; rss: 1558MB	codegen passes [28]
time: 4.253; rss: 1533MB	codegen passes [31]
time: 5.135; rss: 1516MB	codegen passes [0]
time: 4.993; rss: 1449MB	codegen passes [7]
time: 5.204; rss: 1393MB	codegen passes [24]
time: 4.859; rss: 1322MB	codegen passes [14]
time: 7.381; rss: 1318MB	LLVM passes
time: 0.000; rss: 1318MB	serialize work products
time: 1.217; rss: 293MB	linking
done
