commit ff591b6dc0e0a107c778d0bb4cf103881527e1a5
Merge: 0ef85a6 a6d88b0
Author: bors <bors@rust-lang.org>
Date:   Sun Jan 15 23:49:24 2017 +0000

    Auto merge of #39042 - alexcrichton:upload-more, r=brson
    
    travis: Expand dist builder coverage
    
    This commit adds six new travis matrix entires for doing cross-compiled
    distribution builds of the compiler. The support added in #38731 allows us to
    quickly compile a complete suite of distribution artifacts for cross-compiled
    platforms, and currently each matrix entry (when fully cached) clocks in around
    an hour to finish. Note that a full test run typically takes about two hours
    right now.
    
    With further optimizations coming down the pike in #39026 this commit also
    starts doubling up cross-compiled distribution builders on each matrix entry. We
    initially planned to do one build per entry, but it's looking like we may be
    able to get by with more than one in each entry. Depending on how long these
    builds take we may even be able to up it to three, but we'll start with two
    first.
    
    This commit then completes the suite of cross-compiled compilers that we're
    going to compile, adding it for a whole litany of platforms detailed in the
    changes to the docker files here. The existing `cross` image is also trimmed
    down quite a bit to avoid duplicate work, and we'll eventually provision it for
    far more cross compilation as well.
    
    Note that the gcc toolchains installed to compile most of these compilers are
    inappropriate for actualy distribution. The glibc they pull in is much newer
    than we'd like, so before we turn nightlies off we'll need to tweak these docker
    files to custom build toolchains like the current `linux-cross` docker image
    does.
rustc 1.15.0-nightly (daf8c1dfc 2016-12-05)
-rwxr-xr-x 1 root root 9432 Dec  6 15:39 /usr/local/bin/rustc
rustc: ./rust-encoding-0.3.0
cargo rustc  -- -Ztime-passes -Zinput-stats
makefile:4: recipe for target 'all' failed
done
