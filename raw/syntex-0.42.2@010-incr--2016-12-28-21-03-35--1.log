commit 4ecc85beb339aa8089d936e450b0d800bdf580ae
Merge: 02b22ec ee0ea95
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 20:19:39 2016 +0000

    Auto merge of #38449 - eddyb:lazy-10, r=nikomatsakis
    
    [10/n] Split constants and functions' arguments into disjoint bodies.
    
    _This is part of a series ([prev](https://github.com/rust-lang/rust/pull/38053) | [next]()) of patches designed to rework rustc into an out-of-order on-demand pipeline model for both better feature support (e.g. [MIR-based](https://github.com/solson/miri) early constant evaluation) and incremental execution of compiler passes (e.g. type-checking), with beneficial consequences to IDE support as well.
    If any motivation is unclear, please ask for additional PR description clarifications or code comments._
    
    <hr>
    
    Finishes the signature-body split started in #37918, namely:
    * `trait` items are separated just like `impl` items were, for uniformity, closing #37712
    * `static`s, `const`s (including associated ones), `enum` discriminants and array lengths get bodies
      * even the count in "repeat expressions", i.e. `n` in `[x; n]`, which fixes #24414
    * arguments' patterns are moved to the bodies, with the types staying in `FnDecl`
      * `&self` now desugars to `self: &Self` instead of `self: &_` (similarly for other `self` forms)
      * `astconv`'s and metadata's (for rustdoc) informative uses are explicitly ignored for the purposes of the dep graph. this could be fixed in the future by hashing the exact information being extracted about the arguments as opposed to generating a dependency on *the whole body*
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.092; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.249; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.007; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.013; rss: 152MB	complete gated feature checking
time: 0.025; rss: 152MB	early lint checks
time: 0.008; rss: 152MB	AST validation
time: 0.080; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.055; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.088; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.839; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.218; rss: 277MB	const checking
time: 0.059; rss: 277MB	privacy checking
time: 0.020; rss: 284MB	intrinsic checking
time: 0.016; rss: 284MB	effect checking
time: 0.052; rss: 284MB	match checking
time: 0.050; rss: 291MB	liveness checking
time: 0.180; rss: 293MB	rvalue checking
time: 0.363; rss: 482MB	MIR dump
  time: 0.058; rss: 483MB	SimplifyCfg
  time: 0.076; rss: 483MB	QualifyAndPromoteConstants
  time: 0.123; rss: 500MB	TypeckMir
  time: 0.005; rss: 500MB	SimplifyBranches
  time: 0.033; rss: 500MB	SimplifyCfg
time: 0.294; rss: 500MB	MIR cleanup and validation
time: 0.474; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.178; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.003; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.273; rss: 531MB	ElaborateDrops
  time: 0.003; rss: 531MB	NoLandingPads
  time: 0.054; rss: 531MB	SimplifyCfg
  time: 0.029; rss: 531MB	InstCombine
  time: 0.013; rss: 531MB	Deaggregator
  time: 0.004; rss: 531MB	CopyPropagation
  time: 0.036; rss: 531MB	SimplifyLocals
  time: 0.010; rss: 531MB	AddCallGuards
  time: 0.003; rss: 531MB	PreTrans
time: 0.531; rss: 531MB	MIR optimisations
  time: 0.068; rss: 537MB	write metadata
  time: 0.395; rss: 552MB	translation item collection
  time: 0.071; rss: 555MB	codegen unit partitioning
  time: 0.048; rss: 1458MB	internalize symbols
time: 11.963; rss: 1458MB	translation
time: 0.000; rss: 1458MB	assert dep graph
time: 1.386; rss: 1486MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1194MB	llvm function passes [1]
time: 0.000; rss: 1198MB	llvm module passes [1]
time: 0.001; rss: 1200MB	llvm function passes [0]
time: 0.000; rss: 1200MB	llvm module passes [0]
time: 0.001; rss: 1206MB	llvm function passes [2]
time: 0.000; rss: 1206MB	llvm module passes [2]
time: 0.002; rss: 1208MB	llvm function passes [4]
time: 0.002; rss: 1208MB	codegen passes [1]
time: 0.000; rss: 1208MB	llvm module passes [4]
time: 0.001; rss: 1210MB	llvm function passes [23]
time: 0.001; rss: 1210MB	llvm module passes [23]
time: 0.004; rss: 1210MB	llvm function passes [5]
time: 0.004; rss: 1210MB	codegen passes [0]
time: 0.002; rss: 1212MB	llvm module passes [5]
time: 0.008; rss: 1217MB	codegen passes [2]
time: 0.011; rss: 1217MB	llvm function passes [6]
time: 0.017; rss: 1217MB	llvm function passes [3]
time: 0.008; rss: 1217MB	llvm module passes [6]
time: 0.008; rss: 1223MB	llvm module passes [3]
time: 0.024; rss: 1229MB	llvm function passes [0]
time: 0.010; rss: 1229MB	llvm function passes [26]
time: 0.005; rss: 1229MB	llvm module passes [26]
time: 0.036; rss: 1231MB	llvm function passes [24]
time: 0.015; rss: 1233MB	llvm module passes [0]
time: 0.041; rss: 1236MB	codegen passes [4]
time: 0.000; rss: 1236MB	llvm function passes [4]
time: 0.000; rss: 1236MB	llvm module passes [4]
time: 0.001; rss: 1236MB	codegen passes [4]
time: 0.006; rss: 1236MB	llvm module passes [24]
time: 0.053; rss: 1240MB	codegen passes [23]
time: 0.018; rss: 1244MB	llvm function passes [4]
time: 0.002; rss: 1259MB	llvm module passes [4]
time: 0.000; rss: 1259MB	llvm function passes [16]
time: 0.021; rss: 1259MB	llvm function passes [23]
time: 0.000; rss: 1259MB	llvm module passes [23]
time: 0.072; rss: 1259MB	llvm function passes [25]
time: 0.004; rss: 1261MB	llvm module passes [16]
time: 0.004; rss: 1261MB	codegen passes [16]
time: 0.000; rss: 1263MB	llvm function passes [18]
time: 0.000; rss: 1263MB	llvm module passes [18]
time: 0.001; rss: 1263MB	codegen passes [18]
time: 0.013; rss: 1266MB	codegen passes [23]
time: 0.063; rss: 1270MB	llvm function passes [11]
time: 0.012; rss: 1277MB	llvm module passes [11]
time: 0.046; rss: 1277MB	codegen passes [4]
time: 0.111; rss: 1279MB	codegen passes [5]
time: 0.044; rss: 1283MB	llvm module passes [25]
time: 0.072; rss: 1283MB	llvm function passes [12]
time: 0.053; rss: 1287MB	llvm function passes [14]
time: 0.000; rss: 1287MB	llvm module passes [14]
time: 0.052; rss: 1287MB	llvm function passes [17]
time: 0.014; rss: 1289MB	llvm module passes [17]
time: 0.022; rss: 1289MB	llvm function passes [7]
time: 0.015; rss: 1291MB	codegen passes [14]
time: 0.004; rss: 1293MB	llvm module passes [7]
time: 0.027; rss: 1293MB	llvm module passes [12]
time: 0.022; rss: 1295MB	llvm function passes [14]
time: 0.012; rss: 1303MB	llvm module passes [14]
time: 0.102; rss: 1306MB	llvm function passes [16]
time: 0.129; rss: 1307MB	llvm function passes [15]
time: 0.039; rss: 1309MB	llvm module passes [16]
time: 0.226; rss: 1309MB	llvm function passes [1]
time: 0.233; rss: 1314MB	llvm function passes [22]
time: 0.041; rss: 1327MB	llvm module passes [15]
time: 0.118; rss: 1335MB	llvm function passes [21]
time: 0.008; rss: 1342MB	llvm module passes [21]
time: 0.043; rss: 1342MB	llvm function passes [36]
time: 0.013; rss: 1342MB	llvm function passes [33]
time: 0.005; rss: 1342MB	llvm module passes [33]
time: 0.041; rss: 1343MB	llvm function passes [32]
time: 0.016; rss: 1359MB	llvm module passes [32]
time: 0.255; rss: 1363MB	llvm function passes [13]
time: 0.091; rss: 1363MB	llvm module passes [22]
time: 0.230; rss: 1366MB	llvm function passes [20]
time: 0.183; rss: 1366MB	llvm function passes [28]
time: 0.032; rss: 1368MB	llvm module passes [20]
time: 0.019; rss: 1368MB	llvm module passes [28]
time: 0.063; rss: 1382MB	llvm function passes [37]
time: 0.343; rss: 1381MB	llvm function passes [18]
time: 0.052; rss: 1383MB	codegen passes [38]
time: 0.118; rss: 1383MB	llvm module passes [13]
time: 0.345; rss: 1382MB	llvm function passes [19]
time: 0.022; rss: 1382MB	llvm module passes [37]
time: 0.224; rss: 1382MB	llvm module passes [1]
time: 0.247; rss: 1382MB	llvm function passes [30]
time: 0.002; rss: 1382MB	llvm module passes [30]
time: 0.361; rss: 1391MB	llvm function passes [5]
time: 0.071; rss: 1388MB	llvm module passes [19]
time: 0.327; rss: 1384MB	codegen passes [7]
time: 0.086; rss: 1386MB	llvm module passes [18]
time: 0.243; rss: 1385MB	llvm module passes [36]
time: 0.148; rss: 1387MB	llvm function passes [31]
time: 0.045; rss: 1387MB	llvm module passes [5]
time: 0.081; rss: 1387MB	codegen passes [37]
time: 0.296; rss: 1387MB	llvm function passes [10]
time: 0.401; rss: 1392MB	llvm function passes [27]
time: 0.432; rss: 1386MB	llvm function passes [4]
time: 0.031; rss: 1386MB	llvm module passes [31]
time: 0.019; rss: 1383MB	llvm module passes [4]
time: 0.288; rss: 1383MB	llvm function passes [9]
time: 0.055; rss: 1387MB	llvm module passes [10]
time: 0.414; rss: 1398MB	llvm function passes [29]
time: 0.559; rss: 1394MB	llvm function passes [23]
time: 0.078; rss: 1394MB	llvm module passes [9]
time: 0.123; rss: 1397MB	llvm module passes [27]
time: 0.068; rss: 1398MB	llvm module passes [23]
time: 0.080; rss: 1402MB	llvm module passes [29]
time: 0.406; rss: 1403MB	llvm function passes [35]
time: 0.717; rss: 1397MB	llvm function passes [8]
time: 0.481; rss: 1402MB	llvm function passes [34]
time: 0.796; rss: 1405MB	llvm function passes [2]
time: 0.246; rss: 1412MB	codegen passes [30]
time: 0.736; rss: 1416MB	codegen passes [6]
time: 0.063; rss: 1417MB	llvm module passes [34]
time: 0.096; rss: 1419MB	llvm module passes [2]
time: 0.301; rss: 1411MB	codegen passes [31]
time: 0.257; rss: 1409MB	llvm module passes [35]
time: 0.947; rss: 1417MB	codegen passes [33]
time: 0.977; rss: 1423MB	codegen passes [3]
time: 0.653; rss: 1408MB	llvm module passes [8]
time: 1.391; rss: 1438MB	codegen passes [24]
time: 1.321; rss: 1434MB	codegen passes [21]
time: 1.733; rss: 1446MB	codegen passes [26]
time: 1.458; rss: 1449MB	codegen passes [11]
time: 1.572; rss: 1451MB	codegen passes [12]
time: 1.540; rss: 1435MB	codegen passes [4]
time: 1.703; rss: 1429MB	codegen passes [14]
time: 1.860; rss: 1450MB	codegen passes [36]
time: 1.995; rss: 1452MB	codegen passes [16]
time: 2.389; rss: 1476MB	codegen passes [0]
time: 2.166; rss: 1468MB	codegen passes [28]
time: 2.664; rss: 1502MB	codegen passes [32]
time: 2.669; rss: 1491MB	codegen passes [17]
time: 2.714; rss: 1568MB	codegen passes [5]
time: 2.439; rss: 1559MB	codegen passes [35]
time: 2.612; rss: 1542MB	codegen passes [20]
time: 2.747; rss: 1514MB	codegen passes [15]
time: 3.132; rss: 1550MB	codegen passes [25]
time: 3.571; rss: 1656MB	codegen passes [10]
time: 3.672; rss: 1618MB	codegen passes [19]
time: 3.735; rss: 1613MB	codegen passes [13]
time: 3.865; rss: 1653MB	codegen passes [22]
time: 3.875; rss: 1627MB	codegen passes [34]
time: 4.254; rss: 1600MB	codegen passes [23]
time: 4.402; rss: 1579MB	codegen passes [9]
time: 4.335; rss: 1536MB	codegen passes [18]
time: 4.640; rss: 1510MB	codegen passes [29]
time: 4.754; rss: 1515MB	codegen passes [1]
time: 4.802; rss: 1405MB	codegen passes [27]
time: 5.016; rss: 1386MB	codegen passes [2]
time: 5.280; rss: 1322MB	codegen passes [8]
time: 7.705; rss: 1322MB	LLVM passes
time: 0.000; rss: 1322MB	serialize work products
time: 1.051; rss: 284MB	linking
done
