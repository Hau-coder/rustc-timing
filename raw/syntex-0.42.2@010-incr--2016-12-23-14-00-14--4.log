commit 467a7f049bac0386097c6cd2c80966c8d7453ce8
Merge: 00b4019 c12fc66
Author: bors <bors@rust-lang.org>
Date:   Fri Dec 23 18:43:12 2016 +0000

    Auto merge of #38533 - jseyfried:legacy_custom_derive_deprecation, r=nrc
    
    Allow legacy custom derive authors to disable warnings in downstream crates
    
    This PR allows legacy custom derive authors to use a pre-deprecated method `registry.register_custom_derive()` instead of `registry.register_syntax_extension()` to avoid downstream deprecation warnings.
    
    r? @nrc
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.093; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.242; rss: 151MB	expansion
time: 0.000; rss: 151MB	maybe building test harness
time: 0.006; rss: 151MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 151MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 151MB	complete gated feature checking
time: 0.023; rss: 151MB	early lint checks
time: 0.007; rss: 151MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 199MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.381; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 181MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.003; rss: 190MB	variance inference
time: 0.006; rss: 193MB	impl wf inference
time: 0.025; rss: 197MB	coherence checking
time: 0.090; rss: 200MB	wf checking
time: 0.197; rss: 208MB	item-types checking
time: 3.624; rss: 266MB	item-bodies checking
time: 0.000; rss: 266MB	drop-impl checking
time: 0.218; rss: 277MB	const checking
time: 0.057; rss: 277MB	privacy checking
time: 0.019; rss: 284MB	intrinsic checking
time: 0.014; rss: 284MB	effect checking
time: 0.047; rss: 284MB	match checking
time: 0.045; rss: 290MB	liveness checking
time: 0.174; rss: 292MB	rvalue checking
time: 0.359; rss: 482MB	MIR dump
  time: 0.056; rss: 483MB	SimplifyCfg
  time: 0.073; rss: 483MB	QualifyAndPromoteConstants
  time: 0.120; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.031; rss: 500MB	SimplifyCfg
time: 0.285; rss: 500MB	MIR cleanup and validation
time: 0.473; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.038; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.180; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.027; rss: 500MB	SimplifyCfg
  time: 0.064; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.272; rss: 533MB	ElaborateDrops
  time: 0.003; rss: 533MB	NoLandingPads
  time: 0.053; rss: 532MB	SimplifyCfg
  time: 0.029; rss: 532MB	InstCombine
  time: 0.013; rss: 532MB	Deaggregator
  time: 0.004; rss: 532MB	CopyPropagation
  time: 0.035; rss: 532MB	SimplifyLocals
  time: 0.010; rss: 532MB	AddCallGuards
  time: 0.003; rss: 532MB	PreTrans
time: 0.528; rss: 532MB	MIR optimisations
  time: 0.065; rss: 538MB	write metadata
  time: 0.393; rss: 554MB	translation item collection
  time: 0.072; rss: 554MB	codegen unit partitioning
  time: 0.048; rss: 1457MB	internalize symbols
time: 11.789; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.366; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1199MB	llvm function passes [1]
time: 0.000; rss: 1199MB	llvm module passes [1]
time: 0.001; rss: 1212MB	llvm function passes [0]
time: 0.000; rss: 1212MB	llvm module passes [0]
time: 0.002; rss: 1216MB	llvm function passes [7]
time: 0.000; rss: 1216MB	llvm module passes [7]
time: 0.001; rss: 1216MB	llvm function passes [9]
time: 0.004; rss: 1218MB	llvm function passes [6]
time: 0.006; rss: 1218MB	llvm function passes [4]
time: 0.003; rss: 1218MB	llvm module passes [9]
time: 0.000; rss: 1218MB	llvm module passes [4]
time: 0.009; rss: 1218MB	llvm function passes [8]
time: 0.008; rss: 1224MB	llvm module passes [6]
time: 0.019; rss: 1235MB	llvm function passes [2]
time: 0.010; rss: 1235MB	llvm module passes [8]
time: 0.013; rss: 1235MB	llvm function passes [11]
time: 0.007; rss: 1235MB	llvm module passes [2]
time: 0.008; rss: 1237MB	llvm module passes [11]
time: 0.013; rss: 1239MB	llvm function passes [14]
time: 0.031; rss: 1241MB	codegen passes [1]
time: 0.000; rss: 1241MB	llvm function passes [16]
time: 0.000; rss: 1241MB	llvm module passes [16]
time: 0.001; rss: 1241MB	codegen passes [16]
time: 0.003; rss: 1241MB	llvm function passes [16]
time: 0.001; rss: 1241MB	llvm module passes [16]
time: 0.008; rss: 1241MB	llvm module passes [14]
time: 0.043; rss: 1243MB	llvm function passes [10]
time: 0.028; rss: 1246MB	llvm function passes [15]
time: 0.014; rss: 1248MB	llvm module passes [10]
time: 0.011; rss: 1248MB	llvm module passes [15]
time: 0.082; rss: 1265MB	llvm function passes [12]
time: 0.099; rss: 1265MB	codegen passes [0]
time: 0.000; rss: 1265MB	llvm function passes [0]
time: 0.000; rss: 1265MB	llvm module passes [0]
time: 0.119; rss: 1266MB	llvm function passes [3]
time: 0.119; rss: 1275MB	codegen passes [4]
time: 0.000; rss: 1275MB	llvm function passes [4]
time: 0.000; rss: 1275MB	llvm module passes [4]
time: 0.004; rss: 1280MB	codegen passes [0]
time: 0.058; rss: 1294MB	llvm module passes [12]
time: 0.150; rss: 1295MB	codegen passes [9]
time: 0.000; rss: 1295MB	llvm function passes [9]
time: 0.000; rss: 1295MB	llvm module passes [9]
time: 0.001; rss: 1295MB	codegen passes [9]
time: 0.112; rss: 1295MB	codegen passes [16]
time: 0.037; rss: 1295MB	codegen passes [4]
time: 0.070; rss: 1295MB	llvm module passes [3]
time: 0.045; rss: 1296MB	llvm function passes [20]
time: 0.000; rss: 1296MB	llvm module passes [20]
time: 0.060; rss: 1296MB	llvm function passes [0]
time: 0.040; rss: 1300MB	llvm function passes [9]
time: 0.195; rss: 1300MB	codegen passes [7]
time: 0.194; rss: 1305MB	codegen passes [6]
time: 0.212; rss: 1305MB	llvm function passes [5]
time: 0.022; rss: 1305MB	llvm module passes [9]
time: 0.030; rss: 1305MB	llvm module passes [0]
time: 0.143; rss: 1311MB	llvm function passes [18]
time: 0.021; rss: 1311MB	llvm function passes [22]
time: 0.235; rss: 1313MB	llvm function passes [13]
time: 0.178; rss: 1317MB	llvm function passes [17]
time: 0.100; rss: 1317MB	llvm function passes [19]
time: 0.016; rss: 1324MB	llvm module passes [17]
time: 0.015; rss: 1324MB	llvm module passes [19]
time: 0.044; rss: 1326MB	llvm module passes [22]
time: 0.049; rss: 1327MB	llvm function passes [23]
time: 0.025; rss: 1331MB	llvm function passes [24]
time: 0.106; rss: 1331MB	codegen passes [20]
time: 0.020; rss: 1332MB	llvm function passes [21]
time: 0.008; rss: 1332MB	llvm module passes [24]
time: 0.004; rss: 1332MB	llvm module passes [21]
time: 0.081; rss: 1332MB	llvm module passes [18]
time: 0.026; rss: 1334MB	llvm module passes [23]
time: 0.153; rss: 1358MB	llvm module passes [5]
time: 0.045; rss: 1358MB	llvm function passes [25]
time: 0.025; rss: 1368MB	llvm module passes [25]
time: 0.145; rss: 1370MB	llvm module passes [13]
time: 0.050; rss: 1370MB	llvm function passes [26]
time: 0.034; rss: 1384MB	llvm module passes [26]
time: 0.046; rss: 1394MB	llvm function passes [29]
time: 0.013; rss: 1393MB	llvm module passes [29]
time: 0.270; rss: 1393MB	llvm function passes [6]
time: 0.099; rss: 1397MB	llvm function passes [28]
time: 0.045; rss: 1403MB	codegen passes [29]
time: 0.004; rss: 1413MB	llvm function passes [34]
time: 0.339; rss: 1413MB	llvm function passes [7]
time: 0.001; rss: 1415MB	llvm module passes [34]
time: 0.053; rss: 1413MB	llvm module passes [28]
time: 0.077; rss: 1417MB	llvm function passes [32]
time: 0.211; rss: 1426MB	llvm function passes [27]
time: 0.026; rss: 1426MB	llvm function passes [35]
time: 0.007; rss: 1426MB	llvm function passes [36]
time: 0.000; rss: 1426MB	llvm module passes [36]
time: 0.253; rss: 1425MB	codegen passes [21]
time: 0.176; rss: 1426MB	llvm function passes [30]
time: 0.018; rss: 1426MB	llvm module passes [30]
time: 0.041; rss: 1423MB	llvm module passes [35]
time: 0.478; rss: 1426MB	llvm function passes [4]
time: 0.615; rss: 1419MB	llvm function passes [1]
time: 0.079; rss: 1423MB	llvm module passes [27]
time: 0.378; rss: 1425MB	llvm function passes [20]
time: 0.087; rss: 1423MB	codegen passes [37]
time: 0.049; rss: 1422MB	codegen passes [36]
time: 0.152; rss: 1417MB	codegen passes [34]
time: 0.551; rss: 1412MB	llvm function passes [16]
time: 0.240; rss: 1414MB	llvm module passes [6]
time: 0.279; rss: 1412MB	llvm function passes [31]
time: 0.092; rss: 1413MB	llvm module passes [4]
time: 0.208; rss: 1410MB	llvm function passes [33]
time: 0.696; rss: 1415MB	codegen passes [8]
time: 0.332; rss: 1409MB	llvm function passes [29]
time: 0.162; rss: 1421MB	llvm module passes [33]
time: 0.205; rss: 1423MB	llvm module passes [16]
time: 0.343; rss: 1425MB	llvm module passes [32]
time: 0.323; rss: 1426MB	llvm module passes [1]
time: 0.435; rss: 1422MB	llvm module passes [7]
time: 0.192; rss: 1435MB	llvm module passes [29]
time: 0.443; rss: 1435MB	llvm module passes [31]
time: 0.565; rss: 1459MB	llvm module passes [20]
time: 0.610; rss: 1482MB	codegen passes [35]
time: 1.043; rss: 1487MB	codegen passes [24]
time: 1.497; rss: 1518MB	codegen passes [14]
time: 1.242; rss: 1518MB	codegen passes [2]
time: 1.541; rss: 1448MB	codegen passes [11]
time: 1.551; rss: 1437MB	codegen passes [15]
time: 1.526; rss: 1430MB	codegen passes [10]
time: 1.565; rss: 1422MB	codegen passes [22]
time: 1.328; rss: 1438MB	codegen passes [30]
time: 1.706; rss: 1439MB	codegen passes [25]
time: 1.784; rss: 1449MB	codegen passes [19]
time: 2.199; rss: 1485MB	codegen passes [26]
time: 2.248; rss: 1476MB	codegen passes [17]
time: 1.837; rss: 1477MB	codegen passes [33]
time: 2.224; rss: 1457MB	codegen passes [9]
time: 2.278; rss: 1461MB	codegen passes [23]
time: 1.886; rss: 1506MB	codegen passes [32]
time: 2.574; rss: 1520MB	codegen passes [0]
time: 2.493; rss: 1547MB	codegen passes [6]
time: 3.100; rss: 1517MB	codegen passes [12]
time: 3.361; rss: 1645MB	codegen passes [28]
time: 3.974; rss: 1671MB	codegen passes [18]
time: 3.468; rss: 1681MB	codegen passes [16]
time: 4.141; rss: 1730MB	codegen passes [3]
time: 3.991; rss: 1687MB	codegen passes [29]
time: 4.122; rss: 1627MB	codegen passes [4]
time: 4.168; rss: 1590MB	codegen passes [7]
time: 4.200; rss: 1566MB	codegen passes [31]
time: 4.481; rss: 1505MB	codegen passes [27]
time: 5.317; rss: 1506MB	codegen passes [13]
time: 4.420; rss: 1456MB	codegen passes [20]
time: 5.324; rss: 1401MB	codegen passes [5]
time: 5.496; rss: 1330MB	codegen passes [1]
time: 7.877; rss: 1327MB	LLVM passes
time: 0.000; rss: 1327MB	serialize work products
time: 1.064; rss: 296MB	linking
done
