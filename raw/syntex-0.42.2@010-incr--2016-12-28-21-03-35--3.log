commit 4ecc85beb339aa8089d936e450b0d800bdf580ae
Merge: 02b22ec ee0ea95
Author: bors <bors@rust-lang.org>
Date:   Wed Dec 28 20:19:39 2016 +0000

    Auto merge of #38449 - eddyb:lazy-10, r=nikomatsakis
    
    [10/n] Split constants and functions' arguments into disjoint bodies.
    
    _This is part of a series ([prev](https://github.com/rust-lang/rust/pull/38053) | [next]()) of patches designed to rework rustc into an out-of-order on-demand pipeline model for both better feature support (e.g. [MIR-based](https://github.com/solson/miri) early constant evaluation) and incremental execution of compiler passes (e.g. type-checking), with beneficial consequences to IDE support as well.
    If any motivation is unclear, please ask for additional PR description clarifications or code comments._
    
    <hr>
    
    Finishes the signature-body split started in #37918, namely:
    * `trait` items are separated just like `impl` items were, for uniformity, closing #37712
    * `static`s, `const`s (including associated ones), `enum` discriminants and array lengths get bodies
      * even the count in "repeat expressions", i.e. `n` in `[x; n]`, which fixes #24414
    * arguments' patterns are moved to the bodies, with the types staying in `FnDecl`
      * `&self` now desugars to `self: &Self` instead of `self: &_` (similarly for other `self` forms)
      * `astconv`'s and metadata's (for rustdoc) informative uses are explicitly ignored for the purposes of the dep graph. this could be fixed in the future by hashing the exact information being extracted about the arguments as opposed to generating a dependency on *the whole body*
rustc: ./syntex-0.42.2@010-incr
find . -name '*.rs' | xargs touch
RUSTFLAGS="-Z incremental=incr" \
    cargo rustc -p syntex_syntax  -- \
    -Ztime-passes -Zinput-stats -Z incremental-info
time: 0.093; rss: 75MB	parsing
Lines of code:             33687
Pre-expansion node count:  223115
time: 0.000; rss: 75MB	recursion limit
time: 0.000; rss: 75MB	crate injection
time: 0.000; rss: 75MB	plugin loading
time: 0.000; rss: 75MB	plugin registration
time: 0.243; rss: 152MB	expansion
time: 0.000; rss: 152MB	maybe building test harness
time: 0.006; rss: 152MB	maybe creating a macro crate
Post-expansion node count: 638863
time: 0.000; rss: 152MB	checking for inline asm in case the target doesn't support it
time: 0.012; rss: 152MB	complete gated feature checking
time: 0.023; rss: 152MB	early lint checks
time: 0.007; rss: 152MB	AST validation
time: 0.075; rss: 166MB	name resolution
time: 0.058; rss: 200MB	lowering ast -> hir
time: 0.010; rss: 192MB	indexing hir
time: 0.006; rss: 192MB	attribute checking
time: 0.002; rss: 154MB	language item collection
time: 0.011; rss: 156MB	lifetime resolution
time: 0.000; rss: 156MB	looking for entry point
time: 0.000; rss: 156MB	looking for plugin registrar
time: 0.046; rss: 177MB	region resolution
time: 0.008; rss: 177MB	loop checking
time: 0.002; rss: 177MB	static item recursion checking
time: 0.382; rss: 178MB	compute_incremental_hashes_map
time: 0.000; rss: 178MB	load_dep_graph
time: 0.009; rss: 178MB	stability index
time: 0.021; rss: 182MB	stability checking
time: 0.056; rss: 190MB	type collecting
time: 0.004; rss: 190MB	variance inference
time: 0.006; rss: 194MB	impl wf inference
time: 0.026; rss: 197MB	coherence checking
time: 0.091; rss: 200MB	wf checking
time: 0.200; rss: 208MB	item-types checking
time: 3.604; rss: 265MB	item-bodies checking
time: 0.000; rss: 265MB	drop-impl checking
time: 0.216; rss: 277MB	const checking
time: 0.060; rss: 277MB	privacy checking
time: 0.021; rss: 283MB	intrinsic checking
time: 0.014; rss: 283MB	effect checking
time: 0.052; rss: 283MB	match checking
time: 0.048; rss: 290MB	liveness checking
time: 0.179; rss: 292MB	rvalue checking
time: 0.369; rss: 482MB	MIR dump
  time: 0.058; rss: 484MB	SimplifyCfg
  time: 0.076; rss: 484MB	QualifyAndPromoteConstants
  time: 0.121; rss: 500MB	TypeckMir
  time: 0.004; rss: 500MB	SimplifyBranches
  time: 0.032; rss: 500MB	SimplifyCfg
time: 0.291; rss: 500MB	MIR cleanup and validation
time: 0.476; rss: 500MB	borrow checking
time: 0.024; rss: 500MB	reachability checking
time: 0.039; rss: 500MB	death checking
time: 0.000; rss: 500MB	unused lib feature checking
time: 0.183; rss: 500MB	lint checking
time: 0.000; rss: 500MB	resolving dependency formats
  time: 0.004; rss: 500MB	NoLandingPads
  time: 0.028; rss: 500MB	SimplifyCfg
  time: 0.065; rss: 509MB	EraseRegions
  time: 0.011; rss: 509MB	AddCallGuards
  time: 0.274; rss: 529MB	ElaborateDrops
  time: 0.004; rss: 529MB	NoLandingPads
  time: 0.054; rss: 529MB	SimplifyCfg
  time: 0.029; rss: 528MB	InstCombine
  time: 0.013; rss: 528MB	Deaggregator
  time: 0.004; rss: 528MB	CopyPropagation
  time: 0.036; rss: 528MB	SimplifyLocals
  time: 0.010; rss: 528MB	AddCallGuards
  time: 0.003; rss: 528MB	PreTrans
time: 0.536; rss: 528MB	MIR optimisations
  time: 0.068; rss: 537MB	write metadata
  time: 0.399; rss: 549MB	translation item collection
  time: 0.075; rss: 554MB	codegen unit partitioning
  time: 0.050; rss: 1457MB	internalize symbols
time: 12.131; rss: 1457MB	translation
time: 0.000; rss: 1457MB	assert dep graph
time: 1.371; rss: 1485MB	serialize dep graph
incremental: re-using 0 out of 50 modules
time: 0.000; rss: 1193MB	llvm function passes [3]
time: 0.000; rss: 1195MB	llvm module passes [3]
time: 0.001; rss: 1204MB	llvm function passes [0]
time: 0.000; rss: 1206MB	llvm module passes [0]
time: 0.001; rss: 1208MB	llvm function passes [1]
time: 0.000; rss: 1208MB	llvm module passes [1]
time: 0.002; rss: 1208MB	llvm function passes [2]
time: 0.000; rss: 1208MB	llvm module passes [2]
time: 0.002; rss: 1208MB	codegen passes [3]
time: 0.004; rss: 1208MB	llvm function passes [5]
time: 0.005; rss: 1208MB	codegen passes [0]
time: 0.001; rss: 1208MB	llvm function passes [0]
time: 0.001; rss: 1210MB	llvm module passes [0]
time: 0.009; rss: 1210MB	llvm function passes [6]
time: 0.007; rss: 1214MB	llvm module passes [5]
time: 0.009; rss: 1214MB	codegen passes [1]
time: 0.018; rss: 1214MB	llvm function passes [4]
time: 0.015; rss: 1216MB	llvm module passes [6]
time: 0.016; rss: 1220MB	codegen passes [0]
time: 0.008; rss: 1222MB	llvm module passes [4]
time: 0.023; rss: 1222MB	codegen passes [2]
time: 0.018; rss: 1222MB	llvm function passes [1]
time: 0.025; rss: 1226MB	llvm function passes [7]
time: 0.013; rss: 1235MB	llvm function passes [9]
time: 0.015; rss: 1235MB	llvm module passes [7]
time: 0.000; rss: 1242MB	llvm function passes [44]
time: 0.000; rss: 1242MB	llvm module passes [44]
time: 0.024; rss: 1242MB	llvm module passes [9]
time: 0.001; rss: 1244MB	codegen passes [44]
time: 0.000; rss: 1250MB	llvm function passes [28]
time: 0.052; rss: 1250MB	llvm module passes [1]
time: 0.002; rss: 1252MB	llvm module passes [28]
time: 0.061; rss: 1257MB	llvm function passes [0]
time: 0.004; rss: 1257MB	codegen passes [28]
time: 0.000; rss: 1257MB	llvm function passes [28]
time: 0.000; rss: 1257MB	llvm module passes [28]
time: 0.052; rss: 1257MB	llvm function passes [10]
time: 0.001; rss: 1257MB	codegen passes [28]
time: 0.008; rss: 1257MB	llvm module passes [10]
time: 0.089; rss: 1267MB	codegen passes [5]
time: 0.041; rss: 1269MB	llvm function passes [47]
time: 0.001; rss: 1269MB	llvm module passes [47]
time: 0.041; rss: 1271MB	llvm function passes [25]
time: 0.000; rss: 1271MB	llvm module passes [25]
time: 0.040; rss: 1273MB	llvm module passes [0]
time: 0.049; rss: 1277MB	llvm function passes [26]
time: 0.000; rss: 1277MB	llvm module passes [26]
time: 0.139; rss: 1277MB	llvm function passes [8]
time: 0.079; rss: 1286MB	llvm function passes [23]
time: 0.044; rss: 1290MB	codegen passes [25]
time: 0.015; rss: 1290MB	llvm module passes [23]
time: 0.079; rss: 1290MB	llvm function passes [39]
time: 0.048; rss: 1294MB	codegen passes [26]
time: 0.091; rss: 1294MB	llvm function passes [28]
time: 0.064; rss: 1294MB	codegen passes [47]
time: 0.186; rss: 1294MB	llvm function passes [3]
time: 0.058; rss: 1300MB	llvm module passes [8]
time: 0.022; rss: 1300MB	llvm function passes [26]
time: 0.020; rss: 1300MB	llvm module passes [28]
time: 0.031; rss: 1300MB	llvm module passes [39]
time: 0.028; rss: 1300MB	llvm function passes [49]
time: 0.004; rss: 1302MB	llvm module passes [49]
time: 0.012; rss: 1302MB	llvm module passes [26]
time: 0.118; rss: 1318MB	llvm function passes [24]
time: 0.104; rss: 1318MB	llvm function passes [20]
time: 0.008; rss: 1318MB	llvm module passes [20]
time: 0.024; rss: 1316MB	llvm module passes [24]
time: 0.169; rss: 1320MB	llvm function passes [45]
time: 0.241; rss: 1324MB	llvm function passes [44]
time: 0.220; rss: 1324MB	llvm function passes [31]
time: 0.184; rss: 1328MB	llvm function passes [43]
time: 0.027; rss: 1334MB	llvm module passes [31]
time: 0.045; rss: 1340MB	llvm module passes [45]
time: 0.250; rss: 1344MB	llvm function passes [35]
time: 0.048; rss: 1345MB	llvm module passes [43]
time: 0.075; rss: 1378MB	llvm function passes [18]
time: 0.225; rss: 1378MB	llvm module passes [3]
time: 0.015; rss: 1376MB	llvm module passes [18]
time: 0.323; rss: 1378MB	llvm function passes [34]
time: 0.073; rss: 1380MB	llvm module passes [35]
time: 0.010; rss: 1384MB	llvm function passes [29]
time: 0.007; rss: 1389MB	llvm module passes [29]
time: 0.138; rss: 1390MB	llvm function passes [17]
time: 0.026; rss: 1397MB	llvm module passes [17]
time: 0.019; rss: 1399MB	codegen passes [29]
time: 0.234; rss: 1401MB	llvm function passes [46]
time: 0.130; rss: 1401MB	llvm function passes [22]
time: 0.188; rss: 1401MB	llvm module passes [44]
time: 0.276; rss: 1398MB	llvm function passes [33]
time: 0.031; rss: 1398MB	llvm function passes [42]
time: 0.002; rss: 1398MB	llvm module passes [42]
time: 0.106; rss: 1396MB	llvm module passes [34]
time: 0.120; rss: 1396MB	codegen passes [32]
time: 0.052; rss: 1394MB	llvm module passes [46]
time: 0.454; rss: 1397MB	llvm function passes [5]
time: 0.179; rss: 1399MB	llvm function passes [27]
time: 0.006; rss: 1400MB	llvm module passes [27]
time: 0.033; rss: 1400MB	codegen passes [42]
time: 0.091; rss: 1399MB	llvm module passes [22]
time: 0.077; rss: 1399MB	llvm module passes [33]
time: 0.352; rss: 1399MB	llvm function passes [16]
time: 0.541; rss: 1399MB	llvm function passes [12]
time: 0.451; rss: 1406MB	llvm function passes [25]
time: 0.439; rss: 1403MB	llvm function passes [47]
time: 0.365; rss: 1403MB	codegen passes [49]
time: 0.616; rss: 1399MB	codegen passes [6]
time: 0.169; rss: 1395MB	llvm module passes [5]
time: 0.160; rss: 1396MB	llvm module passes [16]
time: 0.748; rss: 1394MB	llvm function passes [2]
time: 0.391; rss: 1389MB	llvm function passes [19]
time: 0.243; rss: 1404MB	llvm module passes [47]
time: 0.238; rss: 1411MB	codegen passes [22]
time: 0.315; rss: 1412MB	llvm module passes [25]
time: 0.117; rss: 1413MB	llvm module passes [19]
time: 0.370; rss: 1415MB	llvm module passes [12]
time: 1.030; rss: 1423MB	codegen passes [4]
time: 0.792; rss: 1427MB	llvm function passes [36]
time: 0.417; rss: 1438MB	llvm module passes [2]
time: 0.228; rss: 1458MB	llvm module passes [36]
time: 1.244; rss: 1441MB	codegen passes [1]
time: 1.147; rss: 1450MB	codegen passes [20]
time: 1.036; rss: 1429MB	codegen passes [27]
time: 1.608; rss: 1425MB	codegen passes [9]
time: 1.478; rss: 1448MB	codegen passes [24]
time: 1.088; rss: 1456MB	codegen passes [16]
time: 1.691; rss: 1445MB	codegen passes [10]
time: 1.713; rss: 1458MB	codegen passes [23]
time: 1.867; rss: 1448MB	codegen passes [7]
time: 1.747; rss: 1446MB	codegen passes [39]
time: 1.848; rss: 1442MB	codegen passes [26]
time: 2.106; rss: 1484MB	codegen passes [18]
time: 2.184; rss: 1510MB	codegen passes [17]
time: 2.061; rss: 1516MB	codegen passes [47]
time: 2.606; rss: 1517MB	codegen passes [28]
time: 2.600; rss: 1508MB	codegen passes [43]
time: 2.666; rss: 1522MB	codegen passes [45]
time: 2.987; rss: 1521MB	codegen passes [0]
time: 3.226; rss: 1598MB	codegen passes [31]
time: 3.280; rss: 1660MB	codegen passes [34]
time: 3.663; rss: 1651MB	codegen passes [46]
time: 3.562; rss: 1689MB	codegen passes [44]
time: 4.366; rss: 1739MB	codegen passes [35]
time: 4.134; rss: 1665MB	codegen passes [19]
time: 4.302; rss: 1646MB	codegen passes [5]
time: 4.462; rss: 1598MB	codegen passes [8]
time: 4.201; rss: 1549MB	codegen passes [33]
time: 4.567; rss: 1566MB	codegen passes [36]
time: 4.349; rss: 1529MB	codegen passes [2]
time: 5.147; rss: 1529MB	codegen passes [25]
time: 5.858; rss: 1445MB	codegen passes [3]
time: 4.829; rss: 1342MB	codegen passes [12]
time: 7.327; rss: 1339MB	LLVM passes
time: 0.000; rss: 1339MB	serialize work products
time: 1.069; rss: 303MB	linking
done
